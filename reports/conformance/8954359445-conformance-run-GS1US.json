{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "807ca04c-318b-454c-9765-b2c1cb0ee810",
        "name": "Clear Cache",
        "item": [
          {
            "id": "08d0472d-1db9-4663-ba36-f634b9982bd2",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "da9fe1cd-ba1e-424f-a332-57bf7b2df0ef",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "3e9e2ddd-f271-423d-bced-745dc6dcdcba"
                }
              }
            ]
          },
          {
            "id": "188479ef-33aa-4951-87ef-41368b395bc3",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "87de45fb-ec40-4e89-9a36-7681a0725c26",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "834888f2-bc81-46fb-bfec-39642321d5ff"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "76d5ee06-32c3-4f4d-89e6-1e50e99e08f6",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "352dc9c4-ba6f-4cfc-bca9-bda2e4a2135c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "dd92804d-9b51-43c5-82e3-da08b583aef2",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5b706895-04c5-4a37-97a8-c44130f6c258",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bcd99c5d-411c-40aa-b2fe-559fa0039dac"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "27e9426f-f716-4450-9e77-9592aa759495",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d4b3f973-38e6-4666-b6f8-7305eeabd07c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "aa237e2c-a0fa-43c3-bbd0-716e42cf8293",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3f5db168-65a2-4d47-9f42-c1433f2f9147"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2e196751-9a61-4816-91ea-dd79287d35dc",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "dc715216-162c-4ae6-9595-ff459e813785"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "70947b6b-769b-459c-8346-a568e94252ca",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0c8d9c02-8bdb-490d-ab6a-60e5702be01e"
            }
          }
        ]
      },
      {
        "id": "97b1a265-726a-49d0-9563-acafd950d3e3",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "1338bb77-95f4-47d7-8862-45b4fbf98eba",
            "name": "Negative Testing",
            "item": [
              {
                "id": "db37501d-b6fd-4cf9-9ad3-ec8f8512c2f8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5ef9718a-e45d-4bfe-a727-06280dcd6c36",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51d1ef52-dfd8-4690-9613-050596f329d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6765cd34-1d4b-4204-a4c2-5c049d774fcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "846e7b62-4e9b-49fb-b885-9cba905928bb",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a7a6610-0195-4e1f-aa5a-f6319c863f52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1f1e99cd-ca87-498f-b329-44e91f814c4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dd9909d-f758-4b04-8546-f89d07b4f060",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e73bb4b-d221-4087-9de5-988b96357b3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "82f47d43-0746-4304-9fa1-183448f80f37"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a35c0359-7156-45cc-9e2a-c2179d10e71c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2579d255-1f44-4995-8d09-aa38df3686a7",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0fde684-9adb-405f-927d-779d54dc721f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6534fef6-a9fe-4742-8031-2ed6b73ee404"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b3bbb0e-4f1c-4659-a178-62ae3650dc1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "835bbfdf-c9af-4527-8dbe-5b0fa84c10ca"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "0fabefbb-a469-4b45-a98c-4873dd55590d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0af8df6f-bca3-4157-b1cc-e95e2e684679",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c631e5f9-f669-4d7f-ae1c-087638ea8277",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "8fc9829e-c2b7-44c7-914f-4ef1cf0e2d6a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f00dbeb2-32cc-4157-9543-c25ea13ebff6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "43cdbed9-1c46-4e04-a7dc-b19e63092044"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "12efc1ed-5aa9-47e6-ba4f-250ed320fa09",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e7baccd5-5bd0-4b30-83ca-9fbea0c9a86c"
            }
          }
        ]
      },
      {
        "id": "0d4b7962-cde2-4240-a028-d6370c35d792",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "afc797fe-951c-4d62-b29d-0eb95f7ccf13",
            "name": "Negative Testing",
            "item": [
              {
                "id": "57e08a28-453e-4e03-8084-65b9600edbd4",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "783c9294-06cb-4efc-83f7-4463d4002ff4",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afe440cc-9bab-417d-a67f-8de479841931",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12a11d6b-d32c-4e1f-ab61-55691bf7cfb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "437d84c2-9cbe-4fc9-8615-98f7d724c360",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6cd0f4e1-b8c6-4243-83c1-0363b1941439"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8378937-2344-4dc1-97e0-d539e74a5727",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d7539cd-9a6c-489b-8791-6714fd43d548",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3c0dbed-1a16-4920-859e-763bb18b65ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb2bbad4-102f-4ebd-bc85-e040a2d53216",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3458b5ba-772e-471c-9e17-9bdb8f1d58ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0e444ee-6bc9-4a66-b443-f271c6b78f0b",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67f1b3be-3483-4aa6-b356-dfeba7b0ee51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a466c79-6c44-46ff-8701-c60e3e71b16a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "295d5aa3-27e1-4787-aae1-b93e41e4c882",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "88cbde4c-069b-4cbb-93d3-680d879ebe03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61bb1d28-eeaf-4c17-aa30-9915bdc65580",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be6e499d-1a0c-4bfd-889d-f6dcb0915c9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "258b950d-91d6-4b5a-9270-d5d09c89ebf5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31441f81-2f40-4dd3-adab-86ffb90ad2ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "73ba2da7-7b06-4b6a-8afd-8cda73c6293e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76cafb56-d7c4-40bc-935e-f4174de7e153",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c4fbcc1-ddfd-4641-be59-e0c9263dec59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9861e944-e789-4202-8a5f-7fda0411dc4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7664fa29-6142-4c4b-9e48-7b8c643ce7fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "48b106bf-0e19-4eff-a475-d32383f2fcc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9620f038-b7d6-4ea9-aa39-5d3bd878de5b",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e5bb070-4863-4938-a846-82a0940ad43f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31756520-466d-4d62-ac08-62e7385f86ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80d3202f-61a2-4200-a2f3-a7cce5c54be0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f0b13b12-2cf6-419c-b245-435c6ecbaca8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1598fd9-d0b0-4e77-a259-e188a720489f",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0327bc01-4fa8-4e0b-9224-86766efd2b3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41e2d6f7-0ddd-42b2-8954-f1d8e162a776"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c76de99-255b-4854-8f77-36c9c11e10d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "811956fa-6ab2-419a-8c87-4f3fd3b89250"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acbb6a64-7f0b-4301-9180-a8c139c798ac",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc952b44-58fc-4776-b658-f2c353d0f756",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa608b9b-2e8a-4b42-95f7-11ebe0250b9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e6ff8ab-98ab-4f77-b072-b78801854656",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "321db545-dd40-421d-b13b-a676a202f4b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5831e6c3-27fe-424a-8ba0-5ce26ac0815c",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9be3da4-ec5b-4b80-b420-4eb40172d391",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7de53d9-dea2-4a85-99ea-1d30a4a7666a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccfe08d4-c4cb-45c6-85aa-aa3fe81c7172",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8a6739e7-c6a6-4b9f-8f42-663fd9341c0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1bb840b-d9a2-4902-a475-f83ced689e98",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "402d78c6-dd34-4882-a20d-5a8583810b39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4a825b3-d2ee-4533-8d95-5d0b4e19478b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3c5c77f-1557-40d5-82a2-cc834867f784",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0dcb46a8-10ff-45cb-9f8a-d1c1acf6d58c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a535fb4a-c9e5-49f8-bcad-5661685d95be",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c7cb837-ef72-4ead-9f10-ccb80815520f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a62ea063-cfea-43a3-879b-472a98a01c5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fde09c7-ab1b-4f6b-b7e0-a5dcdb845f80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "748c68ce-4630-4c3c-8299-3ce45083a5ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6966c7b-56e3-46d3-8418-ec0319fa733d",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c091a73e-9e8c-4908-bba7-f91de0592c58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5d2ec01-8aee-4aad-ad9e-c343c5c0ac7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6961b8f-c19a-4db0-a540-c7d7c2e54eac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2c00daea-c820-4052-9fd7-33c687ccb3fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8c4a28d-301c-4718-8692-42abf3dad075",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b9fe0c5-3342-4236-b04b-880dd190cdd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25f8eec2-77c1-42b1-9c58-a873bddb32df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35ede8ca-6ab5-4c35-bc71-7b15c4b66460",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "311d52db-a2e7-4a67-bdc5-d0b76e67b0eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7b13c5d-2578-4c9b-a3be-eb909fe74534",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8218763f-8e8c-4ba5-a658-43469f1dc262",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d0655c8-f1f6-49bb-9e32-75102a0382fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8eb296e2-1c8e-45f0-a552-139c64f4c62e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2c0c367f-110b-409a-a60c-1e089129a3cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c8ea9b2-3eda-464e-a908-ea189ec1e5a1",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9295f5c-97a6-475c-92eb-481af20a81d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e5fdc65-1030-4103-b51a-b80dfa2d1dd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc3d8122-1081-4f39-9b8f-cefe84c822d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "64262812-4cc1-4dfe-8639-3dd853f6ad73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e71d70f-26b4-46bb-8b33-7ea5e83efb0c",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa2e6fab-4b15-43ae-b982-2611a2b82e8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "887f3f64-aed8-4ad1-a03c-2b909ef2a775"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04f6bfdc-0268-4367-8e09-719636a5b318",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7fd1dc90-ea37-435f-8b11-79086055a769"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2934e1e4-447e-49be-9e4e-969b5ba299f6",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbd40ef5-2904-4cf1-8278-378aff71c84a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df13ed30-bcb8-4fb6-b8b7-67f7b298dd5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63e76f52-1324-4103-8dc1-7f844445b4f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ee971b2e-9821-489a-8a09-a43495839abb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9887efb3-2a9c-4057-ae1a-b04e5d741263",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04c29193-8029-48a3-8d70-6bb16f3a276e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a17674d-22af-4b32-8f87-681dc0c757ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d094336-baa8-49c2-8278-b6a09ebe13c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a0ca1dd-bc59-490a-aad1-fdab1fb34b25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef540aeb-f713-4bbf-bf34-af681030ea2b",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47ae8a3c-ab62-4cad-a777-e79dc637b21b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f37e4d1-d128-4e98-953f-18dbf012f898"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78a53396-5e27-4fc8-9661-e29ccd1b81d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f6c6f6b4-3927-48d8-bea5-bb3a750e73dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2308abe0-7dd5-434b-8412-010d888f2c2f",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c191a77-00fa-491f-ab8e-1d6b36e810eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07146522-a810-4e14-9746-303df65ab230"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b338ce4a-2f53-4ff5-aea5-e996d665444b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "708d07b6-954e-471a-84fd-8e7b29668e03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39d88477-0781-42c1-bfdb-a33a97f8b008",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1617311c-d203-42ce-a459-1ce6fb9d29c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc6b5128-fec5-4bb2-923f-fcf2b04df51a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f150fc2a-9e5c-474e-ad7f-42c3c0b43a7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1454e8d-f601-4909-8c34-73abbbac969b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f470f4d0-1c01-4ad0-a9ab-ae41f142e619",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd9d0cfa-8b4d-400a-b726-cfeb9ed362c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a00b8ff-e114-4a6e-bc9f-6440d62c6199"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "400cc692-af7a-4db6-8519-c89d54b29c9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a00facf5-af92-472f-ac86-6bed699d5aa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c7ce617-b9a1-460b-bb54-a849cd49a05c",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29aef4d4-829f-4c12-8cfc-646d49d405c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afe90c4e-928b-4032-9fe3-92ad23348692"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1719fb50-fa65-48a8-8725-f49e7dab9e94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "28ae7c01-d7a3-4bca-9fd0-8f6165a58bce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abddd079-8c2f-4d99-b07c-94c159d3649d",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1918116-b0d0-4391-bb89-d215a236f596",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d14fe2b-c730-451a-bc67-86927caae15e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c2442b9-578d-4941-93ad-012f4473c2cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "df75b5db-a871-475b-85e8-305196a706c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84b9dadb-56e6-425e-a965-2313b0572f7e",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5298473-e335-490c-a565-eb4aa0b67a41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13471b51-e168-4a16-adfd-74042fcd3dbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffc72830-da94-4079-8968-87c95922ae6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "384df5ed-6d3b-492d-8ab1-82fea80edada"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba8ca587-31bd-410d-bf79-5d523565f87b",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fe7fc89-4d41-48f1-bca2-2056bde8f5b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d7dbb46-98ca-4f38-9d9b-a73485ce9418"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f15e93a-ef67-4735-9421-7885a7e97f96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "27905e9a-e4cd-447f-934d-ad226610ff19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3266c08-e4e0-4b94-9ed2-eba4c33ed3fa",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e1e5498-289d-4633-9dc4-2dfad6960f17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d23d693-fe7e-4d81-a960-af86e0e70867"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "710af70d-e889-446d-b4c9-05a77f9212a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a240eb7e-3f45-4e27-827f-492e584654f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "133c4671-5636-4657-896a-78eef82f54d1",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6692d8f1-fcfa-45d0-b40e-eee0d13dd715",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06db879c-ca12-4097-98f2-82f3cbc6aa82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15d745e1-819f-4c94-8092-56554aa8f2c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "025ae532-c1ab-4c5d-8690-f1521fc856f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c3f3a01-3cb6-48ff-866e-ebfeacabab3f",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c810db7-3eea-4ecc-b3f8-3140434b748b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64c90bf0-c6bb-4422-84ba-f30c3ec55724"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdcccad2-046e-4655-ac1c-7085b46d98a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6dbcf956-1034-4cc8-8b4f-980bfbd04919"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4bd27cf-c830-4ede-9b67-9f3e0ff85439",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "904e208e-bdb4-4e12-a5e8-6b390e227ca2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09d4b83d-5303-41f4-9461-ca9f91a0c90b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a7384f4-599e-405e-9d08-112346b7f91b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "10f923ff-9200-4cc3-9838-57ecad4e586e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b195192-1c7f-4c1d-9518-bee538d9fabd",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6868f40e-19fb-4a21-856f-5fff6734b401",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a24c5780-0826-4e28-b8c3-f2ad9484f0e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6409920a-f1a5-48a2-902d-fc4c40b763a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c87c4104-679e-48d2-8279-2517598c2cc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e15983c1-96b4-4382-b691-397aa1e7b5e8",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efa45ce7-77b9-4fd8-82f3-0cea2364e721",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6836b6f0-c537-4583-b8a0-3ee27d64e0c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39c34f7e-45d4-41e0-825e-06c398548de4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "81e061fa-ce29-4175-a779-b779513096cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69f10a4e-f16d-4049-a820-b0c3d7be6443",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d0738d7-5f47-4e20-a00e-8b7785176278",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08330f87-ee74-4bdb-b623-57fb4a69b61f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ddbddb0-0f01-4b62-a83e-048aad8f6487",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c3e71f8-5b8d-45f5-af8e-ed8e16bd6969"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5441360-bcf3-446d-a356-1c9fd65ff73d",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fb3111a-164a-4731-87a6-923d9ee6f576",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a32927e6-8ab9-49ca-9659-a878c6277f4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aab96a6-93cf-4595-a5b4-188db81e9032",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc9cebd3-ee55-4789-9f50-a10da4de3121"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea5e9fd8-7ef6-4d14-b5dc-69433d46e114",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c0afb05-4c4e-405c-aa46-e7013380fd71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4d98745-2980-4ab9-9657-2622d11483fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60485604-cd97-4acb-b41d-6a1473300d78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "87ff85ff-9e41-4fc5-998e-b6ca0bba02ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2fad08a-f18a-40cf-bfbd-542343b83e3c",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcc6bf19-4e33-45ce-9c35-1ee7ac95665e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e264a473-584c-40a3-92c2-16abd9bd1b5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2da93d67-94d4-4617-ab5e-c4d496d006f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7c1c1b39-0909-4469-a000-6279773da9fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "775cd2e0-37fd-4c5f-a41a-201a02eb25b3",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b26e8b3-ba79-4235-84a6-16c0682b7873",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31f0c2ba-602a-46f5-88a2-7eddae900457"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66ca2dde-2405-4dd4-921e-3a88bfea3f85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4a3db580-17ae-438e-8db2-d989ea9c1c7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "647c44dd-21ef-4b4b-97ea-b00f4587242c",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d45d480-7a20-44a1-b604-69526aeb7b4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "124dfab1-6b64-4555-867e-68a1d9b28dfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0daa26fb-80f4-4760-87e4-bc3341c53b0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c5bc671e-4fe2-4f6b-be9d-8e630addd565"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5a85416-63d3-4ea8-8450-6f3a5c050964",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ed2fb24-037a-4d2c-bc46-71f09554a49e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48184921-4dc3-41ac-86b5-9d493d746186"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33580507-8397-49c6-b415-bb1536fa9b04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1645aed6-42fb-46ad-8d52-412427dbd0c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb81e830-b0a3-4faf-8721-f4a041143dea",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bdb1ed6-08ab-436f-a603-377ad56a80e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebba3589-e7ac-4f34-9c78-e2ca4eea75bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d593856a-81ca-49d0-a6ce-45296a81b0ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ee9f3c2d-8fde-467f-81b2-80deb152175f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "847a0284-3478-436c-9e85-19f76107d1e4",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c894b48-9971-4843-859e-ad5a6bec642a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2162f913-c332-43ad-8168-331671e532ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ea579ef-1e7e-434d-bf4b-bb892ff3f4f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "867f8e78-b9f9-43f1-a787-2f208b018456"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b505ca56-769d-4f2b-bc27-69c8fa4d69d3",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5d12e17-246e-4731-9d56-e124fbaa2b7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c40dd73a-56f9-4341-abaa-fc27f27fe61e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71ddc399-36a7-4ae5-aa0b-9805d90f6388",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "ffbcb78e-5ed2-4913-b5bb-30a525b4ed58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8af118c8-b2b2-4b0a-8650-40c609d84e9f",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df6fe89f-b127-4255-97fc-c97021ddc14e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a5306b3-02a8-443d-9e82-e66e4de8fd4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a7c669e-425e-47d2-b407-311732bcd396",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "e26f7802-e7f6-4e2b-a49a-0ead6645edbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "453f4b36-53a1-4d8e-9997-ca5d4899a855",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02e54a56-0ca6-4f34-a16e-e9bcc9b8f6a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e1967a7-a6f1-4f22-8f28-351644e021e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "490a3b77-301e-4dbd-8e45-546d8ccbc8be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "2737d97b-1b99-4232-8f7f-3f0478302fba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "146e4c0f-b4ed-4d73-8fdd-99afb2b699f9",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64979ff2-e1fd-4b0a-ae95-301ddda08448",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f06d53b-a57f-48f5-8146-6496c486aa0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ceadb643-0a3e-423c-9f82-9f7ec67cd3df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb334bb8-9571-46f3-9e79-d366e884b785"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb1e77f0-50f1-49c5-9b74-2ab02b265fd6",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bed9313-1443-4e05-95db-b0efc6048de2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1f82de4-3506-4792-bf3e-09f399fcd6e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "732a393a-bf0a-488e-8148-f338bf644763",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc04dd35-faae-47df-b0a8-9604a7a5632c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "456fecf8-05a0-43c5-9732-c5d645160972",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9df716ae-5de3-4a70-9ed0-37e5a2150372",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a9b8084-4d2a-4221-a0ff-0bace337975a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52a6c8dc-bbc1-4a83-85f4-de69c0e75c3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a242cbf-4e7e-4654-aecd-562059a81968"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9054e6ae-0b13-486e-9839-4a3ef8165767",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "714980fa-4388-409d-a6db-ba991154d61a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bde7980-a542-49b9-86b8-d815b83215f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c14f47e2-c6d5-4031-8f90-0607c5a1705d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bdcc4937-4f41-4b22-9daf-e41182fbffd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16bf1039-2578-40c8-9c68-61412019631f",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f369f20-c399-4022-bfd9-d37e01afec2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8709d1a5-24bd-4b74-b1c4-56de7d61a006"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f80d003-e3d7-4237-8e39-dc8fd71c9a1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "51dbf4b1-44b0-42ca-abfa-deebb0d5690e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fdd408a-c3ae-47e7-9e05-9a6d0bf20dd2",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bd177f6-5a8c-4e3f-b287-8bbfe3694691",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe4c95cf-faf1-48a7-8398-81b9b817490d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5be14a8-67f9-4dae-aea9-774e450a56bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d1f2d42e-6c3e-495f-a701-a151913e4390"
                        }
                      }
                    ]
                  },
                  {
                    "id": "781949ac-64b8-41c1-a76c-0517fab06e6f",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5572c05-3bff-4568-81af-4ba6879ae556",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d175694f-26e8-41ed-806b-5feaecc5d2cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25ec9f11-260c-44ea-be92-48b804876377",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "aebb452e-4faf-4a73-b718-37fe7eae0672"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b363357-c840-417f-bf89-95991b7a2ded",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "756c68b3-e97b-4a60-8348-d3b61c71cdb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b36d07df-df22-4130-8cb6-c8c5422b3c5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d83cda62-058b-448b-bd8e-c58071e674b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "55bd8ef7-47e8-4f6c-ba78-a9dc15d05e80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dde52f9f-f0cb-4f85-a3b0-5408b5390632",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98468415-4caf-450c-99b9-84fa931d5ecb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ab58bb1-10b4-4cad-bc82-5e673c96ba00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89ad8d28-ff99-4a5d-b1d0-e0584249f7ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f62ec1fe-62cd-4545-ae55-7b3351ff922e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92009489-2ba9-42df-8420-86308963b8d8",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f78623e-70ba-4935-a135-319dfc509b43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b55d9c1-ea5b-48b1-b6ac-b52bf686fb41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1af9e9f6-cd05-415d-87b7-e1124d8cc15b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed6c6fa9-d496-4210-9763-0192b541ead5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "833d1d21-21ea-4593-8766-173291571127",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cedab9b4-1744-4856-bc8f-879d4be3c280",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e0ce7f2-e42b-4eb8-9aa9-89258f03f0b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1893d873-1639-4599-90fa-692203f09df5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5651c64-5689-4844-92c5-d7b980b78ade"
                        }
                      }
                    ]
                  },
                  {
                    "id": "397fbee4-d04c-4018-8de1-e5ce7a44b89c",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b164202e-37df-4308-a8f3-6aec817c221b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f347d8e5-020b-4d24-bd4c-7b6f193f0772"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b2e327e-e11a-4994-9be3-787edcd89d12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "22e6e565-0b39-4e17-ab7b-6ca19ccca57d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dcdd297-0028-4ed3-8231-63a9ce71a553",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aa96130-8bf5-495f-a5c7-fb7d10a1ed98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ab3a3c3-83ff-4b67-b13e-7671b1b6072a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ede7b49c-3432-4a84-be17-c83648f70469",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b2527110-dc13-43fd-a737-e3644f84d694"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9507f28d-24ca-4d40-b935-1d8b4b13144b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e70317ce-2bbb-4b9d-88cb-32e5e04d4bda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba155acc-3f56-46e1-9b1e-3399c10716a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7144069b-8890-42d3-9da6-ed1cf95bfaa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0350768b-dad2-4186-9147-7c9c5fc9327f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42e68fa4-37e4-4d88-bfdd-f6fa3d50bec8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92c1a971-bb7a-4e07-984f-3a796a3828b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a2ebaea-9fe6-4486-bd22-753aca0a4211"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a7f5509-c64c-420a-af6e-0692c4c9b7e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "37bdda96-041d-4ff0-af5a-0f220895e926"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfda75a2-8669-4c2e-89c8-20e69bfd3b4a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af7cf83f-2a11-4dce-91b2-c948744292aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15a48187-7078-4ea6-911e-15cf380064bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5eaa5ca-e5c8-4f60-9864-632d4d3ab31d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "29f555ae-b55a-40b1-8327-441c59c4b686"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7006c358-34ed-4203-8507-24703e8328c8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cb5df7e-0e53-4d18-aad2-906e0472c0a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1204f49a-2d49-4771-911d-93282fdbf82c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ced21745-0689-46ff-a36b-418048841196",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "80393ee6-8ea9-4baa-a3ff-0da22893c140"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c545c17a-fda9-4b3e-93eb-1ca9845323c2",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dd903d7-296c-4893-a6c3-4edd1b1ce1c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18afa156-4e12-4288-80c9-9b3ffe102f31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6664b086-f83b-4b9e-8371-96ddf2149ef1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "70283516-a51c-41c2-98ed-d14532ee5b2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e179a49-ee50-48d4-bff6-8b350efad235",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63fdeb22-c467-443b-a352-e1284e0a5b77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05691fcd-f0ba-405e-866b-a5b4e401c577"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1185a3e0-7d52-4edf-87ed-52b6bb06e757",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "a72254f9-c661-4aad-b087-a0eaee89dd19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19158510-a949-401a-a360-1832394743cd",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a7a9b15-58c5-43fd-8cb4-a5eafeb01451",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfeda1e6-0c1d-451c-bb44-6a8830d823f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e20fa55d-5acc-4238-b2f4-829909edf63d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "64ba33b4-df6c-4d7e-a7e6-91ada1b3ffbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60a694f8-06b1-4e03-963c-a8988cb8e6f5",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e68d91d-c4d8-46b9-b386-9cb1768139e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99da371e-5da2-41d3-a860-5c960e0aff95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fad111a-681b-4042-9fe6-933da47109e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "10a3dae5-e19e-4536-9628-800271b7866a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0275f23f-0bde-4f3e-961d-059761f525a1",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05e36592-edd2-4ce5-841e-239eea69c2d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b10235a-3473-4289-ac68-43cfbd960dfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "696c55bd-6c03-4f13-8050-ecd09b017eca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e3d3026-62d4-4dd9-8125-ffc4b43d25f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62993b40-f41f-4fb4-8206-d0576e054096",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "feef86fe-9471-461d-8912-8173ea439c9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a80b2f3-ddb9-469e-9db0-b831cec0449f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "834ecbf3-95b1-43bb-bb36-518779b4a9cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e4ddb2a4-f298-4a4f-8c18-a42939e86d63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07eb0565-7edd-4a13-b9c0-d71d3278b292",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a4d2ad8-c802-4fe3-b471-1286790e7c7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bd62f35-9dc9-4b9c-86cb-f3c3cd7fcf7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d704ded-c709-4fe6-a664-922188014fcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "738858c6-9c4f-44a2-9c69-b8bd7dad3ee4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30a233ad-9f23-4f95-99e9-08caa3c1cd9c",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44dea9fb-5ee7-4471-95bb-81913ceb59ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03b8ba68-787d-43bd-b141-24496d600787"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "856b5e94-7e21-440f-ae8d-dd7b47c874bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8bbe4031-abec-49a5-a929-251b405118be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b82341f-1ad8-4f9b-a02c-e6aa7150958c",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2576062-3a01-4859-8d9f-b22fd6d269c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7ff104d-e6d5-4d22-be29-05adb6642b95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1bf3397-a3de-438e-8234-b2a34895e31f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "77d6fe7b-f6dc-4621-b1c4-c7b85c64d90e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a98c94b3-110b-42f9-ac5d-59abac89c1dc",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae83a2ae-06ef-4d9a-803c-75ef163ec0fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c12f6f4-776a-4b93-b6e8-736d6d80c697"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eccad1fc-9dca-4534-9cc8-2e911d272a6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "61ba83ea-ba40-440e-a1b2-424a18cd8f8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84f7a027-9a8e-4183-af73-c2153837b9fc",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e131112-37f9-4ddf-b3be-85a9644a18d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2e0ab92-e244-4ba2-a362-62d2a295c06d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9fa3f76-d2b0-472b-8a0c-1e96550a550c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a5b50c6-d0fa-40d3-b43a-4d4cfa066f16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaf204bb-6f38-49c9-bf19-f6be414b4ffc",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a764a717-abb4-4a97-9e8d-c06f53c645a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68129de1-2038-4620-bd9f-83324d8513c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b96d1bb3-fce2-4bf7-b357-3bc79981d3ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2ba62d22-2abd-4a75-bb61-a7d0a8b744f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "735677a2-d104-4078-a8da-a35f17ff747d",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74cb7bb7-e99a-49b5-adab-f738a2561a0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a785a666-6533-4030-a9ad-28706710d2a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83938073-1a7b-4302-84c1-cbb21e68e60b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "49495550-adbe-475d-b6ad-042966d4afcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90536916-b596-48a8-8c7d-ba1105d1f4a3",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f9db86e-4c84-4391-bb9f-c8b986595a97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbc40217-05fe-4595-8fcd-ad6fa3965360"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c32c57ce-40dd-4116-9a5f-b996961ddcd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac8e92b0-84ad-44e1-9590-91f3ec7e94c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1dc3262-0e08-48a7-9bad-db27a30c09fb",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1a66387-253c-43a2-8a8e-519ac524735d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f47875d1-56cd-466b-970e-f523c43a4600"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "398dbd42-ff40-4b64-8dbc-55d44e05b568",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e7ca63c4-a212-458b-b4e5-43ce20df43fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17bf72da-e8f9-49f7-a818-5a42afb7775a",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05f011d3-ab46-4fb0-b952-97ff474f2032",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f62c829-67bd-4056-ad7b-a1ef19ef2d25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e1a247c-209c-47d0-9b4f-cf7925704f3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0bec687b-327b-4129-ab23-4b394e87e9dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02850588-6814-4243-8db1-a2cb201538bf",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90110679-a9eb-47d0-b21e-ccaa903d83ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fabb044-c68b-4220-9eb1-7d9e42390885"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3238900d-e7a7-4279-9d43-a717d7eb8c47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "266dd14d-0907-493a-b73c-7f8e9780e801"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a7c5273-cc15-4e9c-afe3-68de3f6e8c00",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15699076-ecfa-47be-91ac-cd71b73a5c39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f135354-dddb-4759-9a34-a464bf13ef22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "087e961b-da37-42bb-a2d8-45ebecf745ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5b7f3f7a-1207-4549-9cfa-37103a5b28dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd25adcc-b46b-486d-a627-a1de8454baef",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4f6ac11-ea6b-4110-a484-27802b0ad92a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26696d3b-dec3-40fa-88a7-905c782c419b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0285e0f-2395-4024-8e04-e1739fbdccb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f1d91210-59d0-424c-86b9-e28a5a9ec4e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61bd1004-c35f-4962-8451-91ae5fc74419",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1343f5fa-009c-4d4b-8bca-964643b19f04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf7f0c54-f561-4bc3-aadd-d8c16860957b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6035efaf-b477-4912-8921-b5550d01e6ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f17ce49f-920a-4bf3-bae2-15e1e50c718e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4af256a6-5f72-4e10-afd3-d0f4f3dfadf9",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e32c6f6-ddef-4677-9e6b-d75dc7935d1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2866a9e4-73d1-4f9d-8d37-06283ae1ee84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da0f7760-ab8c-4608-ad96-0ac85a0a264e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d4fc0dca-dd00-40c2-9660-e057210365c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d0870ad-037b-4694-8955-5ac6f8520ee9",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fbb4684-d849-4ac7-b326-b2ea35541b03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "111f592f-22dc-4b73-a16f-7200db004e71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3ca2c0e-6575-42f4-8428-e3923c31a2aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "df72a00f-210e-4cf5-830f-0d7b69431cac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d53b08c6-187c-46dc-843b-8ecfe8321c5d",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e8f639c-8f1e-4652-aed2-d49d29e83c43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d867cac-f65d-4319-8b20-292a8709d88d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9800d14c-6734-49fc-83d8-9175ba36981e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "feff2ad5-a155-4a68-8871-0ad156f9c25a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e07025f-e901-426b-ac6d-e0a5b549a581",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c6e5590-39b2-477e-b268-43c3589cc2f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efbdc08e-597a-42b2-b3f6-6c612ab29033"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fac37b77-8b53-4277-b051-25f14e85df26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8048ef88-c215-42f1-bc6a-a9508e0b05a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf53498e-a449-4138-9f45-61d9a20f4a46",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd1272de-cbb2-4c02-ba50-05f60be1cd73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da7850f7-cd07-4f57-a747-a3433c5b42a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eca456d-1056-4b53-8904-b9203900c51f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "48ecbf3f-95df-45c7-ba0e-961561efea62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4e49e02-7143-4872-9a88-7dd37c7ab765",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6263876c-60f4-4c9a-9a89-10456a786122",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e6c6c42-bece-4892-bcca-42eb13f4173c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05bfe51d-3bbd-4d6f-aee1-542601ecc286",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "563a965a-198a-49f6-9a46-ec59d013a35c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2327290a-28fe-4875-a9ff-8ffbd30a2448",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aefde34-12d4-44a5-90bb-c31ed6ecf34f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4479783-cc80-4248-901a-8edaceded9f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "954186cb-6e98-4535-8e1b-da1bba583f19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a2082415-898e-4038-9034-4d1a79e6eca3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fec1dc47-e2b8-470b-b6d7-c41263a6b024",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eacace9f-65a8-4868-87f8-24765fead609",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0527d7b5-22eb-471c-8ac3-fef37c0256c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0aa36c5b-b16e-4c92-ab08-4f3a166c4523",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "016406f9-dbed-43d1-9d2a-5c1d8ccc1f84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c77220c9-891e-49b1-9521-ae4eff605240",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13a6b59b-c87e-4d36-9f0d-270da96dfe26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ea23f95-6281-47c0-8ed0-8f36054c91b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fe5ecc8-d60e-44de-915b-62a5ff548b12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b3f5bbc9-1b64-4c9a-a341-f937816df777"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01faaa36-dadb-4637-aefd-f28cfee0ef82",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "632cd993-414a-4131-9351-c552e70c98e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5d74123-70f6-4346-b083-14cb1f6ccbbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ec147c7-ca18-4991-b35d-f66f77671153",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "45cd8cac-fc90-4871-aa09-e8ed5801da89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "270d055a-f034-43d1-88db-adc39cbfca62",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf00da23-e40a-4225-bcc7-3c3367933240",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "c5589529-5720-4422-bb98-7202eca525f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d7e4cd1-c7e1-41cb-8745-f250817b4abd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "4b943d44-d118-4d0b-b0fa-2ea51496bffa"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f6a87fd4-e243-4d32-816c-c78c6a9bd9fa",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4e8361a1-7cfc-426d-ae6d-f56dff377e6f",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bc97b7c-9a1e-4d64-94b9-83068b646b0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6d9ef139-4e51-4001-a72a-8ebfc16315c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5f54db6-9043-4103-b3de-3b6b995e60fd",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "423631c6-58db-49a2-99da-18129ad5c46f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fb4c3330-781c-467e-8ead-3a6c8ae64293",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2002846d-30da-4f9a-bbb7-f4b23b52d727"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "af7c44bc-4c58-4866-b015-6fc650519180",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fb6a48f3-ee9f-4150-a950-81393c238849"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "369b75fb-eaf0-4c58-9f0d-1d99d5deef85",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "43ad4b71-4e58-41c7-8e2b-1d50255a78fa"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "17799470-315e-4c62-8cde-bea6b40e7b2b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fa3ebfae-5215-449a-a925-4831a53aa507"
                }
              }
            ]
          },
          {
            "id": "1380b0d0-1af5-4f4e-bd16-d7ab2681f883",
            "name": "Positive Testing",
            "item": [
              {
                "id": "269aad24-4cb5-4180-92e9-062ce19e4255",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "5cf807f5-337e-493c-b162-3ef590abda17",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ecdd928-58b1-473e-a23a-29747654b7b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "ab32934b-5941-4a42-8911-f63154560702"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43edc6be-8ec6-4bd1-84bd-383348128af0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ec46f4b-04f3-4817-9cdd-80bf81b6f973"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7cd67b3b-b8c3-454b-96cf-36bc45ce1ad1",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "91f410f2-7356-4d55-8ed1-71434fdb627f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "33548411-9e8f-45cb-82f0-86714899906f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7699c042-d5e1-485a-ba05-eb5c3bc3f53b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6cd3570f-8ad0-427f-8904-0c6f3718b511"
                    }
                  }
                ]
              },
              {
                "id": "fc24933b-b500-4766-afdb-f5ea6747ba07",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b24fa3cb-d7fa-425f-8851-66636a90cde7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6bc54604-11b2-4276-a537-39952e73f5a7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "15084aa2-bb28-47c4-af0d-5d023ecf1934",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "79d4342a-6b7c-4d21-8b40-90738df447ac"
                    }
                  }
                ]
              },
              {
                "id": "281cbc41-fb28-41be-83ed-554a5ae940e4",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3c04f41d-a7f3-422a-b02b-b1d27184b5fe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b475e343-99b7-4d3c-9c10-6c53b6ebc2a2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8d7935ed-aef4-4e8b-b6fb-4f6ffe4d5e26",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "511288b0-8cbc-4bcc-970c-697e8d382191"
                    }
                  }
                ]
              },
              {
                "id": "1cbcc918-8cda-4a72-8cfb-9f6717e61c04",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "874e8044-b032-433b-81cd-65cfe97f35ab",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a9ae5c3d-2c83-4f2b-a7c2-593ab9893252"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1d70895d-0aa6-4cb4-b7bd-7645b4dd863a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "877d3a70-17b1-4254-bc57-d1d003086e90"
                    }
                  }
                ]
              },
              {
                "id": "592e7895-9092-49c1-8fdb-47fe1f35006a",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "153bd4f4-e66e-4b02-a232-bac4ff3369af",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6b507bd8-5746-4933-89fd-247851975905"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6dab9b71-e234-4ca5-8f51-83614a7251b3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "ba91151e-eda4-4e30-8c3d-9a332a231846"
                    }
                  }
                ]
              },
              {
                "id": "27aee8a5-27cd-4610-8dc8-792446f4a709",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9c412f57-03cc-41cb-8d02-69fc063258cc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7a713aee-b762-424e-9228-b1f5f7ad071c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "09b06431-b964-4c60-aec7-fd9f4133d17b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e19777ac-1d69-455b-a749-8630bb60acdc"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8d5e6ca1-0353-4657-ae50-494bf3fbd8b4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bd0a36e3-9da0-4ffe-8cb8-5e4807392786"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "09b36663-e594-455d-87e4-cdab76db38d5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0995f0bc-d49c-4917-af9f-0db1335f5b00"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "87137382-68dc-4f66-b250-9455a0b80346",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "c40b1d33-2fed-40bb-802c-aa230c6255e9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b24fa166-f17a-4e91-877e-711303d55066",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a1ca5422-3534-4fd0-b6bc-03dbc47b2cf3"
            }
          }
        ]
      },
      {
        "id": "0acd396c-706f-4a30-b28d-002e6c8427e4",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "3e0c346d-a457-46ef-9ecb-11de5fca5e58",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4cdeb0f7-5f12-4779-9c74-1f06eb98aaa8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5e4a5e0f-69d9-45ed-9f6b-f08a0ae0a00e",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd86fa84-9e52-424f-b8d8-b4a29b120dac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a6db369-9373-4acb-9388-77755b9dec5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ddfcc80-c50b-410f-ac13-ef546b5be79d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "778d80e1-a054-43f8-bd68-9c4d707cee58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d43d99f-0be9-4235-b6ef-55440e288fbe",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "445fe4b8-ed64-454f-a9cb-b5c7a9ab9401",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cccb3753-62e3-4609-b286-789996f9af73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46db9390-9f5d-47ff-be97-d69c51b5aebc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "712da346-bc64-4c09-b7d8-08cf7e8bfcbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a97445f8-9160-4ade-8269-4bffa70dd6da",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73433f91-a270-496f-86d3-27056eed3023",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f402e1e-fa9f-47e8-8997-e430b625c67d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b129a846-045d-4bae-9afc-4eb3dae3612a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "21495bd2-171f-4c7b-9245-352f0df917cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1b9a35b-d565-4589-9e21-e500b45b42c9",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c0e644d-bd60-4180-ba4e-b7e0d3b21e66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54e485c5-8e0e-454c-a9eb-7d0f47e90f33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8374b92-cf17-4f5f-ad33-94b4a43a6d5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a5ed8929-479b-403c-a945-ff2bbb4c0818"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70853906-fb17-4ed0-9652-5742dd98de22",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7bb45c4-3c33-4f59-849b-e69e03b63664",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f133e74-68c3-40a2-b52a-57182ed18fcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a35e4c97-fa4e-478a-9759-392cbfe6349b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "51386513-3500-4105-a57d-cf80c2e014b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbe6d69d-d4ca-4726-9f88-0e226f79c341",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcb4f3aa-83c7-418c-a5fd-46e37c5b60ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "127e79c3-0c59-44c3-95f4-661c2f554941"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f690dfaf-97ff-4c5f-bafb-68a5d73b0897",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "af59f471-daee-4acc-94d8-983a36e87e3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec4ad909-6e5d-46b6-aa67-31ab4e7752b9",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6452b1c4-4038-4e79-bc64-8dbf33b24f17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00e646d1-f062-4b62-a396-319ae04d3552"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08701ec8-3593-4beb-93fb-2d26af89a08f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "b752fe8e-4797-48b6-8204-71ff1c4d7317"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4569640-fcdf-4158-aa1a-8638898bb468",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c38d315f-ebc7-4ca4-92af-6568b2f1a013",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf429ab1-55c6-4779-a855-e5505b43f99d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3daa847d-337d-4de1-a20b-5b3e0a9216bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "de3abb83-84d1-4b64-9044-d11917646b84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e2292ca-ccc1-46fc-8039-faabb68e8a85",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de0804ad-79c0-4116-9b4c-4112eb6222cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef410772-f2ff-40d2-bfb3-16fd7ca62358"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83187c60-0a56-4d62-a6b1-90b1ff09167d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "39bf5f87-7446-4bc3-86cc-eb1c159f581b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56c573ce-34e0-4cd7-a096-9cbda2771dd4",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1dc04d8-11d7-41e7-b288-1c1e72f5f7aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72483420-2aef-4c16-ac8f-cd26b051f79c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "911fbcfd-7f42-467a-8bf2-8c054a83ce2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ace864f7-353b-4d1f-9265-3b3f667ee8ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e17726af-4cac-475e-a066-3a920609ac0a",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e76d4af-5f86-4d3f-be83-e75deb9e9058",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5594977f-6ef5-4265-ad2c-fe3066527d2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a76eca8-7189-469e-a6aa-8823b28ef56f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "8e238687-117e-48fa-b067-7e8c46bf2b36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcc2a307-5dab-4ce8-8e50-3fbe9360ec20",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dcdf305-550b-437e-a1c9-c79a8e9c4781",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de87b267-f11c-47bc-8a43-b1aa2427e02f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5189aee7-fff1-4f73-bbff-3a72490a7e73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "573400d9-838f-436b-9ac0-0389833c4424"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fc6c2e4-89a5-4f91-be75-e367de3aa00b",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e903d30-7a30-42f3-83ee-518da3ba3dea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bf28799-ba12-451e-9773-6abd89108d3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7738471f-83c8-4816-a0f5-8b909107310f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "38e3231e-e889-4199-9596-dd9139fa7ebe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d72ba171-ff2c-4746-8fe1-dd1fa0ccb4d2",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0f32c59-7bab-499c-97af-bf2f12be28f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ade6da90-4d5d-44f6-8609-668a2c4dd8ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a5cd255-b7a6-4559-96ac-7f0b9e0b7dab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "6206bb36-e40b-496a-9d33-d051e397e7a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c66d35a5-b4d1-49d2-82b9-8e450298c250",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29f59f4c-60a3-419a-8711-e44858a1a0d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45de351e-4079-4757-8b79-24566cfd239b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef979d30-f74a-40ea-9993-e49718ce8e2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9bed33f-c40e-4ee9-afb0-07fb63cecc91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "193b1b29-4867-4e14-a241-193870c98d55",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bad8f371-5bef-4cd3-aaee-18329c9d249d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d0f263c-7ff2-4b4e-9a8b-38fafa9abd8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d72105eb-6297-4bad-8597-775c2d40125a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0d7771b-1e5b-49e3-b0a3-dc6c5080f883"
                        }
                      }
                    ]
                  },
                  {
                    "id": "704ec6fb-de26-49df-93f4-657398b7da96",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d47f4ea3-484c-4398-a973-dd4358552a82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67965dea-2366-4dbf-be09-f6bda8bc178e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "367327be-5095-457b-b611-18307e456c81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "b705a766-6f00-4cbf-8d44-cc2fa8e5f8d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00769d5e-bfc7-44bd-acc3-ed07cac48365",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4737dcd-70f7-461a-b490-f8eefca374c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9866b735-aba5-4ca1-b6f6-31e55723fe09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2bd8b8f-9f84-416e-95fb-479b33aa4659",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5efcca71-3124-4e6d-af64-17eeb3a56500"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83dd07d3-d7c7-4a2f-92b6-2a5960fa12b0",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6db37a06-d354-4062-a8ca-d39f514b1e4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67d7c9ad-7572-4d4a-ac30-2bda7880f4e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "732b149c-a575-4bcb-b1d0-99da08aeca06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "460bbdec-a19b-4948-93e2-b263c4f9864f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98e063bf-a12a-40ea-9f51-b9ad118488d1",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c28ac901-42ae-408e-bd20-939ae09980d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63c866db-f299-4a3d-b2fd-69065e9feebd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2889170-76e9-4bd9-bedb-6865f945221a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c108d6a9-4bb1-489b-82e4-ce49a58b66f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68be2946-1283-4403-adcb-abe5d822a703",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d0b27d3-3205-46ef-921c-2582b0cdb8c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "324644ff-c7f3-4f5d-a20d-4441a072a7a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "246f01d8-a397-4aeb-892a-e35b5e99a8fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1aa79355-8394-483c-a4b9-4c75b9921533"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57970159-1675-46da-bcf2-c1dd3f43e624",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "610f462d-1f04-424a-b16a-c3a929d5ff35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5af17821-45c9-493d-a3e3-9dff63a1c49b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f401add-c591-487a-8b94-3d64fd2bdc24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d22ff40c-5899-41a2-a869-2cda29297d1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "146ec38b-29be-4c38-8677-c18d07fdb6d6",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae386c25-9028-4f93-9d3c-24bc091d4425",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98a10375-536e-4487-a3cc-4b974e115962"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db7f76e2-7ab9-42f2-aa86-7061edf9d6cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "11710285-fbad-4d67-bdbd-e2c9caaa84e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fe3ff34-ce14-4314-9ed2-48439c1ee888",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb4c13cc-225f-42da-bc38-a8a85d91fa20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a377afa-41ad-4558-bd8e-5a31d9afa9dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3db29e40-57e2-433e-bfdd-c9ec96a51f90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0452140-f375-4bb1-897f-7f6a4324f950"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5741275f-500c-4dea-b7f6-75e26cc4cdc6",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6a79166-d453-416d-b81e-85cb3c8ca9bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de0989b4-3075-4871-8c6b-275fe1a0e580"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ac008af-8bc3-475a-85cf-e919dda92295",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4a699c2-8674-43f8-becd-40a9e52cbbdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86984267-7aac-4a24-b09e-7a52261224f7",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c777c73-b704-4b2d-9665-0bf8577c419f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3be3118b-73b8-4916-99d9-96d7fe2089f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0672c30f-960a-4669-8fe5-eda56bf636d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5eec8138-a582-49b2-b73d-7e34283aece5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0c4c852-2760-4896-915c-94690475868f",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c8b9596-bda4-4c28-aafb-360f5fceb5c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cdf191d-4bfd-477c-8d20-7e0211d4a5ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "377e17f4-38a1-4ca7-8ecc-7a4c4fe11787",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6599e57e-7ea7-4fa7-85ac-71b6b96cc850"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03521505-6583-4c9c-a838-d13443d7f0d0",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94598fa1-8989-40af-9977-e2b17dcb0c32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a78ef507-0178-48da-a480-2cd313ed414b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d56bd8b-cf23-40a5-9f8f-9553ad624ad4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2db57846-c94e-4d90-8851-b2c63ee9da2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ec56b1b-59b4-48c9-9175-ebda53ea57ac",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7aa9d7f-6522-4f3a-a028-62b0106495a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3092e1e-2a2f-4511-9c94-f7af235cbdb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89a144ed-b20e-4236-9ed5-1c10bc927aff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "156dbcea-4e02-440a-9200-397810068a7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e68926b4-6e46-43b2-9495-c27710dcf063",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f9091a2-6ab1-4d2b-b6a0-9b1c897a978d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "973f0433-2d4c-45fe-994f-9a0eea5b20b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffb5a001-9f7a-47c3-98bf-b00621ca3469",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b867ab05-490e-4b12-afa9-dea347b61b93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "541fbe31-a83f-4cff-ab8b-980cbc1ab710",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8fbc75e-16ba-42a0-aa09-a539eff22809",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da8e691e-05c3-4ab7-92c5-f4cda816c023"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c40facdd-de09-439e-932a-74964ff78fbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "25c71e23-b536-4dd9-9b9d-b6c4fbb04386"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbfc9739-2a37-49a9-84d5-a9e9bd8b872f",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcadac90-b5bc-4516-a02f-91a221e91724",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "442d0273-0745-4d79-9043-32949de4dfe7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efaa2dca-fe00-4944-99da-9aa4a7916e9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e13b98ae-d72b-45af-86d0-e331d6bcdaa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb466639-62f2-4f1c-a7ce-5deb45da08db",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fe7df2a-8082-4f89-b349-8fb7347b1709",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51e15092-31f8-4ce3-b8d6-34c54c0ce12a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59cc4e6a-a220-4a63-a086-3fd61b0387d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8f4d33d-e376-4980-a0fc-e516158cef4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0c745c3-bb39-4535-a0af-ca1fe1e43331",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11dba9bf-324b-444c-989f-7537a02ffc50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87859dcd-2a52-4f58-a7c3-b6209d2bcd09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eab3f869-9d39-4535-9c71-c7a9d6f9659e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "da4e235e-61c0-43bd-a455-72ffd353ec43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a2d42aa-b49f-494c-8457-1ce6198220a8",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a426a4fd-a6ef-4ef1-ad8f-d8c5e1308888",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "731e38ea-0f9d-46c2-9ca5-0dd869ebbdaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35f15c10-5980-4238-8cb5-9b5b5caacd68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "24151024-2ac4-43d5-a275-b286c482bb0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ad4368a-be76-4180-98ee-83a9dfbdea83",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "975ab7d1-22a0-43ec-ae22-0f7d28c1ffb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bed50e5-a382-4662-a9c3-1e4925181dd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d4f4c1e-7eb1-4ecb-9311-5892a1393430",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a2d1df35-1a0f-4925-b29b-bf56844cd17f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cb25695-3d4f-4114-bd43-e88eece023e4",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52175c1e-cec4-4880-a17c-6586c1ecc130",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85495c8c-845b-473b-b764-b96fc5d59498"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f134454-aefb-469b-b469-d16016e0b90c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae2206d1-0c62-408d-8f0e-98285b385f86"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "89ee4f7a-008f-4dfc-8d2e-de6c017e6da5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d5ae91f4-a870-4f00-a9dd-dde86df32578",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e476d4e9-a4bd-4151-993e-fe887e9bd106",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "f45e4dde-ccc5-4651-9232-b08e06166915"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "061328d8-c9a0-4749-94d8-3b32388548a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "976f0d77-e506-47bc-a023-a46694f7079a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4027750e-6ba7-41f2-ab36-7e0deb0d67d6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "53178a3a-c1e9-4f55-b15a-f676162d6a87"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6e8f461a-e7f9-416c-b1d1-5e2341309018",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "31fae03b-a84f-4582-a221-f7ba527d5fbc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "113ead7c-1ab3-46d6-90ec-ade9caaae1fc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a0de740b-77ab-425b-a1e5-a7297d256348"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a2b425d4-4387-4bb9-a0eb-29e3628aa6be",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f4fe68d6-3e83-40d3-b293-a0b1d31cc068"
            }
          }
        ]
      },
      {
        "id": "c3ee1057-f727-4b78-8b37-26e71840d063",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "b9d0f906-59e0-43cb-af49-4ad9a9433b53",
            "name": "Negative Testing",
            "item": [
              {
                "id": "903fca55-18e8-4fee-924e-4d2bf285d84c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "42f84cb2-b8f6-4eef-add4-eecd1ef86f2c",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44f36646-06e6-4208-9e5a-e76c925d4e96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b367cd80-2529-49a9-b0de-b7fa1a5e8581"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d8b2dbd-b7c3-425d-8d87-7e53f50c29e8",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f0b6a40-886f-44bc-b785-5a86f96c6ea9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2862be1c-1cb6-40bc-b536-512b092779b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dc2e55b-9bbe-41cc-8936-8e9e3f6a6bb4",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4cd2b98-fcfd-4e70-96ab-e5fac4a3041f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eda87379-1983-41df-ad24-616d989aadb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78567431-f635-43f1-8538-63362a881259",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81f68351-effe-4fef-95c3-250e1955871e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d66dead3-7171-407a-8c2a-0c86206ff5fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53d5a5a1-d862-4fd0-a390-90094dc99dc2",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a528183-b3a7-4df7-afa4-ea3293292e3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5daa7074-f5a2-4521-ac99-1bffd617bd56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d713191-2287-406c-ab21-d7c7483d4e07",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85cb5455-24b3-417e-b51e-277f8f56254b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c9c4064-a374-48a9-a17f-24620965f4cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07eba802-8b9f-4d51-945e-fc4413e1526d",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "104c3795-0615-4a79-98e6-99ac3829fefa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "295785f0-9509-4047-a20e-2fc70b599afd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43a05c42-5ef9-4209-b303-5db84c465d0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41100680-1251-49ec-a81f-62d5a85ff763"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9af9920e-4692-4770-a71c-3bbedd517ead",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b555d757-0a1b-463b-8f01-35b916274a1d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9c554f7-61f4-45b5-90eb-0de82c612491"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bc8f035-25e4-4395-a1f5-749126daa034",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29ac5400-4580-4c7e-a59d-44e91ff5b9a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94d7f68e-fe64-431c-9fb2-9d5e628038ab",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ffe9be2-54de-4239-ad77-0d71c67d2748",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99f01eac-566c-419a-8abb-9f7cfab0d0f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f20e5bd1-9ffa-4a8f-bbaa-6cb8bb30217c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db9f022b-d5b4-46f7-9c3c-5316253795de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86cb4a08-aada-4749-ac49-b296b96e3c61",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d9c1bd4-9151-45f8-bc52-a904e1780085",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae0c821a-9a66-4e38-b7ce-4ab00663c2b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "912d2469-7764-4195-afcc-5b4507d1fc94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7775d86-e1d4-474b-887e-5b29c8988a4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5f26897-988f-432b-a338-678ee3bb2011",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7e0fee4-4dea-4ba3-9718-9c2005d8a5c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f08ffac-6bba-4cbe-adec-5dd5f17d2f45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e43db6c0-2558-4ffd-b0da-ac8439e440d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fdc60af-fa8a-4ee3-b788-d6503b653014"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f176e856-3228-4f82-8f1a-8a210f47b37f",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52a40b94-062b-48ac-9adc-56e9b5779bf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbbfd9b3-a81e-468d-998b-9f70b4f8ee07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d0e47f5-dae0-45e9-8552-ed93b6f73546",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "826354ed-94dd-42bc-b976-f278fa0f1702"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb627b36-61d2-4893-a92d-c6e5a01da6cd",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f0cdb17-5f07-4e79-a848-b5d7a347c1cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49b5d606-294f-4753-851c-1c8dc3ec39da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88b5101f-f8b1-4d9c-b377-a4bee6fad075",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ebe5635-c909-4218-8bf4-2d8f5d125ed8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a41a0a27-db93-40f4-9b38-27a385fca8bd",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfc5643f-9f71-482f-be55-e56cecf9eac6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e62aea4b-0f93-4e13-bb9c-66ef5fe9866f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0f6b786-99ee-4f0e-ab47-073b65f64109",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c7715cd-195f-4526-919d-b3c9a6cbc7c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4efb277d-a145-4b79-b86c-8786991d5845",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b89239de-70bb-456d-859c-5febcedd263b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e878f6a3-de83-42a7-98d4-8a88ce34863a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "845ab90c-b4ef-43dd-ad48-fc8f8d24321e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "149c35b6-cf4c-43bb-b688-7f188918f40b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59c75bbd-cf3c-4437-8574-c6cee63d768c",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1e1d61f-7b91-4a1f-a9d4-9674f8cff896",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ccd3c06f-e8cd-4a47-b401-98a1a4d79075"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dd39f85-fce5-4626-8eae-dfc0d1aa9d39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbad3516-345d-4544-8875-53d738b45645"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5dd6b37-dce4-44b6-bce5-cf9f1ba7c9b8",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58dea4dd-5e97-40e9-8d32-a40871e90790",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99b253b8-38b4-46bb-ab96-60dfd472826f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b4130c1-6619-4806-9974-5a43a59c882a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b98643c-33c9-42af-bd9c-adfd3da9c038"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42e12f0f-aaa8-4e74-885e-a3ac2a4def42",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90882b10-a741-44dd-8824-24ed78a47edc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f970379f-4cff-48eb-9fd8-a8f8dc67903b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c90dc4cf-571a-4c6b-b430-135cdcd3f87a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "755ee086-790b-447e-bf00-ec0973d0817f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c6a0a74-3903-4d65-9d22-51cba402716e",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e8fe627-88e9-4ae9-ac3b-c39e16754727",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d8b6787-32b9-4477-9cc4-1db15160fd40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61867f8c-cd99-4120-b1de-046bd4c99f9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb2e8ff6-9284-4f91-a9a1-75277415f756"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35158adc-7156-4ea6-b3f9-03baf5c78f3b",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9bdd6f5-117c-43ca-8ec3-98953dbf001d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "726e7762-6699-4023-ad49-a46f02dd0601"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "397b3e86-1951-467a-ae1e-c05efc3b171c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d112b513-881d-47f8-a6fa-e79b51853129"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9c00127-6798-4b8c-8bcb-e0843a5ca7ea",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac8e424f-caeb-43d2-8b96-a79930d768db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f52a90a-c28e-48ab-ab66-60041f78e9ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8592efab-a9de-4dfe-8efd-fa18221320d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acab883f-95d0-4f97-b171-c63d881bffb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c8be73a-af0f-4740-b2b2-50c4a8d9d6c4",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fcea9e2-795d-445e-ad0c-2266eeadef2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20e6c141-949b-43f5-ac50-6d66114b245b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74c005dd-d1b1-4dfe-a94a-52e72658b6bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf8d3967-a877-461e-93c4-7a955daa3a7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c99fab10-e654-4fb7-8b89-f419f17a0dd3",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "958c27ef-1149-4d10-8389-a6fcab8a9a0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "194a07a3-e180-4fbf-9175-ae152ad6bf90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7543453-73e8-4e94-b1b7-d0e2f23e2378",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "539336f9-34d8-41b7-ae45-fc8d98837e74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e87732ab-50c3-4885-b15d-ded3def3d724",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "838d976d-0603-42d2-9cd5-bce622b8a0e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70942789-b531-405d-992f-9bd05a83ff53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c38b83ab-bfe4-4fc3-86c4-6bec4f3c00e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29f227b3-ffc5-4b5c-81bc-cd5ad6151eb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcc39351-2fdf-4a7d-8e2f-1b2d9c2d71dc",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62f141cd-b478-4e11-af57-7ffe59f67cfa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f175461a-c10e-49c5-80ac-6a47d19843ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d7445ab-6550-4dc5-ba8f-59cf7668f918",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcc81d64-05fc-4734-a97f-229c642fc870"
                        }
                      }
                    ]
                  },
                  {
                    "id": "227bdb27-7f1c-4833-b472-332b88d02214",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96925e5a-214c-4fe1-8260-b4dcc790091b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "82c7edf0-d6cb-4c85-ba19-3abd3d637239"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38180d06-7f93-454b-89d3-132c94f10b79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7516c00f-31b3-4716-b571-7ce242aba9c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "848d40d7-cca8-4ab7-9bf5-a9d8622a29ab",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e0899b8-44a1-4153-ad7d-cca98f2ee789",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad0bce3d-d82d-4439-b874-fc215c31e950"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e585820b-95ef-4369-9a8e-3ea37ba2f348",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f0e76be-305c-42ec-82e8-d39405fc3fe3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c75d4e77-82b0-4fb8-bc9c-a004e3e4a206",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ede3607d-342a-4b2c-8dad-0a7881b43b32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2083438d-a1d2-463c-99a6-66e6c0829b05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c055ad0-8259-478f-83fd-833f6f0a9235",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0ec7489-c1e8-47a6-aad8-9a5520bad058"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da32bf79-580a-43cd-9054-b36116f7ea60",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad845639-b841-412f-a65d-42275fc4e7ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1159b2e-2b76-462f-93dd-acb67e8c9129"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49451972-c695-4be8-a0cc-cb1fc3337e22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b03dc839-abc0-4521-a998-c7c2b28defca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1d09218-d3c0-4ee5-aa08-7b712bf2cb48",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd3b7563-5e02-4e4d-a7a7-e5b75b02e8fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59a36795-ec34-4f33-a946-8d93b2e97534"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1760a297-fea5-4770-8295-f3d77cdc5779",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31b99924-008a-421c-aba7-569fe5cd5639"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e46abec0-6f27-418e-9ab8-318a27d301fc",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56a6046b-2c3c-44da-8fc4-8e431f27ad85",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7ed7e43-300b-4a67-842c-f7ab5afd4b1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b1efd61-3c0d-45c5-81e9-1c54e54c4f88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ca054c8-b2b8-4b46-9ac0-15ab70330979"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcbb4975-b6d9-4107-a4ba-3cacf8d5b769",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4b768bc-cec3-457e-abff-2e62e98fb90b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1768da69-691b-4581-a720-a1c70cc5a1bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04d4c097-33b1-4bfe-a41c-178287aa9707",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5897e9ce-bb9a-41a3-a441-5648f0381f83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1170ad5-bd27-4174-9e75-a7619014d046",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b4e8d2e-24f3-4784-b073-dada2516062a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47c34706-ac42-4beb-a740-4fccde104304"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9cc490c-8752-4eea-ab34-470ff67589f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cf4a02c-b344-47ef-ad9e-73a4c5524605"
                        }
                      }
                    ]
                  },
                  {
                    "id": "394fdcec-19e6-4a57-94b1-b480dc7f0159",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76ae8adf-bc12-4e87-90f8-c5688c770a76",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "818619c1-00bd-406c-856a-f611c612c28f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8868af0b-5bac-485a-9cca-532ef1c5c555",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7ffa09e-97ab-4343-9c39-a3244b004dcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f80d6da-e31a-480c-b709-50c1732e6bcc",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db9bd0c9-c437-4619-8d10-5847e014a210",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b19aa81d-7c77-4c6c-976f-e556a8740be0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "256d7187-0c75-410a-b806-90204f398e28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8558571-8ee1-4bf3-8b87-c53b35fda0b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca3145bc-27ce-4ccc-8559-0bd4841952c4",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b42f41f8-950e-4b10-ba3f-dc7be9183500",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b934fc11-339b-44f6-adfa-40c64685e281"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b01ebaba-ffb3-4eb6-b27c-7d1b8d33f933",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2d440ed-f1d3-4c09-aa66-4fa3fb9acec3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5d053bc-b148-4694-b058-e3a4a0497bea",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2752e345-ba10-4c87-9e4f-a79b5cc8785c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b69cec9b-a326-4e72-b222-1604e6ba6bfd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76ac84c9-1d01-4834-bb51-cad59df02d15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b10aa5ef-2187-45f8-8720-b3de1dc638d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b46f1663-4410-449d-b769-700dcaea08cf",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0e05aba-4da0-425d-9d42-a0f98f78bb4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90ed2f20-71b3-4adb-9cb8-10bc6c1ec3c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a157f711-6888-4695-b9fc-b8a3cd809898",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4186bdfa-4ba1-420c-b572-05783b56d134"
                        }
                      }
                    ]
                  },
                  {
                    "id": "379b4b3a-0d3f-457c-a64a-ae5158e21b0b",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb4c3731-f343-4c21-bd12-18b4a3e5d47d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3c25a2b-7951-44d1-8e65-d3513a002321"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64d77da4-b3ab-4cd0-ae39-b365d7a2b4b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cb629f6-fe13-4238-a3d9-e025e7e7600c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4de4b224-552a-4da3-b748-163e8a95cbd7",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec04b10b-b534-458a-a41a-a3abbdada9f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08887757-8b80-46b4-a1c5-037f1816ce6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a57c982f-627c-4ea7-9733-90b6984e6793",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a7743c5-e7ed-4b9c-adcb-e94fceea2f02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "483d20d7-afd6-43b3-a54e-48f7057d499c",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acbd7e54-7810-4b1f-be73-4caa3eac17f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "668afd9b-b549-4d67-833b-8de9ef74210d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90975675-13f8-44e5-a2d8-bfa16c5ce433",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5aec37e-4c9d-42d7-bc42-cff873d88158"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99ab9706-d910-42ad-a0b8-ab6824bdc72a",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0db85587-8e76-4629-8718-0fcbfb3620e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0784760-16ea-4b47-b64e-7ff63bbf2981"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "714ea693-c07b-4eda-be77-d50ac468599a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a935b88-3def-4bbe-9fd4-50366a4d47d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39593ebd-a28e-43e4-ab7d-421d1a4d9b03",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f34581df-23af-4ec3-9fb8-71576248c70d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c46dc01b-3709-4238-afce-82213d11e816"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b574eec-2627-4309-b9c5-e4b4398c0ca7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29da4677-8046-4c74-aca0-aaa813e47ea3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4675870-c69a-410f-8dc6-02f379247028",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2b45887-bcd8-4ee6-b60f-38ad72ad55ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f7ecfc2-fe08-4a65-a3fa-5ed8d8a0be9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd6ff5bc-8d5a-4c2c-8801-59382f24e6bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38b2cc3d-c6cf-49be-af35-a6b5c1ed4dbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04ba52d1-871a-4c3b-addd-3ced9d782b29",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c137484-3041-4515-b2c5-b9a6316e5f10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d109ed18-a7db-417a-aca3-60f1736314e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1796055d-c951-42be-b373-08406edb4a40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dfa2144-b3c5-40f8-8add-d4f1471d1d8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8d7b670-f21f-4177-ba77-d14787781462",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae2c9acb-fd7f-492d-a047-5c431640db40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fed7bcc-63cf-42e8-9ddc-f24f5b14917d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bec0491-9b27-4f97-a0d1-9f179bd59358",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a45f2fa7-caf5-4526-a7fb-c5f313b1de96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "903744b9-eae2-4a1e-9ab9-1d23d998bd79",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1149080-15b0-443a-99d5-d1cab8cc8b03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "493c01f7-5a77-4016-ace4-8589ef0c5e6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "493814b5-c2cf-45ae-b586-fd4ed74d6ed6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85bfdac8-1413-4f96-a375-5f0b8e02141c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cd24fec-655b-4345-b96a-debb60cc29b9",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f0547af-dc7f-46d0-a797-13138eaa1efd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "134d90cc-2d62-49a1-9d3b-04eacbb9e1ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "934a53fd-336b-4676-9b25-185a8c214f92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c27da93-f3e6-44dd-b6be-fa654bc983ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53e88f9f-3c7a-46cb-8afa-f287af6cf7e7",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60a7a7ca-40e3-4039-810c-fa9f2117a413",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1480b78f-ae67-4f7f-ac40-3276191bf334"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "becec73c-157c-4aca-a1ad-a4cc8423c93b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bd86c0f-93b0-4f92-8571-773c762df8a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e9e5bff-d455-4206-bd8e-d11ff4c4507c",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "040e5d71-b360-4e7e-8e17-63eea1d120ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e89e554-2d9c-4868-badd-60fd2a1df99f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18479b01-ecbd-4b31-88ed-264f0502aaca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75d876e6-84b2-48d7-af17-57e8e66c279e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87b03a51-70ba-467f-b61b-020577544316",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95f6c2e6-9909-4b2e-82c4-e893df80bd55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ff118cc-cbfe-4fa8-bb7b-3e6de5027ee8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c7b6535-796a-478b-9ce2-ed86a47440a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed9c92e2-109d-42cf-af69-5f38ca6072b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22ea6fcd-5a19-4498-9dfe-437cd70c34d8",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09872181-ab70-4995-9f2b-b5caac3538ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2ce432e-cfca-4436-8488-739bb301a4e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5af652d5-d13a-431f-a8f4-304df682dba4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "631e1a6c-e2bc-4b06-8dfd-5c9267b9c55f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34324b1c-b853-47fe-ac9d-f08470e0a872",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f614435-60ca-4da2-805e-d8066be9362f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbb38576-7dcc-4a93-94c0-336a91c9eb5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "357cf445-dd5d-4852-a8cc-3d7359703be4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff9f57da-9150-4cae-bb7d-b0a2c76f4e62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ff896a3-55c4-4dd3-b1b0-3cd8100e68f5",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24b2bca6-7dda-4a6d-a593-48607f8a3adf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e57cf0b6-87ec-4051-ae00-0c0e0eacb63f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca9ac197-a04d-4215-ac76-d9004719eb9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7645dd6-8f02-44e1-b896-12e2532d93bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af24fd20-9999-4773-a7ae-d66b4468f420",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3da2b6b6-3f1d-4afe-a73c-f34d3945376f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "562f1a0d-baf8-4218-908c-56099ee12686"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c2d63c2-1408-4da8-aab9-8a350fb8f4b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "386582eb-7eca-4819-8154-9f7a187d7a27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20a9d608-b80f-4bf1-8ab1-7dcfb0f21314",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c38eed58-b8fb-4900-8e24-3c2c31a89387",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23f58f9d-e186-4f9e-8922-09b6f0df5008"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf1cc05a-ef69-4a64-aa02-afb8a68fe265",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "624fa7ee-ae36-43a1-9a99-cd126368b003"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c282e20a-d190-41dd-b525-2d2dc0ca38ea",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd508816-371f-4893-b431-53fb6b0066c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a0c360a-b6a2-4f26-b891-a7d4325817f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a71e4ff1-a42c-496c-ac84-1a035e7520df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3b90e51-f4e0-44f9-a858-c9fb9242bcd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "649042c1-821d-4447-98e3-a24c352bbbfa",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "757e4fe6-1384-44b0-bffe-8f60dbb9c111",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d55474d6-2fd8-4490-95fd-2115ed1e6ffa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0df612b1-48d1-43e8-b60c-42c6c8e53f89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4dbd56e-6f14-4d5a-bf7c-9f6f3b18ef14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8508663b-a19e-4436-b9de-73935186a19c",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8972935-abcb-4ae7-895b-06eaab269195",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "082172b7-951e-4565-94cb-485ca60af931"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e934b4df-2394-4729-ba12-5c88f52d7af1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "176d2c00-021b-4ebd-bef4-e699d781dff0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "693cd5e1-db57-465c-9857-0290d0ab9199",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23270d43-9609-4faa-acc4-13bbc5b4f6a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6857e562-8624-4eb1-9de1-17ccc1d9bd01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87520fb5-42b8-4ca1-9e45-1c5bc161337f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c26f4eff-fb14-4d9e-9cbe-96c04957f19e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b3a360c-548a-4006-b307-43676142b56d",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cded7f17-cecb-459e-b873-8ff86a1f5124",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "108f937a-4374-491a-8421-33e200724eff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7ffb6b0-89aa-49eb-afad-cf828b69d95d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23e15f63-2eb5-4228-8b63-88b518537b24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ef15f97-cec8-412b-a76f-3380813ccdf3",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a81a87e-3550-4098-98fc-33319e7f9f43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78d5215f-a7e0-4ce0-aab6-dba998f6964e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "159469ca-5ccc-4e33-8e0e-153b6a45f220",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be512a5f-21aa-4450-9b69-a5c828614e8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4825fb86-3c98-47c0-9d71-6e2498644c4d",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "996070d7-a390-474f-bc7c-316c3e5cd0d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "736861fb-b64b-4ae3-ab9a-0d259198362e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bf7eead-ac3c-48e4-8a66-198c59c3d68a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a697ab29-0d96-49d0-8286-28fe94df7700"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eda6f0fd-f719-4661-95a6-1e4e96e77808",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c9203f5-df2f-4435-85a5-0834a61aa488",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f6177d6-c929-48b0-a65e-9e280d32ca19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46b9fe5c-a779-44c9-ba86-887901ec7686",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42fdde10-a054-44e5-ab86-0b16bb452176"
                        }
                      }
                    ]
                  },
                  {
                    "id": "871f9cfb-59f7-4781-beb9-b1d8a6731ed8",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccd778f8-b771-4fef-88c7-202f66eb7a6c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08b75731-37be-444b-b4ea-9776040e13d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77f9f46c-628a-46db-9691-645cd79db78f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f4623a8-2a61-4af2-973c-4aef7c6d2384"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4ed4851-db42-4c88-99a9-24993427e4ed",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d52307cd-8208-499c-8153-d0a2835ee04f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2369c09-8364-4fa4-8c43-37271029e6fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36ed0c9f-c501-4ce9-85dc-a30f0e5e7df4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ed7cb65-8fdc-4885-9c60-17168af5d1f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bc5c63d-2d6a-4d23-9adb-f74d1a9d3099",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8091c69-e738-4864-a41c-65aad492b582",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d62bc979-8b6a-44ef-8df9-27152cbc00ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d4e6c7e-c447-45d7-ba5e-dc7d26e83c69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1aa9886-241e-4c19-a2bc-5237d90d3599"
                        }
                      }
                    ]
                  },
                  {
                    "id": "929f5f5a-ecae-48d7-b634-cdbdfadf5bba",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1891d961-3eaf-4b69-a84c-7ccd943c381c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e715e39d-c991-491a-a022-a8e817ae7b6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56c63165-273b-4e69-9c73-2e74e5019367",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46bb6b98-9663-49c0-bda0-e7ae79b41c5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e5c12b6-1ba7-4ce8-917f-d311f86b53d1",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f13c2b27-6528-4f42-a265-7f37e559b4dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77cf6dd3-c547-4aae-b52f-9587af1246c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b42f0a52-2d02-4e96-ab7b-28876a9cf5b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "617810d7-483e-40e0-bb85-aa8d41cf9cad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4901eea6-501a-4e88-813f-ea01ba14204d",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d336f4c0-6c83-4920-a3d7-be56039f3de1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "127e1dc2-239d-4b06-9a4a-bfdb6b053725"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33e431a7-5f20-4617-aef7-db27b40df139",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "355328d4-54a5-486f-9ed0-a707cd27f500"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3d15a85-9a85-4238-9dc6-1acac5587a32",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99e6a993-9ae1-493f-9f78-53f5af08d606",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ceb26b3-7fc8-41b6-8671-b65630c0ddad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbe54fab-029e-457a-9903-608cffc8bf9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c3958ad-fe95-4903-ac3d-be9a7bd62505"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa5fb1d6-c6c9-4c25-a1bf-804a99c3f4cf",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c61d1333-bd54-45ca-9757-b88760aac421",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9d3e16c-9dc6-4570-b4b9-751584c9c1e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66416ac4-613a-45aa-9ae4-44d343144358",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b914d815-1377-4130-a70d-c37f1fcfca60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c152a8f2-e9a8-4fd9-9791-e537c4f8b3c6",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86b5c954-4d7e-4ff7-b139-a04befaf5a35",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ddbf4d2-6e78-4a6a-8266-53d86d09e18c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11871122-408e-4ecf-a289-3af19f478114",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6df64adb-543a-4811-a262-d497c5c87b01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28703df3-973f-49e6-a528-1be0d8fed3f0",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b3194e2-a3e1-44cb-8c55-d9d8853e8d03",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d84b6be3-2ef5-4465-834d-64f5072aa48b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "856a4438-ca8d-42f0-91c2-28091ed670f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "534dd12d-5b13-422b-b24a-5cb8ff974c3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77522ec5-7847-4664-9d07-4c5e13ef208a",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "966a0286-94d3-426b-ad09-c89905d1cc3a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47b58a46-6b16-48e5-a347-1bc2c9fee9f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aac946ed-5048-49dd-b0a0-935463029612",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bec49cea-77ab-4479-b8fb-83ae4f4d1ec2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "803c5d95-754b-4b3d-8b6f-7e67c25e391c",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94e65406-43fc-4f9d-829f-615295a8b67d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42411929-9950-49b1-8777-445f97dd67fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4746acf-7bb9-49a0-a247-3a00b3e80a60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aee24ae5-a0d6-4b47-bedc-720924c54f5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36da3b13-aef4-4f41-b2c5-b719c5c87ec1",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c54994d7-715a-4d2a-8fe9-9274b68af354",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "563ea5dc-cbcf-4322-948f-80ef07827983"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30607150-cded-428a-b0d6-b38977e2be9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bff75cfe-f965-4377-a7d5-b07a273edbc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc49b0a7-65fe-4ef4-ada4-d4428e34e53c",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69775d4f-3611-4fae-8b3b-eb72c0b0653c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a6b7ff2-8215-4098-9659-cf171e9f3def"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bec60ff-2ca1-4245-84ca-1aaf0b50fe4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f4ec74d-23e7-494e-8530-d9aeed96b401"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d97cf28-67f9-45d8-8b46-9eb067c38311",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fa2bad7-f76f-49bc-b998-cdc67da75137",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af6fa22d-d508-4fb2-95f5-a25da82196da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00c47f38-4aed-45e8-b063-2539b94bac19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "149e58fe-10a8-4740-bdb2-1a143f7f6b92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fca32191-aca3-4d40-ba6a-cded0145bec4",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8661bc1-b672-4ab4-9beb-8aee65e5850d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2e17b1e-aa37-4d16-97fa-ae229b9bbf9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b393ccb8-4b41-4f85-828b-c1bc20adc6b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01666cbf-3d4a-4f95-88e3-7f06a1f4c850"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a889de6-7c32-48b9-984a-a2665504ac4a",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c0026df-bb6d-462a-96ba-74489a8cfe9a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "602b4517-56a6-4d81-9577-38e3a0b77916"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "904acc78-bded-4038-84a5-8d7f0f3a4e07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b13ccb12-67dd-4df2-a37b-71f5901668d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15739f08-3a19-4b30-8d09-0c95b36b1ef9",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09a35dcc-8bb7-4bff-b782-9ef2b3399fb7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9ad1732-9671-46dc-bee5-d79504838ee2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b32097d-e187-40a4-b632-06f664cb8e3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da990165-2a54-4046-b35c-bd48c858a0a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff90c28a-74cd-4088-be4c-186b54c245d9",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff6a4e70-df54-4510-a022-4d7512b3e96c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72427860-786f-4e1f-b988-80120d37cc30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13861b80-3077-4121-8354-26eaeb019f74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04ff484e-8292-4e32-96cc-2039a726cba5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5122ac9e-4441-4bb9-bba0-2c9853ae65d8",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da99e48e-1bc0-4e1f-a7a2-e7774ea8e2ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "151bbb9b-a0f4-4948-acfc-06cf368d2820"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf60cbca-99a6-4965-98e5-4bc72e54db49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c26f6571-3579-412e-8b47-35b92b240e21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d970a68-5e1c-460f-8266-de40b2aa3eee",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fec3b89-7726-4336-b9d9-67e3caf943f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a237aa5-64b7-4b83-bef3-6fca13227d4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0527bc91-fa8f-4e89-b0a1-6620b9a93d84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfc999f9-2a3f-431a-8a0b-40311e019c39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4550c18-2d23-45ce-a144-bdf4cacdada4",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5125da16-39d2-4933-b3de-556b2e811b1c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e301a59-0a54-40dd-b209-b90b7720f90f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "706fcf84-e08a-4c1a-a145-67d413c22568",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3858823d-0260-440a-812e-d17f0844abfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbc67850-a75f-4945-bb6c-328e5b243f18",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a82478e1-33c2-442c-a3e3-1bd00b56c378",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f31023e-6007-420a-a061-17b89b6e66c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f54c548f-6d06-4a96-af61-569d0e549f68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ad6d745-67dd-49c2-9f52-a5523f87e018"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb2ab518-ad69-4db3-b461-07f930dfc16d",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a82bd4dd-e056-4710-baf4-7d2a0c353e3d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e169e981-1a7d-4d53-8ec8-c66cd1a53278"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10b8b44b-a057-486a-84bc-abe67223b02d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f347588-813b-4dd8-a528-791b9ffc80ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d989973-ec4d-4ebe-ac05-dca85fb54ca6",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9400fa4f-c57a-4fcc-9ae0-ccc75dd4f188",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72cd7f22-6a2d-4347-b4dc-833a4ccfe9b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09f6f8c1-a960-408b-b85f-26b690d3fc8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "763897eb-8328-47f0-bc56-e77984601154"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdc05b2c-60cd-4640-840d-5813cd8c8f38",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca5748fd-fa64-4f86-90b0-a967c7057139",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3e9c87a-5354-494f-a2c6-38901a6f91dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e45ff265-60d4-4a94-b4dc-7a668ebc5fc8",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab11fbb9-2271-4df6-9200-6f4bef4a8438"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cdf52cf-7df8-41af-8c87-1e9e5802adeb",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87f68e8f-5b11-46d4-8f00-44195273412d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5c116c6-8768-4fea-991d-d975557b2a1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4e65fd6-b43d-4f3a-a6df-3a0a5445dd46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aceb36d0-9e25-43a1-bc85-dbf3648baaf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4e7f586-72c8-4925-8634-48b22a215f1b",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d52be9b7-cad2-4f41-aee6-d779552d5b1f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fef89bfb-de0a-4cfe-b1dc-b66a72346377"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c666800-a8c2-417c-afd0-b45bc89bf8a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7be2fef-2d9a-4471-aa95-ee14623c9c38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eef971f9-0e8a-4dbb-ad51-198d6450be01",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a9344b8-8064-4aa4-9a80-4a3be72e1604",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5eddbb6b-fb94-44b8-9172-a865c8ed1ef1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1530aa29-d3af-4f97-b78b-d38864edac1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c81d099-ece7-428d-bbbe-8dc60c563734"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ed2f083-3f98-4026-af00-3e205e154dc9",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1789d14b-37b5-4602-8312-0019590a178b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86b85904-f3d3-4e33-b930-f34914f6ea94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8de7cb0-e48f-4230-8694-f1dae711a163",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4966917c-37c6-476f-895a-751dc6c2291b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3000737-5583-46ee-8fbe-856b17a2bf05",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fb262d1-2315-4e87-9db0-2161a3e5ddef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ceb3b25-b26a-489d-bfe6-d4ac93398b37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "def515e0-0484-452b-969e-0efbf0b451c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81bae7e7-183c-44ec-9787-933bd459ed60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9374ce41-aa96-4306-a80c-9a18e603504d",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7045520-d15b-4067-af55-564a5dd65340",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46e14179-6c72-433a-9017-d8e1b6fe9595"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d83de9a7-206d-4f36-8b5a-ca4d023528e0",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d823df5a-666f-408a-befd-da6480237008"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4749c73-2058-473c-a257-a1511d5f776f",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfbd2071-9346-4f47-95c7-c142f7ed7a1d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2d7dc25-5510-4acd-90cf-59298418b149"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ee0fe30-3c20-41e9-9f4a-b98c63ac2a4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8cb62bd-a867-4792-924a-2f81e970fe8b"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d2f9a214-f3c8-4ca9-9d24-bcd85be0ed8d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "518ea753-2ef8-4d87-9783-ffeac2fc2d90"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "394f051b-8f98-4080-827d-80d1d01a536f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c2bac2ee-880a-404b-bc22-21c45fc691e8"
                    }
                  }
                ]
              },
              {
                "id": "1de62acd-0c08-4cde-ae4e-e0176a395525",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "91713350-2a8a-47c5-8f25-32d88981793e",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2482fdd-359f-43a7-8cf2-2a7f9c97efb5",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "dab0efbc-e10b-4c51-9094-df2f37d4a2e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b4905d4-7623-49dc-a267-fe2a5672bd4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3a3485cf-1bb1-4735-bee0-c1fc7fae0522"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7fcd9036-15a2-4f66-b46a-7df66f002aa1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f4e9fe35-465e-4b60-9881-ba12ccc98f68"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4cbe62e6-4c35-4ee6-9d85-3c973a1bb5e9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bf6daf2e-25ca-480e-882c-8400ec97cfd2"
                    }
                  }
                ]
              },
              {
                "id": "d8e70c2c-0c6a-4887-bc21-d5e9d09431d0",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "4da65afb-58d3-4624-b182-9cde6ae175e1",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cfac767-3abc-442e-b8cd-3bb399b2cc4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "4738d4f7-828b-407d-8551-ef39952495f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abea47c0-1873-441f-ae3d-43c622410468",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72563fb6-67b3-444d-9677-400e86b9f909"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "ebf843a9-33e1-43e3-bddf-bd995fdf086c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7605a86b-3ba8-4bca-b0ea-9cd576d76f66",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4c3f1a95-07c7-47a9-a7b9-79c714369cb1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "1e203c39-c308-420e-ac3e-b4d37fe43d1e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "08aa4cf4-50b0-4ad7-9a27-fd5107a44004",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "396b724a-b05e-4e4e-b620-7402888dae42"
                    }
                  }
                ]
              },
              {
                "id": "a988d9cc-8d65-47fd-9527-c1223c44a8f5",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "11aaffe5-5951-4142-8a28-de02f314777e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "8823c247-ff60-4e88-a6aa-e24d3c77da5b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a422014f-9c4f-4e98-8dcb-60c209ef8850",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3ae7832d-6a97-4633-8b78-9e594d46acfb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e54825e8-dde2-4872-a6f1-a63bf92caa8d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "4e1a6153-87bc-42f0-a5df-d23b7bdf47c2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fcfeb070-3b51-466a-b555-7861c919eaed",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ca7e4f71-4c92-4665-b20e-07d3bdb6114b"
            }
          }
        ]
      },
      {
        "id": "fd08ca4b-5eac-4f26-84b6-68475d61a819",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "15e64b97-bee1-44f8-bb49-a6efe3da3161",
            "name": "Negative Testing",
            "item": [
              {
                "id": "25563df1-2b46-44b6-b43d-dd569ed90555",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0f4d76ad-2a0e-483f-845e-6e3e099ef7da",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5095114-ad9b-44e9-95dc-121634f3cbc3",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "dd0589ac-8f25-4aac-8d5f-a8c11a9d19a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "386f9634-f947-4159-876f-8832169a893b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7d19c4e7-0464-4f12-8e07-9dcf82f76a01"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0fa10003-2521-4e4a-95d4-cb48314f43b3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4d6214f3-973b-41a3-adf4-e73a207f2f34"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "da0bb6fb-ae7d-4db1-993b-b92df8e47795",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0bb96334-4f48-467a-bdd5-cabf7f25d789"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e186293e-571f-4f0b-a0f7-7e95fe86fd80",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "4bfa70f0-9232-4e9a-a26b-d3bfba9c0051"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0238b46e-832d-489f-96f5-498de5975e9c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "49d3390b-e683-4d8b-a261-5ec8709bf3a4"
            }
          }
        ]
      },
      {
        "id": "5fe7e266-3773-4e7d-bef3-0218413a99b3",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "be7cb32a-2f45-4b80-a373-8d734b1242f9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ebc0baab-5db5-4323-8eb0-a64dbbd363f9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cfd09fac-b0ce-4abc-b782-124ac13b8724",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b775f293-4fbf-4807-bbdd-83d0b91e08b2",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8b2a22a5-3199-42fb-825b-d77e5898f34e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f91d4b0-3338-4ab3-80b3-5517173758f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "813e1acd-3db5-4e6d-baac-4bf7c22771fb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f6954598-24dd-414e-b3d6-d9fd86f4011d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "87b998dd-a98d-4e82-a28d-e44a2822513a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f9b42103-ad36-4a69-9590-872e6e15578f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1b8ac2cb-e03b-4b97-8993-05a5365d9de5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d245c9e8-9bde-4b79-9390-a5e7a2a5c7a6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9e9dd06c-fe80-4a64-a36e-61951d487284"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6de1d0a2-63cf-4999-8bf2-608121a9a9ff",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "69579d57-4e5c-4331-9307-225746ebef05"
            }
          }
        ]
      },
      {
        "id": "ed024ff7-2784-433b-b358-30662582b976",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "40dbfa19-fda0-41a2-9956-071d8d36cb6c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "14f7bfec-cf62-499d-ae7b-c0b92374fa6c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "26b3fb10-6d65-4829-9da2-6b4852939c14",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e24e96d2-ce05-4f08-aad1-e257f2fa9958",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "212616b5-b0db-481a-9372-e22e355e6a01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4324881-e200-4b32-872d-582111acf8d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4da9b933-b8fe-4781-b7b8-716c9e0df481"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e33acf61-693b-4c80-8b70-812dca4805b4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "48dd64ee-0ed1-420b-9940-814052af7799"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5c6357bd-586d-4cf5-a8d1-88712672d559",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "30450369-37cb-4ccc-a821-9b9ea8aff015"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e3159834-23ca-48ec-8434-c02d5a86cc4d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "7daeaa9d-8717-4ddf-a745-640d110002d4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9004c41d-e3d9-44d4-adbc-c82631f0e8c1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4153d552-d8ab-4c2b-9ba5-943ed32eb4c7"
            }
          }
        ]
      },
      {
        "id": "fe5c06b4-3f62-495b-af1c-31028abad16b",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ecb15e2d-8b32-4038-973c-57d193c52993",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b27dc812-2021-4c56-a7c2-fc8ed0308c2c",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "55dff2ec-67af-4716-babb-fa9f6301ca38",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "030587f7-d861-455a-ae19-2bf6a5a9eaf2",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8052f9d6-f9b2-47dc-be5d-a06be86cc603",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 104.16666666666669,
      "responseMin": 6,
      "responseMax": 10120,
      "responseSd": 683.2591800648246,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1714869504315,
      "completed": 1714869538805
    },
    "executions": [
      {
        "id": "08d0472d-1db9-4663-ba36-f634b9982bd2",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "7f5b4c84-2dd2-4107-bf1e-d45a2a0e5f18",
          "httpRequestId": "9148ab26-d798-4fec-9b82-2e7056bcd065"
        },
        "item": {
          "id": "08d0472d-1db9-4663-ba36-f634b9982bd2",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "8da70771-c61c-4189-94ee-4efb9fdc5d49",
          "status": "OK",
          "code": 200,
          "responseTime": 45,
          "responseSize": 0
        }
      },
      {
        "id": "188479ef-33aa-4951-87ef-41368b395bc3",
        "cursor": {
          "ref": "5516f186-c19a-4acc-b7dc-db2330b2c9cd",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "d5027815-cff7-417f-8c1b-320e0f0ab06c"
        },
        "item": {
          "id": "188479ef-33aa-4951-87ef-41368b395bc3",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "78437fa8-c260-4e20-a3b5-dfe1e6c78a37",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "dd92804d-9b51-43c5-82e3-da08b583aef2",
        "cursor": {
          "ref": "8d199a05-8f26-4c7b-a143-e1650c60d440",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "e60d9ed4-607a-4bc8-be50-263500cc1fb9"
        },
        "item": {
          "id": "dd92804d-9b51-43c5-82e3-da08b583aef2",
          "name": "did_json"
        },
        "response": {
          "id": "2e09b04a-75cc-4a6f-a7e6-bab3f9225170",
          "status": "OK",
          "code": 200,
          "responseTime": 313,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ef9718a-e45d-4bfe-a727-06280dcd6c36",
        "cursor": {
          "ref": "479b8dc3-1950-4509-b789-208303baa644",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "2657baff-48bf-423f-b225-43d64a40f3bc"
        },
        "item": {
          "id": "5ef9718a-e45d-4bfe-a727-06280dcd6c36",
          "name": "did:invalid"
        },
        "response": {
          "id": "a0c28a66-bd5a-4955-b49b-6d8bce1d42e2",
          "status": "Not Found",
          "code": 404,
          "responseTime": 271,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ef9718a-e45d-4bfe-a727-06280dcd6c36",
        "cursor": {
          "ref": "479b8dc3-1950-4509-b789-208303baa644",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "2657baff-48bf-423f-b225-43d64a40f3bc"
        },
        "item": {
          "id": "5ef9718a-e45d-4bfe-a727-06280dcd6c36",
          "name": "did:invalid"
        },
        "response": {
          "id": "a0c28a66-bd5a-4955-b49b-6d8bce1d42e2",
          "status": "Not Found",
          "code": 404,
          "responseTime": 271,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "846e7b62-4e9b-49fb-b885-9cba905928bb",
        "cursor": {
          "ref": "1b6b9e93-1d8c-4f19-9e48-7b996013f6b9",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "f5a25cd9-2379-4a3e-a362-9a0711c2e1f0"
        },
        "item": {
          "id": "846e7b62-4e9b-49fb-b885-9cba905928bb",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "b4e0fad3-7b45-4c2a-94de-65a4d8d199db",
          "status": "Not Found",
          "code": 404,
          "responseTime": 39,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dd9909d-f758-4b04-8546-f89d07b4f060",
        "cursor": {
          "ref": "ea11a6e6-243c-4aaa-8788-7275a72d86e7",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "23a3a400-2888-4cd8-b754-4785d8c52b24"
        },
        "item": {
          "id": "1dd9909d-f758-4b04-8546-f89d07b4f060",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "c3aea444-6c0c-4652-9ba4-c5ef88a41bd9",
          "status": "Not Found",
          "code": 404,
          "responseTime": 31,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2579d255-1f44-4995-8d09-aa38df3686a7",
        "cursor": {
          "ref": "279b794d-fc96-4c27-8a76-1e82adece184",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "2f7e8154-f42b-49bf-aed8-23c86e6a20aa"
        },
        "item": {
          "id": "2579d255-1f44-4995-8d09-aa38df3686a7",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "76e1649f-3301-4e9f-bb70-4df7132c261d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 24,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0af8df6f-bca3-4157-b1cc-e95e2e684679",
        "cursor": {
          "ref": "9d893f8c-ac3c-4e71-982d-41138da4e4a8",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "e0601f96-11a9-42c0-a839-2d8d39363b35"
        },
        "item": {
          "id": "0af8df6f-bca3-4157-b1cc-e95e2e684679",
          "name": "identifiers"
        },
        "response": {
          "id": "caa4f01e-d92f-439d-9a6a-05d21aff1bb4",
          "status": "OK",
          "code": 200,
          "responseTime": 38,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "783c9294-06cb-4efc-83f7-4463d4002ff4",
        "cursor": {
          "ref": "0cbd18d5-c476-4ffe-a7df-54ef0b4a3638",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "04171672-c504-4286-bd1d-07f130604050"
        },
        "item": {
          "id": "783c9294-06cb-4efc-83f7-4463d4002ff4",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "b68923bd-82de-426a-a6e5-3c4bdb26d666",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8378937-2344-4dc1-97e0-d539e74a5727",
        "cursor": {
          "ref": "3c5ddb9b-7d1c-4406-aa69-f3d5ba5a7f16",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "0a659043-0c0c-4b90-abfd-7ca2e7a29313"
        },
        "item": {
          "id": "f8378937-2344-4dc1-97e0-d539e74a5727",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "87cb904d-e2a2-42ce-ab41-d219a96c817b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0e444ee-6bc9-4a66-b443-f271c6b78f0b",
        "cursor": {
          "ref": "c3123fb1-141d-4e82-b062-784a55e378a7",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "e52e31a6-e78b-4074-80d4-561b4ed5be19"
        },
        "item": {
          "id": "e0e444ee-6bc9-4a66-b443-f271c6b78f0b",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "2c2536fc-6610-4a89-8623-c7ea7230bd66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61bb1d28-eeaf-4c17-aa30-9915bdc65580",
        "cursor": {
          "ref": "fc84f93d-1b05-4993-8564-49715788b31e",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "5d6f49e4-4afa-40f4-8444-4470b1c69d61"
        },
        "item": {
          "id": "61bb1d28-eeaf-4c17-aa30-9915bdc65580",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "e1ef2085-5c7f-45c4-9a2e-bca166058e5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76cafb56-d7c4-40bc-935e-f4174de7e153",
        "cursor": {
          "ref": "886d271b-ce99-40ee-8890-3a33aa631e09",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "fcbd162c-1dfc-4a3f-8f61-f54e194e729f"
        },
        "item": {
          "id": "76cafb56-d7c4-40bc-935e-f4174de7e153",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "d64b7306-db5f-4ee7-a6de-2ad989b31776",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9620f038-b7d6-4ea9-aa39-5d3bd878de5b",
        "cursor": {
          "ref": "0392d064-2468-4c64-8c07-955f2671c721",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "9025bd7a-4d9b-44d8-9631-13a2f8cc9f70"
        },
        "item": {
          "id": "9620f038-b7d6-4ea9-aa39-5d3bd878de5b",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "df6dc91b-356a-4b27-ac4a-64b15c614eff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1598fd9-d0b0-4e77-a259-e188a720489f",
        "cursor": {
          "ref": "55422a89-3524-43b6-9bac-978a0e6649a7",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "2e3d95c8-7f04-4bef-8a8a-1e992c141157"
        },
        "item": {
          "id": "f1598fd9-d0b0-4e77-a259-e188a720489f",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "57141206-396e-4842-9f68-57d72c304b98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acbb6a64-7f0b-4301-9180-a8c139c798ac",
        "cursor": {
          "ref": "2c330e00-738f-4a80-be93-1893dad070a4",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "1259365c-3a6b-43eb-a0cd-67d57df7bce3"
        },
        "item": {
          "id": "acbb6a64-7f0b-4301-9180-a8c139c798ac",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "31246838-42a1-46d6-9fda-da327a6d6e58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5831e6c3-27fe-424a-8ba0-5ce26ac0815c",
        "cursor": {
          "ref": "39a1e7d3-ef21-4ea0-b6bd-20b34311d4bb",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "8aaebe70-80fc-4102-9a2a-7b632e38da68"
        },
        "item": {
          "id": "5831e6c3-27fe-424a-8ba0-5ce26ac0815c",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "b6e023b8-4324-4adb-afaf-b32efc9a2ba5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1bb840b-d9a2-4902-a475-f83ced689e98",
        "cursor": {
          "ref": "537c50d4-6927-40d6-97c7-de6a85d07ae3",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "c781bec6-605a-4626-9ec7-9065f03a2f24"
        },
        "item": {
          "id": "f1bb840b-d9a2-4902-a475-f83ced689e98",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "0bcf49a4-2289-4d71-8a41-9460f1036e56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a535fb4a-c9e5-49f8-bcad-5661685d95be",
        "cursor": {
          "ref": "31b962a3-5708-4163-a235-5bd28c16db26",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "dfe62fce-ac0e-4755-91e1-b47ae4cfa2a5"
        },
        "item": {
          "id": "a535fb4a-c9e5-49f8-bcad-5661685d95be",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "863f813e-6a95-409c-a390-f989c340c79b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6966c7b-56e3-46d3-8418-ec0319fa733d",
        "cursor": {
          "ref": "a0a842e6-6844-4b36-9db9-ec17e64377df",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "0c4c010a-af9b-4bb8-b005-a37eb707440a"
        },
        "item": {
          "id": "b6966c7b-56e3-46d3-8418-ec0319fa733d",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "5e6563ce-9b0b-4998-8f2f-f7befb57b832",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8c4a28d-301c-4718-8692-42abf3dad075",
        "cursor": {
          "ref": "618731ad-0510-46ce-a3d2-c698227b6967",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "6db27016-78c2-4ff7-9c59-30993e5385b6"
        },
        "item": {
          "id": "a8c4a28d-301c-4718-8692-42abf3dad075",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "92814de5-96fe-4686-9b4d-151b10d9fda5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7b13c5d-2578-4c9b-a3be-eb909fe74534",
        "cursor": {
          "ref": "6498f979-4794-4f0b-b0a3-bc18a6e7dbbd",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "66f2d030-adcb-4e3e-a56e-879dd30dde78"
        },
        "item": {
          "id": "c7b13c5d-2578-4c9b-a3be-eb909fe74534",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "34ca8504-25b0-40ec-8621-a87c3fedbcba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c8ea9b2-3eda-464e-a908-ea189ec1e5a1",
        "cursor": {
          "ref": "3259616b-a7d3-4474-b616-1d8a8ff9e620",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "71d7c98d-8032-4c7b-af15-e9fdb80e026f"
        },
        "item": {
          "id": "1c8ea9b2-3eda-464e-a908-ea189ec1e5a1",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "a327250d-befd-44ef-8585-a1b254b6da94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e71d70f-26b4-46bb-8b33-7ea5e83efb0c",
        "cursor": {
          "ref": "e8f6778d-eec8-490e-9f4f-bb04a836d811",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "1958e527-6581-4ba2-8c5d-1721bbd598c1"
        },
        "item": {
          "id": "8e71d70f-26b4-46bb-8b33-7ea5e83efb0c",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "8c9d7ecd-6424-4ea2-beba-4c403f5c9205",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2934e1e4-447e-49be-9e4e-969b5ba299f6",
        "cursor": {
          "ref": "f6829f9f-716c-44dd-b430-bb13d541f9f2",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "8ff894a7-ebb9-4460-bbc0-b2e17c7ff16f"
        },
        "item": {
          "id": "2934e1e4-447e-49be-9e4e-969b5ba299f6",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "7142f143-5ea2-4ff6-ba25-47a839f69722",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9887efb3-2a9c-4057-ae1a-b04e5d741263",
        "cursor": {
          "ref": "8cbb3bf2-25af-4fc4-8fd6-8f1e05adf5dd",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "f733ec7f-2ceb-498e-96d9-88a59e02f1e4"
        },
        "item": {
          "id": "9887efb3-2a9c-4057-ae1a-b04e5d741263",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "351f24bd-a610-4e17-b057-bb7a0a50d2b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef540aeb-f713-4bbf-bf34-af681030ea2b",
        "cursor": {
          "ref": "d0593561-ed9d-4082-ae7c-7efe7305ef54",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "239702c1-279e-4e8f-b8f6-d6a40efdea16"
        },
        "item": {
          "id": "ef540aeb-f713-4bbf-bf34-af681030ea2b",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "c0b0b9dc-628b-48e3-b164-8254451e2c24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2308abe0-7dd5-434b-8412-010d888f2c2f",
        "cursor": {
          "ref": "1529171d-150c-4685-bfd5-af78455678b3",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "10134064-74e2-4ddd-9af0-6b7d6a741723"
        },
        "item": {
          "id": "2308abe0-7dd5-434b-8412-010d888f2c2f",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "919401d7-9f46-42f8-8e3d-28e94a680870",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39d88477-0781-42c1-bfdb-a33a97f8b008",
        "cursor": {
          "ref": "496105ae-d0a1-4206-afce-7ffb81c43469",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "7d49d2d7-7d68-4dd5-9c9e-37bf78d86739"
        },
        "item": {
          "id": "39d88477-0781-42c1-bfdb-a33a97f8b008",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "a7813c97-37b2-463c-919d-31c4bc87da8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f470f4d0-1c01-4ad0-a9ab-ae41f142e619",
        "cursor": {
          "ref": "26a6ee7b-3168-4c5d-a1da-0fd387290b86",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "7164a01e-8222-48f3-808f-7208b6c688f0"
        },
        "item": {
          "id": "f470f4d0-1c01-4ad0-a9ab-ae41f142e619",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "4f6c0f28-c558-401f-866a-765780cd0397",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c7ce617-b9a1-460b-bb54-a849cd49a05c",
        "cursor": {
          "ref": "68410e17-7a5f-479b-8cec-02cc951f4e07",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "cea4c3a6-8261-482b-8d60-cc0b537fcd74"
        },
        "item": {
          "id": "0c7ce617-b9a1-460b-bb54-a849cd49a05c",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "548513c1-5278-4380-bfb2-720b70ca6a99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abddd079-8c2f-4d99-b07c-94c159d3649d",
        "cursor": {
          "ref": "94f30b1b-7431-47fc-a42e-2a915353e32a",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "89a0ade9-8284-4a2d-875b-b20aa07056d7"
        },
        "item": {
          "id": "abddd079-8c2f-4d99-b07c-94c159d3649d",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "5bd550a1-1d78-4f54-b03f-c82099851df5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84b9dadb-56e6-425e-a965-2313b0572f7e",
        "cursor": {
          "ref": "a0c85fe9-4701-40c8-814e-1ec9d8958ec1",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "e42b8f14-b21e-4ba8-8b9b-1ae91528dd7b"
        },
        "item": {
          "id": "84b9dadb-56e6-425e-a965-2313b0572f7e",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "9c77f09b-ef05-4277-ad4f-23b652e032c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba8ca587-31bd-410d-bf79-5d523565f87b",
        "cursor": {
          "ref": "e11e6cb1-fa25-483a-8276-703af3c94e0b",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "22e2a3e6-bb74-40a5-bf11-ed9a9dbb6b32"
        },
        "item": {
          "id": "ba8ca587-31bd-410d-bf79-5d523565f87b",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "aa002266-73d4-4e47-89d0-b345e7c8f577",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3266c08-e4e0-4b94-9ed2-eba4c33ed3fa",
        "cursor": {
          "ref": "94fe55ca-038b-4876-8bca-dd2a3797206c",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "29089d9a-0a95-4f50-86fb-8c77d321b867"
        },
        "item": {
          "id": "b3266c08-e4e0-4b94-9ed2-eba4c33ed3fa",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "1c936fcc-b25f-4949-a79f-ac74ebd276e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "133c4671-5636-4657-896a-78eef82f54d1",
        "cursor": {
          "ref": "45654da3-c2ed-4b30-8e54-2ceb6745fdfd",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "1307fa8e-f50b-40f3-a991-3393873a053e"
        },
        "item": {
          "id": "133c4671-5636-4657-896a-78eef82f54d1",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "91772b36-4427-4812-9e95-c0a444271ad0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c3f3a01-3cb6-48ff-866e-ebfeacabab3f",
        "cursor": {
          "ref": "27897ff2-56d3-4538-804c-feb6e9bb26b4",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "7bd3d86f-df23-43c8-8631-07f7872c36b4"
        },
        "item": {
          "id": "1c3f3a01-3cb6-48ff-866e-ebfeacabab3f",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "8eff1e20-1751-448a-bc9f-4f38eef40e93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4bd27cf-c830-4ede-9b67-9f3e0ff85439",
        "cursor": {
          "ref": "8e2cd79c-7895-4c14-a94c-34eb5989e84a",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "66a105e5-dff0-4f02-b057-e8bfababa2cf"
        },
        "item": {
          "id": "f4bd27cf-c830-4ede-9b67-9f3e0ff85439",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "17d9c14f-39c1-4e25-8d3c-f1ae38e80b4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b195192-1c7f-4c1d-9518-bee538d9fabd",
        "cursor": {
          "ref": "446aaae8-d0fe-4949-8956-381d8152bfb0",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "3a26c83d-8cfe-4dfe-a69a-f8f5fa4c5aa9"
        },
        "item": {
          "id": "9b195192-1c7f-4c1d-9518-bee538d9fabd",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "64566dea-2edb-45e7-9493-997cd3c14144",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 125,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e15983c1-96b4-4382-b691-397aa1e7b5e8",
        "cursor": {
          "ref": "5395fad1-5688-4f30-8b5e-e094b1742c2c",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "06eaf2c2-f79d-4605-a3a7-596adad69c6e"
        },
        "item": {
          "id": "e15983c1-96b4-4382-b691-397aa1e7b5e8",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "d631927b-d1fb-4636-8f43-7c189c5129e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69f10a4e-f16d-4049-a820-b0c3d7be6443",
        "cursor": {
          "ref": "7052f8ef-8922-4c56-a295-1c941fff837b",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "cba91e85-f277-47eb-8804-185b018d4934"
        },
        "item": {
          "id": "69f10a4e-f16d-4049-a820-b0c3d7be6443",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "524ae5a5-1368-4d3a-8efd-3c6fa04ec212",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5441360-bcf3-446d-a356-1c9fd65ff73d",
        "cursor": {
          "ref": "c4fd529a-6989-4bb1-b588-de08cc4e7f66",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "fcde1855-5aa2-48a3-8eb2-9c13811319e7"
        },
        "item": {
          "id": "b5441360-bcf3-446d-a356-1c9fd65ff73d",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "0e8f1ced-a1fb-4f8c-8d5d-5b81808f9d14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea5e9fd8-7ef6-4d14-b5dc-69433d46e114",
        "cursor": {
          "ref": "73414e60-ce43-4662-9dac-34f0b8643b68",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "8c3f8ed7-4307-43df-a95f-baad29758f3e"
        },
        "item": {
          "id": "ea5e9fd8-7ef6-4d14-b5dc-69433d46e114",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "9c0d588f-c298-4a0c-890f-54004069ee06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2fad08a-f18a-40cf-bfbd-542343b83e3c",
        "cursor": {
          "ref": "9a339ece-2cba-4cf4-9fe8-13da208c0e3e",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "99952157-68ba-49de-ac83-5e7892d8da32"
        },
        "item": {
          "id": "b2fad08a-f18a-40cf-bfbd-542343b83e3c",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "d5134b88-eaf6-4600-931b-42db596c92ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "775cd2e0-37fd-4c5f-a41a-201a02eb25b3",
        "cursor": {
          "ref": "f4effa76-58df-47be-a6d2-bbb584ead19e",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "a9483120-adaf-4b88-a492-18e1c78f3600"
        },
        "item": {
          "id": "775cd2e0-37fd-4c5f-a41a-201a02eb25b3",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "d14c663c-71b4-4ac5-aa7b-82c9a6bbdc80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "647c44dd-21ef-4b4b-97ea-b00f4587242c",
        "cursor": {
          "ref": "ae43748c-e9a2-4d37-8004-d634150a7d44",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "9aac7bae-ef91-4417-b544-0b98647b7f7b"
        },
        "item": {
          "id": "647c44dd-21ef-4b4b-97ea-b00f4587242c",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "dbbbe8f7-3d9c-41be-a774-fe3de6cdca9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5a85416-63d3-4ea8-8450-6f3a5c050964",
        "cursor": {
          "ref": "37f78f90-b16f-4637-92a7-db01cf919b16",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "e203cd36-e09b-470f-b07e-9333133936cc"
        },
        "item": {
          "id": "c5a85416-63d3-4ea8-8450-6f3a5c050964",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "09502217-1c58-48eb-ae9e-d6c1b20d7a02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb81e830-b0a3-4faf-8721-f4a041143dea",
        "cursor": {
          "ref": "5a1da5eb-6bde-4fed-8e7c-0e5deaa224c0",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "2206d7a4-a348-4adf-bab2-24aedad8285f"
        },
        "item": {
          "id": "cb81e830-b0a3-4faf-8721-f4a041143dea",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "1d608088-fbd9-4363-a2f5-968a3acdf1c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "847a0284-3478-436c-9e85-19f76107d1e4",
        "cursor": {
          "ref": "889c81e2-2799-4df3-971a-916872a6cc81",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "199cf302-44f8-4371-8123-2e576dd0e155"
        },
        "item": {
          "id": "847a0284-3478-436c-9e85-19f76107d1e4",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "f6ce69c4-fc9d-4d59-b486-805d0b7f9245",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b505ca56-769d-4f2b-bc27-69c8fa4d69d3",
        "cursor": {
          "ref": "c40feec9-95e1-400b-9baa-1d13b57e0b11",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "1e5d144c-3281-4284-900d-a54559a5a3ef"
        },
        "item": {
          "id": "b505ca56-769d-4f2b-bc27-69c8fa4d69d3",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "d579f353-fe57-4a11-aa9b-95c39114b77d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8af118c8-b2b2-4b0a-8650-40c609d84e9f",
        "cursor": {
          "ref": "46d9f1c1-1c06-4d65-8e9f-afd572e4608e",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "730052d2-6a96-4f8e-993b-82c1f835c75f"
        },
        "item": {
          "id": "8af118c8-b2b2-4b0a-8650-40c609d84e9f",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "df14c50c-f14e-44a9-a2e2-da17c47e06f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "453f4b36-53a1-4d8e-9997-ca5d4899a855",
        "cursor": {
          "ref": "24551422-6555-440e-b935-85dd7c26837f",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "a327fd0c-91a3-4fcf-bf38-f0ac60d92fc7"
        },
        "item": {
          "id": "453f4b36-53a1-4d8e-9997-ca5d4899a855",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "637e1012-1767-426b-9e4b-9efc77c9a3ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "146e4c0f-b4ed-4d73-8fdd-99afb2b699f9",
        "cursor": {
          "ref": "2143c3af-fafa-40c3-94e5-51c6e0dd5618",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "436c5586-012b-419f-8839-b607813d1c20"
        },
        "item": {
          "id": "146e4c0f-b4ed-4d73-8fdd-99afb2b699f9",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "07daf3c4-7545-48a2-96c6-b3839ccca288",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb1e77f0-50f1-49c5-9b74-2ab02b265fd6",
        "cursor": {
          "ref": "d94e8151-c5a1-4fca-8296-619c5465e1e5",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "902bf3f9-8466-4440-9364-f052c42abb51"
        },
        "item": {
          "id": "fb1e77f0-50f1-49c5-9b74-2ab02b265fd6",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "f6853332-4384-45d4-8cc0-d965e9359519",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "456fecf8-05a0-43c5-9732-c5d645160972",
        "cursor": {
          "ref": "aa64cf2b-63de-4451-b6c6-a5a25ea259f6",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "b9c5af31-09bc-495b-8316-9762b6338f60"
        },
        "item": {
          "id": "456fecf8-05a0-43c5-9732-c5d645160972",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "386fe3fd-fdef-48b1-a666-1bf4b4c82259",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9054e6ae-0b13-486e-9839-4a3ef8165767",
        "cursor": {
          "ref": "ee389786-8efe-469d-a1e6-18b462a6fad7",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "60280e1a-f113-42e7-83b2-81b0dbaf7495"
        },
        "item": {
          "id": "9054e6ae-0b13-486e-9839-4a3ef8165767",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "637b0461-eb76-403a-b631-3c8d502a2870",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16bf1039-2578-40c8-9c68-61412019631f",
        "cursor": {
          "ref": "b9ef3d6b-5e97-4501-acfd-676854f0e695",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "544f94de-5175-430a-9694-554ebe160c0e"
        },
        "item": {
          "id": "16bf1039-2578-40c8-9c68-61412019631f",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "096f839f-7226-4550-969b-2e4119ce154f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fdd408a-c3ae-47e7-9e05-9a6d0bf20dd2",
        "cursor": {
          "ref": "f4a860eb-44ec-4a56-9083-b8c5d9129128",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "fc1f81b6-7dcb-4de9-8579-a8c43bf46536"
        },
        "item": {
          "id": "1fdd408a-c3ae-47e7-9e05-9a6d0bf20dd2",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "39bd77f8-03b3-4185-8743-36072b487d70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "781949ac-64b8-41c1-a76c-0517fab06e6f",
        "cursor": {
          "ref": "db93150d-092c-4cdc-8302-0417bca8ed39",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "e4f6a60d-4fb4-418c-8bf3-82aed09d27d8"
        },
        "item": {
          "id": "781949ac-64b8-41c1-a76c-0517fab06e6f",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "2caba71e-8dca-4d80-a576-9e5bfa0eb411",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b363357-c840-417f-bf89-95991b7a2ded",
        "cursor": {
          "ref": "4cd25d5c-fa32-4b11-8eb8-356449ccc2b8",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "9489ee20-f945-48b6-b503-788e97d13a99"
        },
        "item": {
          "id": "5b363357-c840-417f-bf89-95991b7a2ded",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "a0c36736-90a5-4c12-a904-77bc1316879b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dde52f9f-f0cb-4f85-a3b0-5408b5390632",
        "cursor": {
          "ref": "d22d230b-41dd-4f8e-9470-2d8bec5e8b2c",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "4c91eee3-a848-4237-aafd-3107912420c2"
        },
        "item": {
          "id": "dde52f9f-f0cb-4f85-a3b0-5408b5390632",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "376a3cd4-05a2-4e79-8319-426794b4d6db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92009489-2ba9-42df-8420-86308963b8d8",
        "cursor": {
          "ref": "22f8d06a-1971-4f3f-a364-9cebaab3e1fe",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "71d1d952-5592-464e-be97-2b74e4b9077f"
        },
        "item": {
          "id": "92009489-2ba9-42df-8420-86308963b8d8",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "b63e59df-a427-4439-87c8-d3dcea03ab4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "833d1d21-21ea-4593-8766-173291571127",
        "cursor": {
          "ref": "c40a20af-2bce-4f3f-8acd-42d4f580f4c3",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "fa574a6e-03ef-45a3-977c-312b5b8a9254"
        },
        "item": {
          "id": "833d1d21-21ea-4593-8766-173291571127",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "48957976-a13d-4172-8ed3-cd4c2b8e0fc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "397fbee4-d04c-4018-8de1-e5ce7a44b89c",
        "cursor": {
          "ref": "dd71a22a-a2fc-4b35-ac3f-c94731e32789",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "451084fd-d4ff-423c-b498-2fdd05077ccd"
        },
        "item": {
          "id": "397fbee4-d04c-4018-8de1-e5ce7a44b89c",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "a04e5eea-79d2-4e82-9b83-2ea694e0f8ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dcdd297-0028-4ed3-8231-63a9ce71a553",
        "cursor": {
          "ref": "6ea7da9d-f259-4066-b423-20ab125d22de",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "ecb236fc-c12c-45df-87b0-cd2debfa51c9"
        },
        "item": {
          "id": "5dcdd297-0028-4ed3-8231-63a9ce71a553",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "693d8408-1c10-42a5-9b81-c8ccbe648e46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9507f28d-24ca-4d40-b935-1d8b4b13144b",
        "cursor": {
          "ref": "42cdc1c5-2661-4874-b538-787209461f78",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "fb97df72-0c6c-4c04-a20c-f4911c87d679"
        },
        "item": {
          "id": "9507f28d-24ca-4d40-b935-1d8b4b13144b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "92b37887-ba6b-439e-8270-239c7d86eab2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42e68fa4-37e4-4d88-bfdd-f6fa3d50bec8",
        "cursor": {
          "ref": "de522c94-cfb2-4d7a-aeac-074f48781824",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "cd251e89-173a-487a-a28f-30380b887627"
        },
        "item": {
          "id": "42e68fa4-37e4-4d88-bfdd-f6fa3d50bec8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "c14eb60d-d11c-40d0-8b2a-e73b2a58699a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfda75a2-8669-4c2e-89c8-20e69bfd3b4a",
        "cursor": {
          "ref": "fabb3919-9ed0-4732-aed3-5fad9f934f49",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "cc13e37c-8e7d-473c-aaea-97ab65d58b26"
        },
        "item": {
          "id": "bfda75a2-8669-4c2e-89c8-20e69bfd3b4a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "b3e3de8c-cf7a-4a93-ba38-515c300b42dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7006c358-34ed-4203-8507-24703e8328c8",
        "cursor": {
          "ref": "d166e9f9-aa13-4839-8316-1b2168bd6d77",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "b72c4f3c-9ff5-4951-a5dd-943e99edd851"
        },
        "item": {
          "id": "7006c358-34ed-4203-8507-24703e8328c8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "99bdacba-7612-46da-b5db-f15c244441fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c545c17a-fda9-4b3e-93eb-1ca9845323c2",
        "cursor": {
          "ref": "5185a796-661a-427b-9404-647eca0e878f",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "004ec85d-1de8-4e10-9eeb-dae6d702ce94"
        },
        "item": {
          "id": "c545c17a-fda9-4b3e-93eb-1ca9845323c2",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "c719f584-f52d-4549-8165-04edb24f782e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e179a49-ee50-48d4-bff6-8b350efad235",
        "cursor": {
          "ref": "6dfa1aa1-4485-4a1a-b3e6-c1729e5a4361",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "5f0c4991-9128-43a6-bfd4-fcfa55ed153a"
        },
        "item": {
          "id": "7e179a49-ee50-48d4-bff6-8b350efad235",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "d3f30cb6-d9eb-4633-a061-4a3e3652bbd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19158510-a949-401a-a360-1832394743cd",
        "cursor": {
          "ref": "d2da0e7c-f074-4d8c-bd51-368339bd09aa",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "2ad91c2c-df89-49cf-94f4-5e51dc50536e"
        },
        "item": {
          "id": "19158510-a949-401a-a360-1832394743cd",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "8e87ac40-ba05-42bd-ac53-6fee7cf61b79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60a694f8-06b1-4e03-963c-a8988cb8e6f5",
        "cursor": {
          "ref": "b1bff19e-5b59-4c6c-95b2-bfb12d1d3778",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "b77883df-0816-4bcb-a83b-90f42f88aa28"
        },
        "item": {
          "id": "60a694f8-06b1-4e03-963c-a8988cb8e6f5",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "880bc61f-5584-4f7a-9dea-4885c8e06426",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0275f23f-0bde-4f3e-961d-059761f525a1",
        "cursor": {
          "ref": "b24a78f9-f388-4468-91c3-0b9312cebc06",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "972a12e8-a6b0-484d-a612-8bda2a328b5b"
        },
        "item": {
          "id": "0275f23f-0bde-4f3e-961d-059761f525a1",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "6af09162-95de-4043-a312-624e4b9dacab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62993b40-f41f-4fb4-8206-d0576e054096",
        "cursor": {
          "ref": "b841ef02-f391-46c1-8e34-c7a132e9d2db",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "b61617e2-fa49-4e3f-b48e-c4675c1e5e40"
        },
        "item": {
          "id": "62993b40-f41f-4fb4-8206-d0576e054096",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "71b3e696-74d5-40ac-8a94-dbb203d7a3fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07eb0565-7edd-4a13-b9c0-d71d3278b292",
        "cursor": {
          "ref": "a6589715-af37-4dde-81af-321f81dc3518",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "059eeedc-01c0-4459-880e-3faa05acf88f"
        },
        "item": {
          "id": "07eb0565-7edd-4a13-b9c0-d71d3278b292",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "470079ef-6ad6-42a3-bbc5-4fa5f312a41b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30a233ad-9f23-4f95-99e9-08caa3c1cd9c",
        "cursor": {
          "ref": "0024bcef-d007-489f-9f7b-cdb3b1d119c6",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "9175b683-9b66-4255-a378-362680844ebb"
        },
        "item": {
          "id": "30a233ad-9f23-4f95-99e9-08caa3c1cd9c",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "a84d6559-9ff2-440f-807b-f1e9367add9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b82341f-1ad8-4f9b-a02c-e6aa7150958c",
        "cursor": {
          "ref": "4b8282f4-31ee-40d7-b720-39ebcc764a73",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "06cf3f41-c6c5-4730-b466-6fe19e0190ba"
        },
        "item": {
          "id": "7b82341f-1ad8-4f9b-a02c-e6aa7150958c",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "b2610db9-dd08-48b9-8c8c-6b9c73ebef32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a98c94b3-110b-42f9-ac5d-59abac89c1dc",
        "cursor": {
          "ref": "fc45326f-9176-4886-89dc-4a915117e1ca",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "9f82d83b-d242-4c44-a8a2-727875618894"
        },
        "item": {
          "id": "a98c94b3-110b-42f9-ac5d-59abac89c1dc",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "35010c20-cb17-4a86-a03c-c415087e459e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84f7a027-9a8e-4183-af73-c2153837b9fc",
        "cursor": {
          "ref": "07f22ba4-6d76-4b42-9fff-6fce8db1074a",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "4b4d7470-5ef2-4724-9ded-8e151be742af"
        },
        "item": {
          "id": "84f7a027-9a8e-4183-af73-c2153837b9fc",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "b45e9c3e-7169-4de4-9ba0-f7c668cd9b89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaf204bb-6f38-49c9-bf19-f6be414b4ffc",
        "cursor": {
          "ref": "1efe1a21-f0a1-4c2e-acef-0f19e2df1bda",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "37375b44-e05a-419f-bf1c-b34df6dee908"
        },
        "item": {
          "id": "aaf204bb-6f38-49c9-bf19-f6be414b4ffc",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "b100b2f5-df1d-4041-8c37-62cb9c4379c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "735677a2-d104-4078-a8da-a35f17ff747d",
        "cursor": {
          "ref": "29a4bcc2-44ae-4010-a77d-2a940de7c90e",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "c2cb65ba-c7cf-4385-b4a4-530b5d029a7c"
        },
        "item": {
          "id": "735677a2-d104-4078-a8da-a35f17ff747d",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "c3d68de1-2971-466e-bc4f-f0962503745a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90536916-b596-48a8-8c7d-ba1105d1f4a3",
        "cursor": {
          "ref": "d3a35d13-50a6-4d7e-8a1a-fcb4fd4ba5c8",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "be454948-6321-466b-b279-171f3ce112aa"
        },
        "item": {
          "id": "90536916-b596-48a8-8c7d-ba1105d1f4a3",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "c32528a6-9ca1-4804-9312-c271144bb5d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1dc3262-0e08-48a7-9bad-db27a30c09fb",
        "cursor": {
          "ref": "60ab1cd7-3677-4e7a-a557-238cd4fa165d",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "508fff8e-abe4-4401-a5b5-cfd72bcd3471"
        },
        "item": {
          "id": "b1dc3262-0e08-48a7-9bad-db27a30c09fb",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "37a5a307-963a-413a-8251-4f6ec002fc1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17bf72da-e8f9-49f7-a818-5a42afb7775a",
        "cursor": {
          "ref": "61f89a2d-d57e-43a7-8448-fcc863b508b7",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "df1811f4-4eab-4f9d-be3d-ef7ea7527aa5"
        },
        "item": {
          "id": "17bf72da-e8f9-49f7-a818-5a42afb7775a",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "3c4902f2-6ba8-4a48-b5bd-13439c44fa3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02850588-6814-4243-8db1-a2cb201538bf",
        "cursor": {
          "ref": "b6731eaf-152f-4a9d-9018-712c11315462",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "fbf23025-016b-4b15-847b-60b4d7136870"
        },
        "item": {
          "id": "02850588-6814-4243-8db1-a2cb201538bf",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "157ecc99-b139-46a5-b466-5e1d568d7ed4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a7c5273-cc15-4e9c-afe3-68de3f6e8c00",
        "cursor": {
          "ref": "8a5bbbbb-a1f0-4e86-a11c-6dc31ce29714",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "c5fb04fd-7661-48da-93bb-5a2fc7586c04"
        },
        "item": {
          "id": "7a7c5273-cc15-4e9c-afe3-68de3f6e8c00",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "c3f91ef1-d9e3-42a3-8ffc-3912743f23b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd25adcc-b46b-486d-a627-a1de8454baef",
        "cursor": {
          "ref": "95827c2a-bb5e-45a8-aac6-c0b54bf24c2f",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "8b69c279-eaa1-40d0-b576-ed2ccf33478d"
        },
        "item": {
          "id": "dd25adcc-b46b-486d-a627-a1de8454baef",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "c8f48398-a6c4-41a9-a27d-6e0e1f77eefc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61bd1004-c35f-4962-8451-91ae5fc74419",
        "cursor": {
          "ref": "ae01a5e0-0000-4d06-bfa6-1425838439e7",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "cbccd0dc-145a-45fe-98c3-6e7768ce6153"
        },
        "item": {
          "id": "61bd1004-c35f-4962-8451-91ae5fc74419",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "79dfbed1-2989-42b0-8b9d-d455464ed6ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4af256a6-5f72-4e10-afd3-d0f4f3dfadf9",
        "cursor": {
          "ref": "c5771bd3-9302-4cd4-a0d9-b3db1a1f7c07",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "8849eb14-b0fa-40c9-9a0c-310587b0d29e"
        },
        "item": {
          "id": "4af256a6-5f72-4e10-afd3-d0f4f3dfadf9",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "a56cf935-7720-4179-8838-d979726c0303",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d0870ad-037b-4694-8955-5ac6f8520ee9",
        "cursor": {
          "ref": "4c7adc3d-46ef-444a-87fd-d58f4f446991",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "b9903840-037b-42c9-9f4f-174c04eedea8"
        },
        "item": {
          "id": "1d0870ad-037b-4694-8955-5ac6f8520ee9",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "9df87fb8-9560-418a-8507-7680bab9fca3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d53b08c6-187c-46dc-843b-8ecfe8321c5d",
        "cursor": {
          "ref": "d7ef4e0b-3d20-44dc-b0f0-337e50cf0c54",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "be620fe5-164f-4b55-a55e-7132a16803e3"
        },
        "item": {
          "id": "d53b08c6-187c-46dc-843b-8ecfe8321c5d",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "f728a18c-5f2d-4214-8b3b-4dbc1acbf187",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e07025f-e901-426b-ac6d-e0a5b549a581",
        "cursor": {
          "ref": "61dc7752-4676-4c60-a370-523e8b4716f0",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "6b4fc3cb-7a42-4fcd-bfa2-4f5a5b574f49"
        },
        "item": {
          "id": "8e07025f-e901-426b-ac6d-e0a5b549a581",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "53712def-0092-4f06-9461-106759031658",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf53498e-a449-4138-9f45-61d9a20f4a46",
        "cursor": {
          "ref": "db5053ef-4d6d-4fcb-bdf7-4e4a198f6c45",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "0058f14e-b971-4c96-b370-68753ed6f39a"
        },
        "item": {
          "id": "cf53498e-a449-4138-9f45-61d9a20f4a46",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "2c292b1c-3312-4e6d-816d-6feedf80473f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4e49e02-7143-4872-9a88-7dd37c7ab765",
        "cursor": {
          "ref": "36d5f2b3-1339-46e8-8fde-21a92cc11c78",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "ad2e281f-add3-4d6d-b27d-0e95dc62c905"
        },
        "item": {
          "id": "b4e49e02-7143-4872-9a88-7dd37c7ab765",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "60ce6cb6-ebc1-47e1-ae22-b0fc5dcb3936",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2327290a-28fe-4875-a9ff-8ffbd30a2448",
        "cursor": {
          "ref": "486c7dd3-406d-470c-8918-90986b55772a",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "f32aa85a-25e2-481e-91bc-3131d0dc5b90"
        },
        "item": {
          "id": "2327290a-28fe-4875-a9ff-8ffbd30a2448",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "51bb5a86-15ec-4342-b730-5fdb71ae8457",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fec1dc47-e2b8-470b-b6d7-c41263a6b024",
        "cursor": {
          "ref": "ed127fd0-f9de-468c-9ebb-b4b5e00b7d82",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "402426fa-de9b-47ba-a29a-1c2ebb966bf1"
        },
        "item": {
          "id": "fec1dc47-e2b8-470b-b6d7-c41263a6b024",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "949d01ac-c0a1-4a19-b97c-5aeb8025ce24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c77220c9-891e-49b1-9521-ae4eff605240",
        "cursor": {
          "ref": "d14108a8-3316-4d86-81c0-fcd727913a4a",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "51f93bb1-9297-44be-93e9-d3f7562c817a"
        },
        "item": {
          "id": "c77220c9-891e-49b1-9521-ae4eff605240",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "43eacab8-b822-45b2-8e18-fc0ddc9d286f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01faaa36-dadb-4637-aefd-f28cfee0ef82",
        "cursor": {
          "ref": "b648d278-f885-4303-8bb2-13617cc91fda",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "a2695d97-9617-4a38-803d-f49172d60d82"
        },
        "item": {
          "id": "01faaa36-dadb-4637-aefd-f28cfee0ef82",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "68a666b2-5fda-4da3-a1cf-b41004ddfbcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "270d055a-f034-43d1-88db-adc39cbfca62",
        "cursor": {
          "ref": "6edc210e-f9fd-4418-827e-6dd953d1a6bb",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "5562b3e4-b90d-409b-9bcb-b76c8ce1113a"
        },
        "item": {
          "id": "270d055a-f034-43d1-88db-adc39cbfca62",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "4f82d9f5-0b27-4de3-b7cb-516094a3de90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e8361a1-7cfc-426d-ae6d-f56dff377e6f",
        "cursor": {
          "ref": "52de45e9-94e2-495f-89fb-a82d864a8d63",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "6e1644d7-3a8c-4904-be2a-1db09034d1d4"
        },
        "item": {
          "id": "4e8361a1-7cfc-426d-ae6d-f56dff377e6f",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "8ba15e27-18aa-4fbf-a4c5-759cd2b7efc7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cf807f5-337e-493c-b162-3ef590abda17",
        "cursor": {
          "ref": "23b50aaa-1cb0-41b0-81e2-87bf2bb82262",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "498b977d-f4d8-4264-bab6-087392e1cccf"
        },
        "item": {
          "id": "5cf807f5-337e-493c-b162-3ef590abda17",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "3452c957-6fde-4978-9e10-ad0a58433061",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "7cd67b3b-b8c3-454b-96cf-36bc45ce1ad1",
        "cursor": {
          "ref": "396b99a8-d0c8-473f-b2eb-2e07f045b180",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "53392378-96eb-427b-9751-a5d590005ad5"
        },
        "item": {
          "id": "7cd67b3b-b8c3-454b-96cf-36bc45ce1ad1",
          "name": "credentials_issue"
        },
        "response": {
          "id": "50cd3d8f-9204-4466-bea9-d11facd94188",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "fc24933b-b500-4766-afdb-f5ea6747ba07",
        "cursor": {
          "ref": "e9906896-a330-4954-8f42-db4eba058c80",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "a7609f39-c37d-4837-8436-81d812b991d7"
        },
        "item": {
          "id": "fc24933b-b500-4766-afdb-f5ea6747ba07",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "2bc0c90e-8a1c-4577-99de-d675b539f898",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "281cbc41-fb28-41be-83ed-554a5ae940e4",
        "cursor": {
          "ref": "475b6e28-a3b6-484a-b544-ef60626c5320",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "560a310b-6226-4590-9ff4-f37ee204668a"
        },
        "item": {
          "id": "281cbc41-fb28-41be-83ed-554a5ae940e4",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "9c40f863-9465-44ff-bf55-2ef15dad86f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "1cbcc918-8cda-4a72-8cfb-9f6717e61c04",
        "cursor": {
          "ref": "4d537a23-2a91-43b5-a0e8-18e6f2d7a8e5",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "ae2f9843-0d11-4e0d-b8d3-c5d804098bf8"
        },
        "item": {
          "id": "1cbcc918-8cda-4a72-8cfb-9f6717e61c04",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "e627edcf-d56b-409d-8f3b-36355308924a",
          "status": "Created",
          "code": 201,
          "responseTime": 10120,
          "responseSize": 991
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "592e7895-9092-49c1-8fdb-47fe1f35006a",
        "cursor": {
          "ref": "30aab188-bd35-4451-a4fb-d59670a47b24",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "58a2f4cc-a8dc-4056-873f-26f5770c6e4c"
        },
        "item": {
          "id": "592e7895-9092-49c1-8fdb-47fe1f35006a",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "b2d4dd3d-b8b8-4fb1-b8fc-864d4ae852e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "27aee8a5-27cd-4610-8dc8-792446f4a709",
        "cursor": {
          "ref": "a3d842f0-c6cb-4bc3-ae98-60cd2d191894",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "23ba66d4-5eea-471d-b0cf-cfa333512846"
        },
        "item": {
          "id": "27aee8a5-27cd-4610-8dc8-792446f4a709",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "72239adf-f491-4bfa-b29b-1fa4ae706ad6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "5e4a5e0f-69d9-45ed-9f6b-f08a0ae0a00e",
        "cursor": {
          "ref": "b1eb3434-05bc-4059-bf93-e99954559e9c",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "a8cce1ca-a538-4bd1-b2d4-71be7b3f4873"
        },
        "item": {
          "id": "5e4a5e0f-69d9-45ed-9f6b-f08a0ae0a00e",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "e11af50d-1400-4060-8358-13237f0c11a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d43d99f-0be9-4235-b6ef-55440e288fbe",
        "cursor": {
          "ref": "527092d0-4697-43e0-8b61-218bb8436f22",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "5e9daf16-dd06-4bf3-98ed-7567d8613317"
        },
        "item": {
          "id": "0d43d99f-0be9-4235-b6ef-55440e288fbe",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "1c8e5922-52da-43e7-bd12-b316868422b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a97445f8-9160-4ade-8269-4bffa70dd6da",
        "cursor": {
          "ref": "c3df7675-90ae-43cb-bc97-6a2d313c1148",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "6f54f7ec-74d3-40be-9ddf-db0b7313396a"
        },
        "item": {
          "id": "a97445f8-9160-4ade-8269-4bffa70dd6da",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "e2dd22a3-da04-4b5e-850d-a2085cbf7d64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1b9a35b-d565-4589-9e21-e500b45b42c9",
        "cursor": {
          "ref": "a7c24ef9-0161-4ea8-b037-883ef4bcc38e",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "58092dfd-5344-4e65-aacc-aabea4984159"
        },
        "item": {
          "id": "a1b9a35b-d565-4589-9e21-e500b45b42c9",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "5674ea49-1471-408c-8c39-74517819f0a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70853906-fb17-4ed0-9652-5742dd98de22",
        "cursor": {
          "ref": "99b1146c-64ee-4bf7-be79-76cf1f89d928",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "9ba3f0aa-5092-4956-960d-4e97f560a57e"
        },
        "item": {
          "id": "70853906-fb17-4ed0-9652-5742dd98de22",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "178632f1-e6cb-4525-b90e-8ca3e9aa8818",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbe6d69d-d4ca-4726-9f88-0e226f79c341",
        "cursor": {
          "ref": "ed2fb2dd-3660-4cc3-85a5-82ec559d07b0",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "dc67f58f-dba2-4940-a2b9-b6a86d03e333"
        },
        "item": {
          "id": "dbe6d69d-d4ca-4726-9f88-0e226f79c341",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "3742ec5f-1a1e-4d2f-b187-930ee40e107b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec4ad909-6e5d-46b6-aa67-31ab4e7752b9",
        "cursor": {
          "ref": "28c0adc8-8f7c-4106-9fc6-3697aed0f362",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "57e81a6d-6169-4540-8fa1-55e3dcd4804a"
        },
        "item": {
          "id": "ec4ad909-6e5d-46b6-aa67-31ab4e7752b9",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "5e807e35-3f50-41f6-b753-90a6b5d613cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4569640-fcdf-4158-aa1a-8638898bb468",
        "cursor": {
          "ref": "29275823-c6f9-4401-b1a9-d168d534f51c",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "78488864-c8b2-47e6-bfe2-3b069bce2f0c"
        },
        "item": {
          "id": "c4569640-fcdf-4158-aa1a-8638898bb468",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "0ac97511-8b89-46ce-8f66-3bea39ea7ce6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e2292ca-ccc1-46fc-8039-faabb68e8a85",
        "cursor": {
          "ref": "2b674b20-1f76-4c15-8a84-70d000d7f571",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "f377f2f1-094a-4828-bff1-3eb64d638766"
        },
        "item": {
          "id": "4e2292ca-ccc1-46fc-8039-faabb68e8a85",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "85faf20a-943f-49d8-a17c-16184b0c4ed1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56c573ce-34e0-4cd7-a096-9cbda2771dd4",
        "cursor": {
          "ref": "851825de-7e98-4e92-bc8b-c4e5c26402e8",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "cb43a1ea-ace5-49d1-8109-c083ffc1b0bd"
        },
        "item": {
          "id": "56c573ce-34e0-4cd7-a096-9cbda2771dd4",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "e0e13c2c-ee93-4047-ac73-262f4ce241ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e17726af-4cac-475e-a066-3a920609ac0a",
        "cursor": {
          "ref": "830f5fa3-f4f3-407d-94bd-8c87272512fa",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "0a943182-7e74-48e9-b50f-8fc8e2ec0bc1"
        },
        "item": {
          "id": "e17726af-4cac-475e-a066-3a920609ac0a",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "5326c5be-2707-45dd-bd66-1e821c2ac86f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcc2a307-5dab-4ce8-8e50-3fbe9360ec20",
        "cursor": {
          "ref": "7ab26bd4-05f9-44b4-89ea-688322bcab02",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "c92c7aaf-1c6a-407d-94ca-3c7895eadb55"
        },
        "item": {
          "id": "fcc2a307-5dab-4ce8-8e50-3fbe9360ec20",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "879e3244-8865-48dd-98e8-ef856455bce7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fc6c2e4-89a5-4f91-be75-e367de3aa00b",
        "cursor": {
          "ref": "ce7bdac2-cd9b-4578-b9a5-5909837ace98",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "2603da84-f3f3-40c9-bae7-793f5d4dc81e"
        },
        "item": {
          "id": "9fc6c2e4-89a5-4f91-be75-e367de3aa00b",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "c7c436c3-ca38-43fa-80fe-dc2e62dde23e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d72ba171-ff2c-4746-8fe1-dd1fa0ccb4d2",
        "cursor": {
          "ref": "d7d45f6d-cea2-4113-866b-3dcf52f712c6",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "d76c23f2-704f-40ee-b33a-6fdd731ceef3"
        },
        "item": {
          "id": "d72ba171-ff2c-4746-8fe1-dd1fa0ccb4d2",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "489754b1-04db-4d54-b508-f4e1ca8dcec2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c66d35a5-b4d1-49d2-82b9-8e450298c250",
        "cursor": {
          "ref": "cdb4bb23-d722-47ad-aedf-d1b0464a6f15",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "a9ad33ff-092c-4c9b-b475-5a3ecb6e614d"
        },
        "item": {
          "id": "c66d35a5-b4d1-49d2-82b9-8e450298c250",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "99aa6af9-17bd-45f0-92d0-78750b3af20f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "193b1b29-4867-4e14-a241-193870c98d55",
        "cursor": {
          "ref": "a4c3b0fe-b03b-4fc2-97ec-e2c3d1c4868e",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "e6d63320-eec6-4ccd-af42-52a5b786b4f6"
        },
        "item": {
          "id": "193b1b29-4867-4e14-a241-193870c98d55",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "81cb4fa6-9997-4aa3-8da4-415d9ddb74f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "704ec6fb-de26-49df-93f4-657398b7da96",
        "cursor": {
          "ref": "683435e0-cfdf-4ec9-b8c7-7baa4e488fbe",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "9db8f8d2-bdee-4c87-afdb-89ef3768cc50"
        },
        "item": {
          "id": "704ec6fb-de26-49df-93f4-657398b7da96",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "7bfe59ba-cae9-4852-9d10-dc2138b542f2",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 36,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "00769d5e-bfc7-44bd-acc3-ed07cac48365",
        "cursor": {
          "ref": "f08304fe-8b86-4703-a693-1f8ad17d68a1",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "73e0049f-13d9-4a51-ab3e-2a8d95957a2f"
        },
        "item": {
          "id": "00769d5e-bfc7-44bd-acc3-ed07cac48365",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "1cd854e8-da18-4c64-bf17-9ebc8503c9a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83dd07d3-d7c7-4a2f-92b6-2a5960fa12b0",
        "cursor": {
          "ref": "5e7e38a8-7984-4ce2-adeb-e4fc140ef785",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "c59a7ecb-6ac8-4b94-a94c-a69f8da0918a"
        },
        "item": {
          "id": "83dd07d3-d7c7-4a2f-92b6-2a5960fa12b0",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "00aaff49-0dfc-4491-bfe3-734863539046",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98e063bf-a12a-40ea-9f51-b9ad118488d1",
        "cursor": {
          "ref": "787bce66-1c56-4b71-bfa2-1ec32283ff52",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "36c22559-8b2c-4fc6-94a6-5d3c3066683f"
        },
        "item": {
          "id": "98e063bf-a12a-40ea-9f51-b9ad118488d1",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "5024cf13-2a90-4517-80e3-2c6d9f3d0b7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68be2946-1283-4403-adcb-abe5d822a703",
        "cursor": {
          "ref": "2a9d87a8-cf2b-4fc6-8817-fa8672ca3ca3",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "aa6ea3f0-29ea-4cab-b36e-69c80d74913f"
        },
        "item": {
          "id": "68be2946-1283-4403-adcb-abe5d822a703",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "3c6ceb04-200b-430d-be0c-2f3c02d25d19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57970159-1675-46da-bcf2-c1dd3f43e624",
        "cursor": {
          "ref": "25c1c2d2-d5c6-420d-ae1a-49f80a266bf0",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "f73dd810-e3ee-4c4a-b52c-2de61358f765"
        },
        "item": {
          "id": "57970159-1675-46da-bcf2-c1dd3f43e624",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "11d75051-f957-4115-a2a9-e26781469048",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "146ec38b-29be-4c38-8677-c18d07fdb6d6",
        "cursor": {
          "ref": "989e2206-7062-487f-be7f-93c6261a5084",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "65bf24fa-a918-4206-9c25-3b5405fce818"
        },
        "item": {
          "id": "146ec38b-29be-4c38-8677-c18d07fdb6d6",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "c190ea71-13c5-46e4-b233-6bdfbae5bd2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fe3ff34-ce14-4314-9ed2-48439c1ee888",
        "cursor": {
          "ref": "ed12495d-a5e1-4ef5-a6d7-d213fdbdd3b7",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "5e71da7c-de3a-46aa-9927-1c94c381d43d"
        },
        "item": {
          "id": "3fe3ff34-ce14-4314-9ed2-48439c1ee888",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "bff58554-43f8-40c6-93f7-d4070a49ae84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5741275f-500c-4dea-b7f6-75e26cc4cdc6",
        "cursor": {
          "ref": "5879de8e-ba9c-4a3c-8f53-ae8d425f9551",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "f4ef7312-d48c-4d6c-958b-7fdb23d1ede6"
        },
        "item": {
          "id": "5741275f-500c-4dea-b7f6-75e26cc4cdc6",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "b6368e30-0749-4ab8-867c-e7af61046d3b",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 35,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "86984267-7aac-4a24-b09e-7a52261224f7",
        "cursor": {
          "ref": "1a044134-4395-4535-921b-b456c99d9e24",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "a56996c4-41b0-4483-a8d2-c37f5a9b64fe"
        },
        "item": {
          "id": "86984267-7aac-4a24-b09e-7a52261224f7",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "2480e7a9-e7aa-40c4-9fe4-20eb9f49263a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0c4c852-2760-4896-915c-94690475868f",
        "cursor": {
          "ref": "a4af3888-370a-43aa-81f5-eaad08221c4c",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "d851f3ea-ce6a-42ce-805b-5b899ca6ebf2"
        },
        "item": {
          "id": "d0c4c852-2760-4896-915c-94690475868f",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "af559f01-7bc7-4c77-8e20-1059cdead71f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03521505-6583-4c9c-a838-d13443d7f0d0",
        "cursor": {
          "ref": "4f4277a1-9e1c-41da-bada-15ed95bb5f31",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "4c05f4f5-dae3-45e2-9d3f-67f47c5f054c"
        },
        "item": {
          "id": "03521505-6583-4c9c-a838-d13443d7f0d0",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "3b99ca9a-ee84-44ab-bded-c398b5b996cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ec56b1b-59b4-48c9-9175-ebda53ea57ac",
        "cursor": {
          "ref": "fcb612a4-b6ff-486d-a52b-e77b678025b5",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "861e4845-2f4b-4634-8cb1-2b30cbec6f42"
        },
        "item": {
          "id": "6ec56b1b-59b4-48c9-9175-ebda53ea57ac",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "757ee723-541c-4d13-940e-67eb75982f56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e68926b4-6e46-43b2-9495-c27710dcf063",
        "cursor": {
          "ref": "9ad11778-32ae-489f-b4d3-ed8320c35cb6",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "c0a43631-46fa-4388-9516-c8d9c580ffc0"
        },
        "item": {
          "id": "e68926b4-6e46-43b2-9495-c27710dcf063",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "c9d459dd-4441-4310-9e7e-a5ca94c3aab9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "541fbe31-a83f-4cff-ab8b-980cbc1ab710",
        "cursor": {
          "ref": "42d70fbe-8235-4d66-a663-1a61329a89f1",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "0f4b4b4f-7bc9-43eb-8edf-4da1c67df1e8"
        },
        "item": {
          "id": "541fbe31-a83f-4cff-ab8b-980cbc1ab710",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "ae36088d-9c10-4676-9310-313fac056fb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbfc9739-2a37-49a9-84d5-a9e9bd8b872f",
        "cursor": {
          "ref": "13a1a6e4-35d9-4cf6-b4c7-88661f70020e",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "3f6efb2b-b907-4d19-ad0c-059943d01a65"
        },
        "item": {
          "id": "dbfc9739-2a37-49a9-84d5-a9e9bd8b872f",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "8b7b630f-37c8-40e7-b337-045a0c8e1acc",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 37,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "eb466639-62f2-4f1c-a7ce-5deb45da08db",
        "cursor": {
          "ref": "f23778fb-f2f0-4632-bab5-87a90d52e7ad",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "23942ad5-27ee-4242-85d9-7f345e0f1738"
        },
        "item": {
          "id": "eb466639-62f2-4f1c-a7ce-5deb45da08db",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "686e1120-d5aa-46ba-9d60-9944d06e632f",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 30,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "a0c745c3-bb39-4535-a0af-ca1fe1e43331",
        "cursor": {
          "ref": "93880370-bdc4-4e66-9754-4f13e71bc45e",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "1b9df925-d7fb-4d9d-8e61-f9204dc858df"
        },
        "item": {
          "id": "a0c745c3-bb39-4535-a0af-ca1fe1e43331",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "e534d05f-974d-4ec2-9fc8-570ae983ed04",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 29,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "9a2d42aa-b49f-494c-8457-1ce6198220a8",
        "cursor": {
          "ref": "8573bf74-55b3-419f-a0ee-3b40117755d3",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "4e73443a-87ec-42eb-a183-acfd227b103e"
        },
        "item": {
          "id": "9a2d42aa-b49f-494c-8457-1ce6198220a8",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "7b574297-3622-405a-b681-3abd6438b685",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 31,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "8ad4368a-be76-4180-98ee-83a9dfbdea83",
        "cursor": {
          "ref": "934680e3-6789-4cee-b295-0602a6d78877",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "2ea4cf15-5f74-491e-b9cd-48027b9820ba"
        },
        "item": {
          "id": "8ad4368a-be76-4180-98ee-83a9dfbdea83",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "a587c32c-0e03-40d3-a65f-5649c79c8a5f",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 33,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "5cb25695-3d4f-4114-bd43-e88eece023e4",
        "cursor": {
          "ref": "e1264ffc-d012-4ae3-bf9a-cbb59d59027c",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "9efed739-94b9-48b1-ac49-6f0a2ccbfd87"
        },
        "item": {
          "id": "5cb25695-3d4f-4114-bd43-e88eece023e4",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "cd62975e-53db-4221-a09a-6315d98a94d6",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 32,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "d5ae91f4-a870-4f00-a9dd-dde86df32578",
        "cursor": {
          "ref": "857f19d7-b38a-49b8-b12a-6eeb0fe4e78a",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "19e8c286-c7bc-4227-a204-6054a7be1f39"
        },
        "item": {
          "id": "d5ae91f4-a870-4f00-a9dd-dde86df32578",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "434c502b-ac26-482f-a82b-1d2b6ab02180",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 24,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42f84cb2-b8f6-4eef-add4-eecd1ef86f2c",
        "cursor": {
          "ref": "04e4ad0e-1c72-4c4c-a115-be8b48091bfa",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "57c41434-d93c-4314-9921-895c14c640f9"
        },
        "item": {
          "id": "42f84cb2-b8f6-4eef-add4-eecd1ef86f2c",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "16d682e8-c7bb-42e1-acf8-6d2afd753615",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d8b2dbd-b7c3-425d-8d87-7e53f50c29e8",
        "cursor": {
          "ref": "621506e0-2914-47e9-8982-d9da6ea2c3c7",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "2bbb811a-8199-4932-8b69-26b59b8e4d5e"
        },
        "item": {
          "id": "8d8b2dbd-b7c3-425d-8d87-7e53f50c29e8",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "d594116f-5324-46f9-b509-effaa48a1688",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dc2e55b-9bbe-41cc-8936-8e9e3f6a6bb4",
        "cursor": {
          "ref": "9aabc8f2-b00a-4608-b1f5-384fba40c33d",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "668b696c-671d-46c0-a2c8-e3dbf95e9071"
        },
        "item": {
          "id": "3dc2e55b-9bbe-41cc-8936-8e9e3f6a6bb4",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "ea9510d9-719a-47e8-9d7c-384cce52c32a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78567431-f635-43f1-8538-63362a881259",
        "cursor": {
          "ref": "26a23113-fad5-4f2e-92b1-e37ff75231e6",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "3503249c-8074-41a6-bd40-45c1514950a7"
        },
        "item": {
          "id": "78567431-f635-43f1-8538-63362a881259",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "b8234bac-f7d8-4bad-b743-0f8787fd8929",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53d5a5a1-d862-4fd0-a390-90094dc99dc2",
        "cursor": {
          "ref": "3e31e431-0289-4372-a4ab-365107c6a2e8",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "1f84310f-41f6-4db3-a212-230877fc3517"
        },
        "item": {
          "id": "53d5a5a1-d862-4fd0-a390-90094dc99dc2",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "ce9252bc-5ac2-4135-90e4-03339caf2186",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d713191-2287-406c-ab21-d7c7483d4e07",
        "cursor": {
          "ref": "1570c7b1-d326-4278-9274-9e494d792055",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "e2a91877-7539-4c76-bf85-bf606301ba59"
        },
        "item": {
          "id": "2d713191-2287-406c-ab21-d7c7483d4e07",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "215e378b-6e40-46bb-b30b-6e1b63ad98c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07eba802-8b9f-4d51-945e-fc4413e1526d",
        "cursor": {
          "ref": "7e2379a1-7948-4736-81df-4b9b598615af",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "dc3249ca-9251-4628-90c8-c0c52e346150"
        },
        "item": {
          "id": "07eba802-8b9f-4d51-945e-fc4413e1526d",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "ed7e4e31-f073-4a7f-be80-7cc67f3ab014",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9af9920e-4692-4770-a71c-3bbedd517ead",
        "cursor": {
          "ref": "aea6f4a0-da82-4659-84dc-663830b1b475",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "26efdd4b-33d4-483b-9755-8c835b31287a"
        },
        "item": {
          "id": "9af9920e-4692-4770-a71c-3bbedd517ead",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "6e0cea34-202f-41d7-86df-771b03d2cf56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94d7f68e-fe64-431c-9fb2-9d5e628038ab",
        "cursor": {
          "ref": "bf36dfb0-bc73-4276-8173-288f0f4d6c25",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "1453c4af-35d2-4871-8b27-e7f699c95216"
        },
        "item": {
          "id": "94d7f68e-fe64-431c-9fb2-9d5e628038ab",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "47775be2-c285-42b6-a600-49a2bd7780ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86cb4a08-aada-4749-ac49-b296b96e3c61",
        "cursor": {
          "ref": "442fb328-ba22-4802-b585-aee7c96db7fd",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "63d8248d-a2f1-4bd6-b890-3722f2ec9ca1"
        },
        "item": {
          "id": "86cb4a08-aada-4749-ac49-b296b96e3c61",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "5fc02354-774b-40f9-a822-fcd534d1bb49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5f26897-988f-432b-a338-678ee3bb2011",
        "cursor": {
          "ref": "c1a2df9d-7b01-4c24-9119-46b519ed9f61",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "d59f6ec4-77a3-49ba-a20c-41c931252300"
        },
        "item": {
          "id": "f5f26897-988f-432b-a338-678ee3bb2011",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "67b4cd27-127d-485b-adbc-d22ecb8b086f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f176e856-3228-4f82-8f1a-8a210f47b37f",
        "cursor": {
          "ref": "50f09355-d214-4b36-b552-d0e3c196ab82",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "9d2d5d3a-2dbe-4d06-b51a-522a68fc08a2"
        },
        "item": {
          "id": "f176e856-3228-4f82-8f1a-8a210f47b37f",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "2733c37f-3ff9-4014-976c-d73dfff73999",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb627b36-61d2-4893-a92d-c6e5a01da6cd",
        "cursor": {
          "ref": "53092766-a619-466f-8d62-8fadd81cf7ea",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "d6afe6e8-6af4-4030-9586-8238ebf45cbf"
        },
        "item": {
          "id": "fb627b36-61d2-4893-a92d-c6e5a01da6cd",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "6894edb3-4d62-4d86-9f97-066a9e28f33a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a41a0a27-db93-40f4-9b38-27a385fca8bd",
        "cursor": {
          "ref": "9cfcf3a8-63b0-4519-9b96-bc95bf329922",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "12c6e235-8886-4eaa-9721-ad4cea1e5ca2"
        },
        "item": {
          "id": "a41a0a27-db93-40f4-9b38-27a385fca8bd",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "43147194-07a0-4bf6-8563-bc87bf768556",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4efb277d-a145-4b79-b86c-8786991d5845",
        "cursor": {
          "ref": "8dbc18d7-625e-4152-a97e-4180cf74b6f2",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "6a71ceed-b131-4f68-92e8-73b310fdce69"
        },
        "item": {
          "id": "4efb277d-a145-4b79-b86c-8786991d5845",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "3e239b49-ed61-487b-87de-23cdc60d5555",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59c75bbd-cf3c-4437-8574-c6cee63d768c",
        "cursor": {
          "ref": "17df73ed-e222-4f05-ba77-8de5c6524aab",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "4a79a8b3-1cc1-47be-b6cd-ce57e58f31d8"
        },
        "item": {
          "id": "59c75bbd-cf3c-4437-8574-c6cee63d768c",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "d10a7b4e-5ac4-42ec-8a7c-5c78beaf1e53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5dd6b37-dce4-44b6-bce5-cf9f1ba7c9b8",
        "cursor": {
          "ref": "0877b58c-4617-45e4-a8dc-f8d3d563a4e5",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "caf85664-c821-4fb2-a7d5-27609ec2319a"
        },
        "item": {
          "id": "f5dd6b37-dce4-44b6-bce5-cf9f1ba7c9b8",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "5147fd2c-9c0d-4469-b72f-4a29bc7223f7",
          "status": "OK",
          "code": 200,
          "responseTime": 67,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "42e12f0f-aaa8-4e74-885e-a3ac2a4def42",
        "cursor": {
          "ref": "49a883f2-99aa-4238-ad20-c7d0be5479f2",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "cbe47669-a5ce-493c-ae9e-cb7b2154d938"
        },
        "item": {
          "id": "42e12f0f-aaa8-4e74-885e-a3ac2a4def42",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "12c89612-0dfd-4373-96d6-a83540314672",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c6a0a74-3903-4d65-9d22-51cba402716e",
        "cursor": {
          "ref": "49621975-94bd-4919-90a2-cb09ce66e79f",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "c6c0dc36-d718-4bfb-9225-f7b568c44a83"
        },
        "item": {
          "id": "7c6a0a74-3903-4d65-9d22-51cba402716e",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "341f1194-e898-4051-8a0a-8bd5b919b42c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35158adc-7156-4ea6-b3f9-03baf5c78f3b",
        "cursor": {
          "ref": "435fe8e9-bd7e-4d99-ab45-b2145d242c04",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "13c0bcfe-cd9b-4602-bcca-36c3341ab2c8"
        },
        "item": {
          "id": "35158adc-7156-4ea6-b3f9-03baf5c78f3b",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "e48a77ba-a11e-44d5-84fe-8191998d2488",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9c00127-6798-4b8c-8bcb-e0843a5ca7ea",
        "cursor": {
          "ref": "0c21d24d-fbb1-4e4a-922b-3ee893011c49",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "0b845ec6-39f3-45c1-9f8f-24347dd053c8"
        },
        "item": {
          "id": "d9c00127-6798-4b8c-8bcb-e0843a5ca7ea",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "3d572b91-2bf4-4c9b-b003-00ccf21d13a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c8be73a-af0f-4740-b2b2-50c4a8d9d6c4",
        "cursor": {
          "ref": "e6e96d54-31fc-4151-ba79-c82eea0ed875",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "76baa39c-64fb-4635-9af6-2fd0bba0c5d9"
        },
        "item": {
          "id": "4c8be73a-af0f-4740-b2b2-50c4a8d9d6c4",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "490bf54e-42dc-4f6c-b84f-55de4042f8d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c99fab10-e654-4fb7-8b89-f419f17a0dd3",
        "cursor": {
          "ref": "f073ab5d-f1ae-4331-aa2c-cd6ed50ac7e9",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "9d2ef170-d9e4-4d75-b74a-7ebb3f417768"
        },
        "item": {
          "id": "c99fab10-e654-4fb7-8b89-f419f17a0dd3",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "f6fadddb-6dbd-431a-b6c5-06a143c99216",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e87732ab-50c3-4885-b15d-ded3def3d724",
        "cursor": {
          "ref": "553a48cf-a678-418d-9297-4f7bb451b1a8",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "a1c50029-bd95-4cdf-8d4b-f8cc14e3933b"
        },
        "item": {
          "id": "e87732ab-50c3-4885-b15d-ded3def3d724",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "6cccc437-96bb-405f-809b-68153cc39e2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcc39351-2fdf-4a7d-8e2f-1b2d9c2d71dc",
        "cursor": {
          "ref": "11df6328-3fba-48fd-99b9-6a0f6df21d87",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "27964c6a-9428-474d-a361-4d78066a1f97"
        },
        "item": {
          "id": "fcc39351-2fdf-4a7d-8e2f-1b2d9c2d71dc",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "126f11f4-5bf9-4278-a677-65763b5e9879",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "227bdb27-7f1c-4833-b472-332b88d02214",
        "cursor": {
          "ref": "94f391c6-8fa1-4e10-9073-034ff035671b",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "b729c898-6e19-4fa2-a6b8-66ab6c3cadd6"
        },
        "item": {
          "id": "227bdb27-7f1c-4833-b472-332b88d02214",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "0b4e6d75-e52b-439c-a457-fdf3080c2b61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "848d40d7-cca8-4ab7-9bf5-a9d8622a29ab",
        "cursor": {
          "ref": "e4be1b5d-fd35-4bb2-acdc-8f0c766d0182",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "dbffb848-4ac7-4b57-9610-efca81f45238"
        },
        "item": {
          "id": "848d40d7-cca8-4ab7-9bf5-a9d8622a29ab",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "1ea83db5-a250-4ca8-a70b-bd7b6cfa4c20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c75d4e77-82b0-4fb8-bc9c-a004e3e4a206",
        "cursor": {
          "ref": "45cd6655-a99d-4638-bfe5-df9cc7a3efe5",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "7bae576a-2e1f-463b-8b29-02c56b116792"
        },
        "item": {
          "id": "c75d4e77-82b0-4fb8-bc9c-a004e3e4a206",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "0e1108c2-d397-466d-8b59-d9bd3bac666f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da32bf79-580a-43cd-9054-b36116f7ea60",
        "cursor": {
          "ref": "0214dea9-e32a-42a4-940f-d608b9f49a23",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "8a28a990-e2c4-439e-b4a7-47aa3c449e6b"
        },
        "item": {
          "id": "da32bf79-580a-43cd-9054-b36116f7ea60",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "ee70abff-54c7-4789-8956-13386c6ea2c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1d09218-d3c0-4ee5-aa08-7b712bf2cb48",
        "cursor": {
          "ref": "02a1c7d7-46fc-4d5c-8836-117365f94c26",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "bc154062-4fcd-4673-ae4c-59f29f08ca32"
        },
        "item": {
          "id": "a1d09218-d3c0-4ee5-aa08-7b712bf2cb48",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "4682da71-d994-4c49-85f6-19bc87749f05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e46abec0-6f27-418e-9ab8-318a27d301fc",
        "cursor": {
          "ref": "1d1f2f04-b0cc-4172-b15b-bc924e9d8279",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "4f120ee8-0cfc-43ca-9aec-b251921b28ec"
        },
        "item": {
          "id": "e46abec0-6f27-418e-9ab8-318a27d301fc",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "24168ccf-64a7-42ac-a4fd-aa5711f40a6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcbb4975-b6d9-4107-a4ba-3cacf8d5b769",
        "cursor": {
          "ref": "9bde9d71-30c2-4313-9e4d-8eaccfc5910d",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "8ec0aac8-f605-42a6-a11b-9f8fc883a958"
        },
        "item": {
          "id": "bcbb4975-b6d9-4107-a4ba-3cacf8d5b769",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "a00fb4c7-4880-4fb9-b5b3-49303165caa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1170ad5-bd27-4174-9e75-a7619014d046",
        "cursor": {
          "ref": "4379c5ae-0e38-455e-a559-abd6dde30c9f",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "2f3aa6c1-1923-4771-815d-0108d8518eb2"
        },
        "item": {
          "id": "c1170ad5-bd27-4174-9e75-a7619014d046",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "7fe276bd-d739-4888-b7e3-f269cbc6f985",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "394fdcec-19e6-4a57-94b1-b480dc7f0159",
        "cursor": {
          "ref": "73178670-75b2-4578-9e25-415dbde532a5",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "91d7c30a-5ad6-4852-9084-9faf37b46dc0"
        },
        "item": {
          "id": "394fdcec-19e6-4a57-94b1-b480dc7f0159",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "052bc6ab-6673-429a-9ab9-46fd5430eecc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f80d6da-e31a-480c-b709-50c1732e6bcc",
        "cursor": {
          "ref": "0bd85c84-7976-4d40-9a26-84b95bddffc9",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "83e2b1f8-5ec0-4c0c-81aa-bca391166ce7"
        },
        "item": {
          "id": "8f80d6da-e31a-480c-b709-50c1732e6bcc",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "a91b60b5-9f2a-4696-9950-f108be90113f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca3145bc-27ce-4ccc-8559-0bd4841952c4",
        "cursor": {
          "ref": "3aef7601-5289-411f-a702-cbc77381741a",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "b8e59ca8-895e-4bea-9b48-31b8cb9c2b00"
        },
        "item": {
          "id": "ca3145bc-27ce-4ccc-8559-0bd4841952c4",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "96c23681-7fb8-418b-8215-d6972818f0db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5d053bc-b148-4694-b058-e3a4a0497bea",
        "cursor": {
          "ref": "e3f3f01f-e659-4720-a298-32de633f50d5",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "79610441-4ddf-4eac-9385-ff8b8680940a"
        },
        "item": {
          "id": "b5d053bc-b148-4694-b058-e3a4a0497bea",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "3a2839d2-a114-465b-8856-04da4df1d1ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b46f1663-4410-449d-b769-700dcaea08cf",
        "cursor": {
          "ref": "e24fce14-1b94-45a7-b01f-4321ac8c72e9",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "c255c074-2d37-4243-9ca3-0e3c85ae99bf"
        },
        "item": {
          "id": "b46f1663-4410-449d-b769-700dcaea08cf",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "0331723c-3ac4-4521-ab9f-9407cc0e65b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "379b4b3a-0d3f-457c-a64a-ae5158e21b0b",
        "cursor": {
          "ref": "a7b20cb2-f687-4f53-8737-9f8cee65b2c0",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "341824d2-7054-45f8-b33b-bd7a058dae66"
        },
        "item": {
          "id": "379b4b3a-0d3f-457c-a64a-ae5158e21b0b",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "64b2b008-f808-4d33-9be8-52eabf69186c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4de4b224-552a-4da3-b748-163e8a95cbd7",
        "cursor": {
          "ref": "5d3c254c-f380-4eee-a5dc-4011d0c42760",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "0cb57d2a-312e-48ad-83e4-0c009f86f8ca"
        },
        "item": {
          "id": "4de4b224-552a-4da3-b748-163e8a95cbd7",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "cae887df-33cf-461a-9ca5-98746a078fc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "483d20d7-afd6-43b3-a54e-48f7057d499c",
        "cursor": {
          "ref": "41ba06ab-35f4-4828-9ddb-081a72664a46",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "2797f393-4004-4f59-b4d9-5afb19e4c4cd"
        },
        "item": {
          "id": "483d20d7-afd6-43b3-a54e-48f7057d499c",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "2a68553f-197a-4f20-b022-fddc9e6f060f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99ab9706-d910-42ad-a0b8-ab6824bdc72a",
        "cursor": {
          "ref": "05324cab-8d26-47d3-b871-3f42d4d1fcd3",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "541039ed-da03-48be-8808-4feb885c564a"
        },
        "item": {
          "id": "99ab9706-d910-42ad-a0b8-ab6824bdc72a",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "3e1e3b7f-dfc0-4d23-962c-50d0f1a85953",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39593ebd-a28e-43e4-ab7d-421d1a4d9b03",
        "cursor": {
          "ref": "db9eb0dc-5216-43d2-9e5a-95706a5320a3",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "75821993-3116-48c9-bd24-c5b75d44520c"
        },
        "item": {
          "id": "39593ebd-a28e-43e4-ab7d-421d1a4d9b03",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "f915011b-6a79-4fdd-8f66-989d085971db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4675870-c69a-410f-8dc6-02f379247028",
        "cursor": {
          "ref": "9924449b-5a94-44ba-96ef-17e399aa95fe",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "89277935-4f98-41ca-ad1e-db42f59fa393"
        },
        "item": {
          "id": "e4675870-c69a-410f-8dc6-02f379247028",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "f0a59b7d-f52f-4513-a30c-276f8d280bfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04ba52d1-871a-4c3b-addd-3ced9d782b29",
        "cursor": {
          "ref": "7d279553-d6e6-4662-bd28-6955c6cb7562",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "5133bb17-1b50-47a3-a18f-8c9930cefc97"
        },
        "item": {
          "id": "04ba52d1-871a-4c3b-addd-3ced9d782b29",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "bb932300-0333-4f24-8b06-ec32a5af8216",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8d7b670-f21f-4177-ba77-d14787781462",
        "cursor": {
          "ref": "cd13a71a-4e25-4c59-b578-0af7e843f08e",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "c33f8574-ef3c-4d84-afa9-de5ea1d4ec5b"
        },
        "item": {
          "id": "f8d7b670-f21f-4177-ba77-d14787781462",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "a58fee63-8f1e-409e-8206-b37983ce89a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "903744b9-eae2-4a1e-9ab9-1d23d998bd79",
        "cursor": {
          "ref": "42a62ca8-6c8f-4769-9fab-991d8f9f9280",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "e1dd56aa-d442-4989-831d-c16838628960"
        },
        "item": {
          "id": "903744b9-eae2-4a1e-9ab9-1d23d998bd79",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "71710f85-2c2f-4fbc-99bb-d994b5cc90c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cd24fec-655b-4345-b96a-debb60cc29b9",
        "cursor": {
          "ref": "896eccf9-41e8-42cb-89dc-e8ced6eda500",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "4bb7eac1-4aa4-4205-a28f-43c0c231e6c5"
        },
        "item": {
          "id": "9cd24fec-655b-4345-b96a-debb60cc29b9",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "f36d27a8-8b22-4932-a0ea-9d4e026923cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53e88f9f-3c7a-46cb-8afa-f287af6cf7e7",
        "cursor": {
          "ref": "11d7ff38-2328-4755-8d49-20dc2a40830f",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "ae79338c-1845-46ff-b9e6-ba4f31644cb6"
        },
        "item": {
          "id": "53e88f9f-3c7a-46cb-8afa-f287af6cf7e7",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "9e0beeb2-b960-42d7-aa1a-6d9ea40cd8a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e9e5bff-d455-4206-bd8e-d11ff4c4507c",
        "cursor": {
          "ref": "40498fb7-3554-4e07-ba23-91de234822db",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "c540ec2b-bc94-41a7-a73b-326dbc06cb22"
        },
        "item": {
          "id": "2e9e5bff-d455-4206-bd8e-d11ff4c4507c",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "17ff0854-2648-419b-b61c-20989de78788",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87b03a51-70ba-467f-b61b-020577544316",
        "cursor": {
          "ref": "22af3c54-a25a-4e4a-9498-57f5b4387109",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "d6f1c2d7-bad1-40bf-9801-f39e147114ce"
        },
        "item": {
          "id": "87b03a51-70ba-467f-b61b-020577544316",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "dedee3d0-d706-4084-b01e-e8ecb133cb88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22ea6fcd-5a19-4498-9dfe-437cd70c34d8",
        "cursor": {
          "ref": "66cc9e2d-4d12-4c4c-b9a2-da0d8735c7fd",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "daa57c7c-3b06-407b-b757-50664ad29ccb"
        },
        "item": {
          "id": "22ea6fcd-5a19-4498-9dfe-437cd70c34d8",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "397d8d83-2a7c-4cb2-b9fc-ad2f58e49ec9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34324b1c-b853-47fe-ac9d-f08470e0a872",
        "cursor": {
          "ref": "c361fd3f-2755-44c0-95f3-38d0d4fe8af5",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "fa8c1d63-43c2-4e03-918a-92d795787e8e"
        },
        "item": {
          "id": "34324b1c-b853-47fe-ac9d-f08470e0a872",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "f7d7f89d-8226-4ec5-9600-bff8a982b79a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 132,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ff896a3-55c4-4dd3-b1b0-3cd8100e68f5",
        "cursor": {
          "ref": "ecc67dbd-1f12-467c-b23b-3308dae3518e",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "e89962e0-c05e-488b-acf9-ca1e2b0e43c1"
        },
        "item": {
          "id": "0ff896a3-55c4-4dd3-b1b0-3cd8100e68f5",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "d0d9d5e1-0361-4ce7-9eab-db7adebce9c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af24fd20-9999-4773-a7ae-d66b4468f420",
        "cursor": {
          "ref": "39d9794a-7182-4cd4-90f6-a8d2ef7f029a",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "dbb74446-ed7b-4e9d-8bab-0306babf61a7"
        },
        "item": {
          "id": "af24fd20-9999-4773-a7ae-d66b4468f420",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "6742f899-93b1-46a1-9faf-2cd527f0a8f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20a9d608-b80f-4bf1-8ab1-7dcfb0f21314",
        "cursor": {
          "ref": "d6bfc477-516e-4cf9-9182-a173c7e1c294",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "64a50f71-8382-4313-b3c4-acc1c9dfd148"
        },
        "item": {
          "id": "20a9d608-b80f-4bf1-8ab1-7dcfb0f21314",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "eeeb53b5-9981-4dba-b5a6-7d898a77c720",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c282e20a-d190-41dd-b525-2d2dc0ca38ea",
        "cursor": {
          "ref": "d5c5887c-be8a-427c-8dfd-4c826eb88f01",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "c9226beb-9a90-4455-99f0-b16b62513dba"
        },
        "item": {
          "id": "c282e20a-d190-41dd-b525-2d2dc0ca38ea",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "f8bd3aa8-83d6-431d-8edd-b2016eb0bf58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "649042c1-821d-4447-98e3-a24c352bbbfa",
        "cursor": {
          "ref": "057f136a-d382-471c-bda7-0e92c56bbdc7",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "6820cb8a-1d0f-4c62-9971-d85856df39f4"
        },
        "item": {
          "id": "649042c1-821d-4447-98e3-a24c352bbbfa",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "32e4f131-d05c-4943-b5ff-5954c031d416",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 328,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8508663b-a19e-4436-b9de-73935186a19c",
        "cursor": {
          "ref": "bb96bc25-0167-49b6-b6e1-4be42d327264",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "9f305c6f-406b-48f7-bf01-5d43016eb298"
        },
        "item": {
          "id": "8508663b-a19e-4436-b9de-73935186a19c",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "51d60984-a8e1-4542-8e36-d310b2846faa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "693cd5e1-db57-465c-9857-0290d0ab9199",
        "cursor": {
          "ref": "553b11c1-b8af-4c3e-92ef-6171a91d702d",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "1fecf7f6-a98f-46f2-a06f-2407537ee0a6"
        },
        "item": {
          "id": "693cd5e1-db57-465c-9857-0290d0ab9199",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "475ab9d0-61ca-4578-a375-63cf54c3eda5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b3a360c-548a-4006-b307-43676142b56d",
        "cursor": {
          "ref": "57a4fd99-635d-4676-8f41-36e63e887cf3",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "ac4ea31a-9487-4924-bf36-20504069b894"
        },
        "item": {
          "id": "5b3a360c-548a-4006-b307-43676142b56d",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "b6ce5bb8-0eb8-4a6c-b726-b4c61d8c1361",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ef15f97-cec8-412b-a76f-3380813ccdf3",
        "cursor": {
          "ref": "cf526b72-9e14-4440-a80b-8bedce7e37cd",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "489add53-daef-46bd-8578-f3edb67dc2ef"
        },
        "item": {
          "id": "9ef15f97-cec8-412b-a76f-3380813ccdf3",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "e6afcb05-498b-4ad7-b187-83dad8ab4858",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4825fb86-3c98-47c0-9d71-6e2498644c4d",
        "cursor": {
          "ref": "3363534b-ca70-49bc-8270-39a18329b69c",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "73201a0a-8bb1-4b6b-98e7-747e8aaf41be"
        },
        "item": {
          "id": "4825fb86-3c98-47c0-9d71-6e2498644c4d",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "3b71f360-78ba-46d1-b808-3ee399254fce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eda6f0fd-f719-4661-95a6-1e4e96e77808",
        "cursor": {
          "ref": "b046eb37-71e2-4041-b4ac-a94e0f81d52d",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "4c5eba98-1dfa-4e14-953c-b6b6b03e2931"
        },
        "item": {
          "id": "eda6f0fd-f719-4661-95a6-1e4e96e77808",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "abec4e52-e0d7-49d0-9619-8e47817ae07c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "871f9cfb-59f7-4781-beb9-b1d8a6731ed8",
        "cursor": {
          "ref": "83e49e08-a082-4e96-a464-7177913461ee",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "2751cf58-f99e-4c1e-8353-0b6525346747"
        },
        "item": {
          "id": "871f9cfb-59f7-4781-beb9-b1d8a6731ed8",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "9d1640f7-fe5c-4848-a128-012b444ab869",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4ed4851-db42-4c88-99a9-24993427e4ed",
        "cursor": {
          "ref": "6e2f1a62-99b8-4d26-8b2d-5657d1079234",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "1b2a928c-9bfe-4886-8efc-76529b405722"
        },
        "item": {
          "id": "a4ed4851-db42-4c88-99a9-24993427e4ed",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "5cc2eebc-4d40-416f-bdc0-6a83980c1954",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bc5c63d-2d6a-4d23-9adb-f74d1a9d3099",
        "cursor": {
          "ref": "9ca555b8-659c-44ec-8e8e-0efa486c0de9",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "3f6b7957-23de-45e4-8d00-dd9a28471763"
        },
        "item": {
          "id": "4bc5c63d-2d6a-4d23-9adb-f74d1a9d3099",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "5de1a26c-aa7e-457f-9cce-32a151fa92fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 113,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "929f5f5a-ecae-48d7-b634-cdbdfadf5bba",
        "cursor": {
          "ref": "a6492a3b-1537-4b43-ae31-637e79b20e94",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "c21befa0-0493-495c-80b5-d487ad110c11"
        },
        "item": {
          "id": "929f5f5a-ecae-48d7-b634-cdbdfadf5bba",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "fd7b10de-17e5-4b03-a4a2-e25e2ab1974a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e5c12b6-1ba7-4ce8-917f-d311f86b53d1",
        "cursor": {
          "ref": "c0d1f309-595a-4f5d-a3e5-b5c5bdb50c1e",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "117cdb13-1fd9-49e2-9e8c-f2c221d3ea19"
        },
        "item": {
          "id": "5e5c12b6-1ba7-4ce8-917f-d311f86b53d1",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "4d2b4c5b-12fb-417c-89a5-0a904b1d8697",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4901eea6-501a-4e88-813f-ea01ba14204d",
        "cursor": {
          "ref": "11f23420-759e-4ba5-a53a-90bc6eb0fcf0",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "86a4dff1-9d0e-46d9-89d2-76e7acad0cfe"
        },
        "item": {
          "id": "4901eea6-501a-4e88-813f-ea01ba14204d",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "923720cc-1954-412e-9c80-5d36a11e9685",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3d15a85-9a85-4238-9dc6-1acac5587a32",
        "cursor": {
          "ref": "a62dc7c7-4375-4d10-87e1-851565e4166e",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "ccc6b745-bb9c-4c8a-aa55-cc16844c1530"
        },
        "item": {
          "id": "d3d15a85-9a85-4238-9dc6-1acac5587a32",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "dc2e336b-6eac-4aca-a653-cee2f7cb6496",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa5fb1d6-c6c9-4c25-a1bf-804a99c3f4cf",
        "cursor": {
          "ref": "d382b3cf-54c7-4c72-ac65-4547886d02a4",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "8797b531-424e-4da6-a5ee-e9248f214dcf"
        },
        "item": {
          "id": "fa5fb1d6-c6c9-4c25-a1bf-804a99c3f4cf",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "82ce74da-3348-4feb-9372-470af1a2a88c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c152a8f2-e9a8-4fd9-9791-e537c4f8b3c6",
        "cursor": {
          "ref": "5070840e-c713-4ea1-b264-edd189da9e20",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "5d39535b-203c-4f6a-b1e3-446abca4ba29"
        },
        "item": {
          "id": "c152a8f2-e9a8-4fd9-9791-e537c4f8b3c6",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "4d76052b-adf3-448e-97ea-2f0bd54d5b6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28703df3-973f-49e6-a528-1be0d8fed3f0",
        "cursor": {
          "ref": "3c4b5769-522e-4247-abd1-61f8f33e97d0",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "8d7534e1-7b6e-4db0-b31c-27ceead84497"
        },
        "item": {
          "id": "28703df3-973f-49e6-a528-1be0d8fed3f0",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "3e11ce1a-9c16-46eb-ad2d-0ffea0280114",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77522ec5-7847-4664-9d07-4c5e13ef208a",
        "cursor": {
          "ref": "617a60a0-c6f1-4aa9-87d6-d96de93ca547",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "650ee918-a451-4e66-b6c2-384b8de4c7c3"
        },
        "item": {
          "id": "77522ec5-7847-4664-9d07-4c5e13ef208a",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "f6056679-e5fc-4703-b053-248ec1172136",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "803c5d95-754b-4b3d-8b6f-7e67c25e391c",
        "cursor": {
          "ref": "18c61514-d57a-4548-9e37-3793223e728c",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "43dd41d7-f457-4c87-abcd-c997c6d22628"
        },
        "item": {
          "id": "803c5d95-754b-4b3d-8b6f-7e67c25e391c",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "fea5b7db-baf5-4708-934d-46c683766e72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36da3b13-aef4-4f41-b2c5-b719c5c87ec1",
        "cursor": {
          "ref": "635da779-380b-47bf-ac43-de8605bb01c5",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "dcba235a-eafc-473a-ba7d-fe12064cb5ef"
        },
        "item": {
          "id": "36da3b13-aef4-4f41-b2c5-b719c5c87ec1",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "af43045c-cff7-498d-957c-df022a9165f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc49b0a7-65fe-4ef4-ada4-d4428e34e53c",
        "cursor": {
          "ref": "40b0f1ae-15c1-4c76-b569-b84616f3d0d2",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "2d63734c-765a-43bd-a71c-1e10a398deec"
        },
        "item": {
          "id": "cc49b0a7-65fe-4ef4-ada4-d4428e34e53c",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "b3c14aea-aacc-48b1-aee6-e69fb455ec39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d97cf28-67f9-45d8-8b46-9eb067c38311",
        "cursor": {
          "ref": "8ac22834-8d92-4284-bc1d-f96da7a06162",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "5226e21c-b235-4329-b01f-2420c321de0b"
        },
        "item": {
          "id": "9d97cf28-67f9-45d8-8b46-9eb067c38311",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "d91071fb-bc4d-46ef-9bf2-93468c3cdf80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fca32191-aca3-4d40-ba6a-cded0145bec4",
        "cursor": {
          "ref": "7fa97d1d-35ab-4bfc-86a3-89d91f347c4a",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "0d994696-5dc2-4dc4-97f1-2227ab34a7b7"
        },
        "item": {
          "id": "fca32191-aca3-4d40-ba6a-cded0145bec4",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "a9238596-f3d9-4765-9597-fb2863394e17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a889de6-7c32-48b9-984a-a2665504ac4a",
        "cursor": {
          "ref": "12594af5-02a3-405c-84c6-566cf0eb15e3",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "3c4af734-3420-4d72-b8b6-9d39a208b2cb"
        },
        "item": {
          "id": "4a889de6-7c32-48b9-984a-a2665504ac4a",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "9df3331d-8c6b-435c-8a07-db2c55aae6f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15739f08-3a19-4b30-8d09-0c95b36b1ef9",
        "cursor": {
          "ref": "b29f0af8-b3d4-4919-b55c-c694bc832340",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "61d03ffa-7f2d-4374-92aa-1606fa0dc59a"
        },
        "item": {
          "id": "15739f08-3a19-4b30-8d09-0c95b36b1ef9",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "5bfe513c-d932-4ce7-bcab-6cb077ce5971",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff90c28a-74cd-4088-be4c-186b54c245d9",
        "cursor": {
          "ref": "52f390b9-8ba8-4686-a58d-ccd31c05c5e8",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "847f2781-6f2b-41b0-8fad-4e22fa922484"
        },
        "item": {
          "id": "ff90c28a-74cd-4088-be4c-186b54c245d9",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "cf96eaa6-27d2-49cb-87fb-4d4416833970",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5122ac9e-4441-4bb9-bba0-2c9853ae65d8",
        "cursor": {
          "ref": "ffb8f3f7-ff2b-4e14-99f3-045baa7b835c",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "2a97a80d-8e82-4ec4-99b3-7c5ef83d0cb0"
        },
        "item": {
          "id": "5122ac9e-4441-4bb9-bba0-2c9853ae65d8",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "6b8105e9-bf05-4b3e-aa79-da6d950bdca8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d970a68-5e1c-460f-8266-de40b2aa3eee",
        "cursor": {
          "ref": "e1e5b884-43d1-48b7-99e9-bcb105fcd6b0",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "8a2d3892-261e-4eb3-87ac-ec9dbd8602e8"
        },
        "item": {
          "id": "0d970a68-5e1c-460f-8266-de40b2aa3eee",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "f0850fb2-5346-422a-acc4-a720c6ca5569",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4550c18-2d23-45ce-a144-bdf4cacdada4",
        "cursor": {
          "ref": "2e4276a3-32b6-4a33-89a6-4aa5464ab78b",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "a3f8889b-882f-44e3-a513-5fdc824d99ff"
        },
        "item": {
          "id": "f4550c18-2d23-45ce-a144-bdf4cacdada4",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "b2fa2501-e770-41f9-9f9b-4a55f3fdb98c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbc67850-a75f-4945-bb6c-328e5b243f18",
        "cursor": {
          "ref": "a815ea07-d8fe-4a42-9847-dbcf112af134",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "8afc13e5-a76c-4abe-9451-59b99555c01a"
        },
        "item": {
          "id": "dbc67850-a75f-4945-bb6c-328e5b243f18",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "e3f280e1-e76c-465b-aab7-13b55b166370",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb2ab518-ad69-4db3-b461-07f930dfc16d",
        "cursor": {
          "ref": "4a24a78c-15e0-4390-8c11-c9b340d5b5c4",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "98103d32-020c-4972-a361-aedd35084129"
        },
        "item": {
          "id": "fb2ab518-ad69-4db3-b461-07f930dfc16d",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "f5d369c4-ecb4-4e77-b1c9-5671211faf21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d989973-ec4d-4ebe-ac05-dca85fb54ca6",
        "cursor": {
          "ref": "db39d623-90dd-4dad-aea8-20d7f66078b0",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "2b35c9ed-48ad-4812-90ce-563bf57ae0a8"
        },
        "item": {
          "id": "3d989973-ec4d-4ebe-ac05-dca85fb54ca6",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "38e1fee9-fdb5-472a-9d17-a5f81c3167f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdc05b2c-60cd-4640-840d-5813cd8c8f38",
        "cursor": {
          "ref": "ee414fdf-ca98-44df-afd1-06919cc6345a",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "d12ae8e9-9b21-43af-bece-978863074185"
        },
        "item": {
          "id": "bdc05b2c-60cd-4640-840d-5813cd8c8f38",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "d2afb24f-67f1-47f8-b444-cf28b09d9eeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cdf52cf-7df8-41af-8c87-1e9e5802adeb",
        "cursor": {
          "ref": "022d5d78-6a8f-46bb-8e59-1d0d397272d4",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "55c146a1-6d65-45c7-bd5e-f61ddfd48c48"
        },
        "item": {
          "id": "9cdf52cf-7df8-41af-8c87-1e9e5802adeb",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "3eb07572-0c74-4b5b-bc93-01d4aded8506",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4e7f586-72c8-4925-8634-48b22a215f1b",
        "cursor": {
          "ref": "5ea48a59-b2d9-4741-9f93-7fbc3c431956",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "1cd67033-a97f-4e56-a70a-c825f329cd04"
        },
        "item": {
          "id": "a4e7f586-72c8-4925-8634-48b22a215f1b",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "aa20124e-f3fb-4efd-b442-0794b5279e1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eef971f9-0e8a-4dbb-ad51-198d6450be01",
        "cursor": {
          "ref": "ad57226c-f56f-4ca5-a615-b88204d4b69f",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "6e357c4e-c206-4ba0-9a0c-14b6ab16b59b"
        },
        "item": {
          "id": "eef971f9-0e8a-4dbb-ad51-198d6450be01",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "d59d511f-9c6e-4513-80f7-400ad981f2a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ed2f083-3f98-4026-af00-3e205e154dc9",
        "cursor": {
          "ref": "3b530671-d40b-4580-8f65-1406bc1c8139",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "40828a0e-5c4a-4677-8724-c9eb995fa7f8"
        },
        "item": {
          "id": "7ed2f083-3f98-4026-af00-3e205e154dc9",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "deba9c32-c7f2-4ad0-94bb-4ba0aadbcf05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3000737-5583-46ee-8fbe-856b17a2bf05",
        "cursor": {
          "ref": "3e699f88-3bac-49b5-b3e6-5ca8f62dca81",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "5757c7c9-e528-4c16-be03-9c9a7db41c41"
        },
        "item": {
          "id": "d3000737-5583-46ee-8fbe-856b17a2bf05",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "12332424-af93-4527-9cb4-8e7dda53edcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9374ce41-aa96-4306-a80c-9a18e603504d",
        "cursor": {
          "ref": "7d129f1a-c853-4b25-a34f-4ad08e5aaa14",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "8a10d446-057c-4d60-8e90-0e6b093d0142"
        },
        "item": {
          "id": "9374ce41-aa96-4306-a80c-9a18e603504d",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "dbb74ca2-34e5-4f6f-bd12-8a5872f7601d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4749c73-2058-473c-a257-a1511d5f776f",
        "cursor": {
          "ref": "9b650991-9a80-40c8-8b0e-81c2f23236b5",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "adda69b6-cee5-4484-b7a3-a8a122b89fdc"
        },
        "item": {
          "id": "b4749c73-2058-473c-a257-a1511d5f776f",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "261ff926-6b0f-4792-b419-b43b21678af3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91713350-2a8a-47c5-8f25-32d88981793e",
        "cursor": {
          "ref": "5c456223-cba8-4e7d-bc58-436f540b696c",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "13d1b3f9-f624-4574-855a-ccf4e4610603"
        },
        "item": {
          "id": "91713350-2a8a-47c5-8f25-32d88981793e",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "d8d95129-9e32-4836-8b4e-0b8e039c4666",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 24,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4da65afb-58d3-4624-b182-9cde6ae175e1",
        "cursor": {
          "ref": "28a4ae9b-ac3a-48cd-a970-e85756b56753",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "1388ea77-ab01-49b4-a1be-6e3d437f2ad6"
        },
        "item": {
          "id": "4da65afb-58d3-4624-b182-9cde6ae175e1",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "c0465c79-d6dc-4045-acb6-d3ec8f07d80d",
          "status": "OK",
          "code": 200,
          "responseTime": 44,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "7605a86b-3ba8-4bca-b0ea-9cd576d76f66",
        "cursor": {
          "ref": "18ef9e5a-8bcb-45af-8e76-752a7c6b532e",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "1a02cb47-680c-4aaf-a959-57ee2a420892"
        },
        "item": {
          "id": "7605a86b-3ba8-4bca-b0ea-9cd576d76f66",
          "name": "credentials_verify"
        },
        "response": {
          "id": "3e7027f9-96f2-45d3-8b13-d7e375efd16b",
          "status": "OK",
          "code": 200,
          "responseTime": 2779,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "a988d9cc-8d65-47fd-9527-c1223c44a8f5",
        "cursor": {
          "ref": "b9d5439e-17eb-4f89-8ad4-25a757493df8",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "226568d9-5ced-44d3-b15e-cb8a30973adc"
        },
        "item": {
          "id": "a988d9cc-8d65-47fd-9527-c1223c44a8f5",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "134282da-dc17-4366-a7e3-dbda9a14b843",
          "status": "OK",
          "code": 200,
          "responseTime": 2848,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f4d76ad-2a0e-483f-845e-6e3e099ef7da",
        "cursor": {
          "ref": "ccc0bcf7-d0a7-46ac-939a-b1316e184cae",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "7766c8be-63d5-42c1-a517-f0a1f8bb5b56"
        },
        "item": {
          "id": "0f4d76ad-2a0e-483f-845e-6e3e099ef7da",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "5773a4a7-d683-4ae0-b0a8-971c3b557699",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 24,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f4d76ad-2a0e-483f-845e-6e3e099ef7da",
        "cursor": {
          "ref": "ccc0bcf7-d0a7-46ac-939a-b1316e184cae",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "7766c8be-63d5-42c1-a517-f0a1f8bb5b56"
        },
        "item": {
          "id": "0f4d76ad-2a0e-483f-845e-6e3e099ef7da",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "5773a4a7-d683-4ae0-b0a8-971c3b557699",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 24,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfd09fac-b0ce-4abc-b782-124ac13b8724",
        "cursor": {
          "ref": "265b12a5-f47d-4fa1-afd5-b0c804a9db0f",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "de963a37-a79a-45ea-9d1f-9980287d942c"
        },
        "item": {
          "id": "cfd09fac-b0ce-4abc-b782-124ac13b8724",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "356928ff-7e37-4072-8b82-873f39d1717b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26b3fb10-6d65-4829-9da2-6b4852939c14",
        "cursor": {
          "ref": "491f5c9c-67d3-4ee9-a454-b2a58552a78f",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "22854104-54fa-465f-ac9d-5df0d42a416e"
        },
        "item": {
          "id": "26b3fb10-6d65-4829-9da2-6b4852939c14",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "3cc106b8-7ad1-464a-834e-afa0d3dd7bb6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}