{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "7d6aa566-4b27-4c40-a7b9-ba10970b2ed1",
        "name": "Clear Cache",
        "item": [
          {
            "id": "66486351-e75e-4f3b-9733-76dc5d2e500b",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ad984d40-7228-4422-946c-ad38f51a34f2",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "929f5113-79d5-4a42-a85a-35d08f764527"
                }
              }
            ]
          },
          {
            "id": "638dc66d-b741-4589-9af2-e60629175d71",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ccec8c50-3b3e-40ad-b705-e2e1a1782794",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "3deb5c16-36c0-4f66-9b29-a65bd8afeb78"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "a984e6e9-6e67-40d8-ace1-f7919d4e2361",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "51a0cb20-cfba-4f0d-89f4-e0667b5a09f3",
            "name": "Positive Testing",
            "item": [
              {
                "id": "cbe8b4ea-5ef1-473d-9ab0-27befd6765c8",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "de315481-5264-4192-9885-362c650e6741",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0781d444-f3ee-486d-8205-b54c85db9bbf"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ea1f4eb5-c06a-424c-a393-6d2a3be3b39e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ca0310dd-fe4e-4656-a07f-6fccfabc5746"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "23b5f0cc-3a35-4805-af83-d8f17f63508b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4e7f042e-f157-452c-b435-523c409fefbb"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a3952ada-eafc-4098-8d52-a70b4f22e423",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "36c08e49-5907-45ae-9237-827792edc17e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "083c0be6-fca7-496c-9f0f-8816d95546f1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bd29b341-9759-4d33-8ab1-d403096abce7"
            }
          }
        ]
      },
      {
        "id": "1174ff51-46d4-41b4-b42f-9f2f8243ab6b",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "bb3348e5-de6e-4c72-a50a-1776355819b8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dbf316db-a432-41c4-9836-cfa8d4278fcf",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "21b1f111-3081-4a95-b050-b1772b99e9e4",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16cf4442-ba63-4dae-8874-3052418aa18c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3455f2e1-5c3b-4a76-b47a-e85c967cb37a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab68e4c2-cbbd-47db-ab7d-1cebcc4f0e9e",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87c8d5a7-528a-4acd-9288-b70a48e0e687",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5a959887-b335-4895-bb37-c30e8cd6d728"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20ba0ebc-bd04-46df-8baa-d1efbcaad79c",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b79c54a5-6959-46b1-b630-ac1a1a439640",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "055209c9-5af5-43d1-b31c-0166f13adedb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e7a3e165-e4ec-4f84-b3fd-47cd983d2ae0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "175bf1f4-e052-4983-8e1e-320f0c38cc1b",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d143f9ac-feca-48ef-8bf5-398695c09b72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6779597d-e6fe-482b-bf67-99da47af3c27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ba57a00-4544-4306-b041-c891a2e223e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e11d876-ba69-49f4-8b96-25cb305a9021"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "0ed9c4f5-f736-4d9a-b98d-d7f7d9259b1d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c3855dd6-48f1-443c-b14e-92b1c17deff4",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "32ddac8e-ab53-41dc-b356-c76d3c99f7dd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "9a97ba89-9833-4f18-ac65-1a13dc822e35"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bd2eefc9-f404-497c-a87e-01e0412ef6fb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "ad5ffa18-8e34-4de4-badb-82a5ba094395"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d496efcf-28f2-44eb-8ca3-a858fa82d155",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cd58095a-e4fe-4870-a7aa-7ea7f88f65ff"
            }
          }
        ]
      },
      {
        "id": "3558bdb8-2c45-4567-8bc4-39c319761f4a",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "0e2dc291-e7c4-4480-95c1-64e2dcc01566",
            "name": "Negative Testing",
            "item": [
              {
                "id": "62b9d52a-b317-4b10-a380-eca4f70547c9",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "8ae8054b-0ee7-4461-9b43-b12555ec196d",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "233974ab-e922-42be-941d-1cb5d8a52de0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b527cd2a-0d71-4293-84c2-425b342ab1d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62d79224-bd31-4b02-99eb-9967451f037c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0af85382-ca1d-418b-9256-d83418312004"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1058c75-a253-4324-94eb-0a1919c5b9fa",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6b55a6c-14a4-4bde-9b2b-297ea1067f99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21916c77-4352-4282-b198-3c2bb1202114"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d25b5085-23fc-4f36-8cd7-80d8a8ec00cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cb494511-b8f8-4da2-8210-3c29229bab3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49d41776-e18c-4785-91d3-adc64e1d1ecb",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7e58d1e-bacd-4df8-bf1e-f2bbe588483e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82cb734f-6309-4c39-aa01-b5108d69f933"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80ba723d-98d5-4258-88aa-0fcb87e46abd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3d33d1ee-0ee1-4c80-9de5-bc8ce5fc6c7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e44a156-c5ac-41fe-a42b-24add7cb3725",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2875d88-5e04-4c4f-b2a2-e084ff70d9af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1d2e4fb-9afe-4d5f-b37c-5c6c3bc7bfe5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5ae1217-e017-41e2-89cf-89a4edf29b9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4402d6ba-da2e-421f-beb5-b76bbc7ebfab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "002fbc38-de44-4918-8fef-faf1682664ff",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "932bfbaa-4cbb-4bf6-9bd4-00cb7d435b41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91c499c2-a802-4e17-8bf7-ce74c147ea16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "813b4f17-2e07-4f17-90ca-742d64763826",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f948430d-6133-4931-9fba-488c1d857261"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d8ce038-78a0-43e5-9754-7467d897356c",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b527b599-9beb-4144-a97f-bc89f59c7f39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d59bc639-3f8b-4741-bf0f-a7f9943ca840"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8fef7db-2f5f-4bf5-9f70-2df9dae50f7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "371ffb05-9eb0-40ab-a66d-abc0d45aeb20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc5bebf1-8985-433f-a69c-f310cdd9ec6e",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0899c34f-37c8-4272-92eb-b336ebbd78eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dbfc74a-0ce5-4f62-bcb6-e7b98645aaea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc8162cf-586b-4673-b6d6-9f6790753612",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eb173f26-8835-41e1-ab6d-78801f391720"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76cc2b6b-5ebf-460d-abf3-30e22ab385f1",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b7f5fd1-ea3c-4656-a36f-6dbd46ba5598",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c09dc8c-c6e8-45ca-9429-052cce93b7ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78de6dba-cc02-40a5-8453-d7d5ee07511b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a29ece71-1f77-4b7b-9f6c-2b8b938bd55e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae772cec-3ca7-48d6-84fb-435903f75b04",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b99ecfae-4fc5-489d-b5b7-dfa6bb7b6565",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60251a4b-fe62-40ea-8888-7fb367a5cc72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dae86431-b913-463e-90ea-be96e448a1b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5994a523-ea08-4584-817a-c90031727d5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c63f55a5-249a-4158-9f32-97fc76e9e8f0",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfebd069-8a59-4bbf-986d-627191e1be56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b8b256f-244f-442a-8f57-7d8c72462a52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19fa4468-9123-4e8a-82c2-234eade1c4de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3dc700fd-c21d-4359-b2b1-37ac97f835da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24893db1-51db-4bba-a682-8e6f1d1a160d",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6470f3dd-dce9-4961-a08c-5ced3f9fcb07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb4269e4-52cf-4ebd-bc2e-c754fc425b2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cb332e1-839c-45b7-8776-e186d4afa107",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cb1eb6b2-99a3-4053-a2ea-e12946d79ff5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f57be16-1c44-4491-94d3-50f5d7701a4c",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46575551-46c9-4884-a931-2739974acb08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b2797b4-2f2a-4213-bb05-a90fedce4d5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc868371-adcb-49d2-b291-3eccbed838bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "df261688-577f-481b-bd8b-6c5d661e8aec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa220712-4c8a-499c-93e9-0089db383f69",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a60138be-a865-42f9-8dac-83034225ed2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b81422fd-1a3e-4677-8d00-88f5ab5e3b5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9467b973-ef90-4fd5-b45e-1c3b96918b5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "42a3017a-51a1-4cd7-80ca-18d33e62858c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa2401cb-b63b-483d-9446-72825493445e",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19be54ce-4628-471f-9dc7-ffc0dd27b021",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ec4688c-a9ce-474a-bce9-55ef33e8a428"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10e66370-baea-4676-81ab-60ab0e44025c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8557328b-e9c4-4e2d-bd38-ddcb808f9803"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ca79b5f-6fdc-461d-a05c-4736550490d3",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5822c1b4-17db-41a4-abc0-7b4a0172f935",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f5accba-7ea1-48fe-84c1-42f7f54e5d4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71e6725a-1679-4c42-ae42-7705b85ff5ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f3725caa-05e7-444c-9606-630a5c3b4642"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45921d8f-b5c2-47b5-a523-2fee604c8058",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0319db36-7d5e-4c11-a32b-f1c000de2f1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dfff1a3-9de5-4cc7-a3f2-6c63e93bd5d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "014a736d-acb7-4417-be5c-688a3f84ef17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0c67833b-7181-4d91-a303-7be52543bbd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47201494-e323-45d0-a503-97c11571e05b",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e3b67c3-99ac-4d54-a72e-016808b8b034",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81c3f6ce-5109-4510-bf8b-a26d6fbc980c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b22ab045-80c6-4092-8a5b-d461ec843891",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ff34b238-0ecc-4305-82e1-68a97e160881"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85169550-27ce-49ec-8c9a-4ffb799aa579",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "385ffbf7-b273-4c7c-8828-bc98c111b62d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4360e025-bf2d-4d7c-b0cd-34a6c4971f9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9beeaaf9-4081-4ab1-a036-45f08237d754",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "c1a5aedd-49cd-42dc-95dd-0019e4c5bcee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "550bdc65-b5a9-4799-ac44-14d4b6211815",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b696dbce-6f86-4081-b524-e444c785422f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1bdc325-82a2-432a-be87-68ddd4cf99ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c59aa8b9-c665-41ca-b010-7ad8488c9797",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c56fbbc2-0c20-472b-aedb-c855fc85964d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02c0978b-5fc3-494c-8f12-a3db8bcd7fd7",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a30ce158-cb04-48db-9dba-156a5d3224b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "133d483e-4d2c-4d2f-b8b6-de4789e4e103"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e72ea2b-9e20-4e3b-b8aa-040eb22154e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ce120665-aa09-44f6-8cd9-a1e5ebe87c9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2daef127-f27d-4868-bc88-77488cedeb6e",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08e613a8-ab06-4fd8-9f44-d3fbcd74ba76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37d4b7a6-23fe-4ad6-9413-40fdd38264d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ea0c329-bc7f-403f-b008-8ff776a26d13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e9eee32-34f9-490e-ad13-cf0fce578489"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67bec77c-4fd4-404d-b23b-57117fdcd426",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79409b6c-6576-4fa4-862f-f44b331440e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d1d69f9-4773-4d6a-bada-d86c0f211a49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6933c296-bc5f-4d53-bed6-ed5e507e80df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f6758863-1503-45d8-a835-db3f2ccf35c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b5b8d58-1d1e-49b9-96d5-9f3d70d6894d",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd2b4e48-a544-4da0-8436-f4d2467b74e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d22d922c-0a13-4549-9b5a-22d20bf21c58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d67126b5-bb7f-4779-9df6-ddbc58b46943",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "85a33bec-fb8a-4a1f-a727-44ced1df9eed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "548bc80c-326a-4579-9f5c-d251710a7a76",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdf8758c-9529-4571-869b-78b4b221f78d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c503599-5ba1-48a8-b5e4-293ddaf18b37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90a91924-50a0-4f38-b84e-595cf32236a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "155b3217-0c2a-4d84-8127-b1471accddd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adc0baf5-ce9c-47ce-b7b9-aaa023e63e82",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a29bfe7-58db-42da-be71-754acbcc55a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7234d5f3-6c62-4660-9358-63e5079b25f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29470541-c0ce-4770-9f9d-a445a246d8fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "682d40d6-02e9-4614-a32e-b19ef27f930b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1df4d11e-02bf-4632-9acd-32952b130bd9",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c155e37-f95e-49aa-a6df-170e48d6e1c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89bf63c3-dad5-4b88-be2a-cc2b1d219c45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a846a141-5b06-4e9d-83dc-0ec7f537edea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6bba5be-f36e-4e7b-9459-8e6cb5eeb5c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18061383-3380-4d20-8e59-d3d683e92cc6",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95aee10b-4050-4326-ac9e-7138cb322d3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccccefbc-de95-4ff6-ad09-3a4c8496f748"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "872ce7fc-e207-4f26-8010-a0525ffdc11a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2067fb67-6c07-49e3-b2ac-2e021ce4aa31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48dad55e-d011-4d27-94a8-11473180939f",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e124ff62-f92d-4a6e-9777-7d365969641a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aceb1327-9e41-4ec9-8d86-62e94295a9c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3937376-7e01-4794-a17a-0f0d726e843c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fcd6a4b6-6d89-49a0-9ddd-cad97d001dee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "920f7d21-be66-47be-a91a-dbab8d04fe18",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf6f0b76-f555-4e01-841a-a726b1688bdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73865758-9062-4b8e-98ce-abefe390ce1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71806aab-f948-45fa-bd24-ad8a77bc5343",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "62ca6906-2a1b-4dbf-87a7-1e26cfce5eac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b54d9d19-98f6-41f8-aafa-c52c606623d8",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b621483-b7ce-4ae1-b0ed-a965204ccc66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d148ff1c-8e30-421d-ae67-b3795f0c71e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04740bfc-6b31-4cab-8ce9-ed49c2c1962c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "f6f0bd5c-a557-4497-a0b9-5968d4a30493"
                        }
                      }
                    ]
                  },
                  {
                    "id": "208bd581-b4a0-45fc-ab7f-961d9da2622c",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "402f7997-6c62-46f7-a2d0-8dad31eb9ff8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36a105d3-ed8a-4b85-aab1-7e37b866dd10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6788c1c0-9588-4a7f-b594-a0f13d4a5e3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c7c3d25-cc92-471c-9fb3-1daaa8767dcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ba383d8-b4c7-4663-a4b8-f63c45848694",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95fc3dcc-7d72-4e5c-8b77-d3432c7b00ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f7bd0f6-e049-424d-adea-62cf38587c81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18dbae40-cc4e-481d-bef9-75eb649d707c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e909a48-bc42-4b77-852a-a64b9a3c92ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0712afe2-aa38-4c09-8144-31b3a3a11af7",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dba125ec-d564-481e-8075-d50f73c5352a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2d99cc9-22f5-44c2-be85-3562b5e9f0c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55d36879-5fe1-47e8-9eef-34c6d6beb5bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2474e0d1-474c-427a-b8e2-a7af96ddf06a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14ebd843-8d4f-470b-8b4d-9585b09fe5d8",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac0880a4-41d9-4bc0-a7d2-8fb85451fa84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "400f8dec-23cd-4fea-b6c2-b079a0f38846"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cecd2982-d2ea-4c16-aedf-cde1d7d84869",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f15534b8-40bb-47f0-bb3d-83e43a51bd6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd12dc71-5351-49c9-abea-6e70e9c89f21",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f41bfd44-2fd8-480c-ac6b-deb664e0ac54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ecd6438-5471-4764-a928-804433df3b15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb5cda4a-bf04-4c4b-88db-9f8f2ae4dc28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "c2a3e157-8ce3-4a2f-9c34-b4c8ff1c776a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c600f00-ed11-434e-bacf-2820098fb39f",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13bc0bb3-3736-4aba-a0ac-14ffebbd79be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a451e528-975a-4f6c-9726-1bb1a386d330"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca1da537-c1b6-4964-b2ec-5cfda76f64eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b1d47de1-4835-4984-9cc6-921e413325d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c40876a-d2d0-4333-bcb2-09b420e1d2d9",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f24f5ed7-309f-4b1b-acd1-37cb75019a29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "834c9833-5e3b-489a-8573-3bde7861a247"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "895bef51-e6bc-498d-8314-45e065021c7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a5295c27-1bf7-4906-957e-15bc0b833185"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17f3a122-80b0-4354-9a81-87a2c5c25626",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "194c246d-a5a5-4baa-8a37-bf34d98258a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe2ad932-a9bc-443a-bcbf-d772aa2da429"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a304ad65-9ceb-4986-854a-83f1831acd5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "74eda96f-ba4e-4321-9d7e-31b8135ad4bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0980dc75-1f81-467d-a385-80968c7e0932",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b923cf2-c022-4cdf-aeaa-c1f85b28f902",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fed4339-a6dc-4a49-9f94-c424a862f55b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7219cc8a-0e5b-4894-93cd-201cccd934b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "be978e93-3957-49a0-90e5-6ed73c650d97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e3d4e8a-89a8-4241-910b-a48c07e99bb7",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70f955b5-de22-4b00-8ca4-d9c2cff8dc8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aac346e8-0b42-48db-a617-ea5b9660ff89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e298a3c-bfc2-40ac-bcf5-b91a6f6623b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "fc23a2b5-4c61-4e95-97d9-bcd1684eca89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e60a2f87-c7fe-44e6-889d-138f721fe18f",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47fe8906-5ecd-4ca5-b5f0-8d6e949bcb51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27e3f0e8-ede4-4818-b087-4b2e5dab27f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "416064c6-62c3-4420-9c47-8ca3c6716052",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "987f7492-bd5e-4c17-a0f1-7a8bd3131cd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c54b827c-314a-4846-a331-937b3c4b5893",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7547427-5b6e-4e77-91dd-bec5a8d7800a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8690e1a5-4ba0-4611-bfee-eb9bdc4e7344"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae2f4eec-af25-4e11-8a1b-8df10d56b0de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "c4e066b7-c44b-4258-a18a-549042f798ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fa999f2-5802-4e71-bc18-508deaa1e08d",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d8e7238-aceb-4a8d-a66f-6eed4e9f33a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98ae750c-b24d-4f15-b803-fa2326fbaed2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec198c03-21f7-4178-91ab-5fc814f913da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "e4fa694d-4ca1-46a9-87bc-a8215f07e987"
                        }
                      }
                    ]
                  },
                  {
                    "id": "493ff2d9-58f5-493c-a91a-e089472ff827",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f32b7dcd-821e-4263-bca3-55da001599c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a94e2e8-92ef-437e-bdf3-e42dab8655f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "173476a2-18ea-4135-98ea-e284909049ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "b8975727-6954-497c-8b8b-cb0d06f1fc77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cf3ed12-3c69-4d05-a658-0fa0f48b4ac5",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c5f8748-428e-4b1c-97bc-86f8e5074f1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "640f481d-bcd7-48f9-997a-526ba6988a0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "265eeba9-1f0c-402b-968b-e623332d4591",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a07b674-8c07-4756-8960-15d109ebce68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc4e7585-6760-44a6-8ae0-fe3c23410167",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb1adde2-c70b-482d-b6b3-6bb39a8055e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19af036c-5aa8-45d2-99e5-01eefffee662"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fe52541-45d3-48f9-97bd-9050b3d5f7d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d53e15ad-c803-46cf-9287-7ae5fddaee07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a264e512-0e0e-4917-af6e-f6f41e261ffd",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efcf487a-edda-47dd-928d-5c89dd9741aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd95bdc1-60ef-41c8-b5ae-27a31c1424b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe3c28a5-a9b2-423c-9ca4-cb5f64d24e6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c18690dd-29b4-4c3e-8fe3-5c44e4d4ef37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c3a6798-093c-4211-b649-5d3de0632a15",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d421f60c-b1c6-4ecc-8404-220ab935c2d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4132e9ad-7968-4060-a4c2-7e8c7dd666fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd32407f-455f-443a-9096-809d6fb7165e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "82852698-e8d1-4a5e-967e-a75bb2bcbd37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "377c6939-6934-46ac-b074-fb3ef0ecb294",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d0ba8d8-b7da-4173-b93d-a4a4006ffc0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94ac31a0-7ccc-4152-924c-b4947001a619"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af3ae007-0e98-46f6-b718-1974abd1c0fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d052a991-4b7e-43af-82e4-f81419609f89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c7295ba-3d13-4453-85d8-c9abcb99d349",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80c11a1f-6797-479c-838f-c25b66d65d3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ff3a07b-eda5-4e2b-80ae-9fb05812128e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3c46e2a-59db-459e-9e23-bb5fa1ca0940",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "21a47ecb-bc12-4089-a79a-8b51e4a170c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7af7773-e5ee-4e4b-91b0-a3c717adec54",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efe4cc7e-2eb3-4f03-96d9-24643f13115e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b10aa852-b86d-4a72-866c-efc0c5fb0a12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa2d5406-7d63-4c78-9690-25ab768a0583",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "79b8a2b9-a3bf-4299-9947-14357eb27531"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9293489-0402-4e2c-8823-1dca252cf4a0",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93d5aa69-36fb-4f9b-8663-0dd01e2974a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d247dacc-9418-4635-8526-d716e0cf8814"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "044452e7-ac2e-42e2-a902-73cde92aa3c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "935aea79-66e5-44a1-834a-ea2449704dd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3eaf293d-618e-4ffe-8242-557d1873e04c",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "572e0478-79f3-43dd-8a04-f910d53791a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "425efa71-ccd8-485a-b984-495cc086d1da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc5ec4f6-8d3e-472c-b878-9a0065d00191",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ecc4002-03d1-4238-ad94-85b57eec649b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5470049e-70a8-4730-8861-646e2a53e07e",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d27c50d9-1ad3-4a6e-9ccc-b36b5fd1e881",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29a29936-f69e-416d-b1cc-bf3336ba31d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cc4f437-1b90-440a-afba-375cb4181eb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "afdf70b2-df06-425b-9895-d1d55e03de43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b408be3-0de8-4263-bbcc-b2966c87ebce",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca592eb3-2f8c-48ca-8f49-3f4d2f416171",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70e96ae5-4bf2-4a7f-a593-16524e3ecdc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f8e2264-db15-45db-a7d4-85cc722d1cb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d47bae5-2e35-4359-b1bf-714dffa41622"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dae72ec3-71b8-4081-a328-73c076e7c151",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6db5bb8d-8a47-450a-bd41-984ec5092120",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29fdf2a5-1e28-4d78-b7e9-45085ce3bb15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b98632ed-393b-4cbe-9d1d-a866c37a2afd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "fe79ff92-f1f0-4af6-9dd7-4d0abd61c7ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5174dd97-511e-4948-9d05-78afeae59d86",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1b5f075-cac0-4288-8085-3980d8273901",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf9653e6-7ece-444f-bab6-a60c60cea33e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a7713ee-c1b2-47dc-be2e-5a55e39761e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "94196704-d42c-4a12-abad-2667ef51638a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daac8efc-946e-451e-ab6b-9db1f0bf59c0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2857ee5a-fd73-4023-8737-970d77638da8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f017aaba-5f2d-459d-8223-d3004a8316be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7b97166-004e-49b0-ab71-52edb034c965",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "240a6b07-fe67-41b2-8fba-c7c295fb389b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a2fb64e-f932-4eee-879d-884d99416a56",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93153eaa-5c6d-404f-bb95-e4ed70da7f99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53ab716c-207d-43fb-93f8-6bfc2c4e234b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71507794-58b8-4c19-aeac-1fd86b5459ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "becde8c5-92c3-49bb-96e9-b372ffb3de75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3003331-ca38-49ec-865e-04fd4279d697",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d127e8a-d58f-4cdc-96a0-a08e562c695a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "986b7e5c-629d-47cc-9762-9df85b20a4f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca417479-8681-4fc2-89bb-c679fdcc1989",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c7ee0a29-32c5-4f9d-b95f-983aad7d5f61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59ce7fd9-a295-49ad-9119-292682d4a3b0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01e46819-a3ca-4f17-a421-86e4c57c9d8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e6dc8de-3950-40e2-921e-03b3ead83612"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c27e0123-227b-48cf-a106-e5056e3b6bb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b83e0d75-eac5-4a94-83df-990dce77312c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a9eff2b-6899-4a70-b8ce-abc2afedf98b",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22977192-ae7e-491b-984a-14517cf6c03c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b6e3eb1-f94b-43e9-87d5-b5e17899a967"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "854feca7-b0ae-4be4-94dc-43ff234e8626",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "dcd35f53-c945-4c11-bd13-244a3a602fa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d3ea369-1858-4739-8a91-b7a781c8edb7",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72f1f85f-7b3a-4d92-b40f-a72fd9485526",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a965703-79ec-4922-b97f-ab350382c279"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c12e018-a35c-472a-bacc-184967e771c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "8abd54d1-6064-4a2a-b504-00963a5c068b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48a125e5-aab0-4eef-8ae4-e4220fcf0efb",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00855556-53d2-4dcd-b68b-3b0c242a7564",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fec4aaa7-28c1-4b7e-80fb-3b6ab00b77aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eedbc520-d23c-40e6-b88d-be42ce6f8a60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "45387adb-6583-4b71-9200-40396a9a3337"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abb251b4-f378-4cdd-b73f-394fa29843c8",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a22056e-72e3-4fec-89a3-bef1c3f2325c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32b7d6ff-dd56-4b93-9dc6-21542e8ebb40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "322a69b9-e368-4ea8-b870-bc86795bbf73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f615b79-52e1-42a9-96e3-0431acbc1b1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49cb2c57-e540-4068-ac31-ea26216db022",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be8bfe4c-7a57-4cbf-ac57-03b896a30fcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a6aea21-e46e-4b59-a67b-9114af0ce7c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfd1dda2-8872-454a-b745-db4fdc32e0ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "71aed10a-d093-429a-ae12-49d2bdb4a4e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c3dd14e-7af0-4135-b380-b3eda9aa8928",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c899d09-17ea-433e-abd6-e7549682ad28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fedb0e64-4ec7-44ae-8802-fe66d84e2dc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ac6d94e-1df5-4b1e-8a4f-973d7249a5cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f15eb231-7783-4d0f-88f9-11f524fa3dc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac557f19-b1e8-4a0a-9d0b-33318d0f7aad",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e11f273-7691-45a3-ad91-eea19d8cdd92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05f4b2c8-6f22-4622-aaeb-f2e4cce96ca7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8575cf35-0002-4398-afb1-70db0ee36149",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "e8000268-c36f-40fc-8eef-a6d533ea689c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50bf9108-ba58-4e6c-a392-c59162a4e8fb",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "553ad7ef-059b-443a-90a8-380d07a78f4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3850dd3-8ed1-46b3-b3d2-a48395eeec27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8b818a8-4c3e-495c-ab48-38e2e94ea8ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "0fd1d2bf-e3a7-47da-be30-3c484aeeafd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6574add4-cbcd-452d-870f-af48aacf2dbf",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18b4f848-1a1f-4f41-b231-9706badd0bcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fac3811e-626d-4534-9280-89a87df3116d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b030e024-d1f8-4f66-aca8-f39d834a585b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fdf4efcf-57c2-4026-8d6a-514d73aa30cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9a34c16-2df4-41d2-9a49-4a428aac2413",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5443c24e-39d9-4138-aa37-8ec0566adde8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15638730-819a-456d-8dde-13489043c075"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d4fa894-9ccc-4bca-b758-9e15940fdebf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c5c90b28-9ef6-4e59-bfa8-f2521dce3755"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c599ecc3-753d-4d37-a3c3-2f0b24a673ed",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06ccc281-0d2d-4aa9-8bd2-2dc55c9a2612",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42becdbd-eeee-473c-9df3-2a2ff1eaaf6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f6202f2-82cf-44c0-8da4-75f5002072f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "db3b4dd4-b27f-426d-a2a9-d9f3dc3a71eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "158d7837-1197-4f45-83ea-098db0705eaf",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "469edc99-9a92-4081-b6ea-42dda977f83e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dc5c21a-f902-4e6d-bf7a-6628e393558e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa7beb68-3b5c-4a8c-b532-8f026ca0e971",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c5fd3059-6daf-4346-b720-5ebcbb33872f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27a1b2d0-d945-4569-8182-a87554459a0a",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "695a144f-40ab-444e-84f1-a292bc276cef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5241c0a3-43e3-4de3-81d1-7a34c843a5c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76f22c2d-ec20-438a-a109-a7cc847b4859",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0930b808-7c86-47ce-8608-93177dbbd983"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5caff409-c543-4398-b554-6613fab65370",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61a14bc0-7950-4aae-9a2c-4c4c8ddea1e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db5bf05f-c606-4e4f-b9ce-d4085cb8b09f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1f208b9-153b-48b0-8dd0-43798235c010",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e33b764c-c24a-4f7d-9f73-e1ad4d8e3c33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ddd8c97-aa00-46b7-978b-7581996be530",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e536da1c-bd34-4830-b3be-c0de6a2ec810",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f794677-6a15-43e0-96af-f817c2e06694"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b656c540-0483-40b7-808b-7510153a4566",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "76e0ce9b-0646-44d3-91f8-e95b86356bf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "780a869d-3104-4cd4-b56d-f8c4e6136f34",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d02f604e-6df4-4646-9abb-575f8acaca34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b92a63d9-91f2-4d31-8a30-7d4abbb0d0e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58cfb18b-74ec-4be2-b978-547d3c228144",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca5e9a6c-9b17-429b-bd83-cd5ce3a47d90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a3ea2b2-9b6a-4e32-83c4-376b8937c878",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6e8e0e2-4ab6-4658-8f32-53993ac2a368",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28f57ef1-e0a7-4304-9eee-f8d1f0e66fe3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38224a7c-2a3a-48a5-96b8-ea7c5b54d4fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dcd83b83-b6b9-4a39-ab41-1c003357bc54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5148f1a-444e-4d49-a257-f0c887f33f05",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bfbd23e-3e59-4e8c-95c3-d52412494ebe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "176fbc9c-db7e-4d0a-a119-5af83172e14e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3e08720-7605-4b43-8639-58883e81cf23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "863e7cc5-d4ee-495d-a416-9ee1be7f6cac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4993633a-1cb2-4d22-af13-2e5453bc88c8",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae127ef7-d5a0-455b-aed3-d6bd33c42aae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc9d31c4-adba-4b89-87d2-6e023f14fa19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b17ee411-80d1-46b0-b142-2e7b932cb726",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6d28e72f-ca25-4c3a-8eaa-f7504a38d7b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eef584e2-4944-4d69-9456-e07f84e98abb",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b97b95f0-b1a0-48f3-80b3-d6bc22589ae7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27c92132-1acf-46e7-9146-1170efce6127"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32004bd3-7829-48b3-8e6a-4322a6360c4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4782c5e-dffe-45fd-afa1-8b385f2b7ac4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b11ebff-cb3f-4c97-af24-cac90f6e15eb",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd778a1f-e024-4bec-80aa-8ec8331ef138",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9d4adc1-2fcb-4264-98a9-777c81406ae6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8036ae35-d26d-4f9b-949c-9c928d6234e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "78c30a81-d94d-442d-b897-54eed932a7cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c78815e4-3953-4129-979d-1cafc3a9ccfb",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ad73cc6-8800-4e98-b44e-4653e136f37c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f015a17-2009-47f2-bca4-f23c2228a121"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b11300fa-c24d-4cf1-b80b-806da5272234",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "46dda985-a984-4c16-8eaf-85bafc5ba096"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f024c115-2a85-4eb4-8494-2c75edc4ee78",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23e8f546-58c7-48b8-b1c3-7e970ee9616e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c7f0555-001b-4225-b6c6-407bc583b888"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b14229b-67fd-4c71-ae37-15b99778bd94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dee08c26-df01-40bc-9017-8ccd138bf13e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c38fc0f-882a-4935-b0fe-e9a487cd5c97",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a71f7b03-4c85-47d3-90b7-e96d8eafb28b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a95a3868-a761-40bf-8395-62152ede8d6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3daec85-a053-4f30-8868-bb84d76d93bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2d7f1015-15bf-45e8-b3a8-c8ded23a3e4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "743d3be3-12ac-4397-a29b-a0d0f7c168d2",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a858717-ad9b-48d9-8fc1-1df16add8fb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5d5ca40-9140-4498-8130-160125490085"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "513dde47-ab43-4637-a190-e8f549d5d30c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7c7913df-7cf5-4e82-a6e5-90d407bacabc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f4dcd9b-2bb0-42e0-99d2-4e0487968d49",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24873895-276b-45ed-b027-bb780f9693a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f50a7285-e4da-4f02-aed1-4c603e7a4a4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9496abb1-8852-429a-8735-3cd76e98678b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c187c673-5882-44e9-8605-61a981cab366"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68fab3d2-9f80-4470-82bb-101e0bd8f1d6",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b78bd9e5-1928-4cf0-bae8-c95d2621b03c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23a42c11-a983-42af-9171-177d90c933c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51b9fc44-bc12-4c09-9fd8-77d0c309a850",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1678cacc-7f20-4758-8b0c-98c173d2dff4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8a14dad-663a-4b90-a3c5-1b35b0d44166",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd84d052-89fb-424d-906b-dd16aa80f7cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de6d7214-4928-40f9-bbe2-22a74e090e7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd5eb9bb-2c15-4cd4-8ea0-de2c152e114a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "6c876836-5471-4c8c-addf-cfca5597b76d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dff2abd-7de6-4464-9fca-a0ae57ab4491",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5221664d-310a-41f1-9afd-864749366fb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da433f2f-08f0-47d5-b7e4-4ae1ce20f9c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dc39414-94da-4ac9-b85d-3f1139f3f71a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "dcd47814-62ed-44ee-9acf-00e82716d2e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abb660ef-e13d-416d-8737-322e184c86ad",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ef38ec6-cfca-44a8-97b2-350c38abc8d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f7ac723-3391-4c0d-a9c3-121318f38555"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62e04447-8fe5-4ad5-a8fc-0e351433737a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "2054d4a5-2e37-4317-aca4-daf0f08e05e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e36bd7e-ddd0-4fd0-9434-21c9f2ce7849",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "291b3891-9dcf-4473-8949-e964c7f61d36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "c6e99c88-94e4-4d4a-a80f-30a8dc9466a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae120c4d-5fdd-484c-bc85-2cc62b898d83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "6a157774-d70a-4ebc-8a64-66500328d1f4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3d1acf8a-76d1-495e-953f-1030f908a065",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cb6e6981-d0e0-4f48-ae4b-ea59880a14f1",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0b0e858-7a88-4505-b44e-0b8287875bb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1c1206b3-75e4-455f-af1b-9991862ce3df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "855bbb9e-285f-4b8e-84fc-28503da1698f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "db3c3a9b-eb10-45f1-a62a-8c364ccdf6a6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9bc05e61-5358-4db5-9431-fd92e6ace525",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cb4270d9-6d84-4b53-8761-02b66dae58e6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ae961a64-1cc4-4f5b-b73c-3fd8d6150fdb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "257d3031-08d6-4bca-a741-6f47f1ab466e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f316082c-900c-40f0-942a-9934730137c0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0c9a29b7-d65b-448c-bf99-4333fa68fcd7"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0fd5db9c-84bb-48af-9593-47f6ad0a70e4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "71cd8e8b-c1f8-4d0e-b185-4be590074c72"
                }
              }
            ]
          },
          {
            "id": "ec7e8bf8-e8b7-4040-960a-6dc6784e1810",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2f87caf1-b8b9-4371-85b3-e611d8a546e5",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "31a2f68d-a587-46b5-85b0-d3916923efaa",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f12878b1-c3e7-434b-9bff-2f3610670a13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "ac2b8c0b-b569-4c70-a3e3-04cd16ae34bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e813a7ed-ecce-4fb0-b84a-fafed2018881",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57c7e121-b954-4ccd-af5c-e533cdba6fc7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "154f431e-00d5-4c17-b45e-9d2fde42f81a",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1858f312-9dce-429c-9ec8-78aa9eaba7cd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0c29132f-5324-49b5-8934-67d1b58101e0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1d29567a-3795-4e6d-a19f-5698533fbd83",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "47d76cb7-abb0-40fb-81d7-93527c840fdf"
                    }
                  }
                ]
              },
              {
                "id": "3fd1adec-3885-4fa8-986d-93c0570bd9af",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3f9ae4e0-7f34-46ab-9770-a32d8f0f26db",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d6342773-0531-4129-a7c3-c0e99c7eb13d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "136a7742-b4b3-45b6-ae6a-eb2c263e7cf3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "fead5680-39c7-4ef9-947e-689fa3d947ea"
                    }
                  }
                ]
              },
              {
                "id": "43cc2002-0ee4-43a1-97b9-c1c0553f6d33",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "72a81342-3442-40d2-aabf-b45bb39476e3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a2454dfd-01ff-4304-b08a-25516f8583b0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ea179b94-53cf-4d0a-b6c7-e0cb93b8534c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f0b8b6e7-8419-471b-a24e-7d4a11f458fe"
                    }
                  }
                ]
              },
              {
                "id": "2abd0f67-1d50-4376-bd4c-eff82bc3bf68",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "70d9cc7b-011e-41c7-8a8e-e2b72a2e9ed2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6fb602a2-4820-41e7-a291-ea79b3aa93a6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6350b92d-9bb7-441f-8c31-ac2efc2f172c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "a00d5af1-3fa8-4374-ba43-91640950504a"
                    }
                  }
                ]
              },
              {
                "id": "2ea04a4b-c94d-4bc9-be07-0131c685551d",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0d36b265-b001-4604-9c64-9a88e2359981",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6743bece-5f2f-48a4-9f29-90e5d9d1f7bb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a96a1135-bdb6-4d5a-b4ee-19c3f0143b3f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "e2bf98d5-bd8d-438e-b9da-0144f2224429"
                    }
                  }
                ]
              },
              {
                "id": "c0294b40-60b7-4bac-918f-0e1e2e4b75d2",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8bccdd4e-5fed-4ae5-a227-5a044d125cbd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1d87ba60-ca23-4d81-9f40-6a304e41d771"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c5c08e90-4956-421f-82f0-0aa9eff21af0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f353b9fa-bed8-4422-ba6e-2f754220db27"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "91fb3e43-5242-4efc-8ab7-82ca416390d2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fb5b7970-55c5-40c0-866d-ddd788828237"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c4e97d1e-b82f-4b66-ae34-2f1472be2c38",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3937b075-6c59-4a90-90ab-df229a1b4dd0"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "38aab4c3-8eeb-4677-a7ee-da0d98219abc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "8d4f63cd-b362-472a-9eac-a81e3fd741f2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c4fee444-67db-4f98-8f3c-076a983e034c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fb779f01-e64d-4c9d-9cfb-724b44b6edb9"
            }
          }
        ]
      },
      {
        "id": "cda1e69d-2a21-45bc-baea-46a5d191e2a3",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "5305c71a-2a73-4bb6-b93d-dbe49992de49",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e469615e-df99-42b4-909a-a24228733654",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "afd0d4e8-b85b-4252-bd08-8717adb6bb35",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f0a497e-da41-419a-bcc6-a458aed84e95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63d0af8b-fed8-4986-9c47-f6fe2bdad03d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45ef7081-889f-46df-8343-ebc4d1749582",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "019e4fb4-0b03-49cb-b92c-9efe0c57d83a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edaee76e-41d9-45bb-aa54-ccc4e858d22a",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "239ff23f-cbcd-467f-8ed9-f96d4ca55da1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "202a8749-5210-434d-a70f-662965752efc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e67eb080-4519-4d87-af67-a2f3d2b36614",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a15bb499-cc75-4cbd-a56b-fbad0dc09666"
                        }
                      }
                    ]
                  },
                  {
                    "id": "623a99da-cb83-4274-b749-4674e4cde217",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e56e11d-8333-4e4f-b0ba-40dc7b9ee074",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12da686c-73d0-4377-a4e1-6217531b9c9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9581c85-d438-43d5-a7ea-8e36e34d3fbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "59a385af-bbbe-45ab-90c9-42d81f1a8fb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a01775e-9714-4ea9-8736-230a51d08611",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffc59864-be78-41c6-977f-a03ea072f58d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "447392df-38e8-4de9-9645-bbbe4f6de79f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06def2d5-50be-4a50-ae45-59d88c2b2e65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "974aae0d-4826-4f3c-a17c-7d2742c38026"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ef56fce-1d40-4c0b-b1eb-2194a8db3a25",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c7c9b47-6de3-4a0a-828a-3887d89e6474",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "790b53fe-1d08-4dc4-bef2-442056af68ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0855f25a-293b-459c-9860-e46da1aa32ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "62864a48-fa30-4eef-a2d0-ec37380ee59f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0c12289-7e1c-46bf-82b2-a941ee6965fc",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ae9f9ee-396b-4d24-825b-f4c180ed1858",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f09ad98a-7952-422b-a69a-66871c5c2431"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55016d04-8364-43a6-afe7-5ec81e895828",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4319b9a3-3425-486c-89aa-a53b3c8c2645"
                        }
                      }
                    ]
                  },
                  {
                    "id": "765a8f5e-ee5c-4c50-b7b5-b17d33482678",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65784c6a-b171-4d6f-8de1-701e4113b570",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dbf49a7-1d08-446b-853c-36d523340e70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65c4d8c8-175c-4e07-ba3a-2483effb79dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c53ccba-0975-449e-a4ad-3551141c544f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b8c0cbf-0a9e-453d-a2f1-79dcd6ef53a4",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd7a740b-e80f-412c-816f-f738ca039baf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c662d39-f102-4666-8ff6-d4e2fce29afb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f339775d-953a-45ef-80d9-a2a090be5057",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "08dd8922-0a6b-4904-b262-d90b736ae324"
                        }
                      }
                    ]
                  },
                  {
                    "id": "928b0eb0-ab97-4dc8-b1bc-d7d1df1a81e9",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8298add2-c40d-47be-8897-3c7336547368",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5d83abc-70e8-4273-a49b-81d9616ba3e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0aa8c6b5-7c27-4a4f-9099-0a31948aeb86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "34d3ee68-dc98-4041-9626-fee79fe1aee2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c9e8ab6-1daa-4f41-8ae1-35bac73640e7",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b966476-34ee-4ce7-96d3-37d7b4f86a36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "227a1954-ca19-4660-9727-8e4735b3ae81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f1a6cec-4a62-42b2-8e96-43e50b8da07f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "28807476-190d-4d0c-a298-ed6a79243c80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2f35254-0cee-488f-93be-13cb2c82d0d2",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1e3fd61-0301-4f36-a1b6-7e16acdf7e05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55effb19-a07e-4571-a8b0-b93339cc68ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1976d453-4fa8-4611-a36f-463a736d19d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "4b8ec1c9-1a31-4564-86b5-5a7269cdcb7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "264ce135-0ecc-4d88-9bb4-276385fc9eaf",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f6d1e00-a2a5-4378-aa04-8da2281a87fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "561ca691-c270-46cb-bcee-963c401ea090"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e58c3662-8cfd-4d20-a9de-065addaf9f2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e35fd247-1629-4cd1-a71c-3ef5e763d510"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bda4f62-c932-44f6-a854-8972eaf9dfed",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b56151c-9903-4f72-830a-11f537a19819",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "496412bb-1897-44e7-95c7-7e31a110c468"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3c9ebff-3697-46b8-8ab3-6cc4639c3dd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b45c9a8f-6d5b-46fa-8a90-ab042a059899"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5290773-c28f-4718-b14a-91c4b18527a4",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e35a2af7-6788-48a4-ab97-e836e229642d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac1dfaae-0229-4ae1-827a-b497c94605b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23d16c61-55c3-4da3-ac42-eb467345b3cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "59c2301e-6348-4976-ad71-f2a6ee788954"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf7fc901-decf-4ba0-8147-a516092050da",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "662e0dee-0d75-47a3-9c7c-1e3b06d98550",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "069a722c-63d0-40b0-8978-031347fbcfa3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bb06d1e-4dfd-4824-b74e-56b0695902cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f60a6d7-4d7c-4c78-9f6e-5d94da91aee7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fab8ce3-b6f8-4f11-a692-7d94d371b479",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a7668d5-31c7-42d4-8342-65af7a97c298",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d22a490-3c0c-4bcb-a634-69ad91bbb739"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c92d4b0-bf26-4e2a-9ac7-1f7ed7460516",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "66df1f7b-0e9b-4518-8cf7-943e548bc44d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0e11683-f070-49de-a8ae-ac47cc4b5824",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c99d06e4-3a8d-4cb1-9aed-ee7d3c45d462",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33bc6f23-cfd8-47a7-99e7-3ec9b7d7e49f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "004f1167-d747-47d8-a46a-a2d842a4d595",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6c3ae3a-0a33-4495-b4fe-0cb74128b4cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d85e8b95-6779-408f-8c46-294471240ce4",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b0d7395-338a-4d70-ba89-7167895ccb6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19ccff86-a5b5-413d-92c6-3582c0ef4847"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30c3573b-6d39-49e6-82f5-344e41326238",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f8d8233-955f-4861-872d-6c15376a8ab4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ff58d60-7486-432a-bc97-cbb9e59a3ad7",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07387ced-98e2-4164-af21-251a17214d3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a511b7a0-8a0e-42c0-a5d6-08821f18d8cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68133875-7e1d-41f5-b297-0a37345c025c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f31498f-7a89-4e36-b17a-ef923bdcbac9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1eb4e2e-b732-4c76-9af2-a58547490f0b",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1851e0c-3360-4832-9934-8a5ec6cedf0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "990aa4de-5ffa-44e4-b802-92bda448dab4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb6051e8-e043-499e-a4d8-e8e25f22d72e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8891d4f1-480b-4ce3-8cf2-f9fbde755392"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bb9ab0a-e62c-43ab-84f5-2eef2ccfb301",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee221688-998d-4bc5-bbd0-88501a8c318d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a95f3d6-f03f-4452-8544-2517fb512d18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfd4e74e-2778-4c3c-b839-db0a71b8910c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "93892145-5573-4853-a9a3-30ee887c005b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f05be89-0312-4e2e-9580-0f3dfd238c16",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4361acfb-0868-46cc-97f3-4d0140352c32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4e3052a-274f-41fc-869a-6579fb433de4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee94e974-0d21-4817-a84d-943baf8024fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1d1d181-26b8-44b2-84c5-d1259a9592b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41947430-5bd7-4d4f-9c6e-bfef70053afc",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "396ba533-97c7-48b1-aadc-0a862604322f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9f83218-863a-4a4c-9f78-b0bb930726fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24e8862c-507a-4bd2-9569-6e253f27af2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "318c7f74-590b-438d-8fe0-56007531fd8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c057279-31ee-4a87-9b8b-8724a3b1464e",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1540ebcf-4907-4159-984c-180f64e7e994",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2e882ae-7340-408f-b2da-ee600ce6f0af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08b7e520-aba4-497f-9db5-e62d36797801",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "42f500d8-50bc-4455-9be5-6d310e5c6fa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e86b0db0-607c-445c-bc8a-0aae55a82f15",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7110e879-4881-4302-a2d3-bc7f24656f57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a068869b-2bdd-4221-a028-4f0b1ec75500"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eb0f026-ad32-460c-9f3a-7ca53a13c472",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe765a77-a06f-4b3a-9507-d3b0f228c157"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c75ce80-4aa6-41b6-a707-a65c05162de8",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40477b70-f5f3-4c3c-b219-f8217061d5bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb62a8f0-34f8-4d4f-9e5d-8591ebac9844"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42d8dfa6-8ea3-496a-b898-9ddfb25191ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b2f7cffd-e7e3-4367-bafd-af383a745f48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09437e61-93b5-4cfd-8f5e-797b16da4798",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e9c280e-e61a-465f-9823-41226380c9cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e960d61-8c20-435a-b514-b0ce2485a38f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2617478-9e0b-4cff-beb9-ab1386ec1fc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "68dc6034-870d-48d9-8e10-511343a55587"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d80f666d-955d-4517-8e0c-0d9baca6ce27",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93782912-a86c-4dff-9f4f-b0726b64eefa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58aef0f3-a8e7-4ce4-bf84-457743027a5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a59e8c7-376d-4bec-b5fb-2e196c3a7786",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "73c20919-e42a-44ff-ad1b-c3c7c2b0e4bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80d8877b-b5db-4cc0-bc8b-aa98560ccff3",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5207746c-a29d-478d-812e-a20cb564f364",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15d32c57-de92-4995-9c8e-859ed49cbdd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56e95dc6-ee94-4b36-b9d5-767dcd881ea2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "32bdc4f2-e9f4-4889-bba8-354076aa4197"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2abc7380-c2c1-4939-ba04-8f1c36b0ca13",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3725fee-8590-4463-996a-c7d4d71aa2e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "981c288d-3724-4ab6-a5db-1203ede49398"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91a8dd84-6753-4b3e-b70a-889491928266",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6909d53-78f6-4ff1-be43-40da3207bfd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1048d785-869c-4fcf-91c9-d0310337c046",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "953dbc48-b573-4ca2-867f-54dd46435736",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b73c1b7-c26e-4297-ad2d-ce19e61b4265"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "710498f1-0bcf-4987-8bce-e079f7146490",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f94abe5f-c74c-4dba-8b25-650b6b0ce60b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75d8a133-89cf-4572-a72f-b3fa2e71400a",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53d2a3db-c77a-46e7-9708-e763d2cb7f0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea398b3c-018f-4293-9c3a-96041ecf201d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96e41a68-e2f2-4a22-afa4-cc2f0fb72109",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "197d9361-e0d0-45f9-b52a-98656c5adb88"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "144bb1f7-7ed2-4d6e-9a11-4245c1682cdd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8ba75a89-55b5-4a3f-9170-0e5f22811548",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1953f229-e649-406e-af56-a2a4c3e94842",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "9d86bd8a-eaaa-422e-a735-492a52f011f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66104c28-bcae-4dce-a649-41f7e0a100d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "af3777cd-e78f-4151-8c3d-1b49cee6b89d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "af599460-78be-49e5-ae1c-0c8f2931bb27",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7edebc74-2f08-48be-8c13-79347dd2030d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b5804a3c-5907-4f6b-b2e9-0c17813a4714",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b575f9ab-fb71-4e96-adcc-321a983c28a5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "219b6207-d755-40fd-b08c-b73e54cc3bc2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ebfbbb91-0ada-4882-a410-ab2ba5255aa0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cea27c6f-d183-4904-bb66-d43d8de4167d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "78983cd0-74dc-4ee9-8fc0-5dcd4ed84ed9"
            }
          }
        ]
      },
      {
        "id": "a9be49bb-f7ba-4e28-b615-a4182531cb94",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "659e6288-14a0-4b2e-8de8-4ea1381d6f64",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2c7c8cd3-f02f-4a76-8797-687992af12d2",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8ba596dc-3c2d-4cdf-b70f-16768fcb2fc1",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e901e89-fc06-49f0-8d00-5985f5aad461",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24772f47-8f9b-47ee-9ba7-d80b29cddc9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e82789de-29d3-4861-9f7e-6cc56e1cd00e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef325822-3618-4c02-82e7-b84cbc5eec87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "002abd10-3acf-41e7-8b7a-922cffe02051",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edf4a135-ed9d-402b-ba11-d57a4c894310",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee12c438-fb0c-42d5-9772-ecfdcb266477"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d51090f0-8388-4ded-838e-7369af1be9c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "29c88f22-bc81-462a-9e13-10f11e6f3b59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c909914d-3470-470b-8ef5-1cbdfd89b3bd",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "031516b9-cef4-4150-b6f6-a14697182a56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b17d9fcc-003f-428b-b7d5-a670614f1480"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea865355-447a-4d06-b363-2282309e9b3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d2d3235-b952-4544-859a-42adee68f496"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03616989-8327-4b80-9559-e84c689396ff",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34d512aa-f5cf-4a22-81e5-805f07156c37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f09e820-9544-4b4f-901c-aea39c1c493e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d32629d0-bfc4-4a35-b057-984117368198",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "229ff786-7299-42ac-95a0-ad2f4cd7a491"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e57262d-ccab-4910-b5c2-0d044b93d1dc",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42cdb1bb-4374-4f95-9c73-29dc8db461f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5aa48d0c-64af-48ca-a105-0b0ed23d357f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b05cc79-8ff9-4dad-93ae-24a4d45c60dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f9fb956c-9665-4cb8-a05b-1aff0eabd728"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b946ff6d-8c09-41cf-a6b1-09cff101e6ca",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2de0419d-48ac-4261-bd7f-edf70a665db9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be138546-2519-4297-ae8b-4ed0b6e33434"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d2f0290-f940-4d71-bce1-71bb7309bdea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "75d919dd-60d1-4c8f-91c1-fd88d2b61389"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1a67bc4-a544-4c02-b9c5-b4ecac6dec07",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3947aed-9953-4ca0-b7e8-e4763a9a8985",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eed65bd5-0282-43d4-9985-eee1b1e98085"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30d1cbd9-2685-42e5-ae27-7265c36e5703",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "f30f58ae-4d31-4240-9d80-f5395c68e01f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fccf592f-26dd-4c5f-92f9-96310bc8bc70",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2ccb7b1-54f4-4ef5-9946-b2188ed437a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fb792ae-8294-4f44-80f3-0188bf389d65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac28f564-b44f-4e67-abcf-7dd9c726db15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd3e21db-53e1-43f2-b21a-27c833f74ef4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5a0e464-2b21-41e3-9c20-80f789dd81b6",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06ac9908-2d63-4464-85c9-10bb874ff275",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8838fdce-9a2f-4e58-82c9-a2c4cb8018fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b73265d-3a46-4ee6-8051-c40716546646",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f4a0a2f-bb16-4530-b644-d41ef58d2764"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0453469-311d-4efe-b72d-4b9dcd2510a3",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c75d140a-da05-4e5d-8580-8358e31d4000",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa931e7c-edf5-4443-96b8-7fa4f0441715"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95357052-8193-499b-af0a-c818e39bf556",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "329b8e16-2136-408b-a036-688c65b376f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d93ed292-4d4a-466b-893a-6d7006942c2d",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05218e98-3ab0-4eee-8865-0940daa343e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0da20d56-d8c5-40a6-a284-a02d2203ed42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d7e6294-5df6-4009-b6b0-9357cb02a856",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "74df8073-37f8-4d2e-8cdb-0bc21fd15c30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c69bc91-4b97-42e5-9808-e7f5437ff37b",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "295399c2-206b-4bc9-a0fa-031546139a1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79f19a4c-6801-4ea1-a327-8630633a7ab3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f37e7777-5bdc-4600-b143-aff1947a9907",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "412e5ac6-9472-4b67-9c39-f480810a2429"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bc2b961-c550-4a77-bb14-aaecfd477896",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaaecd2f-4b68-47bc-922c-04f7d665ffe2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d1c7bc2-a164-44fe-9af5-7cd48a2ce8ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4aebc2c-db86-4f89-ac08-90e3680a7bf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4cdb5b97-3f9c-498f-ac23-4ba9b191ae40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfa1ac6a-ff98-4464-bf69-4f09ff0d22d5",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e6c0444-4ca0-4ed0-a70e-827a01b0140f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d614ab27-7144-4c2e-9b25-e5ae04df9b6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d795c4e-d48c-4bbb-9185-7bb279371bac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "21c7c9cc-5aa2-4fa1-8f37-bd26dfeca7ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25b274bd-5ea5-4776-b13d-16344856adde",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59d95386-0057-426d-a491-b61cb4f9a2d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0789e292-a607-4c04-83e6-73e4059eb548"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb35999c-d60c-4ae4-b5e0-6598f104c607",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "a246d5ad-6f7b-41d3-aa5e-877c84fe7c15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f220692a-081d-4077-945e-3f3d5c8029c3",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad850d7a-24b7-4af4-a13c-b4b9ef537d17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cec5dc6-eb96-4a35-b1b5-c94058a0f103"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d518aa7-b667-45cc-9f4d-afb21aea209f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f804770-550a-4f92-836e-b6ca53f82685"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33eca280-d8dc-442b-9157-2aa6f3bb5ec2",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3227331d-59d7-4918-9bed-70c2fe105b5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a97196b5-d13a-47a6-8151-2e50ff00b7e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1f388b0-b559-4f09-b6ca-331029740b56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a205c59-0e74-4adf-8584-7f8ba5865963"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57aea40b-87e3-41ab-9e1a-f1850d89510a",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6ee00e9-c8a2-44be-8a60-7a768cb73056",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb9505fe-c51a-4080-84d7-93d0f20b416e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ea94d4b-6d8e-4f08-9b74-81834223ac56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f88e5a6-fd73-4ccf-9670-7514a5bdbaea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3369199-87de-47a4-9270-5109543ee68f",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3bec58f-eb14-4f08-99f4-cf525608162c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06b1899d-d1f5-4107-adf4-d0478b39288d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e60acf57-e762-411f-a4fe-ab63f27e6eb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c78ca29-3854-4aa4-9162-f432221889c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee181f43-2076-40b5-8c0b-6254eca446be",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe9c8f2a-02ad-43f0-bfcc-e5af9160a8b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6350a669-7597-4be5-b4a9-09b69fef1bc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17fbbaee-9f01-499d-af36-12203ba76ff8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5175f08e-f80d-480c-b986-7e8dad70b257"
                        }
                      }
                    ]
                  },
                  {
                    "id": "766e0577-e7ae-469d-a562-4a25eba28915",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c96c5ef9-cd76-4afe-b5cc-6c759a86a541",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a21a2e07-910a-4fb2-b96d-ec342e4b91fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef9efc8a-a701-436b-ad60-1399d6d4c516",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a3dab78a-fcf9-44f6-bd68-46492c5347f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45aaa22f-a87b-4c75-a150-b0178a079e1e",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a30b3a5-b64c-45bd-b3e1-ce80764121de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c08ff2c9-617c-44cf-91c0-95c5d3858308"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cf464d7-0099-493e-9d7f-30389e5e4dd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cff52b90-a802-47f7-bb64-324879e83956"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71a261c4-d8cf-4c0d-bf34-6bada02a71fd",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d141aff5-c907-4fd4-b2a6-df2cabed4ac7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a632d5a-b934-456c-8199-a92aaa3a57ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b97ce1a0-0463-4b3d-b0fd-ac13d89a8963",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "486cf7af-7fcb-4609-adcb-fe95fa706c45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91dd54d5-8c91-42d1-a125-ca0ddcf9f692",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3e9437c-9ad4-49d8-bec7-7830bf469145",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d565da8-47f9-4606-b1ee-80a95e0769fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05089fb0-260b-4190-90a1-520633d15ccd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d0bd196-6910-403b-8229-0b8f0b62983e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "808a1382-3116-4745-b096-0da38ac7fcd3",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3654e9c0-bf92-4e01-a60b-b6d7a68f397e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bafa7498-2ec5-44a5-8563-82d1670d69e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0d89750-3378-4f33-8317-ea1d6b93475f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3bb1692f-ff8b-4d79-84aa-a19f4560cf4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e228228-d449-4400-a54d-d65ba2001a99",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36115824-26e2-454c-808c-bf11e30df61a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "386286a4-b0e2-4e04-952d-0aca73839aaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3393e0c7-75b1-4885-8e4b-f8cb96ff6e75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "381f1b4b-c9b0-427e-949b-f2d9aadf8e74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b6dd340-38d1-4673-bfe8-864b6af6ea81",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3d28099-0abd-4af4-b522-faeedf5716c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "481dfbf8-8a7d-49b7-8868-a2a528cd703a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48ac588a-8c21-4ce8-a71e-60db0721dca7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d145606-ef75-4080-8c00-b9ebeaeb09d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4533bbd6-3fa3-48e5-8dd0-2aa4fe2ee12d",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39213603-7526-46bb-ab66-5dbc793772d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83f7db2c-5119-4dbb-b201-e195323ee725"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e5dc79f-ce69-4281-a3d1-21a6a2745f7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ca64113-5725-4bf6-af0a-27603778f989"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b33924f-4b82-4872-9aec-95b05b249097",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d728110c-d8d7-47c3-9527-4ca25ade76e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a935bbe9-c541-4d35-b227-c0b4f2b2a297"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e905c209-4b84-41bc-b49b-2d5cb30c28c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "57f9ceeb-c950-4325-ae37-e1a81738bc59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "387f5709-2384-46b4-93d3-0da19da31a8d",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1a58d27-f11d-4934-9803-9a44f5e047b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0449fc85-fe15-4e4d-b822-19a887a34b01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed885447-e745-4b68-b9ed-66567302a569",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "925d504f-1295-4b52-ab44-7fd3ed428f4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a250ee78-5aec-4d0a-b633-f2640dc361ab",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18d9e2dc-3770-40d8-9d34-b6501a3ebde9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68c4d6ff-be63-409b-9291-5405372c9ddb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae9cce60-d03b-47be-8bdb-3e4ed5518666",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "434047b3-0ceb-4660-a1f2-3aad5925a803"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aef2caf-f11e-49de-9969-965cab15452e",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce492ee2-cfc0-442d-a3d3-8fffa13e0681",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c385835-a005-4483-9999-1f24f53c4985"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c7ad817-d955-4f33-93e1-5d0dc54dc669",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "754980a2-39cc-4f0b-ba4f-27afbffe0131"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93b81c72-63c8-4ee1-869d-b6aad88ed89f",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d4118e2-d3d2-40f6-bb37-97fd021777fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb81be00-1559-4488-a79e-795ba98861b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "150606a4-82d0-487a-bd96-b43989a59556",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5bce324b-9fb6-44c9-9db6-3dbf29cb4cc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdc47fb7-e37d-4065-a1ff-6f9db98aca4b",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7318ce13-ac8a-4af4-ac0e-1b74d113a87b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf617137-0423-4fd1-bd1a-a3f7cfe1e0e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffe7cb04-6b56-4970-b13c-6509306e0add",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ef24210-cbda-4834-a639-22b0fe1cd0e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "955e0dff-b73e-4eeb-a7aa-4102aab7ee8a",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76e4dac3-7092-42c4-ac76-dbcfc5a66cf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e28168f-71f6-424f-8c96-22869adaf9e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "060736a4-e955-477f-b24e-195d482f5dd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4148ff4-1b0c-4d2f-a54c-8a739e6de722"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2231de7-547d-4d10-8ef5-469704430c8d",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "448278a1-cd5f-4e2d-90d2-6013b98edef0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3b2ee90-8bec-406f-96ec-5b4f03d2b388"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c55e8d11-9645-442c-9fa3-dd6e3e55ac17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "96137c16-b70d-4bc9-8f0c-e3d0e280639d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41e251ba-93f6-460e-b8c3-dafb3d95104b",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1031cefb-55c2-4a29-98db-78e15a385dd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0a93da6-6833-4788-be6e-b3a9aacc0a1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e07bb8d-ddf7-4ee3-81f5-be08c0c164f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1697e08a-8ef4-4ac2-b1aa-fb560212568f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d9f978a7-b6f0-4737-9a19-353a394c6844",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4a2f837f-d078-4d14-b1e3-ab24f6d89b77",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ecc9b6d-40d8-47bb-8bfc-3e24b3a0f1d2",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "3f29af33-0e2a-487b-a8a6-9200397d800f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52cf2825-c651-4688-9e53-232de15bfdfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c38fa412-e683-447f-9d5e-a29e93f600f2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "02955d5b-8f90-4f75-9629-3eb48ba5b1ee",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "74af2d60-bb0f-4c03-b43d-d80c416dd897"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3ae16311-71b7-4eaf-a98e-34c5f13ee7ec",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9a27e541-44f7-4619-9f3c-0f98905b7838"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7e5c5358-3a50-452f-8298-edeef4a21aed",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b55c6ed3-8f79-46f4-8e3a-1574a91eeea8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fbf33d14-d6ee-4337-8198-328b73abbb81",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "21bd87e8-e872-46c8-8c2c-1e4b6bd73195"
            }
          }
        ]
      },
      {
        "id": "97643529-0aee-4b10-b42b-d561fda63dcf",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "d4948f38-6305-42b4-bd44-b83cc2b09dab",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b2d137bb-f3ea-496c-a6a3-78060311388e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8dcf5bb5-fa9a-4908-8a53-d54df3bf2fc8",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d8e7133-b91d-419c-ba20-9ba40e9b3a05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0571b30-9fb9-40ed-9674-07410d565ae7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52bb31cb-50e5-4384-9662-69be8aae16ed",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c79a33ec-c713-4845-a79f-dcfdf927e20d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75700222-1404-45d7-8206-2a704b86f9c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c311dacc-ba53-45ff-9a0c-c9843e5dff4b",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d61137c6-2ca4-44d7-b5a7-3875a151af50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c0e4c6d-a3c4-456a-96b6-09cc2e53903c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62233584-7f9e-4b6d-95b3-5983923bbf2e",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01a53574-894f-419e-ba2b-9e72dce85c30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd9ddc5c-3f53-4699-b967-db67c9ba757f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fb62a6c-0c66-4f1b-be77-30b8cdc6b2f4",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf2d7ad4-1904-4739-9e67-d05c64853070",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89ccdea2-3367-4297-86cc-9981046cf5c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4728edec-951f-4bce-a33b-ac7a48e7229e",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e049c691-9883-4b8e-a482-87b135627fc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b3e5608-b84f-4b9d-8efe-d4acd3c4e339"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdb4c643-9061-47a0-85bf-93b8843d010f",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e280d7b-0b99-4d7a-9c8b-29723ecbd8c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65df4ca9-aa80-48d3-8209-1fd313383da2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f524c9d9-a516-4b49-83e8-cf7e6ca68ef2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fea6aea-c738-4630-9dbf-5c8972779aa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cf78ff9-dcc1-46db-aa81-f879dcf11f62",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7f7facf-8215-4606-bbc0-ab1537580094",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4527d2e5-967f-46d1-b0b2-f6f73b7da885"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d00e90c7-61f9-4b5c-8048-b3d18bfee886",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7b43c10-6cb2-4cd7-a38a-1f9ad03d7428"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c902c8c8-3224-4a0c-a788-3bf2b200ffd3",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bcfc787-6b96-4fba-b6e9-605af571149e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e21a8c0c-e3ba-4a70-b3be-ea20bb0d5fb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cbbc040-2f5b-4396-80c4-31be685c9a64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c41fcd01-c4ca-4b11-ace0-eec60652dc79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "452a14ce-18da-475c-ae91-0ed9dbf0b201",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9cc6a3e-069b-482d-9248-5b147af2d28f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "026c5e58-3aec-431d-b18d-d22648a67c04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21091c67-421e-43df-ac32-02fadcbeab72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e614776-9158-40b0-b736-2b7628db6a41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2994d874-5a78-496b-9377-f0d51090cbb1",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccdec879-aae5-4aa5-8315-5c07eaea336a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "423b22db-cf71-4aae-a544-d0d4358b3281"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec767be6-7594-4079-b336-1dee4d9f41d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23938685-4cb2-4d9c-a254-ebe8d6a51934"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddba64c8-db32-401d-a667-e31d6937acd4",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93118551-c3cb-484b-8303-b542dc26cffc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d25ebc7f-7fbe-4371-b738-5bf24ff6c8d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "970450a8-1c6b-4515-b965-493e7628310e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b666aef3-d5af-4b47-a3fc-e2d2f607dee5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31ba8f3d-5334-445e-85bb-0de68a6d153f",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b64aa0e-a66b-468f-8c24-beeed0d8af13",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5022792-0715-454f-86d5-adcb0e6ef3fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61296d6f-78e4-4b1c-9c17-54f3801c026a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31eeaf4b-48e3-47e8-9d51-9fd783ae0dd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a77ab193-334a-4231-9454-7cdb9498e6e8",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c724586-e958-465a-b520-5be2d12f21a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57d186d0-a37b-4bf2-bd01-2aba8d7a21bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec4bd795-d8b1-4de2-86ad-ee764f7b625f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f08ae1b0-399a-483c-bb7f-6bb28082ae21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bf67b95-8bc4-4eee-b8bd-6db4b217f61a",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4113a6a0-0c41-4f86-94ef-e180e6d60329",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7fc49ea5-cf1b-486b-aeaf-f15faf1d8ad6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e778d153-5066-4f78-ab8a-dcfc12ed17cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a217610b-4909-482f-982a-ebfe96bb0337"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bb585e8-3902-4f2d-ac2e-44182ed36a61",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acc74f29-f6e9-4647-8547-b02d426e4281",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee792173-7b98-4e5d-8eae-b955a1f7cca0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c363f83-f7e7-4915-b1bc-0abf206f69cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2d71f92-9ec7-4042-bab4-1de8075e68f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2424155-9a13-461e-b11e-95ea7151d633",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d44f5c26-374c-4e94-a7ad-a9b3466d8445",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c2139f5-2767-49e5-9052-5bfc3bf1cfcd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39db2608-f2e2-44c7-b451-5e3115fe97e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d3bbde5-b865-41c0-b640-6ade5922833c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fa78cf1-6d91-471f-8481-b0945e3bfb11",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17b148a2-ffc8-443f-b64f-d00e181d6e5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8c2d914-0737-402a-8971-1a113087311e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7da7fa65-2ba3-432a-9dae-aa5660e97928",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "456dc433-711f-4d8e-a1dd-16709d99c168"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26ffebd7-7d16-4af9-89e4-694f70723ae3",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6020f5f-00f5-4a05-bfea-08b64ecbddd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "712a1cec-ccf6-4a79-abcb-970f61fa8249"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77e58b98-9908-457d-ac38-8a08a0f3b007",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5df8504-46d1-4532-a52a-58dd3027f0da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c42b513c-0c0b-4380-8d3b-afad40843d30",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e547e9d4-c7b9-4b5b-9ecf-dac0bfc7ae14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9730bdc4-ff0f-405b-ac18-b891c866138f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa563ddd-26aa-46d7-be11-87acfa8237ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c5e884b-ddbb-4d1e-a498-d6abd639d2b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ad43b94-0610-485c-89e7-afcc91f10a6b",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c31dc832-db97-41a3-bceb-40f441da4331",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08233a31-9f9e-4360-aedb-6fa3884c52f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b56e5415-e103-4b2f-8866-0b09ef7943f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb878179-3f2e-492a-8c6f-6b4d1f06a886"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c153e48e-3087-43ab-b7c8-d657206b0dc0",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03f40eba-d47c-4bf3-a113-f594f01ada90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23f5a670-6387-4eac-86b2-76d18ed287c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a35a055d-f812-495b-9e39-362f3207db2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfd30b39-d766-4e62-9e48-aef08b458f57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5954193-446b-40bd-a2c4-3859c55fa0c6",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "822a157d-0ea0-4fdd-a21f-ba35189e892c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1f0ead9-b83f-4f38-9b09-7e13fde83f36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e154ef76-e88e-401a-8576-b190d7760d9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "644c36b3-d404-4ebe-ae37-7165ce123efa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76c5ef45-e917-4a9f-a4b6-d381f0eaa6fd",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8031d2d-e833-4344-81b6-59585317df7a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17190b9c-e1dc-4500-ad1b-171c7a2398dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfec3451-6a2c-4f05-b2c2-b2641061c070",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6884dc9-7886-4965-ac1e-933ccaabdb2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5a92de1-4ab6-4e4b-ac22-065ec9ed9c3b",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0e42c9b-c938-412f-bd3f-820be53e9790",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "acf15052-f96e-4a0a-bae7-f2e91d8321e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff05e58c-2c58-4e66-8367-eab8ca5cb6d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07561b94-a18a-470a-9d4b-af4521649d03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7442ee6b-c918-481a-bab6-e22b48078f33",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7c99ea3-c679-4184-a906-15c1563d5c96",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70467270-79d5-4163-a9f8-1d51bb28aa85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d9ff3a7-610c-4823-a160-f57d8e7efecb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "517d02ec-0278-45f6-a260-4748bdc20a15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6667efa2-1475-47f7-b461-4f150b482ade",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a9b5109-20c2-4dcf-b686-77405cf77f73",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "520dac8e-9ec0-43fc-b306-d455ee5266d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b31ff82-fa7a-4238-9fc3-8c3be8198c4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79cc3d73-fc6a-45b0-8169-2a1d746b4476"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8c12ac5-ee5b-461d-97d9-ecd6cb393850",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9598a1f-acd1-49cf-8b64-ae1f1fdc2806",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "498512f5-391e-4081-a12f-26268b9c0bbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d6a5e7a-ab0e-4ffc-b65d-bc41f6ecfaa4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71a67ad6-b007-435a-bcfd-728eee5a36a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a34be177-8b6f-4173-ac28-477477ae4873",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28ef89a1-dace-49b3-bf3b-b0817aca3e28",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc186560-b0bc-4747-a103-935b86b05948"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff780438-f050-473d-9669-41f5f31d4f82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "631a8224-9cb8-4bec-9812-91400ac0dadf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23737ee5-14eb-4d53-ba13-46ed0cca4269",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51c34e78-33a8-4cda-a404-d28b8dffe124",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "213c7a83-60d1-4e1e-a3f1-cc1654be5912"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "552fdab7-82c5-491a-bb90-f9ee7603a7ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0265206c-a379-4e9e-abdb-ecd381afe8cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d3b512c-acf9-42a6-8c05-aa4ad70b9807",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ac3e899-76aa-4164-b4d4-7fcd9f643f1c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18562aa1-4a8f-4e7e-887f-b282a65a064a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "313b0c35-d055-48b4-8814-6b177cefe919",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9df89cc6-6dfe-40d2-90e4-850e82fc2e2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed20d080-98be-4dca-aa26-a4c3beee0335",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60098ee9-cc90-4c9f-9f96-c007b5fd0f08",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5aaf371-53bf-4ca3-afad-7272afa88217"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ad3f31d-bf5f-4bc6-924e-56cd2bd242a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9383ae2d-518e-491b-a875-7ab44298aa66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44efdfba-f715-4686-851b-fd4893e8605e",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c13945a2-d54b-43a9-9892-519dc8104717",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "391417dd-c5fc-4926-955b-11c691d8543d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2e1a0ce-19a1-446d-8c27-6e6a1319d1f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df718137-06f6-4a3e-b699-593f3b4ff5cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e62ddaa9-6c31-4296-89d4-120cc02bb2d6",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc390f94-76f6-461c-812c-c82404daa21f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14a10c92-8966-4c00-bb65-42a5fceafeed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1b1b258-44f7-4cc4-b610-a8d75b1f918c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55982f55-764b-4cc0-b6f0-b8c2b20e1e80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e4a20e3-8b29-47b8-a691-aacec400d3ab",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abfae1cd-777e-40e0-a19a-895c3b34f472",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d8783e2-e37b-4436-a2ee-240d9266e790"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e8c3542-f927-452a-b795-a47f40d091a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7db33bfe-413e-45cc-b6ad-4b29d9d2a84c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a9dc490-f18e-42b5-a54c-442e0a7e3f61",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f651e6ea-9548-479f-8c1b-31cad7a29398",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a84c5340-efb2-471f-b3bb-25574e2b7810"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d699893b-fc4c-4af2-a33a-b70718d54ef3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d9414d6-6e37-47c5-9db0-2f7f8a279483"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e79edf63-1737-42cd-b550-c7083d93e484",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfa07a9c-a3ec-46a0-824d-cafc2fa9842d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "201a186f-9543-4cfc-ab14-68e7e570ce47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b48c88a-af5c-449e-967d-3927e7fa2103",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1548d2f3-7100-4595-a355-f738df339b43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a998e559-1887-4ed2-84b7-17f4c2ef3924",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eee8bd13-b879-4544-8690-b75fd899e34d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "168540a7-0c25-4fa1-8657-62f514b1769e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a282d4b-28a2-4d71-bb96-630811410fc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a799bc5-a7c7-4ea7-8be4-c225ee09c1ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6f75bcf-da0f-4c4c-a577-f9bb8b3bdee5",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "245cafc3-4133-4310-b31a-94853822d830",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce776782-1169-492e-97fe-a5468a668a80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e558609a-2391-4ee7-b454-b18b9e9e0dcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6eb391c-866a-4d51-8304-8d8c1db4c72e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a97e9e4-1a6e-4ee7-ac0d-93da95416e77",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "555549e4-dd94-4e2f-8aa1-94928a4cd013",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "201ebe0b-dba5-488b-ba14-617f277a22f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d71a86ae-4072-4ca9-851c-3c507830bc94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a472d08-fe7a-41aa-a49f-c3e7da06b605"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11f7e482-903f-459e-88b5-732dbc392089",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d28be80-c127-4e10-bc6e-5c5e70fb1aaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bef3f4ac-6cac-43b8-97e0-1776175bc4f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "537fe462-6c52-4343-b8d8-587ada2b4735",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48848ced-d5f3-4087-b8ee-a4fe17ca89fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cd81f87-8741-4c7b-9809-3ffe7003a306",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38681a39-94a5-49cf-8969-dfd70583f378",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edaa8ae4-88d4-429a-8a44-64018e8eb5da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c96ff74-fe77-4ff4-a05a-3d6edea45ee0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60705497-88ca-426f-abcc-6bb18b14fa31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57498b22-b880-4fa0-96ff-087cc5b4c76f",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a41a382-354e-4c88-96cb-ff12ed11d1c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c182b8b4-dfb7-42e2-b6df-78417d795cf4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5873fc1-e934-461d-8819-a6e06800c063",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acb8f0cb-6e16-41ba-88a9-1d9aa761b5b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a88e6159-65cb-4718-a55b-2dbaff904a41",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c67daf6b-16ac-41fd-a963-5c03d72e0bd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "570bdc06-914c-42e6-869d-ab23ff25e9cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e0866f6-02ab-4f12-89e6-f27891f6a3da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef011c71-507b-4584-980c-f46b87102422"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dc97333-d06f-4b86-93a7-aa197915dd95",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eae0dc1-7f20-403e-823a-483ed42c76c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9f9d732-2995-4861-9566-59cc488127b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e46608a-325b-4d8c-a1c5-8cd6457c951b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cedbef2c-b205-4e50-aa45-e906bf9bac10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03a79900-d013-4251-89f9-5dd459a7daa4",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b39a9506-9c92-4525-a49d-4e26bdf0e7f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d011388-c3eb-4916-acba-ef07452a451b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c11f1a9-e4f3-4bc4-bf4c-404ec7b5b503",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "782e4aef-e434-477b-925e-63ac192e5825"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b3470a9-be31-4462-b405-5dec83dfe400",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fbb8691-367d-4d86-9f83-efc4ef822196",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19dfa805-45b1-4dfb-b055-d0bd821f7b87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbcf335e-a141-4844-9eef-11ca0b987dbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00e7936c-5580-4465-933b-3add0dc5d9d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f6881e2-060c-4438-a2b8-78a48eb9c27f",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69481730-4244-47e3-a102-fbcf42e37570",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50b97043-2f38-40f9-8400-ba901e4d2d86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88f462cb-ba70-406d-96c7-6fe6c7052153",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7963049d-b40e-4141-9b49-e6a84d932f7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaa02c72-3cc7-410e-85f4-bbbf26e2b9aa",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c3ffb7e-6851-4cea-9fd2-e3a4122c6538",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e21d72b-dcff-499d-912b-9c0b181423a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59f03baf-df1a-4b3a-bdde-9fc45803b235",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bcfb1c0-33e1-460d-8865-9cf0fa96c0dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "684abb18-a6f1-4bd9-8cff-db3ab5a578f5",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "861cde5f-5770-4861-9596-37dbb0c2fe85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "607d5a3d-4822-4b03-b040-d25d67e8dff7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcc26c30-b07e-4eb0-b8bc-10fee4bfbafe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59107357-6ee8-4555-9d92-97df7004049e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "235d0c4a-1525-43ee-a2d3-c4735b163534",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba6136f0-4788-4d78-ab33-11a7894d5b71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6d0459d-ee55-4838-80ed-002e26d445a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fda6c02-8180-4769-ade8-2b6f8751b827",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "080e8e6c-88a9-47e6-8e3e-a2781d39237d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b502d224-6365-483f-8a0d-630625448ad9",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "775c0d22-68f9-4696-8545-b47268a99f2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbd74c6d-2aa4-4ac2-b77b-3a1080a6e840"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4179be51-5427-4d2d-97e0-788241e3cbd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b078576b-e30b-41e7-a28c-9812652154d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "049c646a-c987-493a-a3e7-604aec2af5da",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bc63460-1e75-4b27-b035-47b11ef6b792",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18224e35-708e-4e17-bf4f-2d02c3ccb539"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06fd233f-45a3-43e7-9e6e-dfc9aae0e4ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18a7b4c6-05f7-4f65-a4e1-b3059ece5186"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c20482f-5664-4319-a98c-41ce7ac7fbef",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46b42782-138f-4aa6-a25e-89da696e7c4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5500ed1-5b44-49bc-b21d-ecfa0d664f87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0799c5da-f556-45ab-8a8f-5e74a9da5618",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad0c0699-98b0-4f62-977e-72765952f4c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a17c963-c0d4-44d8-af4d-7729c8844fbf",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c77e4d88-b96d-4631-9b1f-b532e7bbdc24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72249b43-89ac-4017-852c-262ff3102bb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f1ea136-6339-4fe5-b046-610235da3410",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7056d7f3-e346-4f2e-9c4b-cd5943024eaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a05e4d44-7fe1-4933-ad47-25873a284c8a",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6c97b24-b803-40d8-b1ed-0e75d4e82eb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d82ace4-7da6-4af6-934a-711895c40fcf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3890d4c-8c98-45bd-bca5-1227ca5c1c4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3eee2cab-d781-47bd-9986-7fdcc715f5bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "803d04dd-0af7-4944-b53e-b459663a5029",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aeca42b-45cc-4333-80ba-da9fe7008b97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf83ed6b-69cf-4d86-a231-416e9c3a349b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56737839-ef80-4327-9358-42b89b801b5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d1a909a-5404-4cc7-972a-fa920270099e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16ca88c2-5e2c-43d5-ae33-fb7689e77399",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d783361-bcc6-4fe3-85dc-8a43696516f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7237a51c-58ad-46e2-b6d7-f666b3079f22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a3ba169-1833-4b97-a289-b7450359333f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ba41c5b-b460-4a65-941b-cf5446e74a9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51b954c6-29fe-468b-b622-837bba28d23d",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "081b5487-055d-4338-b1ae-1a8828d91642",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2b2ef1a-c13e-4cd8-9f41-af83ae65c8e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60d7d260-8e30-4952-bf85-0f0e19068304",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5430e640-dac3-41a5-85d6-c2bf96eba1bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92a67a40-9f0c-4f9d-b13d-7ad61c4b665c",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bd46af0-259e-4cc3-b79c-742f1dc19bf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b51898ab-8f7e-41c0-b81e-966bf4bb1c67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edd85547-dd5a-4939-8ef6-3847bab821df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "412a0aa6-b2b8-46cc-8a96-fecd20b1a686"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce2aaac1-99a0-4178-9874-3250c6e91b4a",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5d814f7-fbf3-40e7-99f0-0703bd6d1c4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9d88775-e177-45e2-9980-81c71751976f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5779fd92-2d53-4528-a1be-fce18912a4d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "904b0e2f-7861-48de-a84e-1896d689ace0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c8113f2-c9fa-4bd1-8f49-584becd40e23",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e300a08-fd97-42e0-98fd-6866acd23c03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbb1e79b-4bf4-46f0-9198-c44402ce1ac7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0c51794-7f6e-400b-8268-00dfbcab4178",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6df18048-b79f-4330-ab41-85ac92fd4a40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a94df284-c2b0-4425-915b-27795efc5d34",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e463fbbc-6dde-4701-ac5a-d707c9478ceb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4511b4dc-1601-463e-a0d9-bb5ec5cebc20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddcf8bc3-7d22-4b8f-bf99-268b25951f2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dc9debc-b500-4442-9874-28831832fbc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6a9c892-c669-418c-af4a-4b5ab2fbb3fc",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06655646-20a6-49ca-9a8d-5eac33f35e90",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6958f88-c3e7-4b48-86e7-0bbf5e43056d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc922922-f34c-45a3-8090-90d6821e2902",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffd99f33-d3c6-4e4c-a947-5c4ad7e77a8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d8ada66-0e58-40cd-9819-b32e4b581d2b",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92590b1d-d5b6-41be-9f27-2d3f5285193f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "acacc8a3-bf9f-4582-880f-95876b8be521"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa90d96d-2b9e-4613-b8b7-20e4ebbb8729",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3c7f0c1-e715-403a-a924-fe24c24e9130"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f7ce99d-8213-410a-840e-b8124cfc7b58",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a7eb6f8-afd8-4f3a-bfd8-3dce9b2e911f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53f9f94a-24c2-470f-ad93-3da3baafa513"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf79a5bf-4afd-49b4-847f-8e3731e7d600",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e08936b9-5424-40c0-875d-28fffbf00a27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30f2c290-0137-4ecb-8de1-a2a000616e1d",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf499ee0-53c1-43bc-be35-88bb0d4012b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33d22bb4-1504-4b32-930f-6c66b558fd28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65229114-4b7d-4f10-b374-b6b88e821183",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a40df625-cc7e-4a7e-af34-738f750d4e92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "475e44cf-b8dc-4025-b422-c4096e0a9adb",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddd52fbb-e9eb-4779-8d6f-40803bd5712b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec016900-47b6-4266-90e1-821bd5193540"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9e54378-1fe0-4cbf-8246-6628294bce06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fcac5bf-7222-464b-8491-fbe54ce4fa12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "656f5b74-122a-4f00-8589-a67a6de19b57",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "140ad0a8-6076-441a-91ca-2c4975443e1e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f87f46e-d642-4cff-bab9-6d7bef79fb30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a84e9d18-b81d-46e6-bed2-98df95f51802",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a63db592-c24b-44d5-95ac-dff03209dcd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aee98f3a-2bea-49e6-9d85-aec1b65e8cf6",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cde27de5-3289-4765-8ad7-680faa40e2db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff822a4d-9821-4206-ac8f-593f0a10295a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3726b4ac-bf5c-4d90-885e-7b59a24373ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c948d52-6915-45c6-b2e0-e61b703c4736"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad2be95d-5fd7-471b-b79b-efaad414c34d",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abfb1a05-1d68-4cf4-878c-b2b28cd7b16e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95af5748-9981-413c-956f-65078a600226"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89cad403-58d8-4391-be4a-491a30875f4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c314f0a0-2f84-4131-9ac7-d0ac9956cab2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91633c98-16c3-40cc-b151-9d16bd6d6565",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e21f1c7e-2632-4c4e-a754-0464bd40e787",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc08b2bf-7ad0-4b04-b9f6-5bf011de8bbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "242ddfed-1562-420b-9255-3ad0de90e0cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "581fff1c-709b-4f91-8600-e32abadf81de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7d13579-a03b-4448-845c-5afdc25d66dc",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af49d138-c125-45db-bfe9-5224660a1b71",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b64bc6ff-bcde-4780-a605-d4d5f2459a5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd967f8d-4d49-453b-b474-d048af6e1576",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6706f3d-99fb-4eba-984f-fdfbe8b86e77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3a0f2de-4b77-4162-a64e-d48c8bb8a1d3",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f429081e-6174-4ae5-814f-e4da4bd76403",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59b774ee-c7c3-4f73-b7cc-8b4370fc0499"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa40a9d4-4133-4303-8fff-b1c87707bacc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53bc6132-af54-490a-8626-9adde6712611"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f52cd11-3bb6-49bd-aa8e-2d7a44ef4fa4",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7ca717d-cd2b-460e-80cb-f9806e350f0b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c75a4f1e-2ee6-4803-8f1a-c4b8c9847d48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb9214f6-6a10-4162-bf74-c5bd2d4e23d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cae022c-7b66-48b9-86c2-133bb3c91eec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9ab4e4b-67df-47fb-b950-5d1cbd88be8e",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d038fb15-4ba2-4214-bea9-e5d37ab70c74",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c03f500-cfc9-4fa3-95fe-886cd14070aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "350fcdf0-832e-4227-a97d-028fcf94a4fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c184e32c-a304-4c8a-9c57-84a083fc9bd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d05d656-c4b0-409a-afeb-7f4d53ebc757",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c6ecdbe-9675-402f-a0de-5aecf77f7251",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ac97af8-fb27-4640-87af-7cfd4632fc74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cee80a02-c36b-4a9a-a925-b5812c6fc119",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52e20162-da9f-4a38-97ac-d3f62e99abbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab692a13-a78f-45d4-a20f-f74ecf7401fb",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dc2af84-2c19-4d09-9832-d4a572d6c44a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3322db84-40a8-4a25-a694-62717d549f55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "323c08d7-11af-41c5-b019-44639a061865",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb6bc6ea-3a6e-40c9-b5f4-b7b9a30c2fed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe3d3c40-b5b2-4dec-9780-02de938b81bd",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9d02d97-5299-4b6f-9cd4-47501d3bc1a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5964e243-faa1-49f3-8eb4-91d428831be9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c8d7555-3995-4bbf-a20c-a2ab38696c89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d893fe6b-9a46-4960-89d7-5b6bef2b2fef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "201edf7a-a30e-4e9a-9a6d-6a9a31e36544",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b11cbf4-c568-441b-8626-d7bf4ac3676c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09786764-49a4-4048-82f2-b698a6c61239"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "481637f0-5895-42a8-9c78-3532b58615e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0b2688f-736f-4de2-94ca-a780fc6c1bde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23f68da9-bf65-4c80-84d6-2ca985980328",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6d309a9-d03c-4c3d-9431-500f9eae323b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "115f9650-135f-4815-91f9-5c80bf15db20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dca94ca-adbe-4ce9-957b-601f21fc21c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5799ef1f-4aa9-478f-95ce-16292e64bba4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab84c859-3efb-4336-903b-fa9cf73eff6b",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cdb6fa6-afb8-4b0e-86b2-22790b4adb7c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ed3cf65-f491-4b18-b0fc-835ce38cf128"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89d6a273-09c5-4e5e-a47b-041c4956d6a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa5c6ba4-fc1a-42d9-964f-f5838560a377"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e2853f6-815f-42d5-add1-d142dc1f85f8",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b4a7ac1-7d48-43bb-8560-e024c9489958",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08ad2188-d7e0-4af9-9482-dd8aca9d4d0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "182175ee-a50e-430a-b49c-a552e6eea00a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dedf4ea2-edce-4d78-9564-03b94e09f6d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09320d3c-4ea2-44f8-ab8a-b0612f680baa",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34617504-b9db-4dc9-873e-7fcd2a6801a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22f615da-8928-4777-81ae-b4e4cf72ff62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e56464ec-4e54-480c-b5eb-809d9a596125",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "458ef8db-a493-4cd2-9e85-d8724c25b71a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19ee84a6-e684-4162-9ca7-bc6d1cec5f4a",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d2877f8-b986-4012-b073-d4c84d71e2a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5034bff5-3914-427f-ad39-c28a626406d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0e90d25-ce6b-4a2e-9447-898e14c26283",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d87824af-810c-4aa6-a5de-51a0e3d53ed9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4684460f-d4a3-4cfc-a950-61dfe242d042",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa9e54ab-692b-4df6-8ac3-d87c9bc4639b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bea2e165-a17c-4879-aefb-17f74f73d30d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83dd408e-211f-4b48-b181-cd1aa9dacfb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a42ce3a-ce0d-4585-af32-6582cf59eb6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79e3dc1d-adf4-4eec-91b8-98f00d3f836c",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24e37517-b425-4928-8ea6-f479557a596d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d6f99bd-d338-48d7-bdcf-866c017dc6bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "370ed927-cb69-46e1-855d-b1ce0be712f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea4a22b8-518d-498b-a87d-3fd0bc0b67d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff1c2f81-7bbb-4b82-8e0e-d325a1eccb70",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "421d9e03-5c84-4460-88e1-a9c24c069fce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89b63529-70a4-4f97-b15d-d9e6b0cd6fc3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb9d98fd-a7dd-4f88-8cdf-40e00de219c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20a81d73-e631-454d-9fc0-7dde47bd7878"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce4fdf03-87ab-4be1-802f-efa47a596f77",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b1fc414-8fa4-4900-9923-1129e8a33958",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7791c396-c655-43c7-9816-0e5d585f79ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6ce7a33-2b66-49ab-8844-34d7db99a55c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dec32b59-f2d7-46c1-8c03-6fa6d6ff5caf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dda326c0-be4f-4afc-987c-8bd3b443495d",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27379664-b905-4cf6-a0ca-62a0925e5559",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8425c429-3860-4ce7-a2d6-7a4b9c96bb81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d97a8c1-9a2d-4c34-86a7-41e405f15cd5",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a498734a-239f-4f00-8feb-4cc601561505"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c5e52f1-8e77-4bd5-8250-ce0733bb28a9",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e19db331-2dc1-47cb-bea6-66084497e177",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e20dd63-250e-4fd2-ae94-be049b855128"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fa1b2cb-9bb1-498f-b269-a7d4c10d84bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6273ce9f-1ade-4509-abf3-facd680b0e64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d330323-9b07-4c1b-a805-fa1c86ce76e1",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02a1e840-3fcc-4f84-a47c-c378a2bb5323",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c0873f4-643b-4318-a511-cac45edc1cb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "947396aa-52c1-44a2-b6df-e8cd12cdb986",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d74c0b9a-ec85-4b59-a760-cf7cffffe3f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0ea82d6-b226-4d16-8641-19313bdbbb55",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07c40b97-5ced-4531-b261-97d7b716baf5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab635acb-53ff-431e-a46c-e8c5477616c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdc8fe50-5127-474d-9f42-a7bc8be4e914",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52bceb66-7698-4f97-b158-05d45c184607"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59dde71f-f042-4dd3-b4f8-40e36c808fb2",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3414ee11-cf7f-4317-b310-5e41172efe39",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f2582c7-3a33-4a16-a555-cd6b62b6b968"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a713bbe5-ff4a-415b-9e8d-a88637bff179",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "640d3dbd-9912-4c1c-b0bd-1f613a9d70bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7a20970-ba2e-45c4-a8f5-b6e8aee1e471",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7de0b958-0f3c-4551-a02e-04a7b56096af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d68b93c1-4076-4c06-9f8f-efad3a037196"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a6a6fc3-8c1f-424c-a5e1-05e071424983",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac53b0ed-1985-440e-904f-5ebd3531c1c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05415413-ebe3-4975-bfe4-ea98eaa96ddb",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc183cb1-990c-4347-8120-b7f7205d401e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "96fbd667-ac4a-4758-acf6-e302aff9b2f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "938c37d5-f93a-4c27-9c87-5d38bd32f898",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a7c7a64-8252-45f9-bf52-bd5bafcd4e05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50cabaf2-07b2-416e-8e5f-59aa1e39961a",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9ef93cb-659e-41ea-8dd5-ead38874c89e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "753f5ff5-dbcb-4660-b865-6e6942befa9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "262a0b23-a9ef-4e8e-bd4d-6afa1f62cd82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1593ef0b-74c1-4883-bcc7-66c0220dbe4a"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "767fc4db-c316-4392-a0ed-6dead2b0809d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1d022f79-7337-4c5d-817e-842e26ba561a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "63f9ee0c-8da9-48ff-8ef2-6e08f6134be4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1b798166-d6d5-4734-8b67-fc9e92410d65"
                    }
                  }
                ]
              },
              {
                "id": "e69a4234-db4a-4dad-8dc8-190d7e195a03",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "44d0dc57-88ca-427d-8629-82c63929ddc0",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26bf56c2-1a0f-43f8-834e-eeac7c5cd689",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "99a67b7f-98a8-46d5-817f-4add4416d222"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f4142e2-b88b-4d7c-a1ce-a2adda95af28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "edc62417-6557-46f3-a3b3-6ca44d677c6c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5c20372b-8f99-43f3-b525-dd0752eca246",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "aa0c3637-0c58-4a70-8330-11203579ed2d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ca6c57b2-e0c4-4913-8e7a-5588fe88522b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "db6ed041-30d6-42c4-97d4-577a066d9677"
                    }
                  }
                ]
              },
              {
                "id": "35ec7ab0-63a8-4384-a3df-ec4cf3ba424f",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "76d15fe6-2a8a-4d08-9658-3b851adf1b4e",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61072579-0c5e-402f-9222-fc51ad24af11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "ff7ed204-fd1e-4cc2-8d5a-530656c5b161"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ef6d9f3-d063-49b8-926e-9b0741a28bc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54e6bd74-4691-4ad7-b9a2-5f8e0244483c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "a99eee0d-70e6-46a0-b08e-dd60ca953736",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7dd0528d-dfe6-491b-bc59-9a7bb63f1e8f",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6382d5c8-e898-419e-9513-1199204e3f0a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "927e293d-af45-412b-a280-ec6a7216073b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "843174ed-e7d3-4fb8-8e14-8815fd0d050c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e1fe3bad-c545-49d1-bca7-09df6512c148"
                    }
                  }
                ]
              },
              {
                "id": "98a9bb66-d350-4350-9bee-ca9e67e9c982",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8baa10d1-dfee-4a13-bc36-2c77abe77cba",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "d1cbf7d8-1886-4012-bb53-df8dd5dfd89e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "635c63b6-0fd6-4a8a-b2f5-07fded12274f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "168a6523-377a-4195-aa8c-9d0d3d2ad96f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e63cca57-e91a-4019-9fad-19438ab2ae85",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "dd49c59e-5643-4848-a0ef-4900186c965b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3b93f77b-bd4e-4ce3-b061-4586ca850275",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9d5788fd-307f-4083-8ed2-43c2fc0cd79f"
            }
          }
        ]
      },
      {
        "id": "e54ee268-f4af-44c8-a8f0-f16fe2452d2f",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "0e98eae2-30d7-488e-b245-a0ccf46f1e53",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d6aeeca1-a2a9-4a50-91fa-f48b91b4f797",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4a52f1df-8c19-4fec-b824-e349247dd011",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e947551-697d-4057-a3f8-c371463fbbf9",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "c0b6359a-9402-4e6d-8a33-8cf6999ee9f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39a7079c-3bcf-48ba-bab1-16a11a31f2e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4415fefe-41a9-4a1d-8a1d-f9143e8e2187"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2edde686-3b0c-4f3a-81f6-f0fef52cf786",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b159bb2c-2295-4f54-85d6-f0b33cbc7054"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "50f30a06-f457-47e0-a4d4-d7641f11398c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2f0f01c7-7bfd-4b72-891f-bb0bf22b6303"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e52a4828-ce4f-45f8-bb3b-e3aa83f9a0b3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "8d8bdf5e-e4da-41a3-a743-e97e2578d393"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "235cf555-ed6a-4486-a258-c2d6ac36cb36",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d47da7bd-43bb-467a-a531-2e24495141a8"
            }
          }
        ]
      },
      {
        "id": "33c73d76-1e3b-4b70-ab1b-f78250c6d869",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "bdb9e7dc-7c00-4061-b406-a146d2acdf7b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8a42bf15-e2d3-40ff-981f-bff5b49d8f99",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "373cd7f6-0b87-4ce1-b327-0ff317a7b9ed",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32615f49-f5db-4522-99f3-d85cb928e623",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "730cd9a6-2b40-49d8-a757-72d5466e7789"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f956072-a3c7-4738-913d-15fcbaa1d403",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "60b677d5-7f6e-47a0-836c-41b0a3f31aac"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "367af728-cd36-4142-b043-13004e9cc90e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "41288803-ae69-40c0-83f3-a0c2dfe39f24"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e24f7c21-63b5-484c-84be-bc3e60020dae",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "60e9602d-ca1f-4e9c-99b7-8cf5c75213a9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "29b92687-3148-41d3-8735-f0b6e94bfac8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "65d52c6c-2b64-4599-89b0-0334b354858d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c2408587-5fce-46b4-99ad-6a129a168ce9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "154e75fd-dd55-46d2-8fbf-fabc1a61c6ae"
            }
          }
        ]
      },
      {
        "id": "e7654ead-0139-45f5-90ad-9e5940b0eda2",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "46eea1b7-e190-4bdc-8c8e-d629a06260bf",
            "name": "Negative Testing",
            "item": [
              {
                "id": "89554a61-d549-4556-8f1a-ca70740e386b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4daf48f7-9233-4815-a584-e4787707cf73",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5425085a-afba-49d6-8153-154a47469bb3",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "43946c1a-29a2-4c2a-8d1e-2f122b0c1758"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43933788-8ccb-494d-80d9-6f3769b31f9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5a2dce41-9f0c-4176-a66f-59a887927c66"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fda50b14-66dc-4bab-9c1e-9a93f9433153",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "799014ac-5115-4702-9a2b-2348851150ca"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a15071f6-d00d-41e1-b1cd-a58144ea1085",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "691e2c81-1745-4a92-9ed3-0b29cd00c422"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "723061f1-0a4c-47bd-b47b-b624a3485892",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "dc2aaf5f-f524-4230-804d-bda76d399bff"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4761bc9b-82fb-432e-ac9f-2619602a87b0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "effa0131-b6c3-41ea-bbbf-cfaf6585ee2f"
            }
          }
        ]
      },
      {
        "id": "24b40a28-833d-4199-9ccb-77435cddd31b",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b2e656d7-fe1a-4093-8c78-19ddffb73bf2",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2b692f95-c009-4eec-86a3-1db313fb7585",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "0ee2da63-a499-4127-9f15-8bbc66573b6b",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "57673f47-479d-41ce-9fb1-5f6ea45fc0fb",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "72fe20e0-2a0d-4995-86f2-3a54e6d2a41d",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 24
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 100.27017543859645,
      "responseMin": 6,
      "responseMax": 10963,
      "responseSd": 686.2857013280527,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1703723656108,
      "completed": 1703723693763
    },
    "executions": [
      {
        "id": "66486351-e75e-4f3b-9733-76dc5d2e500b",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "50e1c953-2d34-4c53-9e80-667c784fb9c1",
          "httpRequestId": "0d9c120c-770b-46b5-98bc-66bab5d42c1c"
        },
        "item": {
          "id": "66486351-e75e-4f3b-9733-76dc5d2e500b",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "45346f1f-f63e-4da6-949f-5cf8af6933f1",
          "status": "OK",
          "code": 200,
          "responseTime": 39,
          "responseSize": 0
        }
      },
      {
        "id": "638dc66d-b741-4589-9af2-e60629175d71",
        "cursor": {
          "ref": "7b7b6874-d6f6-4405-9406-89e63fbe2883",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "45ec795d-51b1-4e6e-aa79-f48609945ccb"
        },
        "item": {
          "id": "638dc66d-b741-4589-9af2-e60629175d71",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "f69163f6-3dd1-48f0-95f0-30ea8359f431",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "cbe8b4ea-5ef1-473d-9ab0-27befd6765c8",
        "cursor": {
          "ref": "c47dbd4c-58a3-4f9c-bf56-052d8471a1f2",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "3d4a4ede-0b63-4334-90ad-2f8f671f3691"
        },
        "item": {
          "id": "cbe8b4ea-5ef1-473d-9ab0-27befd6765c8",
          "name": "did_json"
        },
        "response": {
          "id": "d1b82ceb-57f7-4bed-8090-30832645f742",
          "status": "OK",
          "code": 200,
          "responseTime": 321,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21b1f111-3081-4a95-b050-b1772b99e9e4",
        "cursor": {
          "ref": "feca2f81-70be-4fff-9814-e914d14ab950",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "a49d15d5-0279-4d04-be85-545bb7d7eaff"
        },
        "item": {
          "id": "21b1f111-3081-4a95-b050-b1772b99e9e4",
          "name": "did:invalid"
        },
        "response": {
          "id": "74680329-e539-4c5a-a2e4-9408d128cf92",
          "status": "Not Found",
          "code": 404,
          "responseTime": 836,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21b1f111-3081-4a95-b050-b1772b99e9e4",
        "cursor": {
          "ref": "feca2f81-70be-4fff-9814-e914d14ab950",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "a49d15d5-0279-4d04-be85-545bb7d7eaff"
        },
        "item": {
          "id": "21b1f111-3081-4a95-b050-b1772b99e9e4",
          "name": "did:invalid"
        },
        "response": {
          "id": "74680329-e539-4c5a-a2e4-9408d128cf92",
          "status": "Not Found",
          "code": 404,
          "responseTime": 836,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab68e4c2-cbbd-47db-ab7d-1cebcc4f0e9e",
        "cursor": {
          "ref": "22c38a22-661f-420a-89b8-3116c833e764",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "b45c89a1-6351-44c1-9707-65360d4a78b1"
        },
        "item": {
          "id": "ab68e4c2-cbbd-47db-ab7d-1cebcc4f0e9e",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "4e6db907-efac-485c-a397-41593e027e2d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 36,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20ba0ebc-bd04-46df-8baa-d1efbcaad79c",
        "cursor": {
          "ref": "2b29c817-0208-4831-ad79-0d2db1660160",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "92172eb2-ba5e-4bd0-802e-5cd7c10d2322"
        },
        "item": {
          "id": "20ba0ebc-bd04-46df-8baa-d1efbcaad79c",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "d6a61686-19f8-40d2-b29d-38e078571dae",
          "status": "Not Found",
          "code": 404,
          "responseTime": 37,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "175bf1f4-e052-4983-8e1e-320f0c38cc1b",
        "cursor": {
          "ref": "b89ca090-e290-4579-b73b-7dd45e55c73c",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "eee4172f-6358-4832-a23a-10a67141b8ae"
        },
        "item": {
          "id": "175bf1f4-e052-4983-8e1e-320f0c38cc1b",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "2425f9a0-fe29-410b-a4f4-7e1b16bce89f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3855dd6-48f1-443c-b14e-92b1c17deff4",
        "cursor": {
          "ref": "2b70a808-aa52-4f3f-90f2-d575b1718440",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "458716c0-550b-43bb-95b2-d55fce97b4fd"
        },
        "item": {
          "id": "c3855dd6-48f1-443c-b14e-92b1c17deff4",
          "name": "identifiers"
        },
        "response": {
          "id": "95b75ad7-3190-4b5f-aa32-6ec5435afb83",
          "status": "OK",
          "code": 200,
          "responseTime": 93,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ae8054b-0ee7-4461-9b43-b12555ec196d",
        "cursor": {
          "ref": "c67822ff-5362-41df-b688-26749c8df46b",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "444aa11a-6946-42ea-94d6-530e6252e924"
        },
        "item": {
          "id": "8ae8054b-0ee7-4461-9b43-b12555ec196d",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "970bb4fe-f467-4c7b-a607-4f9c098b2d88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1058c75-a253-4324-94eb-0a1919c5b9fa",
        "cursor": {
          "ref": "bfd87e2b-2ba6-4861-8a93-34dff1c3bbb9",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "a8351802-4961-42d3-a2d3-9af75a12503f"
        },
        "item": {
          "id": "e1058c75-a253-4324-94eb-0a1919c5b9fa",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "2df27c7b-3e53-4f77-9864-35f29aef7c36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49d41776-e18c-4785-91d3-adc64e1d1ecb",
        "cursor": {
          "ref": "1ac120c0-8329-4310-a767-0ceb3b14dceb",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "a883fa00-3e09-4f73-86d3-1f48da654fac"
        },
        "item": {
          "id": "49d41776-e18c-4785-91d3-adc64e1d1ecb",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "c39e29af-9ebb-4ae9-b5e3-51b0608e6d06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e44a156-c5ac-41fe-a42b-24add7cb3725",
        "cursor": {
          "ref": "4bb5a1cf-06e0-42c3-aa2e-3b72fff6eaf5",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "c88fcd52-5e1d-402a-8a3d-ec7b2f689b6f"
        },
        "item": {
          "id": "9e44a156-c5ac-41fe-a42b-24add7cb3725",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "c48121b4-0c3f-46bd-ab46-c0906afed26e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "002fbc38-de44-4918-8fef-faf1682664ff",
        "cursor": {
          "ref": "c65ecea4-fa27-4e2a-8f74-ea445afbc044",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "e997f706-cbaa-42a0-9f04-4bac368d35ab"
        },
        "item": {
          "id": "002fbc38-de44-4918-8fef-faf1682664ff",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "defb3e7f-6588-4219-a8c7-0db844ad3c47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d8ce038-78a0-43e5-9754-7467d897356c",
        "cursor": {
          "ref": "1ccedfc7-1bfe-46be-920d-ed15de6405fc",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "0802b37e-d1a0-4edb-b8b2-219b53c7915e"
        },
        "item": {
          "id": "9d8ce038-78a0-43e5-9754-7467d897356c",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "5665edff-beb9-42d5-9710-11b27b58164c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc5bebf1-8985-433f-a69c-f310cdd9ec6e",
        "cursor": {
          "ref": "62c40a6f-3ed0-4d1f-9236-4af03812112a",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "68c5465d-75f6-46d3-b2b7-05ceff3c5e92"
        },
        "item": {
          "id": "fc5bebf1-8985-433f-a69c-f310cdd9ec6e",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "5ac20651-6272-4d8c-aeff-1931a1942ba0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76cc2b6b-5ebf-460d-abf3-30e22ab385f1",
        "cursor": {
          "ref": "2ac4c550-d113-449b-b1a6-de3ed12acb2d",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "1dba14d6-7612-41bc-9253-c88e917e7a1c"
        },
        "item": {
          "id": "76cc2b6b-5ebf-460d-abf3-30e22ab385f1",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "83af8993-2c49-478d-a233-4162848b0a0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae772cec-3ca7-48d6-84fb-435903f75b04",
        "cursor": {
          "ref": "48fbfeee-a30c-4bba-85a7-1c59ed9c87ec",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "4c46cc1c-75c7-4af9-8be7-68792fd93bba"
        },
        "item": {
          "id": "ae772cec-3ca7-48d6-84fb-435903f75b04",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "aac75a64-28b5-4a67-933b-b54d09d08a6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c63f55a5-249a-4158-9f32-97fc76e9e8f0",
        "cursor": {
          "ref": "cfb55e5d-0467-40db-b5d9-7b7b90773ba7",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "4498f216-63d6-43d5-b9af-8f345ba03abb"
        },
        "item": {
          "id": "c63f55a5-249a-4158-9f32-97fc76e9e8f0",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "7f273631-ae94-42a1-aca7-950c443a05ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24893db1-51db-4bba-a682-8e6f1d1a160d",
        "cursor": {
          "ref": "365294fb-abd1-4cdb-9cab-3d6a8238eda9",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "8dcae92a-8be8-4767-afb3-86d3f7221d04"
        },
        "item": {
          "id": "24893db1-51db-4bba-a682-8e6f1d1a160d",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "9ed8b4d9-1db5-4e83-ae46-74002a5115bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f57be16-1c44-4491-94d3-50f5d7701a4c",
        "cursor": {
          "ref": "079f8d22-df64-4e90-90e1-81526ede0c18",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "5cbd2d65-5ba5-431f-8bd7-40c7c0e253dc"
        },
        "item": {
          "id": "0f57be16-1c44-4491-94d3-50f5d7701a4c",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "1d426c95-6dd1-464c-bc87-d7010ef0d955",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa220712-4c8a-499c-93e9-0089db383f69",
        "cursor": {
          "ref": "9928543b-cb7f-49ab-9885-d8caa4eee7d4",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "65211ccd-6629-4cdf-835c-8b15de932fc6"
        },
        "item": {
          "id": "fa220712-4c8a-499c-93e9-0089db383f69",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "df320a4b-c5c2-4c01-bf3f-5c03c411a46d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa2401cb-b63b-483d-9446-72825493445e",
        "cursor": {
          "ref": "984f5cd4-8ed2-4ce2-a174-6f477cf64054",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "89a3bc07-6ff9-4c64-aa55-d3f0ab63e2fb"
        },
        "item": {
          "id": "fa2401cb-b63b-483d-9446-72825493445e",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "382b1d5c-66ef-449b-8e3a-418f7031a238",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ca79b5f-6fdc-461d-a05c-4736550490d3",
        "cursor": {
          "ref": "80b0e849-39d6-49d9-833e-79162564a698",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "84fc0122-71d8-452c-929d-eb6654b85ae2"
        },
        "item": {
          "id": "6ca79b5f-6fdc-461d-a05c-4736550490d3",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "9dbf2ce4-e2bc-46fd-8d4e-eb97b0183863",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45921d8f-b5c2-47b5-a523-2fee604c8058",
        "cursor": {
          "ref": "f1508eda-967d-4d21-a84a-30183cbd7efb",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "519bde99-bd7a-4c9a-8258-383da7302762"
        },
        "item": {
          "id": "45921d8f-b5c2-47b5-a523-2fee604c8058",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "3e660c03-c535-4044-aff1-e1e72c337d38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47201494-e323-45d0-a503-97c11571e05b",
        "cursor": {
          "ref": "2859df9e-07fa-4c94-a8b8-6f6493c2f361",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "73f8e2ec-9bf6-41d0-bd15-e19204a8aa11"
        },
        "item": {
          "id": "47201494-e323-45d0-a503-97c11571e05b",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "70f60684-559e-439a-b3e0-8df133ab2a70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85169550-27ce-49ec-8c9a-4ffb799aa579",
        "cursor": {
          "ref": "48693f7b-6c4f-4867-b009-8cf14ea9ccbc",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "4db4be41-678b-4b16-a2b1-22b776c3fff3"
        },
        "item": {
          "id": "85169550-27ce-49ec-8c9a-4ffb799aa579",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "aebb8f0e-d4ef-4eca-bda7-b8edf1b47764",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "550bdc65-b5a9-4799-ac44-14d4b6211815",
        "cursor": {
          "ref": "ed6b804c-f891-479c-9589-ea1ed7052d3e",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "7c071597-ffb5-4d5e-805f-ae057f9a3fe0"
        },
        "item": {
          "id": "550bdc65-b5a9-4799-ac44-14d4b6211815",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "1beb2cd1-3cda-44b3-969c-985aeaaeb1b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02c0978b-5fc3-494c-8f12-a3db8bcd7fd7",
        "cursor": {
          "ref": "a053e67f-4338-43c0-bfdf-19e599de5da4",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "a927a2b4-97e1-4329-a62a-83ecf861e82e"
        },
        "item": {
          "id": "02c0978b-5fc3-494c-8f12-a3db8bcd7fd7",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "f9a705a1-e278-4759-bfab-97863f28fe95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2daef127-f27d-4868-bc88-77488cedeb6e",
        "cursor": {
          "ref": "b718dc4b-3e9e-4b1f-bc94-c5117eb08f9e",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "61a6c4f4-c97f-4d42-b80f-614d878013f6"
        },
        "item": {
          "id": "2daef127-f27d-4868-bc88-77488cedeb6e",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "0e93b213-a2b0-4fe6-8662-3dd989f9ff2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67bec77c-4fd4-404d-b23b-57117fdcd426",
        "cursor": {
          "ref": "8c6f2492-9def-4b8b-9b86-24b9cccb92a7",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "7200c9a5-e137-47bf-9281-33bd0fac65ce"
        },
        "item": {
          "id": "67bec77c-4fd4-404d-b23b-57117fdcd426",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "0d9c19f6-0444-4884-9c23-99184d9cc701",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b5b8d58-1d1e-49b9-96d5-9f3d70d6894d",
        "cursor": {
          "ref": "5ea1e56b-46fa-41c9-a6ae-c8312a0eca46",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "8d78758f-8d2e-4567-aa69-b31078ad6122"
        },
        "item": {
          "id": "4b5b8d58-1d1e-49b9-96d5-9f3d70d6894d",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "1c7e3fb1-c860-4512-89af-becceb5f03d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "548bc80c-326a-4579-9f5c-d251710a7a76",
        "cursor": {
          "ref": "c794edd2-d371-4b2d-be45-e6702cd480cf",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "18d7f6cd-efe5-4793-afb8-c59f05c01243"
        },
        "item": {
          "id": "548bc80c-326a-4579-9f5c-d251710a7a76",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "3b5d3fb4-fe1f-47e0-b280-83bb391c3d08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adc0baf5-ce9c-47ce-b7b9-aaa023e63e82",
        "cursor": {
          "ref": "c467f242-b407-4617-940e-ed66a4b6cab6",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "4ebfc74d-2d23-4aed-9cd9-fb560ba8f743"
        },
        "item": {
          "id": "adc0baf5-ce9c-47ce-b7b9-aaa023e63e82",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "5da2be84-caf6-439b-b443-dd67fd1b6f22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1df4d11e-02bf-4632-9acd-32952b130bd9",
        "cursor": {
          "ref": "be7a879f-869f-4a72-ad62-74be98772df4",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "55f59dbd-7a57-4a78-a398-ef323385439c"
        },
        "item": {
          "id": "1df4d11e-02bf-4632-9acd-32952b130bd9",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "a8b8f797-cd2a-461d-916b-bbb90e82b0b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18061383-3380-4d20-8e59-d3d683e92cc6",
        "cursor": {
          "ref": "79061a70-49f1-46d2-85ff-fe8e3e90f1fc",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "aa276026-cd4f-4224-b024-0c9b63a1f6f0"
        },
        "item": {
          "id": "18061383-3380-4d20-8e59-d3d683e92cc6",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "ca48c026-afd6-4c19-9ee8-2b69c963d7ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48dad55e-d011-4d27-94a8-11473180939f",
        "cursor": {
          "ref": "fb777642-33ac-4a55-a26f-c6bfa8afdb49",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "5f59bcdb-e6b4-44cc-b069-6b2ba3f92f28"
        },
        "item": {
          "id": "48dad55e-d011-4d27-94a8-11473180939f",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "c32c25f9-629c-4e26-8493-2dc9079b2ced",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "920f7d21-be66-47be-a91a-dbab8d04fe18",
        "cursor": {
          "ref": "f9db7ce6-1469-4805-94b7-bfdd0e98757a",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "d07512de-668e-47b7-be50-d09f786f6b9a"
        },
        "item": {
          "id": "920f7d21-be66-47be-a91a-dbab8d04fe18",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "da409414-da6e-4fdf-b6d3-4b991eb463ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b54d9d19-98f6-41f8-aafa-c52c606623d8",
        "cursor": {
          "ref": "4fef8a4c-9d9e-4e99-aba5-4a5bc94c2c2b",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "f1bbc11f-8975-4d65-b8d2-ef8b47107e5b"
        },
        "item": {
          "id": "b54d9d19-98f6-41f8-aafa-c52c606623d8",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "5553248e-24e0-4831-bfc7-bf0e80827471",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "208bd581-b4a0-45fc-ab7f-961d9da2622c",
        "cursor": {
          "ref": "07ec6722-a703-47cf-94bf-04640702b6be",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "26b024fe-3f67-456d-a977-b812de8cfb1e"
        },
        "item": {
          "id": "208bd581-b4a0-45fc-ab7f-961d9da2622c",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "0dd518bf-09c5-49c2-b89c-dc321097e04c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ba383d8-b4c7-4663-a4b8-f63c45848694",
        "cursor": {
          "ref": "7e35633c-0942-4eef-9adb-d197036bb48f",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "d4a8da3e-3418-43da-ae58-b8e9c472d41a"
        },
        "item": {
          "id": "8ba383d8-b4c7-4663-a4b8-f63c45848694",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "6c2a4c5b-7353-4ca4-b2b9-39672c3e6285",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0712afe2-aa38-4c09-8144-31b3a3a11af7",
        "cursor": {
          "ref": "4e9a2722-252c-4ff8-b38c-a39dce5a3e51",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "b518814c-dea0-47e0-9041-b56da612ae99"
        },
        "item": {
          "id": "0712afe2-aa38-4c09-8144-31b3a3a11af7",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "6dc0a868-b0c2-47e9-a617-bf1433479859",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14ebd843-8d4f-470b-8b4d-9585b09fe5d8",
        "cursor": {
          "ref": "ee807aea-df17-4eef-b1a7-b77c85f7b8ad",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "1a5498a6-6f33-445f-80ed-47e1e2e5a1d5"
        },
        "item": {
          "id": "14ebd843-8d4f-470b-8b4d-9585b09fe5d8",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "a13be512-28c1-4739-9516-c43cc1942f71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd12dc71-5351-49c9-abea-6e70e9c89f21",
        "cursor": {
          "ref": "b95911e9-d28d-42ee-9e1b-4c6915258f7c",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "8bf731a2-c8db-4342-9885-86e4acbad8e4"
        },
        "item": {
          "id": "cd12dc71-5351-49c9-abea-6e70e9c89f21",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "3a676132-0115-4ab2-8588-9e643d3e4011",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c600f00-ed11-434e-bacf-2820098fb39f",
        "cursor": {
          "ref": "0b1ac9ce-ad98-4ab5-926b-4d0081ba7053",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "57323432-04f7-4eb7-b5b9-c82f5d780b18"
        },
        "item": {
          "id": "9c600f00-ed11-434e-bacf-2820098fb39f",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "0944e769-e114-4c37-aa86-29f9f49e34e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c40876a-d2d0-4333-bcb2-09b420e1d2d9",
        "cursor": {
          "ref": "5479f696-651c-4500-8969-af909bcddab7",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "8a7a644a-37af-4063-9404-9e34cc9802f9"
        },
        "item": {
          "id": "8c40876a-d2d0-4333-bcb2-09b420e1d2d9",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "b45c0e11-b93f-416b-9598-f90a83d3389d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17f3a122-80b0-4354-9a81-87a2c5c25626",
        "cursor": {
          "ref": "079fb338-73c8-42dc-9a9f-327a7e167859",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "a95e218f-e2ac-4959-9410-ee928d135556"
        },
        "item": {
          "id": "17f3a122-80b0-4354-9a81-87a2c5c25626",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "49600a7f-90d7-4eef-a3be-817895144833",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0980dc75-1f81-467d-a385-80968c7e0932",
        "cursor": {
          "ref": "2ab758f0-f871-4b26-b8aa-dc73131a8823",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "1e1f24d1-94de-47b8-b45e-c42502d9493f"
        },
        "item": {
          "id": "0980dc75-1f81-467d-a385-80968c7e0932",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "31940b07-c454-4cae-9df5-d69b81cf34ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e3d4e8a-89a8-4241-910b-a48c07e99bb7",
        "cursor": {
          "ref": "684d23c4-f01b-4f12-bf75-44f0d3056b6d",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "2fa12b36-717a-4669-bb98-11214d97c7f1"
        },
        "item": {
          "id": "6e3d4e8a-89a8-4241-910b-a48c07e99bb7",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "52b7d4eb-9187-4318-ace2-7a2f374e61c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e60a2f87-c7fe-44e6-889d-138f721fe18f",
        "cursor": {
          "ref": "64a597fd-64aa-4f2e-bca9-5c2b06b8be74",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "c8e83949-49c3-4d56-93a4-b34d75d5557f"
        },
        "item": {
          "id": "e60a2f87-c7fe-44e6-889d-138f721fe18f",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "a5cc46dd-b188-474a-85ca-14cdebaf3ad9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c54b827c-314a-4846-a331-937b3c4b5893",
        "cursor": {
          "ref": "57ef3daa-6f2e-43a2-b5ef-aeb4e1ffad75",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "c50959a4-3f4e-4103-bec6-a3fedcffaf4c"
        },
        "item": {
          "id": "c54b827c-314a-4846-a331-937b3c4b5893",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "e888382a-753f-416e-a58a-1b9547d7271b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fa999f2-5802-4e71-bc18-508deaa1e08d",
        "cursor": {
          "ref": "b7d72476-f2d6-4b14-9d73-dcaf18f0797d",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "8948b168-d25b-4270-aba4-d4148b9d0108"
        },
        "item": {
          "id": "5fa999f2-5802-4e71-bc18-508deaa1e08d",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "128b086e-cd84-4257-a5d2-224482cb3cd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "493ff2d9-58f5-493c-a91a-e089472ff827",
        "cursor": {
          "ref": "4f967649-a966-406d-8489-d3b66e9dbad8",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "51febaca-cdb7-4c35-9d4d-684198b976a1"
        },
        "item": {
          "id": "493ff2d9-58f5-493c-a91a-e089472ff827",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "d9b36531-82ec-4ce6-9f94-220abd38a164",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cf3ed12-3c69-4d05-a658-0fa0f48b4ac5",
        "cursor": {
          "ref": "9ea762f7-98b7-4918-9c83-0850a70b28e6",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "6f4fd816-0e0a-4792-852c-6e87ef30aee5"
        },
        "item": {
          "id": "7cf3ed12-3c69-4d05-a658-0fa0f48b4ac5",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "fdc46534-e8e5-4fc5-86d5-404d108d8de9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc4e7585-6760-44a6-8ae0-fe3c23410167",
        "cursor": {
          "ref": "c475da14-45bb-4f08-ac09-dec4618f4648",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "d390bf45-1f35-4598-a526-1ed05115ac17"
        },
        "item": {
          "id": "dc4e7585-6760-44a6-8ae0-fe3c23410167",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "e696eb1c-1e82-48ef-a532-2a5932f8aeac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a264e512-0e0e-4917-af6e-f6f41e261ffd",
        "cursor": {
          "ref": "d5e37a53-3da1-4fff-b6e1-aa009efc9bf1",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "24a68663-3fc3-4b3d-8bf4-bc9ab27e9c6e"
        },
        "item": {
          "id": "a264e512-0e0e-4917-af6e-f6f41e261ffd",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "ecce9e3a-099a-4713-8bb4-f1a607975f46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c3a6798-093c-4211-b649-5d3de0632a15",
        "cursor": {
          "ref": "84541da9-99aa-41e2-9c7b-71cfe9defc52",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "6a1521eb-1868-4fb2-9ca4-184caa6271bd"
        },
        "item": {
          "id": "9c3a6798-093c-4211-b649-5d3de0632a15",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "1c79db18-a117-4d3a-b393-40591d603d5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "377c6939-6934-46ac-b074-fb3ef0ecb294",
        "cursor": {
          "ref": "6444928e-2084-4456-b185-c72b2780f3bf",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "6fec437c-d017-4d3d-b945-df364392408d"
        },
        "item": {
          "id": "377c6939-6934-46ac-b074-fb3ef0ecb294",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "9e321c59-8503-4cb7-972e-3697ccf89596",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c7295ba-3d13-4453-85d8-c9abcb99d349",
        "cursor": {
          "ref": "b894e087-a51c-4657-9ee8-b90fa9690315",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "94b39d2b-d547-4040-8d72-ad76551edf9d"
        },
        "item": {
          "id": "1c7295ba-3d13-4453-85d8-c9abcb99d349",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "3d11dfef-247c-4f30-a1ad-42b8d051ed4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7af7773-e5ee-4e4b-91b0-a3c717adec54",
        "cursor": {
          "ref": "36f2802c-367a-4e70-8226-2a8fbd49e105",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "ed47a8de-0305-4cd9-ba49-63e3d057dd26"
        },
        "item": {
          "id": "c7af7773-e5ee-4e4b-91b0-a3c717adec54",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "2197f7bc-24b8-4adb-9e9f-e3f7588ad096",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9293489-0402-4e2c-8823-1dca252cf4a0",
        "cursor": {
          "ref": "1a413b3e-0e7b-4da4-b229-940aa5d4de27",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "63085bd5-17ba-47d0-b697-33bc2d7dae96"
        },
        "item": {
          "id": "e9293489-0402-4e2c-8823-1dca252cf4a0",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "b53f0db4-603a-4967-9f04-50fb021ae057",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eaf293d-618e-4ffe-8242-557d1873e04c",
        "cursor": {
          "ref": "d662b660-0a68-4381-a74c-dc6e5c17bc90",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "05105e17-9b27-4db4-8870-44e118a7abc7"
        },
        "item": {
          "id": "3eaf293d-618e-4ffe-8242-557d1873e04c",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "d6f0c486-06c3-41bc-9006-8586c1f44aa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5470049e-70a8-4730-8861-646e2a53e07e",
        "cursor": {
          "ref": "a64d098f-6502-4aff-94c4-3a74f8593aae",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "0e3fe6e9-9f45-4a13-a1dc-188dc113432a"
        },
        "item": {
          "id": "5470049e-70a8-4730-8861-646e2a53e07e",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "9537ce22-3d65-4658-98c8-6db8703bfdc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b408be3-0de8-4263-bbcc-b2966c87ebce",
        "cursor": {
          "ref": "24dab63e-5269-43ca-b78b-ba8ed2876d31",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "d554be23-03fd-45c9-be4e-cbf7a2cbfaa3"
        },
        "item": {
          "id": "0b408be3-0de8-4263-bbcc-b2966c87ebce",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "33847236-2ea4-461d-ae25-16ac03deae81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dae72ec3-71b8-4081-a328-73c076e7c151",
        "cursor": {
          "ref": "7cab4ecd-4128-4e69-a6e3-48fc4c5227c4",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "da689378-978e-4d3b-b445-1dfe6cce9ec3"
        },
        "item": {
          "id": "dae72ec3-71b8-4081-a328-73c076e7c151",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "cac001c0-fffe-48ca-aaea-684f3bfdd53e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5174dd97-511e-4948-9d05-78afeae59d86",
        "cursor": {
          "ref": "d4810704-18e0-4273-a015-8cc04f4c0c17",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "3c660051-d5c4-49cd-bc1c-f24d8ef02a0a"
        },
        "item": {
          "id": "5174dd97-511e-4948-9d05-78afeae59d86",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "fbd82190-e078-4c22-804c-9c9a5d9c5808",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daac8efc-946e-451e-ab6b-9db1f0bf59c0",
        "cursor": {
          "ref": "3e9a70b9-796a-470c-9d2e-2244121e36e7",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "a969dcb2-c12f-435d-bf4d-33a2bf0a32e6"
        },
        "item": {
          "id": "daac8efc-946e-451e-ab6b-9db1f0bf59c0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "35d80d62-05cc-497d-802a-3b280fc55dec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a2fb64e-f932-4eee-879d-884d99416a56",
        "cursor": {
          "ref": "c5775eb5-1d91-4a87-b9d5-42cdca67b3e5",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "4e2cd12d-87fc-4f14-a3ea-642c5a939b7d"
        },
        "item": {
          "id": "4a2fb64e-f932-4eee-879d-884d99416a56",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "efe8c7a9-6736-4f13-85dc-2f78bef6872a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3003331-ca38-49ec-865e-04fd4279d697",
        "cursor": {
          "ref": "9b8f0655-9cd5-496a-94fa-b2e5adfc278a",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "7051849e-6bd2-4fe4-9388-569c76b956ae"
        },
        "item": {
          "id": "c3003331-ca38-49ec-865e-04fd4279d697",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "0b0bc780-1fda-4902-99b0-cf9869e52847",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59ce7fd9-a295-49ad-9119-292682d4a3b0",
        "cursor": {
          "ref": "bfd9b944-2cd4-430f-a486-9541aa251905",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "2bc6abf3-2a68-445d-bdef-441dabedcd70"
        },
        "item": {
          "id": "59ce7fd9-a295-49ad-9119-292682d4a3b0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "4fc288b0-6b37-4394-93cf-7b925129f918",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a9eff2b-6899-4a70-b8ce-abc2afedf98b",
        "cursor": {
          "ref": "74e67b6b-5159-4683-b89e-5514db12ba5d",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "03205e70-501d-4ef3-bd28-fff9f0e269e9"
        },
        "item": {
          "id": "1a9eff2b-6899-4a70-b8ce-abc2afedf98b",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "f0fd5eaa-4bc7-405a-8fbc-bc1529ac84e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d3ea369-1858-4739-8a91-b7a781c8edb7",
        "cursor": {
          "ref": "e05a039f-da14-4039-bf5a-97fe0e1fdf34",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "0a346217-55b4-4c26-8958-832c691858eb"
        },
        "item": {
          "id": "0d3ea369-1858-4739-8a91-b7a781c8edb7",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "37cf3909-8378-47b3-8196-544304ec4bf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48a125e5-aab0-4eef-8ae4-e4220fcf0efb",
        "cursor": {
          "ref": "666f3504-27f3-4f6a-8cf2-1229effb3286",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "b7c929b9-99a6-44af-b6a0-6aabebb4cbaf"
        },
        "item": {
          "id": "48a125e5-aab0-4eef-8ae4-e4220fcf0efb",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "a761dd4e-7786-46dc-ab07-b443e932423f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abb251b4-f378-4cdd-b73f-394fa29843c8",
        "cursor": {
          "ref": "2cfdb9f9-0b22-494b-98f5-da940a726203",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "4dc0f018-43bc-49b2-b510-296552156545"
        },
        "item": {
          "id": "abb251b4-f378-4cdd-b73f-394fa29843c8",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "eefd1c29-d3f1-4489-9cdb-f2f4f96bbe19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49cb2c57-e540-4068-ac31-ea26216db022",
        "cursor": {
          "ref": "0eb85941-0007-4bd4-a41b-ec7f0ac30ad9",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "f0d51408-2a4c-411e-b668-456af3b06086"
        },
        "item": {
          "id": "49cb2c57-e540-4068-ac31-ea26216db022",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "bde7fd69-3885-4d74-9b57-56bdb96ac8c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c3dd14e-7af0-4135-b380-b3eda9aa8928",
        "cursor": {
          "ref": "d732b05f-d771-44b4-9c93-f3d99de06db8",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "46686330-5592-46f4-80fc-b9480d0680d1"
        },
        "item": {
          "id": "2c3dd14e-7af0-4135-b380-b3eda9aa8928",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "274cf8d3-a887-4cbe-a616-27a0a371a10c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac557f19-b1e8-4a0a-9d0b-33318d0f7aad",
        "cursor": {
          "ref": "99d05616-8035-4c8e-9dfc-9d53ea217657",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "63e4b2f3-843b-4b23-a74a-1b4aeabfd91e"
        },
        "item": {
          "id": "ac557f19-b1e8-4a0a-9d0b-33318d0f7aad",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "2c8007cc-2747-4183-a06c-fa4d1de86673",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50bf9108-ba58-4e6c-a392-c59162a4e8fb",
        "cursor": {
          "ref": "3b293981-4e3f-4ff9-a4c5-bb11ae9a732f",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "d3f8385c-a56d-49e3-86dc-759724962de4"
        },
        "item": {
          "id": "50bf9108-ba58-4e6c-a392-c59162a4e8fb",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "ddb718cd-3197-4306-9d90-b3de6f9f48b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6574add4-cbcd-452d-870f-af48aacf2dbf",
        "cursor": {
          "ref": "45cf9f4d-eb59-41c3-9466-c5eead53545d",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "18685014-c293-4e8f-bf60-019abdb91de1"
        },
        "item": {
          "id": "6574add4-cbcd-452d-870f-af48aacf2dbf",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "47381f0b-1b2d-4a12-9a11-94fb89220c06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9a34c16-2df4-41d2-9a49-4a428aac2413",
        "cursor": {
          "ref": "fb6bd004-9495-483a-ac15-7598f243c357",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "3a86e05a-fa70-48b3-b356-18a660b7b179"
        },
        "item": {
          "id": "c9a34c16-2df4-41d2-9a49-4a428aac2413",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "2baee389-55c6-45bc-81d6-c2440629bdf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c599ecc3-753d-4d37-a3c3-2f0b24a673ed",
        "cursor": {
          "ref": "124a1b6f-7248-4a06-b35a-a657bdb7dff3",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "a66d1be1-8c76-4e2f-9ef8-912fbad260cc"
        },
        "item": {
          "id": "c599ecc3-753d-4d37-a3c3-2f0b24a673ed",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "4792c1c6-e28f-462a-b3f4-b2b0c31c9754",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "158d7837-1197-4f45-83ea-098db0705eaf",
        "cursor": {
          "ref": "b7903756-977a-493f-89d0-355e789ce1a9",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "bdacbca6-6e65-4bfa-af2a-b9c01f21304f"
        },
        "item": {
          "id": "158d7837-1197-4f45-83ea-098db0705eaf",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "c85ab3bf-7185-492b-a5ec-aeb60a9a03cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27a1b2d0-d945-4569-8182-a87554459a0a",
        "cursor": {
          "ref": "8b70225d-031c-483c-b315-a17476cfb912",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "8ea06f83-8769-45fd-bbf6-9f75c148948c"
        },
        "item": {
          "id": "27a1b2d0-d945-4569-8182-a87554459a0a",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "354e71a8-8a0d-4a58-936c-174a0392c102",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5caff409-c543-4398-b554-6613fab65370",
        "cursor": {
          "ref": "5080d1c9-147c-4185-a421-29bf8d9cd189",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "f823fb84-5401-4a8b-9241-b5ac16607e8d"
        },
        "item": {
          "id": "5caff409-c543-4398-b554-6613fab65370",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "e4e4c578-137d-424e-93aa-f9c96f6fcc27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ddd8c97-aa00-46b7-978b-7581996be530",
        "cursor": {
          "ref": "a8c50477-e267-48b5-b565-5aab0252445e",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "051e989e-12a6-4588-b0bf-cc55d7eee220"
        },
        "item": {
          "id": "4ddd8c97-aa00-46b7-978b-7581996be530",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "f4b2c08e-c7ab-4a87-9eeb-50b286cbd9b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "780a869d-3104-4cd4-b56d-f8c4e6136f34",
        "cursor": {
          "ref": "7cdf8c14-57fb-4cbc-9943-2ac8b1a450b9",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "ab0efd65-0629-4ac1-a19f-bcfe10ff9bed"
        },
        "item": {
          "id": "780a869d-3104-4cd4-b56d-f8c4e6136f34",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "77c802d2-1d95-439d-b3c7-ab6aadbd63a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a3ea2b2-9b6a-4e32-83c4-376b8937c878",
        "cursor": {
          "ref": "f2dc601c-a05e-41bc-a4be-9c4fa33f962a",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "ffc22082-ef84-4fbf-8f38-bd09624af5a4"
        },
        "item": {
          "id": "6a3ea2b2-9b6a-4e32-83c4-376b8937c878",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "b426bda6-dc4a-49a4-9b2b-b120e81e26c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5148f1a-444e-4d49-a257-f0c887f33f05",
        "cursor": {
          "ref": "79fb37bb-7d9c-44b2-8448-2079ab1cb536",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "3f6018e4-6060-4e7f-a15f-61b305409bd0"
        },
        "item": {
          "id": "f5148f1a-444e-4d49-a257-f0c887f33f05",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "3d39ac50-33d6-4c57-b6c1-0dac91b3403d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4993633a-1cb2-4d22-af13-2e5453bc88c8",
        "cursor": {
          "ref": "478d4de5-8c85-457e-9fa8-275ad4ea2f0a",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "2d7911c3-f5b8-48f1-a5f3-95d348d400e1"
        },
        "item": {
          "id": "4993633a-1cb2-4d22-af13-2e5453bc88c8",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "bab530a2-0cf3-4b96-828c-cd3d2fc6453d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eef584e2-4944-4d69-9456-e07f84e98abb",
        "cursor": {
          "ref": "60f69fc7-e6ca-41b1-97ef-4f8e31657d76",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "8445263c-a5cc-4d36-8b26-ffce687dff28"
        },
        "item": {
          "id": "eef584e2-4944-4d69-9456-e07f84e98abb",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "ef67a97c-fe82-47a3-8c1c-06c6b2abe44e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b11ebff-cb3f-4c97-af24-cac90f6e15eb",
        "cursor": {
          "ref": "dfd8217e-8b19-4099-b922-9198d4af31cf",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "2de77a00-b34a-467f-8c7f-ecd69a1c9dd3"
        },
        "item": {
          "id": "7b11ebff-cb3f-4c97-af24-cac90f6e15eb",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "619587b9-d9f8-45aa-9de2-56a4edb22a54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c78815e4-3953-4129-979d-1cafc3a9ccfb",
        "cursor": {
          "ref": "1beb1953-4b83-4c0b-8ef6-4b0ef332b087",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "179ccfe1-d4fd-46d1-a59f-ddc014fff664"
        },
        "item": {
          "id": "c78815e4-3953-4129-979d-1cafc3a9ccfb",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "15255cfd-399a-4a40-a750-da73a72f2801",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f024c115-2a85-4eb4-8494-2c75edc4ee78",
        "cursor": {
          "ref": "e5452217-7837-4ded-b484-ffc1c21d0329",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "0efa6ff7-0372-4a4e-988f-4aafd1c34d17"
        },
        "item": {
          "id": "f024c115-2a85-4eb4-8494-2c75edc4ee78",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "bd978480-8afc-42fb-8eb7-2e8fab82dfdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c38fc0f-882a-4935-b0fe-e9a487cd5c97",
        "cursor": {
          "ref": "d6df0c23-d3cc-4e5a-8659-4f7b8c881800",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "7546012a-fde0-4647-9e1d-d0e6aa237c4f"
        },
        "item": {
          "id": "3c38fc0f-882a-4935-b0fe-e9a487cd5c97",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "348dcce7-466e-4abd-8c39-711619d0cd9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "743d3be3-12ac-4397-a29b-a0d0f7c168d2",
        "cursor": {
          "ref": "f9c5714a-5848-48dc-8fe8-7f62c13c684e",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "2950158a-2b8c-463f-becb-637b4f45f05b"
        },
        "item": {
          "id": "743d3be3-12ac-4397-a29b-a0d0f7c168d2",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "e0cfcb5d-0ca0-402b-988e-8a9f3b1d55c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f4dcd9b-2bb0-42e0-99d2-4e0487968d49",
        "cursor": {
          "ref": "c1318187-0d33-4f50-8f0b-6c2d2e3322e2",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "67448424-427c-45d2-83c6-a64db7009fab"
        },
        "item": {
          "id": "0f4dcd9b-2bb0-42e0-99d2-4e0487968d49",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "7f46ea6b-4c85-4db9-a889-a5e34fdb807e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68fab3d2-9f80-4470-82bb-101e0bd8f1d6",
        "cursor": {
          "ref": "02271d6f-e713-439c-8380-ba26baffdfcb",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "caf54401-d3cb-40f6-bfb5-6a23d13a3803"
        },
        "item": {
          "id": "68fab3d2-9f80-4470-82bb-101e0bd8f1d6",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "28c323e6-08f9-468d-aed7-7155e4566fd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8a14dad-663a-4b90-a3c5-1b35b0d44166",
        "cursor": {
          "ref": "1cdc99ae-7d7c-4c50-bbbe-cd9daa410870",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "2257567c-1d26-4a2b-8c65-0ad747bf3f16"
        },
        "item": {
          "id": "e8a14dad-663a-4b90-a3c5-1b35b0d44166",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "b5e9eeb9-2f3d-474f-9924-9f1eec08f3ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dff2abd-7de6-4464-9fca-a0ae57ab4491",
        "cursor": {
          "ref": "2577b2f6-7ba1-4da0-b704-1840bf29597e",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "96bea30a-616d-4607-abff-73f34e39ced1"
        },
        "item": {
          "id": "3dff2abd-7de6-4464-9fca-a0ae57ab4491",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "a87b58a8-31a5-4abf-a590-3c7c92b77af6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abb660ef-e13d-416d-8737-322e184c86ad",
        "cursor": {
          "ref": "151c38d4-848a-4cd4-8654-1d0cfb368093",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "904f9042-dbc0-4312-b992-3c637c8655ed"
        },
        "item": {
          "id": "abb660ef-e13d-416d-8737-322e184c86ad",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "de7f8ba8-e687-4053-a66c-03155a091587",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e36bd7e-ddd0-4fd0-9434-21c9f2ce7849",
        "cursor": {
          "ref": "e8e0f959-2a14-4c5b-a7f3-4b33d858baac",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "51afd477-0c79-49c2-b8cf-61c3c4825f2f"
        },
        "item": {
          "id": "7e36bd7e-ddd0-4fd0-9434-21c9f2ce7849",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "e5c673bc-9d1c-48f1-90a5-38f795f54281",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb6e6981-d0e0-4f48-ae4b-ea59880a14f1",
        "cursor": {
          "ref": "79faff2d-1e58-4035-a26e-bc47ef6f9de8",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "585b3dcc-e77a-44e5-8e13-5327837f87f3"
        },
        "item": {
          "id": "cb6e6981-d0e0-4f48-ae4b-ea59880a14f1",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "df63bb8f-26b9-4775-aa12-f776122ddd0b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 21,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31a2f68d-a587-46b5-85b0-d3916923efaa",
        "cursor": {
          "ref": "c1b7ffc7-cedf-4e8f-8f8d-8d1a76bce53c",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "aefbb8de-30ea-42c0-9850-0e5eb6b13558"
        },
        "item": {
          "id": "31a2f68d-a587-46b5-85b0-d3916923efaa",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "996c9658-857f-4461-b62b-9b42bdbfe7b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "154f431e-00d5-4c17-b45e-9d2fde42f81a",
        "cursor": {
          "ref": "7e6d70ee-0450-460c-bbee-871c38821487",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "faeddf40-3c69-4d52-9a5e-219f1074a270"
        },
        "item": {
          "id": "154f431e-00d5-4c17-b45e-9d2fde42f81a",
          "name": "credentials_issue"
        },
        "response": {
          "id": "b289cb72-aedb-4125-b283-e339fe3a59f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "3fd1adec-3885-4fa8-986d-93c0570bd9af",
        "cursor": {
          "ref": "deab2d50-a043-4b8c-8c12-3b576c860f14",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "d7a92de3-21d9-4fdc-8c24-1008843c54c5"
        },
        "item": {
          "id": "3fd1adec-3885-4fa8-986d-93c0570bd9af",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "6b06fe9e-b3ef-4f35-a652-f65f73a9b57a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "43cc2002-0ee4-43a1-97b9-c1c0553f6d33",
        "cursor": {
          "ref": "08f33dc6-1fa5-4ecf-b078-6ee9c777da06",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "58344972-a217-4af1-bcc7-15e97fd778e0"
        },
        "item": {
          "id": "43cc2002-0ee4-43a1-97b9-c1c0553f6d33",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "6d97ba70-112b-45ad-b577-d16d8787bdfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "2abd0f67-1d50-4376-bd4c-eff82bc3bf68",
        "cursor": {
          "ref": "e1ebbedc-ea77-4d46-9f98-3200a890683c",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "988c9d1e-8507-410e-a599-a9bffdab6fd5"
        },
        "item": {
          "id": "2abd0f67-1d50-4376-bd4c-eff82bc3bf68",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "1d66a192-e11e-4941-bd0f-d94afea90c6d",
          "status": "Created",
          "code": 201,
          "responseTime": 10963,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ea04a4b-c94d-4bc9-be07-0131c685551d",
        "cursor": {
          "ref": "ff065b21-12de-4630-9b62-abb267cbc496",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "f940be7b-6881-4731-9f66-65af2b3a06fb"
        },
        "item": {
          "id": "2ea04a4b-c94d-4bc9-be07-0131c685551d",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "df814f3d-23d7-4497-a223-c962d171a837",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "c0294b40-60b7-4bac-918f-0e1e2e4b75d2",
        "cursor": {
          "ref": "86bd1f2e-e586-4336-b650-bd6f3d8188fb",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "64c7ad77-d5f8-401d-9b7c-bc2dbd623236"
        },
        "item": {
          "id": "c0294b40-60b7-4bac-918f-0e1e2e4b75d2",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "03732639-e7c7-48a0-bcd2-74e476535558",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "afd0d4e8-b85b-4252-bd08-8717adb6bb35",
        "cursor": {
          "ref": "9cf8fab1-3c34-4cec-b0a7-206da05bcae4",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "55f82db7-a73b-414e-8600-49a96f5bc3d6"
        },
        "item": {
          "id": "afd0d4e8-b85b-4252-bd08-8717adb6bb35",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "c332866c-14ee-4ad2-98a7-2bb1584ed769",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edaee76e-41d9-45bb-aa54-ccc4e858d22a",
        "cursor": {
          "ref": "5b456d9a-6493-4928-be0d-6d1b0f25f97e",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "c45a57d1-8266-4cf8-9bdd-b180c30457b0"
        },
        "item": {
          "id": "edaee76e-41d9-45bb-aa54-ccc4e858d22a",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "0d8f7e58-e846-4b64-b60e-27332400870c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 129,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "623a99da-cb83-4274-b749-4674e4cde217",
        "cursor": {
          "ref": "fbf075b0-0a7d-4418-b2bc-89231f967071",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "979b1438-b3f4-4b2f-8fce-03664cbc8353"
        },
        "item": {
          "id": "623a99da-cb83-4274-b749-4674e4cde217",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "af0a62f7-231d-4fff-9f5f-50ab935c7b3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a01775e-9714-4ea9-8736-230a51d08611",
        "cursor": {
          "ref": "e0def4b9-17a4-4e40-8e26-dcef8ff9091e",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "fe04970c-b935-49d0-a788-8479f2438662"
        },
        "item": {
          "id": "5a01775e-9714-4ea9-8736-230a51d08611",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "5d05b9bf-88f9-4596-82b1-ebba4e0b8b03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ef56fce-1d40-4c0b-b1eb-2194a8db3a25",
        "cursor": {
          "ref": "a5324dd4-751b-433e-bdbc-41502282e169",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "c12c7d9d-675c-47f1-8b9c-e4b32875adfa"
        },
        "item": {
          "id": "3ef56fce-1d40-4c0b-b1eb-2194a8db3a25",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "c76a9ee7-70b2-440d-a3da-4808c4c87e3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0c12289-7e1c-46bf-82b2-a941ee6965fc",
        "cursor": {
          "ref": "28cffdcb-9e9f-4bbd-84d1-5f7c414467d5",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "f40eea3f-88ae-459a-b2f9-46a119e14cd0"
        },
        "item": {
          "id": "c0c12289-7e1c-46bf-82b2-a941ee6965fc",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "110e351a-49fd-43ce-aff4-0852969ce6bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "765a8f5e-ee5c-4c50-b7b5-b17d33482678",
        "cursor": {
          "ref": "47b21bdb-dde7-454e-a819-f80f53a7b41a",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "21b7c960-25a1-4d1a-96f3-1c7b802a5f70"
        },
        "item": {
          "id": "765a8f5e-ee5c-4c50-b7b5-b17d33482678",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "67a5ca37-1c9a-49a8-9077-4ce069f71315",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b8c0cbf-0a9e-453d-a2f1-79dcd6ef53a4",
        "cursor": {
          "ref": "0ad3fd58-7616-48c9-babd-bbbaa27b88af",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "2071c30a-404e-4ed4-91d6-bf1edb81da91"
        },
        "item": {
          "id": "2b8c0cbf-0a9e-453d-a2f1-79dcd6ef53a4",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "06a205e5-0f82-460b-ba6e-58941dd34bc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "928b0eb0-ab97-4dc8-b1bc-d7d1df1a81e9",
        "cursor": {
          "ref": "75fbf65f-f5fb-4b81-91ff-91b451184bb2",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "204fce5d-f59c-4f5e-bdca-a8358f653153"
        },
        "item": {
          "id": "928b0eb0-ab97-4dc8-b1bc-d7d1df1a81e9",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "9da75fed-96ef-4221-a33c-5f1881185cb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c9e8ab6-1daa-4f41-8ae1-35bac73640e7",
        "cursor": {
          "ref": "1a0343e5-49b1-4e1c-bb75-b138e7ab8adc",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "b10bbf1c-2f1d-4a04-8bed-9e46f23db0b5"
        },
        "item": {
          "id": "4c9e8ab6-1daa-4f41-8ae1-35bac73640e7",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "b4e52f9d-df0b-4e9f-94c5-feec7b486a9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2f35254-0cee-488f-93be-13cb2c82d0d2",
        "cursor": {
          "ref": "673e571b-80a5-4de0-bd85-02f11f52d9ee",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "07bd5cb6-d36e-4632-9e2a-8c11b0a677cb"
        },
        "item": {
          "id": "c2f35254-0cee-488f-93be-13cb2c82d0d2",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "c5f98b2c-55ad-41b9-890f-c716eaf9a497",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "264ce135-0ecc-4d88-9bb4-276385fc9eaf",
        "cursor": {
          "ref": "024d9a10-5e0f-42e3-a136-f8827eb03083",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "0c45c401-83f0-4959-ae33-4838ee94b560"
        },
        "item": {
          "id": "264ce135-0ecc-4d88-9bb4-276385fc9eaf",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "97c32b51-57eb-4d25-ac5b-0a7cf6fadad8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bda4f62-c932-44f6-a854-8972eaf9dfed",
        "cursor": {
          "ref": "cd1628f7-1491-4bd1-a82e-0f7702abdc91",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "803eaa72-f51e-40e9-b4c6-4726cb7e0d3e"
        },
        "item": {
          "id": "7bda4f62-c932-44f6-a854-8972eaf9dfed",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "e294d4f6-d367-4e8f-a16f-408fa9b0fbde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5290773-c28f-4718-b14a-91c4b18527a4",
        "cursor": {
          "ref": "6230d808-9438-4165-b721-23499e174a55",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "63aab2ae-6a51-4f83-b4a6-b5591d791fcf"
        },
        "item": {
          "id": "f5290773-c28f-4718-b14a-91c4b18527a4",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "3a44fba9-8861-445b-b1ac-91cc0a206056",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 749,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf7fc901-decf-4ba0-8147-a516092050da",
        "cursor": {
          "ref": "11bb5bdb-2164-4b2a-a4d0-9b524ec9a4fe",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "10e88c4d-5f7a-4550-b987-7d0a34ad1038"
        },
        "item": {
          "id": "cf7fc901-decf-4ba0-8147-a516092050da",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "6d029642-11ad-4550-b01b-efa2e9214e68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fab8ce3-b6f8-4f11-a692-7d94d371b479",
        "cursor": {
          "ref": "1e3bbe25-8241-4621-9a89-234e6475c45d",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "b2707e7e-8959-41d6-bfb2-0eacf943f909"
        },
        "item": {
          "id": "7fab8ce3-b6f8-4f11-a692-7d94d371b479",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "04a54461-c941-4436-9223-ce1d70b3f095",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0e11683-f070-49de-a8ae-ac47cc4b5824",
        "cursor": {
          "ref": "0c8b7c6e-554e-4504-b4c1-577b5bb9c948",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "d1fd23bf-162c-45b7-94c4-41a03a9d57c6"
        },
        "item": {
          "id": "b0e11683-f070-49de-a8ae-ac47cc4b5824",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "b7cfa147-c47b-4e59-a69a-e4eda7bc626a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d85e8b95-6779-408f-8c46-294471240ce4",
        "cursor": {
          "ref": "39e079ee-b3f8-4bae-9eee-b75c1044db87",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "69b5afc6-7609-4259-8c17-109bc3a2d257"
        },
        "item": {
          "id": "d85e8b95-6779-408f-8c46-294471240ce4",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "1b50b997-e9a1-4596-9d1f-944db1e8c4b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ff58d60-7486-432a-bc97-cbb9e59a3ad7",
        "cursor": {
          "ref": "456c6fa0-1d3d-4f37-a4dd-67cee45130ff",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "f5f29d62-86cd-4f3e-9290-5d1f6a6f8312"
        },
        "item": {
          "id": "0ff58d60-7486-432a-bc97-cbb9e59a3ad7",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "4d7e5e6d-eaae-479e-a17e-d01926669179",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1eb4e2e-b732-4c76-9af2-a58547490f0b",
        "cursor": {
          "ref": "a9099c60-d6b1-4146-9a10-adbaf6f45c31",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "b6f22468-7b2a-4d81-91e4-09003c611123"
        },
        "item": {
          "id": "f1eb4e2e-b732-4c76-9af2-a58547490f0b",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "be248c42-078f-4888-85b4-cba372127398",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bb9ab0a-e62c-43ab-84f5-2eef2ccfb301",
        "cursor": {
          "ref": "bf2ebbd4-69bf-4990-8f83-ca46597aee0f",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "642da246-c16f-470e-9f25-ebe55b75789e"
        },
        "item": {
          "id": "3bb9ab0a-e62c-43ab-84f5-2eef2ccfb301",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "7045b207-b716-4512-9627-dcaa669309cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f05be89-0312-4e2e-9580-0f3dfd238c16",
        "cursor": {
          "ref": "4078b51c-1e42-4b65-a742-8ed320a7f089",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "809333e2-df59-449a-ac76-f5a8c6b2ba04"
        },
        "item": {
          "id": "1f05be89-0312-4e2e-9580-0f3dfd238c16",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "11073b5a-fe15-47d3-9f50-c959e9bb0704",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41947430-5bd7-4d4f-9c6e-bfef70053afc",
        "cursor": {
          "ref": "1b2f29da-9ebc-4880-b288-f1f587b350de",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "56482018-6b45-4fd2-a354-51ca5b55a7e9"
        },
        "item": {
          "id": "41947430-5bd7-4d4f-9c6e-bfef70053afc",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "ad7bcbd8-e4c6-4c84-bc63-7ca2617fe106",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c057279-31ee-4a87-9b8b-8724a3b1464e",
        "cursor": {
          "ref": "cf62aa2c-cb91-436d-8d09-22e849f7aaf5",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "570093cb-cd96-4849-952d-0ef22c8c962a"
        },
        "item": {
          "id": "8c057279-31ee-4a87-9b8b-8724a3b1464e",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "13d3950b-e510-4c2b-bd9f-ffa7c5a16f38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e86b0db0-607c-445c-bc8a-0aae55a82f15",
        "cursor": {
          "ref": "058efc22-5cd0-4db4-8d3d-ebe373ce099b",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "0c110861-0b30-4496-8848-d997fa00f748"
        },
        "item": {
          "id": "e86b0db0-607c-445c-bc8a-0aae55a82f15",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "5c903656-6315-4fdb-8fb9-c1a18a6d8fa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c75ce80-4aa6-41b6-a707-a65c05162de8",
        "cursor": {
          "ref": "db126514-052c-441e-a440-67983aab153f",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "d101092d-0136-4bcc-94a4-dc7a3c60dddd"
        },
        "item": {
          "id": "0c75ce80-4aa6-41b6-a707-a65c05162de8",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "2ca8ef82-a69b-4ab1-a251-8a037f3836da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09437e61-93b5-4cfd-8f5e-797b16da4798",
        "cursor": {
          "ref": "df036771-4880-442f-a144-d5c75ffcf6d6",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "53debdc9-35dd-4e11-8f7f-d310030316f6"
        },
        "item": {
          "id": "09437e61-93b5-4cfd-8f5e-797b16da4798",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "1f693c95-a6cb-4d2f-a7b6-71176f04683a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d80f666d-955d-4517-8e0c-0d9baca6ce27",
        "cursor": {
          "ref": "7d89fe60-706c-4f0c-ba62-bc586a630c79",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "c63994f6-d62d-4f41-b827-c0784eecabdf"
        },
        "item": {
          "id": "d80f666d-955d-4517-8e0c-0d9baca6ce27",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "cf5e4fb0-733a-4330-89e3-6fff9d94a4c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80d8877b-b5db-4cc0-bc8b-aa98560ccff3",
        "cursor": {
          "ref": "447d27bf-d2ce-48be-b46a-0d4a141a706c",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "82e31726-96c7-462c-9b05-e365d0e8b85f"
        },
        "item": {
          "id": "80d8877b-b5db-4cc0-bc8b-aa98560ccff3",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "e54f71d7-6778-435d-85d8-b0d9fba889a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2abc7380-c2c1-4939-ba04-8f1c36b0ca13",
        "cursor": {
          "ref": "7120b125-bf28-4201-b2d9-016a8235ed56",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "a51ee632-e30c-4b22-aeef-65b722e2936a"
        },
        "item": {
          "id": "2abc7380-c2c1-4939-ba04-8f1c36b0ca13",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "5c9e8932-56f3-43e1-98ff-e44a453d8b83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1048d785-869c-4fcf-91c9-d0310337c046",
        "cursor": {
          "ref": "d4da3ffa-db68-4e65-9be8-e253e391ec96",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "efd269c2-642b-4b7d-9b19-a0604f4e57ee"
        },
        "item": {
          "id": "1048d785-869c-4fcf-91c9-d0310337c046",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "83c350cb-2236-4782-8d64-fc72511507ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75d8a133-89cf-4572-a72f-b3fa2e71400a",
        "cursor": {
          "ref": "71b9f758-39c3-4752-b384-bf4aa4fa1ba5",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "2806eaeb-d112-45d7-a11c-3fbd0517b5d2"
        },
        "item": {
          "id": "75d8a133-89cf-4572-a72f-b3fa2e71400a",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "71798384-e1a5-4165-afcc-7ce1d64dd4c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ba75a89-55b5-4a3f-9170-0e5f22811548",
        "cursor": {
          "ref": "dc332298-aa24-4439-a2df-7e3308ab73d4",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "e3068b16-6170-4bf3-a07b-553076d7b367"
        },
        "item": {
          "id": "8ba75a89-55b5-4a3f-9170-0e5f22811548",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "b2661589-7de0-47ad-b8de-659e750af11b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 19,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ba596dc-3c2d-4cdf-b70f-16768fcb2fc1",
        "cursor": {
          "ref": "94d7ff50-9b4a-42f9-b8dc-88606ff9ceae",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "cfd7ba9c-5d3f-4041-b35c-1a1081c25665"
        },
        "item": {
          "id": "8ba596dc-3c2d-4cdf-b70f-16768fcb2fc1",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "cea80246-86f7-46eb-9d08-1d42e2dda555",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "002abd10-3acf-41e7-8b7a-922cffe02051",
        "cursor": {
          "ref": "a2eb5d30-89ad-4d3e-8f3c-1b2ae2866a05",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "2a4890d8-c025-4812-bb15-a98ffbb1d113"
        },
        "item": {
          "id": "002abd10-3acf-41e7-8b7a-922cffe02051",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "ba05032e-b4b5-4454-91e3-65ee3228aa17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c909914d-3470-470b-8ef5-1cbdfd89b3bd",
        "cursor": {
          "ref": "182ac157-93b8-4003-8823-6a874b86a44a",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "684e245f-b6a9-47ac-a425-bfbd202aa501"
        },
        "item": {
          "id": "c909914d-3470-470b-8ef5-1cbdfd89b3bd",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "2ddf4fc1-8d01-4854-aa9c-8cd0aa48b248",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03616989-8327-4b80-9559-e84c689396ff",
        "cursor": {
          "ref": "ad5700e2-d0c8-4b45-a43a-988ca633d8d1",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "8e158a81-232d-4694-a310-ccdbb1a60846"
        },
        "item": {
          "id": "03616989-8327-4b80-9559-e84c689396ff",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "44c01231-33ff-4825-9eb7-62189bb22ab1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e57262d-ccab-4910-b5c2-0d044b93d1dc",
        "cursor": {
          "ref": "812aebec-a605-480c-9dc8-850928160509",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "f78289d3-691d-4a2b-8d8c-679e3c1a5367"
        },
        "item": {
          "id": "4e57262d-ccab-4910-b5c2-0d044b93d1dc",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "20e6432d-22c1-4e68-bde5-ae9160ebd7e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b946ff6d-8c09-41cf-a6b1-09cff101e6ca",
        "cursor": {
          "ref": "a50caa01-d6b8-4606-b5ba-ccd5bbcab24b",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "65f8bffa-9219-42cc-9c84-30ac507a71df"
        },
        "item": {
          "id": "b946ff6d-8c09-41cf-a6b1-09cff101e6ca",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "0aa3e989-526f-49c2-beb0-ee497fea3fd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1a67bc4-a544-4c02-b9c5-b4ecac6dec07",
        "cursor": {
          "ref": "ffeb16ff-d7a3-4bc5-a061-56801f8f0207",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "a3da8835-c3ca-4b6d-b69b-fd51a6b1753b"
        },
        "item": {
          "id": "e1a67bc4-a544-4c02-b9c5-b4ecac6dec07",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "7a91f8a3-1539-4069-a8b9-65dfd0b1f58b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fccf592f-26dd-4c5f-92f9-96310bc8bc70",
        "cursor": {
          "ref": "ce91a69b-2c56-4e52-85cd-553b46ac88d8",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "b63ce2dd-af43-4135-9677-d2915263ff10"
        },
        "item": {
          "id": "fccf592f-26dd-4c5f-92f9-96310bc8bc70",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "ed5d550b-5a34-4692-8922-3ff3b9547a50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5a0e464-2b21-41e3-9c20-80f789dd81b6",
        "cursor": {
          "ref": "8e92bbda-a0eb-45a7-bcf2-f1ea4b687202",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "174f4ae8-0edc-4294-ba0b-4a4ca5e28706"
        },
        "item": {
          "id": "d5a0e464-2b21-41e3-9c20-80f789dd81b6",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "2cc4de6d-b142-432b-8f0f-693fe3b5e786",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0453469-311d-4efe-b72d-4b9dcd2510a3",
        "cursor": {
          "ref": "cd1a8408-c506-4f43-9349-4c088a812a31",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "c71c2e99-af8f-4e9c-9051-88cb7704c95d"
        },
        "item": {
          "id": "c0453469-311d-4efe-b72d-4b9dcd2510a3",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "49f34477-7493-4ad7-86d9-969c40057b9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d93ed292-4d4a-466b-893a-6d7006942c2d",
        "cursor": {
          "ref": "c4ec7c64-ce7a-491c-af34-ff29f4338357",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "17ae3a96-2d47-4bcd-87e6-bae7eb86a869"
        },
        "item": {
          "id": "d93ed292-4d4a-466b-893a-6d7006942c2d",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "0f87d22b-029d-445e-9bde-e1ae5547cfbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c69bc91-4b97-42e5-9808-e7f5437ff37b",
        "cursor": {
          "ref": "837acb68-6b9d-4259-87ef-d8b996ed0364",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "ca3e2aa3-424a-4460-a8e6-3f41fa684c45"
        },
        "item": {
          "id": "3c69bc91-4b97-42e5-9808-e7f5437ff37b",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "53245707-609c-4424-a904-b437d595b1b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bc2b961-c550-4a77-bb14-aaecfd477896",
        "cursor": {
          "ref": "d1c1eb37-2ccc-4066-9f3d-87ec6c7bcd98",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "025e9350-2fcb-4082-bf7d-2c4bc4c0c251"
        },
        "item": {
          "id": "3bc2b961-c550-4a77-bb14-aaecfd477896",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "cbb26ecc-866b-44bf-8035-7e84f50f5fc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfa1ac6a-ff98-4464-bf69-4f09ff0d22d5",
        "cursor": {
          "ref": "565c326c-6d71-49b8-a90b-bac24bfcda0e",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "9daf2622-2768-47d2-9b5f-5a35ed5b51b8"
        },
        "item": {
          "id": "bfa1ac6a-ff98-4464-bf69-4f09ff0d22d5",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "636b9880-67b5-420f-af85-3558548c07e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25b274bd-5ea5-4776-b13d-16344856adde",
        "cursor": {
          "ref": "e3fb54d8-9bae-4743-84e7-50183f6b081c",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "7607c164-2883-4243-a05f-5d517c73656a"
        },
        "item": {
          "id": "25b274bd-5ea5-4776-b13d-16344856adde",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "c8cd1ced-dd59-45c2-9c37-85be22e1fd99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f220692a-081d-4077-945e-3f3d5c8029c3",
        "cursor": {
          "ref": "8a195ad3-5095-43a4-afc9-1b3318189c74",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "35bbafb8-9a11-47b9-a918-f09aeee2be9d"
        },
        "item": {
          "id": "f220692a-081d-4077-945e-3f3d5c8029c3",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "7a673187-c745-4e44-87b3-ef91f9790e96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33eca280-d8dc-442b-9157-2aa6f3bb5ec2",
        "cursor": {
          "ref": "ee63a4b6-8833-430d-9019-251cff9088a7",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "06e70cbc-2924-450f-8708-25f113dd78b1"
        },
        "item": {
          "id": "33eca280-d8dc-442b-9157-2aa6f3bb5ec2",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "1c0858e1-e302-474d-9e66-746e46916287",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57aea40b-87e3-41ab-9e1a-f1850d89510a",
        "cursor": {
          "ref": "00fd52f0-d85d-4440-b169-1134b2bef1ae",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "e3e0b510-227e-4019-a815-18d41fbd98a5"
        },
        "item": {
          "id": "57aea40b-87e3-41ab-9e1a-f1850d89510a",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "b4289ce4-0d1e-4037-be7b-7cb252399dc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3369199-87de-47a4-9270-5109543ee68f",
        "cursor": {
          "ref": "95a84afb-885f-48a2-87aa-da88e809e561",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "7c17e686-1f31-4ce7-aa24-c4b2a87d2dbb"
        },
        "item": {
          "id": "b3369199-87de-47a4-9270-5109543ee68f",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "33de73ac-8ae1-4758-9f3d-a56786e9d015",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee181f43-2076-40b5-8c0b-6254eca446be",
        "cursor": {
          "ref": "0a32b40a-95fb-42d3-a455-320283f9a5d1",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "30d10ff0-db40-4e56-a048-5c9f04cc4503"
        },
        "item": {
          "id": "ee181f43-2076-40b5-8c0b-6254eca446be",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "d7bfbb94-7080-4fdb-8577-efb06f3892a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "766e0577-e7ae-469d-a562-4a25eba28915",
        "cursor": {
          "ref": "20a3f231-b605-4a6b-821d-c2da779cfa78",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "4d8072c0-eab8-43f8-aff6-cecbe56a9f51"
        },
        "item": {
          "id": "766e0577-e7ae-469d-a562-4a25eba28915",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "e3a03e43-a831-43a1-a418-f01acd08f640",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45aaa22f-a87b-4c75-a150-b0178a079e1e",
        "cursor": {
          "ref": "e2480c71-91ad-4c10-ad5a-eb73c8eee2ca",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "86cfca0d-8dcb-410a-b839-16cd946b491f"
        },
        "item": {
          "id": "45aaa22f-a87b-4c75-a150-b0178a079e1e",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "4923cadf-c422-4443-ab4d-c7b282874054",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71a261c4-d8cf-4c0d-bf34-6bada02a71fd",
        "cursor": {
          "ref": "5218adbe-c613-4d0b-be79-5fd132473215",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "5320e582-e434-443f-a8a6-6976f8c48b6d"
        },
        "item": {
          "id": "71a261c4-d8cf-4c0d-bf34-6bada02a71fd",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "801c190c-c49c-4a67-aa93-59c8288f515c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91dd54d5-8c91-42d1-a125-ca0ddcf9f692",
        "cursor": {
          "ref": "fc2dedf9-7b79-48bd-8c5b-8d16d4c24433",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "625eb708-9f23-4a99-a893-8e5052c6d9cc"
        },
        "item": {
          "id": "91dd54d5-8c91-42d1-a125-ca0ddcf9f692",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "e8767304-ce15-4903-a2c4-20c658caf249",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "808a1382-3116-4745-b096-0da38ac7fcd3",
        "cursor": {
          "ref": "bea8f703-7510-4e74-90bd-0bee1a40a612",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "d7daf4a4-c2e8-40bb-b414-2cd582adc583"
        },
        "item": {
          "id": "808a1382-3116-4745-b096-0da38ac7fcd3",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "6a799a68-52fc-4453-84b3-90fc1b92c721",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e228228-d449-4400-a54d-d65ba2001a99",
        "cursor": {
          "ref": "efb88d09-76c5-42ec-a027-eca0407d9636",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "51a8326d-c5fd-437d-8bc8-edd36e71b97d"
        },
        "item": {
          "id": "6e228228-d449-4400-a54d-d65ba2001a99",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "d960a904-8f20-4129-8def-c9a799d858ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b6dd340-38d1-4673-bfe8-864b6af6ea81",
        "cursor": {
          "ref": "ab889779-883b-4f41-ba80-a1fba50d550c",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "276c5894-688c-4f44-9d4f-53633e36c79b"
        },
        "item": {
          "id": "4b6dd340-38d1-4673-bfe8-864b6af6ea81",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "da73d7fe-d807-4db3-8a90-432dc366bbfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4533bbd6-3fa3-48e5-8dd0-2aa4fe2ee12d",
        "cursor": {
          "ref": "05a98eff-199b-4428-a158-89690e805d05",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "5da86277-e76f-4e63-b87d-c38dd80d1fdc"
        },
        "item": {
          "id": "4533bbd6-3fa3-48e5-8dd0-2aa4fe2ee12d",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "f03f3875-06f2-4fdc-aad9-65216a6f7cbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b33924f-4b82-4872-9aec-95b05b249097",
        "cursor": {
          "ref": "d0adba27-8a9b-49d3-be00-912a52e7f1f0",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "85516a62-9d66-43e1-adc5-7b6411cd48a4"
        },
        "item": {
          "id": "7b33924f-4b82-4872-9aec-95b05b249097",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "820d7fc5-084e-4eac-bece-b0b259a23a49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "387f5709-2384-46b4-93d3-0da19da31a8d",
        "cursor": {
          "ref": "aab59c93-edde-4e42-b74d-ea0f50280394",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "e9044c16-1f09-4549-9f6f-f321493da6dd"
        },
        "item": {
          "id": "387f5709-2384-46b4-93d3-0da19da31a8d",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "4b7f8e87-f746-4c5c-8864-bd64ec57929d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a250ee78-5aec-4d0a-b633-f2640dc361ab",
        "cursor": {
          "ref": "c5191d7b-5ecf-4544-aeba-e86bddbcd84f",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "399b8694-c0e7-42a5-8c8e-acd75fe196f3"
        },
        "item": {
          "id": "a250ee78-5aec-4d0a-b633-f2640dc361ab",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "1426a896-3330-4681-bbf4-07ae2edcaeca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aef2caf-f11e-49de-9969-965cab15452e",
        "cursor": {
          "ref": "7c0166e9-680c-4c74-b004-c24321112849",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "ef3bff3b-4261-4b8b-afcb-33c311e687b2"
        },
        "item": {
          "id": "5aef2caf-f11e-49de-9969-965cab15452e",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "e32d98cc-b005-4f49-95f1-250346d5d7e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93b81c72-63c8-4ee1-869d-b6aad88ed89f",
        "cursor": {
          "ref": "c6fe3714-e3ed-4fa3-8718-c004f6dc5036",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "e6a2e714-0577-47f9-9121-26174e69aa39"
        },
        "item": {
          "id": "93b81c72-63c8-4ee1-869d-b6aad88ed89f",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "0c674e67-0e46-4353-810a-84d4e2ffd5ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdc47fb7-e37d-4065-a1ff-6f9db98aca4b",
        "cursor": {
          "ref": "d855de21-afd8-4e16-af21-5110739deb7c",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "21d6aa30-5ba0-4b61-b911-dc5f6ee847f1"
        },
        "item": {
          "id": "fdc47fb7-e37d-4065-a1ff-6f9db98aca4b",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "fc0e8c82-9174-4c5d-92d8-2677149b9fff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "955e0dff-b73e-4eeb-a7aa-4102aab7ee8a",
        "cursor": {
          "ref": "b5871157-931a-430a-b8f0-e64bb4aaced1",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "f503849b-d5d6-419b-80b5-71157b796da2"
        },
        "item": {
          "id": "955e0dff-b73e-4eeb-a7aa-4102aab7ee8a",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "3727513f-101e-47ec-97e9-01c75b5c64db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2231de7-547d-4d10-8ef5-469704430c8d",
        "cursor": {
          "ref": "381f8410-a19f-41b9-8efa-929106f8b538",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "cfeee61e-371e-4685-b694-8e8070ce7db3"
        },
        "item": {
          "id": "a2231de7-547d-4d10-8ef5-469704430c8d",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "d3c598b9-3431-415c-851d-2e3b2b5e2d14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41e251ba-93f6-460e-b8c3-dafb3d95104b",
        "cursor": {
          "ref": "6ef9436b-3e3a-4140-9762-0056cf3dff18",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "42eadbe3-b1a4-4d89-a7db-9079153e1a4a"
        },
        "item": {
          "id": "41e251ba-93f6-460e-b8c3-dafb3d95104b",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "6d286304-2f78-4424-8632-476d9a9c014c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a2f837f-d078-4d14-b1e3-ab24f6d89b77",
        "cursor": {
          "ref": "d9b3ef98-e9cf-4505-9334-483376982eaa",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "f7badc54-3a67-4346-bf7b-4e700994eeb8"
        },
        "item": {
          "id": "4a2f837f-d078-4d14-b1e3-ab24f6d89b77",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "b34ca94a-548e-4cb4-9418-0df676cb0220",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 19,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dcf5bb5-fa9a-4908-8a53-d54df3bf2fc8",
        "cursor": {
          "ref": "14f252f7-5759-4dbb-a7a1-b0f241aab3c3",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "2c8f019a-2620-4094-a721-b3c80587b990"
        },
        "item": {
          "id": "8dcf5bb5-fa9a-4908-8a53-d54df3bf2fc8",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "df11917f-883a-481b-b011-334159f64191",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52bb31cb-50e5-4384-9662-69be8aae16ed",
        "cursor": {
          "ref": "d7cde80a-8035-4a5d-be91-e149317c4782",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "5ff7df1a-cb3b-4bcd-afe3-32894735c5f1"
        },
        "item": {
          "id": "52bb31cb-50e5-4384-9662-69be8aae16ed",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "bd5c1e3e-0941-4cd7-b576-62472dec7836",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c311dacc-ba53-45ff-9a0c-c9843e5dff4b",
        "cursor": {
          "ref": "cabada99-3a4d-46d9-9c7f-64eb0125c9e0",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "8284a900-59a9-4431-a639-d817b5f1734a"
        },
        "item": {
          "id": "c311dacc-ba53-45ff-9a0c-c9843e5dff4b",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "d8b26457-6fbf-4007-9f02-51ccc3dd6311",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62233584-7f9e-4b6d-95b3-5983923bbf2e",
        "cursor": {
          "ref": "fc1d74f5-2585-460c-971a-ab9b6a691f7e",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "69fe0065-61af-4d9f-a7a1-c4650f5f942d"
        },
        "item": {
          "id": "62233584-7f9e-4b6d-95b3-5983923bbf2e",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "bdbd38c7-60a7-438f-8332-6f64c5b57b0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fb62a6c-0c66-4f1b-be77-30b8cdc6b2f4",
        "cursor": {
          "ref": "e3171d5f-0733-4a33-91ec-b4bdf4c53bd4",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "3c7bcf27-5ea8-4383-8566-8f25e68f99a4"
        },
        "item": {
          "id": "5fb62a6c-0c66-4f1b-be77-30b8cdc6b2f4",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "0d8a5993-cf74-4a36-96bb-e0cc3763bcce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4728edec-951f-4bce-a33b-ac7a48e7229e",
        "cursor": {
          "ref": "7a379cf5-eb49-4eb6-a247-29e9e0a33a27",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "7d58fc2e-4e52-4bde-ac24-b5f942b76ceb"
        },
        "item": {
          "id": "4728edec-951f-4bce-a33b-ac7a48e7229e",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "890a06f5-cea6-4300-be2f-72f45eade3c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdb4c643-9061-47a0-85bf-93b8843d010f",
        "cursor": {
          "ref": "4be927e4-75e1-4b3e-89a7-a17c13bfce7c",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "329f4839-a6de-4efd-a7d1-6530b9ba2f2f"
        },
        "item": {
          "id": "cdb4c643-9061-47a0-85bf-93b8843d010f",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "5a60a5c7-aa6d-43f4-a7f4-e4e480f98181",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cf78ff9-dcc1-46db-aa81-f879dcf11f62",
        "cursor": {
          "ref": "e5fcbd4e-2ccf-431e-80c9-e4c70f0c9e81",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "2b2b7d4c-ca7b-478c-9829-e7b916bb97a4"
        },
        "item": {
          "id": "9cf78ff9-dcc1-46db-aa81-f879dcf11f62",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "6b68cbc2-42c9-43f4-bdae-51f9f101f881",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c902c8c8-3224-4a0c-a788-3bf2b200ffd3",
        "cursor": {
          "ref": "66ceac20-9196-46cd-9d6d-712e41e07fcb",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "5cd123e5-3175-43b7-91e6-fe394cc22cc4"
        },
        "item": {
          "id": "c902c8c8-3224-4a0c-a788-3bf2b200ffd3",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "12884841-8a04-4a7c-97f4-0cf42345c059",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "452a14ce-18da-475c-ae91-0ed9dbf0b201",
        "cursor": {
          "ref": "03095336-30bd-4e67-abce-a0737ad9b29b",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "131addb5-ab48-4455-917d-2f59d187e799"
        },
        "item": {
          "id": "452a14ce-18da-475c-ae91-0ed9dbf0b201",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "87060a5e-80f2-49bc-ba91-48e039a5c257",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2994d874-5a78-496b-9377-f0d51090cbb1",
        "cursor": {
          "ref": "abb84cd3-5ce1-4d36-b863-e9290aa58713",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "82ba489d-d6a8-43af-861e-1a31e86f6911"
        },
        "item": {
          "id": "2994d874-5a78-496b-9377-f0d51090cbb1",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "1bb73fdb-fcfd-4342-928b-a94c15642078",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddba64c8-db32-401d-a667-e31d6937acd4",
        "cursor": {
          "ref": "e5f0b395-4af6-4408-bd16-267a8e0307b7",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "61efc8fe-347e-4465-be6f-8518d2006eae"
        },
        "item": {
          "id": "ddba64c8-db32-401d-a667-e31d6937acd4",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "b6406e9a-de19-4aec-834f-d2f0f0c3d4db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31ba8f3d-5334-445e-85bb-0de68a6d153f",
        "cursor": {
          "ref": "36d148f6-a6e8-4e24-bbe1-2374e5c0fa22",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "8a17cba5-8d32-473e-9425-d707d8d67904"
        },
        "item": {
          "id": "31ba8f3d-5334-445e-85bb-0de68a6d153f",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "b41dca9d-4cb5-4c45-a325-fbb1bcb5d2a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a77ab193-334a-4231-9454-7cdb9498e6e8",
        "cursor": {
          "ref": "5fb1e390-ae1b-48b1-9ada-133a9281fb7e",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "ca72f778-8134-4e19-acde-c8b259310846"
        },
        "item": {
          "id": "a77ab193-334a-4231-9454-7cdb9498e6e8",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "5f2ad638-dc4c-4325-949e-c4b64869c9e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bf67b95-8bc4-4eee-b8bd-6db4b217f61a",
        "cursor": {
          "ref": "9feb608f-be73-43d7-859a-93f9c9508312",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "f984b2f1-1e7d-4485-817d-7ca976cc1d34"
        },
        "item": {
          "id": "1bf67b95-8bc4-4eee-b8bd-6db4b217f61a",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "72e3c90d-fd75-4479-8b6b-7e63f0522d3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bb585e8-3902-4f2d-ac2e-44182ed36a61",
        "cursor": {
          "ref": "ba32378b-79c2-49a1-9691-70eac409b71a",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "c9968fbd-f361-489a-80da-0cf7557cc99e"
        },
        "item": {
          "id": "9bb585e8-3902-4f2d-ac2e-44182ed36a61",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "8856247a-5a72-4f50-927c-eb836b930839",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2424155-9a13-461e-b11e-95ea7151d633",
        "cursor": {
          "ref": "4d732cd1-ab1c-4e1c-b806-f06716550ead",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "996542f5-fe45-4408-83f7-6198303a59a4"
        },
        "item": {
          "id": "d2424155-9a13-461e-b11e-95ea7151d633",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "355b8ad9-38d8-46d8-bd74-45f60fa0f402",
          "status": "OK",
          "code": 200,
          "responseTime": 87,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "3fa78cf1-6d91-471f-8481-b0945e3bfb11",
        "cursor": {
          "ref": "f7055349-ae8f-477d-bdf9-655a194c0f82",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "ae5aa0de-4b36-4772-8274-5a40e359da4b"
        },
        "item": {
          "id": "3fa78cf1-6d91-471f-8481-b0945e3bfb11",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "04cd59af-00c8-4c96-bc36-2ce9ad61b1e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26ffebd7-7d16-4af9-89e4-694f70723ae3",
        "cursor": {
          "ref": "7a2dcb2e-f8ff-43e8-a37e-5d8c142411ce",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "28e7612f-2079-4984-9578-94241344f229"
        },
        "item": {
          "id": "26ffebd7-7d16-4af9-89e4-694f70723ae3",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "1743be15-43b0-4dc6-997b-f35f941ba391",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c42b513c-0c0b-4380-8d3b-afad40843d30",
        "cursor": {
          "ref": "b93ff631-17cd-4f64-95db-d3084996e7d7",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "709d1260-f3fe-4c4d-a262-bb4c500603fb"
        },
        "item": {
          "id": "c42b513c-0c0b-4380-8d3b-afad40843d30",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "c4c02476-b9e7-4f17-8a45-60d0d1268c66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ad43b94-0610-485c-89e7-afcc91f10a6b",
        "cursor": {
          "ref": "fc27162d-1c11-4305-b8e1-5392bf33e0e5",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "cc226e16-4688-468d-84d6-381113ce9204"
        },
        "item": {
          "id": "9ad43b94-0610-485c-89e7-afcc91f10a6b",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "1fe13a49-8c73-4a3d-9f4e-64c164e57568",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c153e48e-3087-43ab-b7c8-d657206b0dc0",
        "cursor": {
          "ref": "fcc39715-2c68-4fca-9691-c50ed369f42a",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "609ce3e7-0b42-490e-902c-cdeab5935d42"
        },
        "item": {
          "id": "c153e48e-3087-43ab-b7c8-d657206b0dc0",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "9e657359-3684-4931-add1-4197e5533357",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5954193-446b-40bd-a2c4-3859c55fa0c6",
        "cursor": {
          "ref": "de7a7f44-a049-4b96-b223-38e437135ef7",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "bf49ae3f-0218-4c67-8104-99024cf8ed81"
        },
        "item": {
          "id": "b5954193-446b-40bd-a2c4-3859c55fa0c6",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "c6c90e51-b1cd-4e92-960e-231278ab41ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76c5ef45-e917-4a9f-a4b6-d381f0eaa6fd",
        "cursor": {
          "ref": "19c45d4a-9f60-4a49-bb91-6c4a53058fab",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "be774a44-b9af-4a27-ad18-b9c70b838415"
        },
        "item": {
          "id": "76c5ef45-e917-4a9f-a4b6-d381f0eaa6fd",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "4b6a7134-2b23-48fa-aae1-521fdeee92e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5a92de1-4ab6-4e4b-ac22-065ec9ed9c3b",
        "cursor": {
          "ref": "ef15ec9d-acf5-4f4b-95e8-4e6b19fd7d76",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "391ece27-4d7f-4f23-9bc0-7dcc7f500aa2"
        },
        "item": {
          "id": "d5a92de1-4ab6-4e4b-ac22-065ec9ed9c3b",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "b05cd095-f4b6-4191-a5d4-d739e039dc14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7442ee6b-c918-481a-bab6-e22b48078f33",
        "cursor": {
          "ref": "81b0bb40-532b-4d6a-a01d-597394a41034",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "ae5b572c-4225-4fca-88b5-87e6a08d53c1"
        },
        "item": {
          "id": "7442ee6b-c918-481a-bab6-e22b48078f33",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "2f6e1bf9-c384-49cf-91c5-a347f0ad5522",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6667efa2-1475-47f7-b461-4f150b482ade",
        "cursor": {
          "ref": "07e3442d-d8e2-451c-a4f8-e9cd70e16e81",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "0f597888-6356-46fc-9346-fc483f5e8061"
        },
        "item": {
          "id": "6667efa2-1475-47f7-b461-4f150b482ade",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "06a2732b-d899-4544-8133-2a525d99ee74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8c12ac5-ee5b-461d-97d9-ecd6cb393850",
        "cursor": {
          "ref": "7db9f265-2824-43aa-92fa-04d3a9737f4b",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "fef43475-fe0a-4c44-93d5-aaa272d19a6c"
        },
        "item": {
          "id": "b8c12ac5-ee5b-461d-97d9-ecd6cb393850",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "3e8e4136-c6f3-474e-9764-c73ac55fa5c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a34be177-8b6f-4173-ac28-477477ae4873",
        "cursor": {
          "ref": "b648f534-971d-468b-9226-b796b010f008",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "72f50a28-754d-46df-9fa8-0e8ccb819e44"
        },
        "item": {
          "id": "a34be177-8b6f-4173-ac28-477477ae4873",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "d0a52ba5-3de4-4393-8dd6-67281732cbc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23737ee5-14eb-4d53-ba13-46ed0cca4269",
        "cursor": {
          "ref": "370d0ded-0e59-4b28-8a19-f3dd65aec7ee",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "ff401241-b7c3-4886-87bb-e851593b06bf"
        },
        "item": {
          "id": "23737ee5-14eb-4d53-ba13-46ed0cca4269",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "65a89160-1716-4ba8-b93c-7eec4c4b1f02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d3b512c-acf9-42a6-8c05-aa4ad70b9807",
        "cursor": {
          "ref": "0741a53a-5866-4bbe-9ac0-2071442182e4",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "a5a10e91-9eec-458e-9197-5b82db60a2e9"
        },
        "item": {
          "id": "2d3b512c-acf9-42a6-8c05-aa4ad70b9807",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "92a2fe57-0e43-4f2c-acb5-96c2fb060335",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed20d080-98be-4dca-aa26-a4c3beee0335",
        "cursor": {
          "ref": "01137e7b-0360-456a-a388-aaeea4cecada",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "f6519304-66c9-4529-9844-2d9627955e3b"
        },
        "item": {
          "id": "ed20d080-98be-4dca-aa26-a4c3beee0335",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "f696140a-51fd-4158-a373-3e8f64559052",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44efdfba-f715-4686-851b-fd4893e8605e",
        "cursor": {
          "ref": "993af0a0-3db1-4d3c-8239-e5e8e5db80f9",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "5dc68b11-122d-44b7-a102-42d582fc192e"
        },
        "item": {
          "id": "44efdfba-f715-4686-851b-fd4893e8605e",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "0053387b-ed01-4566-8025-f3fe12f5d5eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e62ddaa9-6c31-4296-89d4-120cc02bb2d6",
        "cursor": {
          "ref": "4ff99ad6-4ea0-4ba4-aec9-9ac0a00605dc",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "a3ae88b2-51d2-41dd-b7ed-2635c4840a1a"
        },
        "item": {
          "id": "e62ddaa9-6c31-4296-89d4-120cc02bb2d6",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "71358b57-5964-4819-befa-548b6aaf6957",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e4a20e3-8b29-47b8-a691-aacec400d3ab",
        "cursor": {
          "ref": "bfa2c309-05bd-44f5-802b-1778fa352e10",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "b4bc296d-32c9-481b-8ac0-7176825dddcd"
        },
        "item": {
          "id": "9e4a20e3-8b29-47b8-a691-aacec400d3ab",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "f56fc02e-6635-4635-8dfd-063e10b787e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a9dc490-f18e-42b5-a54c-442e0a7e3f61",
        "cursor": {
          "ref": "2af4c314-1ff6-406a-ba56-cec443a2fa0f",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "adb35231-18cc-4119-b087-1a56a2938c5e"
        },
        "item": {
          "id": "1a9dc490-f18e-42b5-a54c-442e0a7e3f61",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "acbdb1d3-f276-46a1-a342-b529c349d9f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e79edf63-1737-42cd-b550-c7083d93e484",
        "cursor": {
          "ref": "aee23bd2-eeae-4816-9159-163c67282336",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "c1dc7994-bf85-4100-82b1-53acf3efb25c"
        },
        "item": {
          "id": "e79edf63-1737-42cd-b550-c7083d93e484",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "167c3222-b186-4838-a365-8a97289b5497",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a998e559-1887-4ed2-84b7-17f4c2ef3924",
        "cursor": {
          "ref": "d04db365-476a-4273-820c-d4a3d0ada86a",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "8fce1853-6c75-4c64-bf0c-947a61c9bcdf"
        },
        "item": {
          "id": "a998e559-1887-4ed2-84b7-17f4c2ef3924",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "9a35c767-7118-45da-8dcf-80cfda31bc32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6f75bcf-da0f-4c4c-a577-f9bb8b3bdee5",
        "cursor": {
          "ref": "62f19413-bbd8-42d9-a77b-74bb33fdb0fd",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "5e43261a-2b8a-4213-961a-26162060a827"
        },
        "item": {
          "id": "b6f75bcf-da0f-4c4c-a577-f9bb8b3bdee5",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "c0c63ee8-f8ed-4dcf-9e5e-931921b31711",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a97e9e4-1a6e-4ee7-ac0d-93da95416e77",
        "cursor": {
          "ref": "b5733b7b-897e-4919-b1ab-ef291d9cd504",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "8356ce02-9f21-4f4c-8805-6e45357e56a2"
        },
        "item": {
          "id": "6a97e9e4-1a6e-4ee7-ac0d-93da95416e77",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "69c806e1-e918-404f-a351-263da86b4579",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11f7e482-903f-459e-88b5-732dbc392089",
        "cursor": {
          "ref": "4aa62597-06ce-46d7-a148-d62304fe630e",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "7afec0be-a0a7-4ff4-9a91-9807588e8fcf"
        },
        "item": {
          "id": "11f7e482-903f-459e-88b5-732dbc392089",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "8e9eb389-8826-4b85-b87d-20ebc68660dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cd81f87-8741-4c7b-9809-3ffe7003a306",
        "cursor": {
          "ref": "6ff96f9e-c7b2-4038-b647-44e11899e683",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "190fad8c-25aa-42e8-8e17-bdd4af6d9b65"
        },
        "item": {
          "id": "5cd81f87-8741-4c7b-9809-3ffe7003a306",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "b41e04d2-8868-443a-aa22-70b6b4aba17d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57498b22-b880-4fa0-96ff-087cc5b4c76f",
        "cursor": {
          "ref": "4733f332-755a-4e44-af00-4eae3fe7cf8a",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "60ade225-f18c-4614-9cc0-688046f8b43e"
        },
        "item": {
          "id": "57498b22-b880-4fa0-96ff-087cc5b4c76f",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "c7d8618b-8a50-448a-8745-501d5d38565d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a88e6159-65cb-4718-a55b-2dbaff904a41",
        "cursor": {
          "ref": "ebdb53fc-66e7-4d2a-b30a-20f7552a89df",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "4932fa4d-93e4-48e2-85d0-7af4e928d5c8"
        },
        "item": {
          "id": "a88e6159-65cb-4718-a55b-2dbaff904a41",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "fdae3f41-6012-4db7-994b-03e4812b2902",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dc97333-d06f-4b86-93a7-aa197915dd95",
        "cursor": {
          "ref": "9b072fef-80e3-4e00-b6f9-d459a6ae1d7a",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "18410567-3f11-40cf-9a7b-c7d9f6c20bf1"
        },
        "item": {
          "id": "3dc97333-d06f-4b86-93a7-aa197915dd95",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "11c09675-b7a1-469d-a5a9-7e023da2a276",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03a79900-d013-4251-89f9-5dd459a7daa4",
        "cursor": {
          "ref": "624526cc-7c4c-4f2c-af42-79f85445277a",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "fff808c5-9e3c-4978-b065-0649a794ab46"
        },
        "item": {
          "id": "03a79900-d013-4251-89f9-5dd459a7daa4",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "b253326f-015d-4fcb-9b66-f36c0ab73888",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b3470a9-be31-4462-b405-5dec83dfe400",
        "cursor": {
          "ref": "e5fd3f5c-44f4-4fef-818b-15b498fb4fc2",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "2340dd59-0a39-47c7-98c6-6c06626c16f3"
        },
        "item": {
          "id": "7b3470a9-be31-4462-b405-5dec83dfe400",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "5845266a-effb-4c02-a532-8db226f466ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f6881e2-060c-4438-a2b8-78a48eb9c27f",
        "cursor": {
          "ref": "4c749024-383a-4fce-9071-c9c63ac04173",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "4692734f-cd72-44cb-b52e-a0948a1c90c7"
        },
        "item": {
          "id": "7f6881e2-060c-4438-a2b8-78a48eb9c27f",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "a9ef4186-e0e2-4b5f-a42a-abb9d5102802",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaa02c72-3cc7-410e-85f4-bbbf26e2b9aa",
        "cursor": {
          "ref": "95a2cfa0-3570-4272-8a60-1236f56a2f4f",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "d6911256-8021-4e27-bcdf-0cec0f9d263b"
        },
        "item": {
          "id": "aaa02c72-3cc7-410e-85f4-bbbf26e2b9aa",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "443dec05-1c5c-4435-b031-bde7cf8f6ce9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "684abb18-a6f1-4bd9-8cff-db3ab5a578f5",
        "cursor": {
          "ref": "644b37ec-bf86-46fe-920c-647c69d24049",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "19f2cfb8-2bdf-428c-a939-fa3bfbb7124c"
        },
        "item": {
          "id": "684abb18-a6f1-4bd9-8cff-db3ab5a578f5",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "f7273b94-ccc3-4fdb-a94a-42b1515cf9c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "235d0c4a-1525-43ee-a2d3-c4735b163534",
        "cursor": {
          "ref": "e82628e2-9172-401d-88d7-90062126a66b",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "7bace786-760c-457d-8a54-418aa9641724"
        },
        "item": {
          "id": "235d0c4a-1525-43ee-a2d3-c4735b163534",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "ece29f72-c0e5-42b9-8769-14ca7f154041",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b502d224-6365-483f-8a0d-630625448ad9",
        "cursor": {
          "ref": "22a1cf83-ffda-4b06-8601-684217807229",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "a3980f03-5a16-4bdd-9992-b6d6688bf348"
        },
        "item": {
          "id": "b502d224-6365-483f-8a0d-630625448ad9",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "078bbacd-7bce-4306-88e7-2a29e575aafe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "049c646a-c987-493a-a3e7-604aec2af5da",
        "cursor": {
          "ref": "c4005a52-bde3-4cab-95c2-cbe0bbd7e4e6",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "8cc2084e-3b7b-4a6d-b692-f18fb769c84a"
        },
        "item": {
          "id": "049c646a-c987-493a-a3e7-604aec2af5da",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "4423f41d-7712-483f-9bfe-b4e9e9e59f1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c20482f-5664-4319-a98c-41ce7ac7fbef",
        "cursor": {
          "ref": "4b24da2a-c949-42f8-b08a-a070d9488d03",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "5dfba43c-6036-4d70-8352-c849e2ec0632"
        },
        "item": {
          "id": "3c20482f-5664-4319-a98c-41ce7ac7fbef",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "48c0203c-5750-4c33-bfad-3e2abbeb5406",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 154,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a17c963-c0d4-44d8-af4d-7729c8844fbf",
        "cursor": {
          "ref": "b327d2bd-6ac2-4e7f-8194-bd5295e599ed",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "3bf2b674-c6a4-424a-b1f9-133e7f0cf553"
        },
        "item": {
          "id": "8a17c963-c0d4-44d8-af4d-7729c8844fbf",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "679d8ee3-a967-445b-af99-7babaaf869fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a05e4d44-7fe1-4933-ad47-25873a284c8a",
        "cursor": {
          "ref": "df3d9633-04f0-4af6-a408-75e4b027a61e",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "d451dc23-7e3b-4f41-b65a-cdee49ffddf9"
        },
        "item": {
          "id": "a05e4d44-7fe1-4933-ad47-25873a284c8a",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "63270b26-bb96-4dc0-9f05-8d319d7515a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "803d04dd-0af7-4944-b53e-b459663a5029",
        "cursor": {
          "ref": "128ba9f3-8162-487d-ac55-2579d572a083",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "175bae9f-4dc6-4777-8d08-8808db4c2970"
        },
        "item": {
          "id": "803d04dd-0af7-4944-b53e-b459663a5029",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "1504de59-904c-4d51-85d6-e4cac4963d23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16ca88c2-5e2c-43d5-ae33-fb7689e77399",
        "cursor": {
          "ref": "a78c4c3a-3fe1-4e90-b9de-2213a9c31f5b",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "871c3b26-4026-4055-a735-24c6a34f3163"
        },
        "item": {
          "id": "16ca88c2-5e2c-43d5-ae33-fb7689e77399",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "bbbd1187-a801-487d-a098-aeb0111d0e2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51b954c6-29fe-468b-b622-837bba28d23d",
        "cursor": {
          "ref": "4d313054-3a01-4347-8a9e-5db8067c3fe4",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "ba63600b-f24e-4d96-b8b3-97ab4a23c048"
        },
        "item": {
          "id": "51b954c6-29fe-468b-b622-837bba28d23d",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "ff7b826f-e798-4a30-9521-c8981eda6ad0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92a67a40-9f0c-4f9d-b13d-7ad61c4b665c",
        "cursor": {
          "ref": "90ed8e45-a941-4084-90b7-aaaeabc3c740",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "0e7383fc-2829-4e85-9a7e-6f286806533b"
        },
        "item": {
          "id": "92a67a40-9f0c-4f9d-b13d-7ad61c4b665c",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "1affbbc2-6360-4b6a-a022-2b5fcc03ca29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce2aaac1-99a0-4178-9874-3250c6e91b4a",
        "cursor": {
          "ref": "68fd9f34-bb80-441d-b60c-a7a264f5a107",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "73e5f725-4e1e-459a-bddc-f7fa6e0e3018"
        },
        "item": {
          "id": "ce2aaac1-99a0-4178-9874-3250c6e91b4a",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "8e71cec8-01d5-46db-9211-6281b883c5b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c8113f2-c9fa-4bd1-8f49-584becd40e23",
        "cursor": {
          "ref": "26a147cf-901f-4708-bddf-23805e4d35da",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "2539ffc0-ce91-4f62-b49e-7cd868f00f4e"
        },
        "item": {
          "id": "7c8113f2-c9fa-4bd1-8f49-584becd40e23",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "fefea7c4-f895-45de-b3ea-9ef6b958a143",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a94df284-c2b0-4425-915b-27795efc5d34",
        "cursor": {
          "ref": "6b440b07-063c-4512-adce-e53a7f624050",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "463835f0-818f-4ebb-a0a9-47b44b3cf81c"
        },
        "item": {
          "id": "a94df284-c2b0-4425-915b-27795efc5d34",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "8cee0a66-e721-4e26-800c-8f81196d298a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6a9c892-c669-418c-af4a-4b5ab2fbb3fc",
        "cursor": {
          "ref": "012425bb-78e7-490d-a1f4-bead39eabb2e",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "3b569d25-3549-440f-a8b8-78d7e852324f"
        },
        "item": {
          "id": "e6a9c892-c669-418c-af4a-4b5ab2fbb3fc",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "f53f46fb-7bb6-4c46-a476-dea1b85b2bd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d8ada66-0e58-40cd-9819-b32e4b581d2b",
        "cursor": {
          "ref": "cba4af5c-853f-4397-8f0f-b030893dab5b",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "2e3489a3-9c07-4a72-865b-f1faa732a3f1"
        },
        "item": {
          "id": "7d8ada66-0e58-40cd-9819-b32e4b581d2b",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "fc91a072-f47e-4666-9059-718460025e69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f7ce99d-8213-410a-840e-b8124cfc7b58",
        "cursor": {
          "ref": "45c031c3-b1e3-4766-841a-3a23f42b150c",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "bfd406fa-ae56-4cca-8cbf-1c772bc48dee"
        },
        "item": {
          "id": "0f7ce99d-8213-410a-840e-b8124cfc7b58",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "3f12d6ba-dae8-412d-a37e-fa6297753c85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30f2c290-0137-4ecb-8de1-a2a000616e1d",
        "cursor": {
          "ref": "d8a156e9-527d-47fa-8a64-6f388e7725cf",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "e5ef5b53-faf9-4d35-b07b-1bc229e09cbe"
        },
        "item": {
          "id": "30f2c290-0137-4ecb-8de1-a2a000616e1d",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "0acae4cc-a3a2-4074-9fd0-210fb8e4517c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "475e44cf-b8dc-4025-b422-c4096e0a9adb",
        "cursor": {
          "ref": "20caa085-6297-4a44-9b0e-23e9b0dfc1e9",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "d53c3d23-4330-4005-8cfd-c38f681aac35"
        },
        "item": {
          "id": "475e44cf-b8dc-4025-b422-c4096e0a9adb",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "f523adbb-1dd0-454f-82bb-78c846929f5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 133,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "656f5b74-122a-4f00-8589-a67a6de19b57",
        "cursor": {
          "ref": "cc541364-5236-48c9-b748-fedec5b42b40",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "1beb5d22-f13e-4262-9735-f7710b1f2060"
        },
        "item": {
          "id": "656f5b74-122a-4f00-8589-a67a6de19b57",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "dc43b11d-287d-4122-992a-c7f2425ffd50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aee98f3a-2bea-49e6-9d85-aec1b65e8cf6",
        "cursor": {
          "ref": "c12be126-af39-45c4-800d-02ccbd97feea",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "c00ce939-12f6-4399-a52d-51c1145505ac"
        },
        "item": {
          "id": "aee98f3a-2bea-49e6-9d85-aec1b65e8cf6",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "295263e0-e5cf-4b04-b6c6-99d71aae71c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad2be95d-5fd7-471b-b79b-efaad414c34d",
        "cursor": {
          "ref": "3ae59154-66a1-4f93-b203-bfcc76ab0c31",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "cd5037bf-7fba-43dd-a700-f39bd7b8c6c9"
        },
        "item": {
          "id": "ad2be95d-5fd7-471b-b79b-efaad414c34d",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "55cbc106-1065-45e0-b5ba-c0200693de69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91633c98-16c3-40cc-b151-9d16bd6d6565",
        "cursor": {
          "ref": "bdaf96ba-426c-420b-ac9a-a2d199499015",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "f61b3072-5e78-4e8a-8f31-0e3da326e544"
        },
        "item": {
          "id": "91633c98-16c3-40cc-b151-9d16bd6d6565",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "3935f67b-e77c-4cce-882d-498e68589c8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7d13579-a03b-4448-845c-5afdc25d66dc",
        "cursor": {
          "ref": "881c5d09-eb9e-4b9e-bdd8-a13f8f3d015e",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "24fd5bdb-2b94-407a-9f9f-0986e8c2fa59"
        },
        "item": {
          "id": "a7d13579-a03b-4448-845c-5afdc25d66dc",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "c1b2e98d-2c7a-466f-85a9-87c05a36b8f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3a0f2de-4b77-4162-a64e-d48c8bb8a1d3",
        "cursor": {
          "ref": "0394cc61-d861-4b73-b296-fec403246979",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "2f95a616-fc63-424d-9428-7e1cdb22601a"
        },
        "item": {
          "id": "d3a0f2de-4b77-4162-a64e-d48c8bb8a1d3",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "a68b7c03-baec-42e4-bed2-e6774334a4b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f52cd11-3bb6-49bd-aa8e-2d7a44ef4fa4",
        "cursor": {
          "ref": "7137e785-32d0-4051-86d6-7d8ec73d9591",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "22c2fe11-e148-4175-bd78-0a486f123105"
        },
        "item": {
          "id": "5f52cd11-3bb6-49bd-aa8e-2d7a44ef4fa4",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "6ae7853b-2f77-49c9-b27b-2d3b7d4e85c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9ab4e4b-67df-47fb-b950-5d1cbd88be8e",
        "cursor": {
          "ref": "dbb86fa0-fd1f-4228-9e4b-64deb17c4152",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "29b85fc3-628d-4741-9452-b26fe487c8b9"
        },
        "item": {
          "id": "a9ab4e4b-67df-47fb-b950-5d1cbd88be8e",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "48e9211d-37f0-431d-b2fc-7a0b79a7fa6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d05d656-c4b0-409a-afeb-7f4d53ebc757",
        "cursor": {
          "ref": "c7c1546a-1ec9-4c40-a260-d70a54e691ad",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "d9288925-0cb6-452e-a879-45e555162c3e"
        },
        "item": {
          "id": "0d05d656-c4b0-409a-afeb-7f4d53ebc757",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "4210c8da-9fe6-41e3-b90d-77df98298db3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab692a13-a78f-45d4-a20f-f74ecf7401fb",
        "cursor": {
          "ref": "10a51145-60bc-4bb7-975b-050df3db8b5b",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "3794c09d-f88a-4ce1-9161-a4a4dd8ca44c"
        },
        "item": {
          "id": "ab692a13-a78f-45d4-a20f-f74ecf7401fb",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "bc643ac3-e28a-4a9e-a859-6df7579dbebe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe3d3c40-b5b2-4dec-9780-02de938b81bd",
        "cursor": {
          "ref": "955ed3de-a71a-48e5-894d-87fc99f31dbf",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "647871ca-44fb-4958-abf5-38fc499654b4"
        },
        "item": {
          "id": "fe3d3c40-b5b2-4dec-9780-02de938b81bd",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "b8b25335-b48c-4f58-8034-a2678e3ccf5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "201edf7a-a30e-4e9a-9a6d-6a9a31e36544",
        "cursor": {
          "ref": "420df4ad-829c-41c1-ae54-afa49b2e1974",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "688e4aac-f36a-4e33-93ed-8f3eda6788a2"
        },
        "item": {
          "id": "201edf7a-a30e-4e9a-9a6d-6a9a31e36544",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "161ec0bd-420b-485a-8897-3db15fb5f7fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23f68da9-bf65-4c80-84d6-2ca985980328",
        "cursor": {
          "ref": "955fce83-d02d-4319-8e29-3ba4e05f5dd2",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "797e7867-94fe-49d5-b6b1-6fd6d4474f2e"
        },
        "item": {
          "id": "23f68da9-bf65-4c80-84d6-2ca985980328",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "de94b450-28e9-4241-aaf7-662edff01e08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab84c859-3efb-4336-903b-fa9cf73eff6b",
        "cursor": {
          "ref": "651efd6a-48b1-4e90-9691-0abcbeb80285",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "b17ce2b5-8ad8-4798-8e77-8d0a3d2e9687"
        },
        "item": {
          "id": "ab84c859-3efb-4336-903b-fa9cf73eff6b",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "9a1ea555-0f43-44de-a175-bf0bc9141546",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e2853f6-815f-42d5-add1-d142dc1f85f8",
        "cursor": {
          "ref": "14d27656-8a7c-483d-bd22-ad9e7ef56431",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "9dc84712-eeb6-4570-8dbb-3a9a370039dc"
        },
        "item": {
          "id": "7e2853f6-815f-42d5-add1-d142dc1f85f8",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "030fc12c-a135-4e75-a6b3-300a4f55a493",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09320d3c-4ea2-44f8-ab8a-b0612f680baa",
        "cursor": {
          "ref": "a23dd605-1827-4baa-95d9-63f8bc4e77e8",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "a596b8f7-69b3-4178-b808-d848026385c8"
        },
        "item": {
          "id": "09320d3c-4ea2-44f8-ab8a-b0612f680baa",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "78b8a0e5-e50a-4360-8a3e-15de68a47db4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19ee84a6-e684-4162-9ca7-bc6d1cec5f4a",
        "cursor": {
          "ref": "9294aad1-582a-48c6-83a2-5bae7318cc18",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "934f41ce-57b4-4667-b04c-8ca5aad73940"
        },
        "item": {
          "id": "19ee84a6-e684-4162-9ca7-bc6d1cec5f4a",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "6c4cdfc2-2d57-49de-a8b9-d8a21055fc82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4684460f-d4a3-4cfc-a950-61dfe242d042",
        "cursor": {
          "ref": "2c7f5c8e-55f5-46bc-b84b-f2ff145c32f7",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "f432dd1f-aa15-4bba-9ca4-3eb919b85658"
        },
        "item": {
          "id": "4684460f-d4a3-4cfc-a950-61dfe242d042",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "b3afb132-704e-4a84-824c-5388e27f1838",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79e3dc1d-adf4-4eec-91b8-98f00d3f836c",
        "cursor": {
          "ref": "17c46f91-c059-4794-871b-dc83e01e5423",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "4c034b9f-7580-4a3e-9375-2e0b386db5fc"
        },
        "item": {
          "id": "79e3dc1d-adf4-4eec-91b8-98f00d3f836c",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "ea6800f0-f5a3-412b-8a02-8fef2b51720b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff1c2f81-7bbb-4b82-8e0e-d325a1eccb70",
        "cursor": {
          "ref": "70969a4a-e5be-435e-a661-04a018bb91ff",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "4bee6138-c771-41f7-b436-1977416c14d7"
        },
        "item": {
          "id": "ff1c2f81-7bbb-4b82-8e0e-d325a1eccb70",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "5b58451d-8883-4dd2-b555-97c28350ef95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce4fdf03-87ab-4be1-802f-efa47a596f77",
        "cursor": {
          "ref": "6dba68a7-867c-4e80-9f4e-146654333370",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "4d2b6340-d12d-4b7b-bd56-582f29a28ace"
        },
        "item": {
          "id": "ce4fdf03-87ab-4be1-802f-efa47a596f77",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "875be5ac-de1d-4250-9fcd-ee4a16c6d393",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dda326c0-be4f-4afc-987c-8bd3b443495d",
        "cursor": {
          "ref": "d41b7419-2e1e-4e6e-ae3c-390f84da8264",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "8c5fa482-22dc-4a76-8e6e-5198a82ad0b3"
        },
        "item": {
          "id": "dda326c0-be4f-4afc-987c-8bd3b443495d",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "38e68c0c-d529-48c8-88e0-b9c282fd0fc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c5e52f1-8e77-4bd5-8250-ce0733bb28a9",
        "cursor": {
          "ref": "bbfb3992-9bcf-4db5-819e-f8cbf8ec32fb",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "3b5dc21f-de5c-4bd0-ba47-f6a8ae723a75"
        },
        "item": {
          "id": "4c5e52f1-8e77-4bd5-8250-ce0733bb28a9",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "81af3cf7-eb01-4235-b33b-2887dc0aed9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d330323-9b07-4c1b-a805-fa1c86ce76e1",
        "cursor": {
          "ref": "734fd799-7f14-4c13-a6bb-088a09fdced1",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "90b3de67-e3ab-4b8a-a868-4bda571d5897"
        },
        "item": {
          "id": "3d330323-9b07-4c1b-a805-fa1c86ce76e1",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "e5f81c1f-c224-4b63-b60e-686b78541f74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0ea82d6-b226-4d16-8641-19313bdbbb55",
        "cursor": {
          "ref": "98139fb4-36bf-43f1-9026-863eaa597df2",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "1429ea04-d87f-4f90-914a-17a396311842"
        },
        "item": {
          "id": "d0ea82d6-b226-4d16-8641-19313bdbbb55",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "c829ee69-e502-4cbe-b5ca-44d86e6f4376",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59dde71f-f042-4dd3-b4f8-40e36c808fb2",
        "cursor": {
          "ref": "444d09b9-ca59-4219-9591-6aece47e2f82",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "8b2969c4-51f3-493c-8920-03f5015709de"
        },
        "item": {
          "id": "59dde71f-f042-4dd3-b4f8-40e36c808fb2",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "0f3f8e8d-6425-4ff8-befe-8bca6feb298b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7a20970-ba2e-45c4-a8f5-b6e8aee1e471",
        "cursor": {
          "ref": "62e8285d-156e-49e1-8f84-c1479c4d8c87",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "873e932e-b404-4ae8-9dff-fb234b048579"
        },
        "item": {
          "id": "e7a20970-ba2e-45c4-a8f5-b6e8aee1e471",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "d6cff309-92a4-4e8b-bbb1-3036331432e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05415413-ebe3-4975-bfe4-ea98eaa96ddb",
        "cursor": {
          "ref": "b2202137-848c-4f47-ab6e-5a3b557f7b95",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "2e614809-7623-42e4-8f51-4d8f9e129a83"
        },
        "item": {
          "id": "05415413-ebe3-4975-bfe4-ea98eaa96ddb",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "dff5adcd-f9ab-480a-91c0-bce5c56c2d91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50cabaf2-07b2-416e-8e5f-59aa1e39961a",
        "cursor": {
          "ref": "a498d49d-870b-4096-9376-5aa8157b2bd2",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "8aa6e2a7-0d8e-4b80-a8f0-3ab091ecc3e9"
        },
        "item": {
          "id": "50cabaf2-07b2-416e-8e5f-59aa1e39961a",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "0a82cca1-6e36-4905-bed7-0803bb66190e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44d0dc57-88ca-427d-8629-82c63929ddc0",
        "cursor": {
          "ref": "0aa84d05-4e71-4c2f-90f3-0fca07aa0759",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "96c36b06-6e8f-4acd-8d4d-9d7ef17f92db"
        },
        "item": {
          "id": "44d0dc57-88ca-427d-8629-82c63929ddc0",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "84369fd7-197d-41a6-a9d6-49567f5a2496",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 19,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76d15fe6-2a8a-4d08-9658-3b851adf1b4e",
        "cursor": {
          "ref": "1e62b2d9-4e4c-4b2f-879d-c1385ebcf000",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "ddf06afb-da04-46f7-a553-d8371f246182"
        },
        "item": {
          "id": "76d15fe6-2a8a-4d08-9658-3b851adf1b4e",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "1582f881-9327-4e11-ae9e-0f8289a2e946",
          "status": "OK",
          "code": 200,
          "responseTime": 58,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dd0528d-dfe6-491b-bc59-9a7bb63f1e8f",
        "cursor": {
          "ref": "b4b15fd8-f2d5-41b5-8403-3f7d20f63a00",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "86c7d3b3-2848-4bec-a292-3284c4acd00f"
        },
        "item": {
          "id": "7dd0528d-dfe6-491b-bc59-9a7bb63f1e8f",
          "name": "credentials_verify"
        },
        "response": {
          "id": "cc9033e2-e73c-4df2-bcd9-b9cc1e9dd46d",
          "status": "OK",
          "code": 200,
          "responseTime": 2542,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "98a9bb66-d350-4350-9bee-ca9e67e9c982",
        "cursor": {
          "ref": "fbab6084-9f73-459a-a12a-e64ab55dd591",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "df75f183-024a-4dc3-8ab5-a5d5b572a0fd"
        },
        "item": {
          "id": "98a9bb66-d350-4350-9bee-ca9e67e9c982",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "c2374dd3-6bec-4345-8e5b-666c0cebbcf2",
          "status": "OK",
          "code": 200,
          "responseTime": 2573,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a52f1df-8c19-4fec-b824-e349247dd011",
        "cursor": {
          "ref": "08ad933b-e05a-4ef6-b5ee-866afe9e9143",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "810c944c-1cbd-4966-ae66-caf6bc9eceae"
        },
        "item": {
          "id": "4a52f1df-8c19-4fec-b824-e349247dd011",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "3118aed3-1d3b-40f3-a6bd-5bdc97d184f7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 19,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a52f1df-8c19-4fec-b824-e349247dd011",
        "cursor": {
          "ref": "08ad933b-e05a-4ef6-b5ee-866afe9e9143",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "810c944c-1cbd-4966-ae66-caf6bc9eceae"
        },
        "item": {
          "id": "4a52f1df-8c19-4fec-b824-e349247dd011",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "3118aed3-1d3b-40f3-a6bd-5bdc97d184f7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 19,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "373cd7f6-0b87-4ce1-b327-0ff317a7b9ed",
        "cursor": {
          "ref": "3a3f8cd8-bbd7-415e-b35b-9da127166d03",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "5204c9e0-147c-418a-8c52-3bcc1ede5bdd"
        },
        "item": {
          "id": "373cd7f6-0b87-4ce1-b327-0ff317a7b9ed",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "150a0353-e9ef-4b65-8d44-404e506bdbf4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 19,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4daf48f7-9233-4815-a584-e4787707cf73",
        "cursor": {
          "ref": "804d013d-dd3a-4ad0-8745-65707b9a0aeb",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "117c0d4b-14bb-4985-8adc-8b108a630202"
        },
        "item": {
          "id": "4daf48f7-9233-4815-a584-e4787707cf73",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "66454b27-88df-4290-9368-a19b2f868337",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 19,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}