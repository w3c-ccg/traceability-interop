{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "4d6bc140-6085-4153-903d-61aac5d05b06",
        "name": "Clear Cache",
        "item": [
          {
            "id": "8b4bad01-d3fc-40d7-9362-cd1619a9448d",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d7259c19-87da-46b5-8e03-76bfcf074dac",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "51b7b1e2-adab-48c3-ae2e-5596b2db0fd0"
                }
              }
            ]
          },
          {
            "id": "41ad4c3a-d77b-484d-adb5-9b50521026ed",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9043c509-df61-459a-a5bd-c8631ec86f42",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "df1dfcaf-59dc-44c2-abd0-0f4668ae9dda"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "ce602742-c581-40d5-ac7e-c686155d07eb",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "c8c5ce33-21bc-426f-a027-5dc8cfd01545",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9ba1afb3-dfe0-4426-af56-3ed7b8d9344c",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b003b500-09bb-4038-a005-e34a93a6ab2e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dee48865-0538-4757-b510-59d11f873608"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "53102185-ac20-415d-bc6b-20920e158373",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "61799e70-a251-4c6b-b259-d34a2980c086"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e90cbf02-7bcd-4a1b-a706-4383f6d06e76",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8b01bac4-2750-4592-9fcf-54cf79c2af92"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "553f81b6-b61e-4c2d-9277-5281846af3a7",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "9beb935a-f528-4865-8fc6-edc3c597473e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f479d2e0-2274-449c-b295-d37d19dabe50",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5b697a23-de3c-47d3-8e21-0c5392074759"
            }
          }
        ]
      },
      {
        "id": "f721814c-3dce-4a21-b003-cb6b8ff0ef74",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "331de5a6-dee9-453a-9fea-07003923b3d7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2cb8f534-8a98-46e2-a548-eb6210e75730",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b6c8eadf-a874-4c76-b225-70ba1776411e",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cf5faad-70ae-48f9-b73d-5cfee9c6da6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9b60feae-3a5d-4d2b-ad91-404ac7f005f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67312545-cfe9-4279-ab26-2e3a274902c5",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e5b3f83-3657-4f48-af4a-99ccf45fb4d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ed8158e5-b95a-4df6-a36e-2ab6565220d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebe89e84-244e-4d92-9478-07bb2738305a",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fe2c161-f514-4306-9437-7fe751c991cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2bdc0579-8b2f-4e5d-b882-6e98ebbb34d8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "920c63f1-6812-49f9-bcab-1859fef83f44",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "21047523-95e2-4689-9193-73050d00f285",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1c29a15-c0ae-428a-9386-369b1664d60a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b07a55d8-d76e-4919-a1dc-5b16fc33bbd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e212571f-3d4c-47f4-8781-b7ae2a091067",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdd8af8c-c227-4ac9-a06c-0da09be7ba43"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "cbb8729a-1bb0-4a8a-a4a8-cfd49b046327",
            "name": "Positive Testing",
            "item": [
              {
                "id": "89ed961a-059f-4f79-b4b2-bd28099ed284",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "77e22cd4-b62b-4d08-8771-76a7d76d5b4a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "14eab976-b9ac-407d-9e67-4974ee0edf2c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f80341fd-ad46-402b-92ba-b57a511e9bd9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "2ad0b586-40fb-47db-af93-0c43753e1e5b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f2067a1d-6aad-4511-8d45-fe6b8dfef511",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e944f1e1-f370-4811-a90b-d23a8cebdb52"
            }
          }
        ]
      },
      {
        "id": "be6364af-766b-4d1c-a6f3-d15ec372d58c",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "eba6c615-5e7b-4bb2-bcf7-dd139bfab3a9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "79e834fc-29d9-410e-96c5-f89fbd989c51",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "a51853d6-b1e9-4eb2-b536-0a9688f9d721",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc5e03b1-33f1-4702-b740-10c72b3326f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f848c4f9-d729-4826-b270-e62937247ea1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a164a871-634e-49b7-b7f6-feb5c9df87ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1c817404-da54-4c6b-996d-6bc12114d808"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6325eb0-a82e-43d1-8a4c-dbc1dd030dd9",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bc948be-044f-4038-9989-103b1ff7546e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b916e7fd-25ab-4fb9-b8e6-177e3f02ca11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac293325-e076-48b1-9442-2b8874064ed2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a6697c6f-3cd7-4906-b0ea-a2f0ae648eda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9404a140-fffb-490b-86c2-5ed32dda7f13",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cc067c9-0b7e-4af0-93c4-b852ea3f55c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4e99354-3f37-4bbf-8716-31686b3422dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4565e19d-7078-4435-88ee-61bc4bd38057",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "42ac6c98-ab5a-4672-abc3-f9537f9b368f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4498ed3d-b5a0-4c56-85f2-0e7e128205a2",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8133c3e2-c306-4ecb-a290-816dbb954d07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0b4de5f-2121-4150-b126-9de966efb104"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19b0ea5f-2c0d-4f5f-8d79-849cef0c917d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "99ad7aab-712b-41e3-9c32-8b8757f6b3a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c86f0b4-02c8-46f4-8a45-760d5e52e99b",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e036bf81-8d89-4dd2-8f3e-38ff3baedaac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33668f56-4625-4116-bf87-96fdbebb8a90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33d3ca54-68a6-4721-b13a-50ca7f8a9bd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8fd78d07-f7fb-445d-ae6c-b36fcdb633e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e6c393f-98da-4a9c-b641-0d6d535f22a4",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "168ca731-8839-41a0-b0a1-8b9200649458",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4f660d4-55be-4f22-990f-9939fa83394f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ee8abc4-2632-4653-bc2b-19bdbade6bb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b6497a4e-71c4-49d9-9c03-3136b586afd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "200cb9d2-48f2-4f58-b339-df633abbb268",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65575cdf-0ec5-4f45-b514-81e97816d30f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7b32817-dac9-4d6d-b56c-312ac990ca04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bae0664f-95b3-48d2-b937-dc3d4952625a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cc719781-ce12-423b-9ba7-7641de53d940"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42580e16-1518-4081-8ea0-9d8fcb7c3aa5",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc58e2d0-1526-492b-b3fe-ed60fbc99ee9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74445404-89e4-42ca-bb24-6ce9edbb0c1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe530079-d4ba-4dcb-b44c-75c356f47551",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "64164acd-80d5-4bc1-ab85-4a391a7ece77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b23456f-d482-44d7-8967-a83b864a1854",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "861f67c7-6bdb-4e7c-b3f4-48c12d8e7d41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6fa53b3-63d4-4c99-8950-3429fc7f670a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edaa2183-752d-4e8e-ac91-982517c2577a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "552f4f59-ee2e-451a-a16e-ce8396fff6ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a183a6e2-1771-4535-89cc-af715b67f94d",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5971aa37-b2b6-4237-b364-569b167ee32a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edb82c90-7aae-48d0-bea9-af4d49766ad6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f0842bb-a083-4735-9b38-f851cd6205ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "261a755c-b58b-45cc-b192-3152216d8687"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29c3574f-74d2-4ea2-9d12-774dd9d4d958",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efa59b16-5ef8-40ed-a025-1ebcb2499416",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b40a42d9-919f-4645-887d-a3da03cc3d00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b01b9a3f-548a-49ba-8388-c8e34aa7b3a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a7d60218-60b9-4a19-b413-ecefe142b701"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1019207-f843-4913-bb89-c4f4775d6a46",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff673355-53e5-4afe-8977-d52c09faa974",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db071529-497c-4f1c-b051-e0f1edfa3693"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54ecc41a-ea09-41b3-8b47-69a865bde953",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "702a635a-3cb4-4614-9b7f-af3ab99064fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a182e47d-cb20-4608-8ec3-58b17c69b84f",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c339cd0-cfad-4388-9062-ec5a0a765cd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee109dc6-c1d0-46a7-85fd-d24ca1e41a66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ea99ce0-193c-4444-8a75-872d32653e20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ed09c187-6821-4447-9d59-aeea4b8c1b21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54621b2d-a7ae-4116-880c-398fa8c4cdb2",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97b0eb6c-7228-4740-8cea-949f9c340c30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3f90115-bab1-4d38-9383-8e7f4d67b661"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc56a0f0-fb31-4da6-a245-f7879a19e5a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9fde95ca-34a7-427c-a1ca-08d348a14da0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a590fcf7-73a3-40d8-82f9-38ffcdc11e8f",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02989c5f-ccab-4e06-b02b-eb4e78076611",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd9fa6c0-d78b-43f8-ae10-41286532ef6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b21ff079-bcf7-47ac-ba10-e43a15acf2f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2e81dc89-f48f-4cf9-847b-bd5f9e74d972"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbbddcec-68b3-48d8-906d-2227349bba30",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55f619a3-2692-4eb9-93ae-e5dde8ff87a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed214b78-1d35-46c8-84d6-098fff5268bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e061c89-fcb6-4094-83cf-9450e8e37eaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cc751600-fb27-4b9a-a68b-6cfe2009ebc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6211e858-9b4d-4933-a918-9149d1da5abf",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25a80031-13d6-4ca5-af60-299f3e19691e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36ac72a5-76a0-4ff8-89e2-e6dc090706ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42d2ba90-30f2-4090-86eb-f9177ef9f893",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fee89cd1-5cf6-4fab-92ff-fd544551a2f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65d18ac7-fa0d-495d-a440-85ff5e1a1faf",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ab2fbee-f61c-4ce1-a8d9-f5c63f12737d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3155dc4-e650-47bf-895a-9fe211657e7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fe9302a-d602-481f-ad85-4e1d80d07519",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "1b765c30-504a-471c-9200-562e3b600115"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2719d2c-0ed8-4b76-b8ea-ba061d5cb942",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a783ceea-a545-4c2d-810a-acc2716f3d0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c6d7688-da6f-4716-b815-e26451ced595"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb9e54ef-d599-4d0e-ae58-03e4a0cea1b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7a5afd8-b983-4374-9df4-c58ed8893092"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba30bae5-d656-4d7c-a2c2-7b2559c067e6",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29052da9-fa19-4f1b-b3dc-ff915800794a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a42beba-5346-43a7-aaa0-544bb5856e07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d8d8136-cdbf-4804-b2b5-4a7f9efee318",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "be853353-9c10-4ba7-8713-568c10c84b68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2567c67f-dad8-4e58-990f-16e1d99134ca",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47cdc5b5-3143-445a-9f68-ec406ebfa2ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c01030de-0e61-4c89-9cf6-a380d861a122"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37c6a9c1-7355-4b18-aff7-ca2f096d5d91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f00b17f2-af2f-4b66-b4b9-4747891875aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cacd9f80-cac6-4fad-b48e-61defc406c1d",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "174f7b5c-08de-4976-8341-2ae7ae1a6c08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf034acf-26ed-4f88-80aa-80cbb7f5e2ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32874efc-c804-4d60-a2da-e3224af6f524",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a7a71e7d-b64e-4ee0-b683-2813bd99a1ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3b6eaed-093b-4af9-b40f-06e3f5513598",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dc6e8c1-96e1-428c-8fa2-a4a306bccbfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47ac4254-f5c2-4d52-b980-a4c3a54c35bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "defa4cd3-cb5a-4116-9987-cb64ee72e9e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "99912258-aa11-493f-a2fa-ddcaf4be387a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "657ba627-3778-4477-b410-7c38adcc0121",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "127984a3-3e2a-4f1a-939e-1239381fb6d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "434d49fa-b999-457c-8cef-c2fdb935e08b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3654b66-4e15-4dad-9290-cb078ae4b285",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "4788e0f6-3f41-459e-b0c4-0bfa63ffc51b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "114ab94b-66e8-448c-a492-2310742041c8",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42e842e6-30b6-4c64-bdaf-3833a3ba4fdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe4547a7-077f-451d-be66-af6ea2231de0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2713c07f-e49f-49dc-81f9-6cae58a2df18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e616787-6251-4ab3-aa20-9ac3d246f1b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e36f6267-f052-4af3-b1da-477e1aba4d0c",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db2a01c4-852f-4f83-b8c6-0a4424a6e686",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efbfdc45-d9c0-4ca4-b97d-9b2c21b17f79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31aa1269-aae9-430b-8c37-fc34af8b34c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c6c250a-bfe2-4873-8426-911980473380"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6297284b-76b2-4076-912d-6d1d8eef5f71",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c283e2cb-c547-4b75-8d19-624ece5d8322",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c61df52-2e84-4161-9dc7-8f849569155f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a3408d8-dde1-423c-8751-dd4f98abf2e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "294b89f2-64b8-4701-927d-d011f84b4879"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd5186a3-bcbb-446a-ac08-8033923b2423",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c18f32f-d3e3-46fd-a54c-8f2d1ef46e84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eecec9a6-ec23-4f93-872e-b605275fbc16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e888a0b1-4c8c-44e1-8bbc-ba35b9118338",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "063af7d2-2a09-4bc0-99fa-d2eb68bbd777"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a2c94b2-376e-4a1a-98c2-7a4810006b66",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ace2f57c-5edc-4c5f-9dba-c7f94b15b2bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b64c4d1-81dc-469e-a1a8-f719900fa053"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bd16324-621f-4b64-9d05-ee3a206a4d96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c37df6d3-6275-40b5-840b-f241eac029bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a963adc-d61f-45dc-95ef-dc76d29e3601",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d461c218-2826-4392-83d2-05cd49ee18e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "065d95f6-4911-4004-ae71-e80e22e3fb0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65c16822-cf7e-4c55-9fe9-da9a6da489c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f7e1039-be8e-42ba-8795-d7b14ebd148f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3972b23b-18d9-4baf-a511-e30efe12b415",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01191db6-8b8e-4759-acdd-a3be8a9c3052",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "815946e1-c213-4d2a-81c4-bc4cd25d08f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0792405-e92b-4893-8ad2-cc3314c9e6c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "479f3495-f931-4290-9d20-35a4f247fcbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04b62970-ce08-42b9-896c-d640c62b55ec",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80e11a50-00b1-4245-9b68-0c6d3c94c545",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95bbbab7-3af9-42ce-930a-45e6e7c0a57f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49ed806d-2fe3-4d7d-9908-9d54ee189cd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a54a0e7d-4d48-49e6-a5d4-e0fbd2d065c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8107bd78-eefe-477a-a2c6-1f0559a0b4d5",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f05080a-3ddc-459e-a7e9-c86c06aa0b07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ef2a030-233b-425f-957a-27ee89c65e16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9fcb07f-5e75-4f29-8122-8bf0dba17a29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "17d68cd4-3552-49a3-8b7f-9eca52902b28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7891d539-3d8e-4931-bd96-60d8c21c2f6b",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f6f263e-7c5d-49fb-a880-abfe418fba28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e11df83-968c-4618-ba9e-6dac6c8a115a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "991f9d9a-03b7-4687-aa45-ff98c4f00036",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "21bc2158-c1c2-499d-aef4-6f00b7828cb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89d749a6-7d08-4622-8353-163745a13a5a",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f35143c2-0422-4d80-9f30-93245bdcd7b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c1a58ef-f7f1-45a9-82a6-b85fa446f95d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5059f448-20f6-49df-9762-2e1940234e78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "4c684b3d-6094-4ea5-91a9-5080858037a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0001663-03a9-4f52-81da-4181ba11257e",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a154e80a-23db-44bc-a0ca-40b3ff9121f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3aa42fb6-de19-4926-903e-7e7757b7c088"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f900c80b-7925-49bd-9c8b-d217129ccfc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c391a150-ce34-4e0f-94f2-4a5ed37fb7ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85a28121-8889-4048-843a-064f7771ac31",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4153d5a-3892-45bf-a81d-aad979d30627",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd0bf35d-76be-4509-891f-10328f63a48c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9af6c4a-f3b0-4204-9414-2ae0173a0a6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b7af406f-6ffc-48c2-a854-7b8ebe2a946f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c3527e0-6af3-445a-9f82-10c45b48b1fe",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d8585ac-dc70-48ac-bde1-e393c5beee73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96e8952e-cd34-433d-8d35-57b8224f3927"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "959c7188-7767-4fc5-bb41-ac15fe269d96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "8b44a5e1-b8cf-430f-92b1-31481ea35be6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "342d22ec-759d-4138-97e1-316ba95ea693",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6aa78904-bc0e-4edb-ab9e-c7c378c76643",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b5078f7-2299-44c8-bd64-ccc9696b4457"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95fbc823-4a4b-4b1c-84e3-b1ee06df6f3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "00519c50-8de4-4588-aa3f-b4308bdef767"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2b73344-b24d-4f74-96eb-afa1ae25e536",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76d8191b-2aff-4d3c-bb71-a65b979ffa34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab5ae99b-5c4e-4ce8-beaa-05dec76f7b2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0902ea70-e033-4d74-ae27-672a15503d4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e02d14a8-bc2f-4b5c-9403-ee31486a13ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33cd553c-0311-49b7-8c6b-fb3844b44a4f",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d941d538-5549-4b25-af32-74f5294fcef8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca99b249-ed2d-43c2-ae21-9d5b29e29282"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ab5e90e-de5f-4f42-9336-9cf633f77556",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b197ca9e-5057-4de1-8b7d-3a4e271d689c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39a785e8-8383-4d59-a504-de7de2418dcb",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4966420-a948-4e28-bbe9-c773b2dc8bcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a802708d-be10-42c2-9253-9a18e994e1de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b86b149-80f2-465e-be51-be231d4631ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "3e9c6bc7-f90d-4683-9e00-c2d7430e6b47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1af6d06-75c9-4c48-807a-03e67060beb7",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34494460-aec1-4029-8fbc-45357dae63ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0583cc3b-4cd9-4103-8073-e5226e7efc3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "665b6a84-7e4f-43c1-9d43-a93ea55a52c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "6e310058-b64d-4edd-b1aa-6b5d1db557f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1333fcd6-da32-44ec-8dc2-f0e4e8f5adc6",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fa61c9d-5bcc-4164-af47-af94a1956929",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5be918f9-c947-429b-a04f-09a2eecf0626"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "686d0c4e-e66b-4651-a2a0-6bc6d4d1dde1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e275f29-7441-41a6-a496-79a882d85ea6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e9a0cfb-ae58-40b2-bcfb-b8c8db0cff35",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "121ab819-390b-4d08-af8e-6607ab2aa060",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65e0817c-4635-40c5-88a7-e127de6edde4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a85994e-a7cc-446d-8780-f321ff461ef2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "00f20dc9-b708-4cda-948d-4211df695cd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee3222f0-4249-4b25-83fb-89e72239b43a",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64976283-66d6-4dc5-904f-1d5beba293a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5d54794-254c-4d03-ac8c-23f38e3c21b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1beb76e8-7b86-4235-9759-24ab4ccf64ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab64cb91-0e70-4653-8218-ddc99fcc3f15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cef94787-7d91-4f29-a869-47bbd60eb4d3",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bac3d9b3-7019-4508-b4ce-d9a62f738e3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4dd579ec-107b-4b38-9823-786ecbd9cd7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7effc7f-223c-463b-bdd2-524d38900a90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "41f70abf-b30b-4f60-8127-d1e2c9b63348"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c941f51-ce04-43f6-9295-1061554c6157",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac3302a7-5489-4341-bb81-1717b5159b44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc107514-a33e-40e2-af02-00649001c37c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da7c2be6-24dd-4b93-be16-56e166bf4cb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "730772a2-5638-4830-9c13-5647609e95a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bc21faa-95eb-4981-8f4a-21ea67eaf8a6",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51b5bb9a-7b63-4fcd-938b-3a617dac5bae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "684c4371-3069-44f7-a046-a1a043a74c2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f84c458-35df-4854-b6f7-c0ecacb561f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4d9756c0-a9ec-49c9-a84d-542d05989e46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d36facb2-76d3-4fdb-94a9-9f7d0f2cf0f4",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5eb181c7-d478-4e59-a123-bf5a5aecc0aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b653cc2-8835-428d-9529-8cca83e01b16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b7c41c6-1763-476f-8804-c9578699daff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6f5ffc82-f443-4e14-886e-dc7b48642c18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef5943ac-9eea-46b6-86fe-cdc833e24584",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "736cb793-20c0-4dce-bd1f-fa60ca118c0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d6c10b5-8cc0-4870-b8fb-e4957e87bc9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1366241b-5e4f-4280-b69e-d1e79adbd9ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "15cad6ed-d449-4411-8807-965cc5d82f15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4632078e-fd38-4caa-b9bf-9c6c3d92b307",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10e1fb37-70a6-4c94-b905-d4f3f08f46ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc8253ea-548e-4cab-853a-b9d58b5a7193"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "715cfe15-312c-4828-a036-4f75a86fa584",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0885ca70-73aa-4e3a-b413-7b3c3faf04e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33efa5cf-e673-4822-9357-8b39617c12b7",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e15eb4d-848c-4907-8a05-9bbf82b97f31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b18a517-7e35-4dc1-834a-5799fd8b0afc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "234b609e-6145-4ca0-865a-5f2b0e0ebde9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c0b551b8-67d1-4f93-81ed-7255a9444d29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8eaa33e-0b27-42ae-b7bc-14666751278d",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98fd189a-f4a0-499f-b7c7-40895222740d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ec8dddb-5690-414f-9535-eab45ff2d399"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff3cc686-76a7-4174-bcc5-83559fb20f2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e9fa77b8-b6c3-4904-92e1-8524320887cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b7de79e-c424-4593-9d7e-1d90cb7d7e6d",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4363a7b0-dc11-43d3-bb5d-a80a13440407",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6596d8b-fbaf-4cb1-835f-3a1141269dc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2eac10cd-ac02-46f3-aac2-dccbf7e020d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e9256b3-b7a4-4bb8-98d3-d029583291f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83ca0a81-2527-4610-85ec-96d69951cda9",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc0fd2e4-da35-4da5-8e42-59ab5888524e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7455098-b500-4381-a8d3-fe71a64d4b91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4e4d4a6-1f14-4fda-b3ad-d6f8d6728df9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "3347f5fb-a79b-4191-b057-ee3ec59c80d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9aeb2815-c18c-47e2-8779-0336fb97f1ac",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "196cf774-8212-40d5-9801-fffed6d981b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "611139c7-c991-4191-bb0f-067f5ced7a08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78706125-6f7b-4ba8-aaeb-c9ff99060b5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ea5f79de-fe9b-433e-a1eb-eed2799e585c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ff42236-f72c-4c59-b5e2-5dec9bdd27c9",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebb9d82c-4c2b-4d3f-a3f9-58e2aab7151d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88886908-d673-48ef-8981-cffd60af1561"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e55ecc3f-82db-469f-8447-01ec0f7d2dfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "9d7fb81a-19dd-4768-b0ed-f661804add49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf3fb9d2-485d-4472-8bf7-2cb4c6245763",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d4db09e-4805-4ad4-8b37-3990c5a5ed1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d69c03d3-99ea-4e82-8263-edc9d8c92779"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3272f423-d193-4e46-9dfc-9d0566b2ac14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "88f49ffa-8d1b-4559-bcaf-317b58876d17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b2359ec-df2d-4ee9-8506-ced2744d76ab",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ea46d53-89ae-4b2f-bd82-bf034007a136",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7913330-db12-4026-a875-bfc368697373"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c78ea1f-860a-437b-b6da-dbc731bf5a70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c0172641-d1bc-4483-87f4-b6467d1261d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe3ac5a9-1807-472d-9ced-5fb71f5702f5",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76a68475-83ae-4512-812a-1bcb3354e89d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6a7f7f1-08b0-4669-a61e-ce899bfc99d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "830531f4-b799-4d7f-96a7-5cc65b395bb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "3dc3a733-ca35-48af-9737-0be4eef54c1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33e55599-5943-4477-b7f3-5d6ef6fd6053",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22d87ddc-ae51-43fe-b56f-ab5d3e1394f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f210c8e5-3e6c-4109-a276-776927ae7897"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8778a4d-e613-4131-920b-389edf77a436",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "94ce04c4-4c56-4e36-b61b-41b9854d845c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a927ae89-1a17-4b07-8107-1d90e14aa351",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "031d2da3-a6bb-4d30-a1df-ec43ca16a46e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5aa762c1-4f71-4007-bdd2-74a639a9c001"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99977434-d0d9-4c51-a034-e1c4e7e851e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "b28d9795-e843-45d9-b1a8-3b375aa42f9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43aedb04-10fa-4656-a565-b88b76cd2d11",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5ee3259-a797-45af-8c74-81a4e99ca630",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8560cae-1655-4457-ba9b-c38a4cf2d26f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cc1a387-1c05-4aa5-bd38-7ab6febcfebb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd9e4a31-3288-4163-94d2-b1c8eb24c25c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8076be0-1481-402a-acba-7d2e8daf82d8",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ee6c327-4cbb-48ef-b013-4e72ee315096",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d88b4506-e37b-454c-8885-fef76236eb02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aff32bd2-28ab-4a19-98a2-206b0e89403c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a1527c60-75b6-4162-8248-adbf11a9df63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c165aad-bb46-480d-9af5-a9591e6a97a9",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcfeda8a-a86c-4577-aae3-da41daaaca3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6327fdc3-6512-4a4b-84ea-7f6c7a7105bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "141ae1b9-eb68-422e-97dd-215cd9e3806e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "729175c7-4976-4657-82a1-f24e66586616"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20bf032f-8bce-4f79-945b-a1b0b05ffb90",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38d54105-ce7f-4203-a330-5b40f8b1b4b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88646c89-d74a-48f6-9287-870542a5e6b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84557a33-402e-41d6-8998-406608be8ff3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fcd13b67-1851-4c67-a6f5-877fd84124ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75f9945e-b700-48e2-ae92-8273c31486a7",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1e8e433-12e4-4e64-ba86-b49cf97da1a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ed700dc-a3a6-46b6-8e22-880ff187ed17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c697f023-5d33-49dd-9d01-fbe2a0f837ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "efffc1f8-2da9-4159-acd9-9de053ebfb8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "060a662b-63d6-45ec-be26-663c6d39961f",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31959e57-d9f1-4f07-83d8-bb0b9306561b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97591207-e55d-4902-b23f-d50f042dcdda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ae27e6c-f626-4654-970f-ea8b7e4f34f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e1db20e6-a2a9-4ea2-ad47-c54ab7f1cf66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "425c468f-cac7-4e9b-a747-56b10bd9aa66",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51f8dc8b-9975-49b9-992a-46a9a935dc65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e824ea45-b487-40c9-a03b-03d87ae5e592"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2599f9a5-2292-4237-8000-5587d2addecd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e9a7299a-808a-4868-bc6f-248932b16cc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5548b093-b724-4217-95d1-91c4299ef4b1",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "029f45ee-f53f-4844-bfb3-d9c42029739b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e46bb1a2-f53e-430d-a3b5-542d6d178fc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad6ef96a-6959-4800-9053-2ee4a5ae2353",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c282a75-2cd5-40ba-ac9f-6b9b0d0230ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32ddcc09-1db3-43fb-99e2-d818ee0708c8",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0e27310-487c-4944-8f69-a9a01650162b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a7dd641-0182-4430-bf9c-f7cf937d8e26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adbe15a7-541a-4cb3-b2f0-7ff4e7efcfbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "82a58b2d-d695-4916-a887-2a99ae90a9ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60258f40-7db1-4462-9db6-853bebf12ab3",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7a7ca46-9942-4e1e-a698-e787c8dafd9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bab2d41d-4ebf-4bdd-8b4e-1eb059637662"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbeb7cf1-485e-4cb1-bd81-2c9bfa28cbdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "11ed0e78-6fa5-4898-a5fb-26a80bc24194"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b40f1cb8-9e25-496a-90f5-889de71d1b86",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a2c86f8-d903-4657-ae5f-918bf2c325e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2335ea0-d894-41ef-8860-bc22a6540b1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d707af3-3097-41f4-9c03-c3823dd91186",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "87184930-19e8-488a-98ef-01d083e1de6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65b43dea-18bb-4e08-8839-d89db80c8c85",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9c5864d-1b42-4270-a406-1ba1e42395e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2379135-8ecd-48a2-9086-ff0602f446cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cb6863b-0ef8-4db5-b82e-9c2107cd8094",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "64fe7a99-73ba-4d17-8ef1-eabebb78ed6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0af0b53e-16d6-4fdb-aa98-acc8f50e9727",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a875ffcf-8af8-4bf1-97c1-d9e223e20747",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a194e06d-8b40-49fe-82df-eb0355c2f99e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5d98910-62e4-49d2-acd2-d9cda066b7f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c3bcdf56-542f-422d-b7cb-5423169babcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3ce698c-c9c8-4570-a664-4352a2faa56c",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ffc6180-be1f-4575-af77-9877e15ef575",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "901c491f-e3ec-4864-a6f1-6a2a6880849c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9860781e-e092-4d99-a0c1-68b82ba769f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d36553bc-2cbf-4539-9789-cba1443c79c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a665823f-9c90-4d30-a430-f94f2d5b8bb2",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11d87038-fc90-440c-8036-baac52ae818d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7217889c-1f92-4dec-bb4a-e1db3b9c468d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49f6b62a-d1f4-4245-a48f-c4f539e9acd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a5c1bd82-1be1-4a6f-9e65-136599e244f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c8d0764-6fca-4249-bbb0-6c75d2636555",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7af3f9f4-e1b6-4ead-9b20-95be0a8d5d5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "130e3f04-fab9-46e5-ae9a-3bfd1c9cecc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07065bff-a0e1-460d-bd0b-2b876be805ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9b166b2b-a9c0-4af8-a304-c4f17926f63f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "141dd016-3ceb-4c61-9e76-5a7fccdabbf5",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35500026-459f-4c8d-b996-464804d1fa21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "854265b3-2de3-49a6-bf18-f90cb8347b2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "926c6a3b-9448-4cb6-9c8e-b36a8b7e8b24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4143e04f-6443-4d84-9de9-d25cdb1585ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8032eb07-5373-4225-9c64-9160ce28bedb",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26844788-8fd3-4d74-871e-d5f49d70ec1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f46da1a-2d8a-44bf-a04d-2f7a0496ba47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95e98c28-9d17-493f-8d5d-e06e5414dd91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3cfb6045-3951-4672-961b-6c40878ea3bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "800fd54b-5fa1-4997-8c07-ecbb0874f5c6",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e16d68e6-8161-44c7-8323-eae16d5b9b6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82c953eb-9172-48fc-88f8-9392524f71c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "667d6dfe-1c0c-44f7-8fc9-049510c8aa36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ebb78daf-48c1-4bc7-9e27-1804fd25ade2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0212eb5-b111-4673-abf5-dc10cca7aeb3",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b528a0b-2cf0-4ea1-b4f4-788c8597a74c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee631e2b-86a6-4d5a-81ac-d216450d34eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8d07d87-39c9-475a-8176-637f7844ff77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "24edfae6-5051-4305-838d-73e674b95e86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "236366e4-bdeb-4e43-a99c-3f07b7becb6f",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a09c138e-2b28-4019-96f8-9e0354ce82fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9e85bd2-5dd6-45aa-a87f-60d5296713d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7077e009-6c17-4561-840a-af8be8a30b9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f707694-b4d0-4a1b-b048-b251ac6e9095"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1aa8926-b404-4505-913b-25c1798fb34d",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b847d5a3-d383-4d3a-85d9-0fd3d84d8899",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e573978-6cb1-49fb-8e46-d26fcb20f46e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3adebf16-449c-4439-b603-418705060808",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7cfa78d1-d97a-4ee9-87d7-1e8c80ef9469"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d73af1d7-959f-4c42-a9e8-8e59d9c3e7a5",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eccb67c-7b92-4eb7-b80d-e297ef27903d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bf1c6c9-5333-46db-a62a-bebca9e14b8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ea441b8-7332-44ef-9b82-b706d0d4bab9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "dbba6892-862e-40e4-bb12-d8239a22718c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3cd3b6d-eeb6-420b-bac1-dfda112e7f3b",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3626931b-09df-4b48-a394-69a1a5bbbe8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fe64195-bc54-44ba-91f8-cb50c8bf4068"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "873ca2ca-8981-4bdb-adaa-7b61dcc9b0b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ec7646b7-7b70-42a6-ad80-1abbabe87730"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dafc006-1424-4c48-ad12-f50f24f8863a",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abd45ea7-66c0-41f9-a922-d1b5c17f1d01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2014f8a-2947-4960-8654-592de5d2d49e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16e16303-2f06-401c-8389-72a611243334",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "29e6cddf-a024-4020-9197-0153fb973ce5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e80c186-ca22-40b1-b82b-8c945acca50a",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9673f3b0-39d9-47aa-9563-78c55ebd5055",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7e7f940-2b30-45ca-bf5f-4293c1529f37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35d22ed2-6588-405b-b55c-80019d4d2aab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a8547288-d22c-4052-91ef-a84b9f6cf80d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75a12297-1bc2-4dca-94a4-0e82eca1fbdf",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92753ba4-1f42-4ad9-820e-7ee45c01d9fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef701107-f8d6-4d95-b149-b67c0a9be9cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a01e52a9-db5a-48c7-b38d-1d97a3b2aafc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1a697736-3d46-4a34-8895-2a1a2b3f4ce5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41f735af-f2b5-4d9a-bb8d-bd5482f8c54d",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fb699b0-8cce-469f-bb1c-e1a8c8a84cda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5c0e12a-b9ec-4038-b149-5ad6e3d24297"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "633bdac1-1898-4360-9acd-587972edf083",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "1c4bf305-f85a-4206-98a2-39dbe245a05b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d257b57-820f-452e-9da5-f6c9071bd611",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "102fff42-5d08-45e2-a793-548f73c2eb37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "c49ff133-a50e-4bfb-9464-6ba434912077"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5d31672-ae43-423a-873e-2c514e8388f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "7de6194f-ebf2-469a-926d-6ccb37739a51"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "67b78612-fbd5-438c-a0e0-f8d5ff54d31c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a3345e8a-ee46-48dd-825f-2f62bf6ea2f7",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ebb318d-4577-4c9c-99ed-3e35e26c6fde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "967434f0-1096-45c7-84dd-536c4c136417"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1019cd5a-0a30-489e-8b92-5cc11d41a306",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0afdda00-d196-46e1-9149-2291173de1c4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c6efac79-753d-4058-b547-83b525082ee0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ce915bc2-8f82-4c15-ac08-0694f88ae2fd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "aa50167d-2374-471b-a1f8-171dadc6bc71",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c8d9f941-dfdb-4394-8202-2affc9d6ed2e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "84d9361f-171f-4945-9662-360bfe1e55c8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a0d7ac04-9616-405f-840d-8eda769480c5"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8ee93b08-6c90-4d71-bb8e-344c373e59f6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "318b6b53-0c53-45ad-8063-82a3dd2337e8"
                }
              }
            ]
          },
          {
            "id": "1b9638f5-ffc0-491d-900d-4b5a62efe18d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "bd558f83-58e6-4801-94fb-522b7567b74e",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "59b330b4-c051-445c-95b3-60e40cafa5b9",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4729a3cb-50cb-4f56-8370-abf62eb7ca60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "59ed8080-78e6-4929-ab19-8ff93de76642"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c913b70-352f-46e1-a153-9a3709090878",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d82353f7-d9ec-459d-a145-57088b24f24f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e126e889-cd78-4b19-8133-2b0d7ca82935",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7fa4fe3a-a2fa-4ff9-b661-d6975c75c99d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "68d63d89-73ec-4daf-8d65-2c54c021dc8b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cc9ac366-4af0-4e3c-b32c-ca325b70e2a9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3b0020b9-c555-42a7-81b9-513a68f8485a"
                    }
                  }
                ]
              },
              {
                "id": "f33ec7c4-c534-40ed-8d98-111965eda16b",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d95d3bf8-7f3f-4001-9d04-3f022036a9cc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e581b034-d82c-4698-8753-44e39653256f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4efe1d7a-164f-4bcf-b5ad-8256ef6161eb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "712368a2-6d2d-4cea-a9f3-3ebf855625e0"
                    }
                  }
                ]
              },
              {
                "id": "7f17ca4a-d43b-41df-814e-bf39508068c9",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "aed71780-0cfc-4504-809a-c5c54b2f794e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "023385b3-b122-48cc-95bf-b1f5c16963d6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "64d6be59-7230-4c90-87b5-bc0b4df1eac1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e5305084-9370-468a-a1c7-d68aacdcad79"
                    }
                  }
                ]
              },
              {
                "id": "d15bf7cb-8a3a-4c4a-8c87-1b768003b740",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e7e63c58-b8c3-4364-9398-0c592dcd503f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ea88479c-0d7a-4728-b601-c5bdfc214b8a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "baa4f14e-11aa-4c18-891d-dc025ffc7196",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "6129f609-1194-45ed-8248-0b987df84872"
                    }
                  }
                ]
              },
              {
                "id": "6395a80d-b72a-4731-b4a4-6c4acccf12e9",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d0b1f22d-eb6f-48cb-b276-9952a08a1495",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5dceee11-4eba-4315-a0c4-b905f2bffb4a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "828ddfc0-ea66-4ab4-8472-5875ae3dd9ad",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "98d6f520-f2e6-43a1-b6b2-235e745fc5f0"
                    }
                  }
                ]
              },
              {
                "id": "ca2042c3-baf1-406b-8a49-2b97796ce598",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f29d958a-890f-4d41-bfeb-c3bb66af3847",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b140c167-5bc7-403f-840f-bbe6af695128"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4b762130-11af-45e6-a79b-06ed44298709",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "44ebe0ea-e11a-490d-88da-d5c98f350231"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b5a5ec9d-94dc-436a-bfcf-f9d14fcfe798",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5b9ad2b8-c12a-41df-9a80-10b763e6ee08"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "213df0df-f2c6-4648-b38c-c94e3ca8a071",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d6806327-c377-43b7-a908-e50fd1ef062d"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b6d9f9bb-c13b-4bcf-954d-e55e51a7fb07",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "7b8eccae-c443-42af-aac9-43c0c1d15e2b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c5bba7d0-83ff-443f-aaf2-bd4c2285e062",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6cbad1de-8f95-43d8-898d-6b3233bb1ac0"
            }
          }
        ]
      },
      {
        "id": "8ad7cc01-f6ba-4e19-a0bd-99eab4f879d9",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "7d3c530c-b118-4d67-b875-f599fdb81dcd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ff53e173-d54c-44c6-98f0-6d84474ccddd",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c2c5eb33-9388-4cfa-a925-df277d396ed8",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e29c1995-fbb3-4de4-b2d8-b3bd77bc86bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdcc95c3-a7f9-4e40-ae4b-096dc953cd2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79c5c121-d1bf-4f4b-8119-2ed6fbc2786f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4390e15-8d3c-481a-b9af-d21b6b4c5bcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0d82a78-3fd5-48a9-ac8c-69e416f1056c",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbcc6d3b-3770-415b-b4f7-bdf7d9ab91b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae7a47cc-92cb-411a-bdc5-02cbb1bcc04f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f8408d2-17b1-4e33-b8f5-4a304b5a7d7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c29bb9e6-a5dc-4425-90ca-e0086cfcf59b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a51035f1-f719-43dc-9757-bc3745b84c5a",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e6d676d-310d-41ee-98bf-cc065246fba6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfe0789b-20ef-46ad-9e3a-21ec322a1e21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd1ce43a-cf7d-4c08-90e2-828d0ccc4289",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1b070878-b941-4517-825f-77630c9e8b14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b39728a-a319-4ee7-88af-18ba1f3e3184",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7c6c84d-8b4b-44e5-b746-6258ed83b555",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5d0fe31-b79d-4948-ab84-7ac913eb012c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2dc45ec-5c00-42c9-9150-1966131ac387",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a7e72307-ea08-4554-8f56-39b9d3cc4b74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "436af9c1-3e03-46dc-8fa9-4a26a6f42a2f",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f81107b2-e301-4984-88fd-940cdedae1b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e42ba549-7b0d-49b1-8816-04bfcf4c47bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0008f9de-67d8-427f-a236-cfc4f8300d84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bbe9faf6-d20a-4657-9254-59a2491463db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ec91c7a-958b-4f82-9241-f4e15ab5ef35",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cccc0f9-ce38-42c4-ae49-3669487477b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "012113fd-c7f1-47f2-9595-61a88f257a76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00f0ebf3-1ae6-4f17-a0b3-4e5c009b80b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "31c40074-0d92-459f-ac56-73a8d5a7483d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1965cb9d-e04b-42fc-88c7-60d5e796cb9f",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c7b5a51-6940-4234-9e96-b35dff37d370",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcc6583d-1b2a-47e6-a5d4-937fb1899fff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b46c9c0c-0416-4f44-9c42-ccf637a88eda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "6cda6b5f-a6bd-48b3-bdb5-76140ebbaa0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53598590-1fac-4e37-a666-93d827983659",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9460ba18-daf7-4778-b919-4e008d420168",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8abfb68-8d3d-4def-9fb6-e58888230f24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b827881-d047-4203-8d0a-3b74e5947d59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "428d1de8-7087-45af-8bdf-f2bdff8b6b88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64d158c2-77da-437c-8c07-bcc368d27bbe",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "686e994d-1ae9-46c2-8f83-93a9576127d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e063f846-af57-4473-92e6-451553a9c6c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0ef21a5-7cd0-4bf7-8445-0f2b725911d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4babda2-1ad7-4754-8ec4-ecd132881509"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c4d0cbb-6477-401e-9a39-87a3a1905036",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89e5c574-9518-4c4c-9514-a0a164428bd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79169813-c3dc-4ad8-9bcd-f0609ca2cca7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "064db90c-e353-40b3-b029-b488ee4689f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ea26483-d614-424e-bd53-24efe8c9c5d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51ef721f-c516-405f-b617-06deb0679be5",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cae7dbe7-80ca-4aea-9007-970c1b665180",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88912e30-b753-4485-bc2d-6d7b834ea127"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad813d4e-9ee6-49aa-8d85-41bda81cb16a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "44eac818-f44a-4713-9784-61b39f8f5738"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a261c49a-ca63-4118-b36f-13862eea8e98",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3a30f78-478b-4281-aba2-3821f4fc3619",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de7f4333-6eea-4ce3-ab8f-a572bcc4d418"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56354453-9854-4282-97c2-33f74b393ae6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "23a596b3-2744-46bc-a105-f28c67bf35d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70d0f9b9-e7a1-4e61-a34c-f94cd51e4d0f",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4581e9b0-bea8-4e14-8946-d7499e373ea2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dde3b16-ab36-4f89-b8d8-5468e1851169"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "363c0040-56f4-4470-878b-e87f9256ff64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "838febe3-1d7e-4ecf-b99d-6d8b4bc4132b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2bdcdce-173d-4793-8c75-fa703b5cbac1",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91b112f4-f872-4af7-a813-ca7f5b1adb75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92e3d29c-18b3-412b-8ce8-5d3475d6bb88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef29c35f-df36-4c1c-b92f-ef2c8a2573c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "2617d708-7edc-4f08-a872-3539ac4af250"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31f93505-d927-4b5c-9daf-db8ba48b68ca",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd6577f9-9382-4ab7-aa83-3fcd1fa5580a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad96d31f-fe06-4897-a604-e9b5abf1a9e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b7d1d0c-1b0d-44ce-aab0-3b1ef9535080",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd104c9d-0681-4274-a3e1-9f1e63d130b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3458bde8-474a-4b96-8f79-20de83d0000c",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2b33d5a-87d7-445a-a911-7bee17b049f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a4238c8-8a69-4325-a4db-5169dfc6660e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c08a694b-3b39-45a7-adb4-a4ea4cc4e548",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc2f414c-8fcd-45f9-90db-adcd650e8fca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed578e02-89bf-4475-a580-4e06d48ca329",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13ace073-c033-4198-847d-b90cc65f2768",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1c3e755-a7f2-4a44-93a8-34f9e2210737"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9c503f9-da38-41ea-bbe2-35aa18bd9071",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "8675808b-e436-42d4-a573-b2b5ac76cf4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2d268d2-42f8-4527-82a9-295cdcedadeb",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd91d6c0-0554-4557-b1f2-2a70bd2b9ed2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ed39acc-fd7b-4a7d-bb34-f12a19daf80c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08f52020-4ccd-43cb-8cb3-a757bd1131b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7a4b9ce-44c1-4c2c-b97b-c7ba8f077ff8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2df9ed50-170e-4f48-9d95-9dbb59332e9f",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ba41786-b74e-4f63-aa73-d2c1b9f5873c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b53569a7-fc34-4cf9-8320-b6033cfb3085"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0490f900-2cca-4538-ae87-2071f5e8d421",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f5637a7-bfb2-4855-b9e0-aa0d0f3b4119"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2e81522-9a0b-4cfa-89aa-5d8af445822d",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2187685e-f429-44e6-9c08-16f49a2fbcbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "251ada86-373a-400d-b111-051d6158daab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2172f3f0-0c76-4dc6-830c-7ec180a68cd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9a83489-efb4-4d27-9e6b-d343c67c00aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77dc4331-1e73-43fe-be6f-1ae10f95033b",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a23aa17-cda5-408c-bb5f-31686ddd2a72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1695a9c-6649-4ad0-865a-729bef949266"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63fc630a-6128-4349-9a55-c20f840d888c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf75aeec-4f60-4cd1-8bd2-bafd2c7ca50f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a070784b-bd02-49a2-aec3-b21a0199078d",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b22e2b40-3a97-4cf0-a8c4-a6ea9d57e4d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "324aac27-1e96-48e1-a14e-469418215e4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e679db3-5c40-43f8-a7eb-af6f7917825e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "828883e2-7219-4b23-8435-5ee39eaba3ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28f46fe3-b9ad-4730-917d-c2c96f6e4d2c",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ece6fd7-6c84-4106-a46c-1e814ef463f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ce29de0-24e9-44f1-9094-26887cb1651a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de5cebf2-9b1f-4a16-a41c-1f39938baf71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5934d295-e95c-4857-9669-8e1fcde7dbd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "141af892-f535-4c35-90f6-c3e61efef97f",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cf21234-25c6-4b10-8065-65a39c70305b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2351571-7603-4f87-bc45-3afa4ea2cb98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19896288-e237-4446-b907-604608f7b8de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "14226198-bd62-4145-afc0-24d4ba82c84c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11cec187-a2dd-4861-bb80-978d3d764846",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "907bc704-bb15-4343-a3f1-cb0d613c918c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6949a4b8-8e9f-41a1-84ca-a9507ca732c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5c949a4-055a-4649-83cd-7dddcf3775f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4dd1d900-14fb-4594-960e-bbc73fe7871b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6989c4fe-b990-49a9-93ea-b058ec84d008",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b79bb34-2fbd-4c48-ae91-f987a9bd9f62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f057624d-d263-4db9-9602-0eeb6282a355"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1b0f4a7-c827-4253-85f9-6c9e5a213470",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "26567b02-058b-492f-8f92-114042fd41c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d599537-3f72-4bc8-8dcb-022c6178a4fb",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fab39ef-9d2c-4958-b7ad-c0b859051095",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b7b6aad-2e7e-4aed-bcd1-8fafc86601f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a58fbb7f-a046-49bb-809e-de02c861e639",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a1e1055-59a9-49bf-84ce-c6fa8929d40f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e2ef428-bf7c-4728-86ab-33b87c93f071",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7df3f48-43b2-4740-8861-caa2c58c018f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30f7f4f1-c423-4825-836b-f2f378887641"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "776a8297-5822-466a-b338-e942759aba4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8b43fd5-0f29-4d82-ade1-5786296b91d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cfb9ee0-e305-485e-99d6-c823edf3342d",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cba1e0b4-ebf5-4c4c-930c-321f186e12e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90555c07-5b9a-43f1-aabe-c62473db7533"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8c4e9a1-b649-464f-89cb-64cd2c4ff0ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0bcc980f-31c5-47af-afe1-54d6fc42a233"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28239405-303e-4a5f-84c0-8283fdd3e46c",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3a120b3-6b87-4c3d-bc70-381587c8f25b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08379c18-05a9-405c-8989-13e7631d3c2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d25d7ddf-ced6-494d-a3c3-16b55d0b931a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "86bc3f0c-6ffc-49be-9dfd-cc587b4006e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a2a726a-14ea-4433-a18a-3f444440aa22",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f7b6505-5e54-4131-a48d-3af2be06c9de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9534cc4-62d3-4d86-ada2-f44f901feb75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "913e1413-bc0b-4ba5-9a4d-df90afdac1fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "63b7a861-e089-4039-801e-79cd3039af4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de011346-552c-4f74-b760-061772848d0e",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c61f9a60-38df-4ab1-8643-97b1b2b76f45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba53d744-c3af-4b8e-af75-8e999c7b2856"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5a511ff-1d04-45a4-b7f5-1813a54cf1a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd1e5f12-5ca6-4e2e-801d-0ea1dd8ea51a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ce500ec-a898-4aac-bdd4-a305a4880dfb",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50bfcf2e-b9d2-46a7-8e04-53608e844177",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ccd7ee9-f6ad-4fe1-bbae-ef0b09d4b666"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c341ebb-c9d9-4376-bf8b-50e93642b4ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c514701-4086-497c-9e89-aa7d4d02bad6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f176e18b-1fbe-4c7b-8be4-31fdcc92c853",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3577bd3d-397a-48cc-aebd-f7c9e1dc713c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea52e7a6-7bde-4855-8c03-953d7017eefc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "475153c2-64b6-49e0-a045-1ef235e0a3f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "582500b6-218b-4180-b628-2396f0af6b2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56d77b45-0214-4374-baab-9cc8a82e57cc",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "966daab0-ebae-4add-9acd-f248dc2413f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91afc924-f844-4114-9ab5-081ef93df3a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87df0903-ce30-408f-bffe-e903a540d85e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "87e5b94d-3918-4dc1-ad1b-c05f7f19d552"
                        }
                      }
                    ]
                  },
                  {
                    "id": "016ad949-b3af-46a4-96db-5fbe09678dea",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e72dccc-6757-4e73-9d08-07d1579f717a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a34bc91b-8987-4377-b579-f59e15850e11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d02d8c04-7ad6-44a4-bfc1-ca1b824953d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "101bbe27-effc-4554-aefb-a7e1d0495db8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59593fec-07d0-4bd8-a4f0-12a87a5bb318",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "322ed069-4c52-4171-a00e-2d6a9332e101",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4c4b6a5-38a3-47d1-a86d-827a6b103b27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93dd7561-517e-4434-984b-ae1d5f0f7f05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "32db9835-0abe-490d-9c0e-f403fa817318"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2328a8b6-dfa9-4f96-92e8-68df4019650a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6479c609-9e1c-4ba0-bf35-7bb7c67507b9",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90cf22e5-0930-40e4-82dd-fce9218c85e9",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "e74eb2c3-797f-4ae8-96e5-8a5ff0f69e89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf4eb40d-07a5-4f10-b759-58944961ae81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "17b8bcb5-5b17-455a-8e4f-6f9bbf41602d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2fefddad-c3f4-4318-a919-c5abb9e6e23a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2c009c8c-2e03-4813-8987-e9771b9dd9a3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "83bf604f-7f52-4da3-8e66-7e536b172351",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "50c5ffd6-21e2-4542-b75a-e0be8affa7f5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2ea109a1-77cd-49b1-8a92-beb1f0ea85a3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a53c0bc2-463d-4cf0-8388-2ae493a1c4a0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0cb39808-a0bd-4c82-99d7-1105a3621559",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "74dc7780-6524-4c57-9bdc-b3a9871887a2"
            }
          }
        ]
      },
      {
        "id": "394ffe10-fd06-41ff-bc0a-7f623447e023",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "35b70cbc-5c45-40ac-8f80-4260a611a95e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "81216e07-1aca-466a-a38b-161456eded47",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "16661fd9-50c9-4917-8b45-e59a11a68652",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9977ea17-78b8-4f1e-bd30-d89e4cdfb031",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f36badf8-541d-4a9e-9b23-8daf2c8c970f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb98aaab-1196-4308-967d-31fd82d276d8",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f452271-9143-42ef-8399-81940893d67a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39817b07-89ad-46d3-98d3-18fbd0585dbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8888d668-6aa4-4314-96ca-b77efb7ddfc1",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "169f9771-9073-4e59-bc4c-f083f6ee6c65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5146ca94-55fb-4952-9678-52c392ddda13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ab0e681-b922-4e74-8187-8628e2179cc5",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c05ba1d4-6f78-4946-a3f5-0728f1d49462",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "714dd505-03e9-467e-81b0-53c31ae769b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59614fa7-f597-4a8b-b177-d958e1c862c8",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4c0e0d9-47e6-448b-a9d2-79668cb1be06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35cfa846-b385-4e2c-8e11-3fa6f93dd560"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ca895a6-7298-4f3e-ad33-5c56c9b122ed",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98e6a879-8a0b-463f-914a-bc9485618788",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4d41de9-806c-445a-8d54-9b72a2c4f340"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1c151d0-c6ee-46be-9611-b96b730f979b",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aff279d-8853-4b2c-82a7-a39f810d8b13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "575af726-082a-44fc-a2db-95d5f762ffe4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31a19e9e-8c04-4b4b-a027-5590dde83fc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f81b602f-1112-4532-8f89-19a5acab2dd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8eb20d3-2143-4e2b-a81f-72e98a570070",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75c881e5-7ea9-4332-81db-a0fd1352c73d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0dd04fbf-e2f0-471d-883d-878c48af992e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42ac51f6-382f-4f3f-bc28-bcbc30e96037",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36ff6068-29d8-4175-b621-b0732a4d326f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75745017-cc73-41bb-9277-6e98a1825f77",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac7f5149-7c95-462b-9a77-cf04c71d98b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d233a602-d78b-432d-bec4-2b489a85ca9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bdd12ec-1b9f-4a25-b5b0-39426c0d8ad7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c95c700b-729b-463b-80eb-3c55ab260faa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51b010a6-94f6-4f71-ac70-98a354abe948",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "124e37f7-1d51-4460-b93e-5477a4ee9c41",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ad3c30f-31d9-4b88-a7d1-bf556cfad4db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "545933ef-40cf-41b5-900e-d6f2b01a6cec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f00c0f29-6f06-42d1-b912-9a7f582b91be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1866969f-62df-4a98-a97c-19e0385f84f2",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73a31bc9-3f86-40ee-9762-204bd9ab55d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e781f2a5-580e-4304-929a-0f8c381c73c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2a40909-48e2-467c-864f-c5a4d47e9f0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4911071-5b15-4693-a520-e56fe8f2a226"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e669154-016d-4fa2-8007-89bc0e317817",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcae358f-2f57-43f6-9ea1-1a69f7e7aad0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15d986b5-83d8-4cff-8c22-a09c14f2c531"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "074117ea-b006-46cb-9e32-93178e3bb8c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9483266c-705f-4160-8b5c-96398e805ddc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea66b1c7-58b0-42c8-a2c4-4bced4971781",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d428d269-4321-46b6-90be-ef2aef22a955",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f85b3197-a206-40af-b895-d553f873503a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcef27fe-521f-48c5-9d84-0dfaaff5b5e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea860b28-25c3-49a3-8272-1d0a342c4f58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6931fb24-a5e7-409b-867d-9be757b31adb",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94acc733-460f-485d-bc0c-20910256bd8c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e989d7ee-f046-4db0-a97d-17523b04de1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "488ac127-29da-4922-80d6-0d1d178305ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8b02630-a632-4e9c-a97a-5bfe14e921a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83656463-d143-4e00-87aa-119d3ed5637d",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d0b9f3f-7a4e-4784-a094-07e474dc237b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50f9d8bf-a94c-46c3-8c6c-fe9666e295d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1652283-da32-423c-a805-668329865857",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f77a6db-2686-4a67-ae67-59efead34d24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3430c3ac-250d-4b23-be8d-bd1599204e76",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3ce1c0e-0e00-48b3-87ad-1edf41179dbb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a3ed2fa-12e9-48d8-b056-d01551127635"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73c2980d-cfc5-498f-b9d4-2fabd17adc09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e70e75d-a1b9-4e8b-a324-3aee171745a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24e85589-1819-43ba-959c-5140ed7cc0fd",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44d7b43d-4af8-4617-abff-dc46ee1abc43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d92ffce-108d-4745-ac1a-965d127510bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b974157f-c700-4bc4-9063-97490ef4d99f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76995e38-c280-4b6b-a566-b77cd7d13eb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e584c7ca-f66c-43a9-b9ce-93a89d72a8d0",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8058ddfa-a184-4464-bc50-854c8ee99842",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff8a0ced-9fc0-4141-b019-bd3c199c2a6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e7003dc-f51a-42c9-adaa-eee2d30df0af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0c56eb9-a132-46af-a6b6-31ce0ac0acb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02073c07-76d2-4926-8fe8-712571329b0c",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76d1f86f-1579-4b58-ad0e-c3c784f8c974",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02ffdb02-cae7-4262-9f56-1dbe64ce5aa2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75831d2f-9d53-4a2e-8ced-1d679016d025",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9796a8e7-b2e0-4466-9245-dce1b40258fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ac7eb71-be7f-47e7-8a63-fbde2ecc59ff",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb790757-b1ed-4319-9db7-a08d60effcbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52314eab-3f36-4e04-b23b-cceac618b60a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "915f0962-c915-44a9-8081-1669c96a7d19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7cd8c41-1437-4364-82cf-5a9e8897892b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfa25c3f-b3e2-4eac-bd42-c34d7a00d1ab",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41e4d88d-7807-49f0-b533-10a072d4ca41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b63b5403-3367-4e01-a989-8da521b7ba41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eacd0faf-b572-402d-85e9-4829d3d6ac26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "778b87ee-325c-4989-bd46-e89f10008708"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5741e3b0-f9a4-40ce-9907-277e0e72d929",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb8b65b8-0a58-4a03-8378-94d88546a1b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d920bf49-034e-4c83-acab-6f37eac7201e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f0e5c53-52b9-44ee-8385-a16ca7bbd639",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea54d941-1dd1-4b22-b609-942d269afb0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f39a3576-5d3c-42de-9a65-54292b1c8a9f",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "425fc0e6-c7d3-4db0-80c1-f6b3c56f420c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d018362-8996-4767-bf78-0b59705c9a4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8614556-2893-4e94-bb86-be1aede63606",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d96f456-a590-4f9a-be98-732ee3e7dd98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e14f2137-1755-400e-9595-32b89f9ca423",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65abdb3e-d8b0-4e08-915d-ee94e91fb64e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f696f89-e6b4-4ef5-8a58-436c62f81687"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59f167d5-a7ce-43da-84f5-cf8761700b81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7404ad7-6fa7-4076-bff8-de80c7856594"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0c5d69a-4a06-47c9-8bee-9b0dab64655e",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad8ad1c2-1fc5-4bce-8c6d-14ffb7a5209c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a037c9a0-c0b3-44f9-8297-34254f05b5ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c708c76b-cf95-4539-9b04-a4f8dddd5f67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a207414-bb6e-4152-9821-8dc4f0340936"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df569d5e-066f-4b46-870b-6a9bfdb60342",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf9dd782-39e2-4777-990a-aa347e7907b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44b84162-6cfe-4873-b760-cf1489957917"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f4212ad-6408-43fe-8ade-109e09172e1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7a4e57a-efd1-4f2f-8660-94c465c700d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6434ae7e-ee3e-4481-8965-44adce8733cb",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae2b9995-f74d-4191-92f8-753e059b3e13",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b83dc587-1884-4538-a603-2122371ba8c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea4d6e69-617f-4e1c-8833-5047aa04923b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90913741-e7b8-4ed9-bfe1-6790872d77ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "545d0cf0-b1bf-42a4-9381-c350ed397788",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d5438c2-ff02-4cf7-8360-87c4554869a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "880dd242-2d6e-49e3-9535-fc608c34ac78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfed14cd-a068-40b4-8a17-ff6b753f2485",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96814d9e-5157-4464-9498-cc5a23f2c44c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cd17145-565e-459c-b9b3-73219bda7bc7",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c419599-85c0-4b06-8883-4f1cd59db093",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1f9af8f-46cc-4a79-a571-72aac85add94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aae93ad1-4f02-4c21-a232-47d1a3431b81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4407c89-eef7-40e8-b882-319ba6985556"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa40b9b9-2c52-4f64-8404-38ff789de290",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ea6937f-1bd7-4773-af6c-ca117d009332",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ddb25925-ba5d-4ab1-a693-e679e1563e3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4a32782-18bb-4ba6-a26d-ec7fc9ece39d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea0c99b1-7340-4c89-b841-bf03e4c031ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a839e914-dbc0-4007-8096-f349e52fadb4",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bd7b467-ba24-40e8-a0af-bb3b645cb1c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "82e919a7-1fe0-449e-9f6f-3e42ab6753ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "930fee15-5c68-4b23-a5cc-da124eeab260",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df9c213e-48bf-4258-ba38-87a14c77dcd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7a74786-39fc-4c17-afd9-610b8830e5db",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ed4698f-fe6b-4c81-963d-f45013f4e617",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9eba30e-208c-462b-ab1a-c2a068a0f1f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06e575da-0ff7-47d7-bd28-e4f439a00d9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3c593b9-cd2b-4ced-a539-e0f981530122"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35e504f7-bdb0-42cd-ad7e-886a91b689c6",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c778347-7d15-4cf0-9e94-a6f40cc36622",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03bb0353-4e0e-46c4-9738-81ca36387625"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb4256d3-44dd-4836-8c52-7d4e96b5baf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d58752a-311c-4b4d-9864-cf0d89cd057c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1be0500-e4a1-4716-aafc-46b51cc840e0",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df2486f5-9226-4451-8211-ee8517e53430",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64877ca1-1b49-486f-b458-c2c87d6e6370"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c577723-4bdf-464a-b2aa-98ad4dfa9f17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ad1bbe9-db48-4cd5-982b-fe5762b5b9ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa4975e8-cdea-4d91-9a53-aab6d8bd7041",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e317d58-329e-41be-b709-2eb3f2f0bd34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3da9a2ec-14b0-4858-afc2-85fe552a83d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1975f080-9f75-42d5-a6af-341f237f243f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "654c81b5-945c-4d3a-a2a5-7dd6cbb44b81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "382d0170-0eb5-4ab6-b068-cfce2f798d54",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "893dab9a-d9d2-4055-8edd-25eaea0f946f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86447433-bc0d-4fe7-9ed3-02cb54ef76e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d3d76b5-4205-4b4e-89ea-482be8867029",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "032d2eda-7a83-4b63-b878-3553b48a34ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a7bfb78-2804-4135-a5e8-f9f1805ee01b",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6140c1c5-7e93-45b9-9558-5c3460c9951e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16134186-97e9-4756-bb03-288103ea4ec3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efc296c4-795a-44d9-89d7-e289ea1f9193",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78c2fe65-2319-4a14-9e3d-2ab999402394"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b91f8656-0ba2-4655-9d2b-fd0c441432a7",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36fa8d14-292d-43f5-b93e-98ac983cf0a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b039cac0-7a83-4f0d-ba61-5ac08e9a88e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd5449c7-bb9f-4dbb-beec-8770657188ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4575394-884f-478b-9778-6ba53689aca9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3d51289-45ff-4f8d-98e6-5656ef4edb6d",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d3bf1c8-f8a0-481a-aecb-4635ed655f46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cc38be8-a58f-41ca-93a9-3736268e60c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71f002a0-6266-43be-8454-d088489dff16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d92f4fa0-9189-4784-97f3-ddbf913316ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81ba31e8-fb25-4d05-a4d4-a610397a3ea8",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1223304-1bee-42a0-806a-87f8b3298a7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e85e9c49-3f69-4002-b5ed-52863580e29d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52e60fb0-0dcb-4a20-8b1e-1343dd8a3e47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "331efa63-5f93-45de-963d-96cd27dca4b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36214662-77c6-44fe-bd2b-1c9b56db0733",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30454b29-f80b-413b-ba9f-526416157f66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c629e89-c856-4737-8a43-50ac4cfc83a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bf29572-db8d-4f33-bb41-893ebfba09a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1ebda92-a6a8-49d6-8746-d0367bab8709"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27ad545b-3787-4eb8-8d0d-1a5a7311e59e",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "186dbd93-d65f-4d24-b711-3e1644a819c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "860a63dd-bceb-446e-bf00-65be55cc074e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cba5ca92-bf87-4af8-91d8-46276e807629",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ab527f0-63c1-4681-b281-4059ae9e358f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5029d7a5-0a04-4dfd-8b2d-4e2e2680564b",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76f4f473-c61a-494d-86f5-e0687d5e0e2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "721912e4-6643-453d-82f0-2f9d8f393cd0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "513491a2-0e2d-4967-9e25-61258f482ef2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ac307a2-5e74-4dfd-a531-933f3c3c4ffb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30736a96-3118-47d2-82b0-03755a2317e5",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "854265cf-0115-4055-8591-8f18935f5597",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcf0f103-4825-456b-bbd7-a3557a1a71a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e74c58a-19d1-4cd3-a323-bef05f9a62f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9e750b9-f1a6-4691-bb90-73b1892092b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "603ff5ff-5886-4911-bccc-4c1fc797237f",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ba160b0-c54f-4748-a939-ab40e3767dea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1dd817b-39ac-4bde-b26d-2c20a16c6b17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a677ec41-0f06-4185-b340-f3e722134dd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3626f92-4b85-4fdc-be23-10eb2eea6eab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc82e711-d259-47e1-94ad-eb4355866507",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec30efea-8ec7-45c7-8ede-41290707e41b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0426fb28-554c-4e00-b40a-d602e02f1787"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b3d4dde-f480-4af0-aeda-17f965f310f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "039330bd-a9ef-45cf-be52-0e8685beed68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92fa96b2-8e1d-4baf-821d-d168d57e9f75",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1dfd3d6-ffb6-48e6-9b3d-94c5f999d18a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb2cc924-692d-4eb0-8091-cdf2472f1dfc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "437f3486-e44d-4f53-9dc9-fb2d6cac9044",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdfbf580-2c89-49f2-af7e-91fc55579b2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79f4f619-0cd3-44c8-9c69-e31e0559da9d",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71a565c2-93cc-4849-aa68-d5b6dea88c54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62ce2ad7-6e15-41ff-82a7-5f576ddde204"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06219491-4b2b-4bc5-82d0-bef9678ee670",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55abd024-385a-4f8e-bd8a-9f6784aed259"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dad7a77-19b4-4dbb-befd-e8bd1b13f858",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71ad3764-8d9a-4900-9b64-1c1be65c50ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cba2828-6d97-4906-b04d-46d43807c623"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c511f06-6447-43d1-8c2b-a6ec39670d69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee0436a5-0d19-4c85-8559-d110d047b5dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72fa74d4-2c53-46b1-9dcc-2a833e02e166",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be9cf614-7135-4805-841a-ee940f0e07b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84c80a8d-4176-46ce-b1eb-97e104fa588b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd68a245-5a1c-44ad-8730-5395b2f5e9e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5245dea-4a19-4db9-bce7-ff5e7c177a93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6979c5d4-7c79-459b-a8c8-11e521b6e461",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1a70c58-efb1-4ba3-873c-d1d678fe392c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "050394de-9e93-41cc-ad07-ad9e03ab98b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1996e7f6-5d33-4504-80e7-7a15be4afdc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49abb0bf-dc7c-476b-a30d-272feb9b6455"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72abf748-1dc1-4e2d-bb06-7586dd643ee3",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a689c81-9295-4e35-9b61-fd6137d7f9df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c98ca3e-b69a-46b6-a08c-61c540f4a04a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cace4d8e-6d0c-40e1-a8bd-3912b9b46136",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "308688f4-4e26-4c76-b1f6-dd38c8bfa68c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15d628a1-7179-4b97-8245-9b3fcc49096a",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89beac25-84b0-4a50-b87e-c18d0494870b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fb91078-6e59-4164-8113-80cd3f4dbc32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0a19414-e9ec-4a47-a395-44f9f9266882",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49ad1160-55c8-4f70-8e6b-f6815fa2aec3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e2ad4b3-f5a9-49b6-a7db-23b13975ae46",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bedb687-6c06-4d6a-bb3f-faed1156fd50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a239b9c-d743-41cd-ac37-9a1f3e57ca46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8046986e-0e35-4a21-9263-975dce3ec697",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cf7bd33-5b3e-4356-8463-dd627262c292"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bae26816-2e6e-4856-92b6-086b3da47158",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16734f27-bd59-40f5-859c-d57ecc747187",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6c7af84-958b-4505-b833-97d172a2cf27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7de32caa-6c53-4946-b3ed-776b69ba013c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04869e8b-17f1-451d-be35-3f0589a03c22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10ab0759-2881-4672-b4a8-cce7379f0d79",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96c2015f-1b19-4dbe-9e6c-c60409a51184",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6c55a09-ee22-4b42-9713-18273b8a70d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51714484-734a-41d1-aaf0-ccdd6b34294e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2510b9c0-74fa-4a69-a0bd-66deac5683d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15dea998-f6eb-439d-bfc4-acfbd5446718",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f23d6e34-49dc-401b-8436-64d81498a17f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1e2e82a-e413-4854-b0e0-f3c83048528a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "463ef7d6-9215-42e1-9b75-4e6e02f52bf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0bbe536-75e2-4fba-860d-5c54b0ea28a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "416adfdc-70bc-4625-8da0-eb09bca55bb3",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8164d503-8592-443f-874a-3b99eba8824d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b922579-005b-4a5a-8ff0-f325d54311c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c61945b-13eb-4618-b902-6cf637ddf9db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cf01f10-0a3c-43a7-9db9-e29300b0ee85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5da1db55-4b57-4b5b-a526-744f763fabe0",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d29de84-c46e-4d3b-84f5-14bf917a1f70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae51ac9e-caf1-4cc9-abf1-ebfe32709c6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7797b147-6677-44ba-aa08-bf69004fbd96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fefc8744-c5f5-4113-99f5-46a561708a19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4032417-9a7a-483e-b4bd-9c6aada6e011",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75926511-a719-4cc3-a0a0-aa275cdf37cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ce81bbb-1d86-409c-bc13-c1579f915ff6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32212977-3ecc-4477-8138-e4af29b76aca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11ae5db4-fc4e-43e3-9825-9948461ef5e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "423a0505-69e6-40ce-8f7e-23184fe6c67d",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a548c90-0feb-4d1f-9712-28c01523a46c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23c31a74-f24f-4b52-9f43-01fa1e93749b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3b6f6ca-58ed-4410-bc8b-c29930b4fe63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa0db5db-225e-449e-b143-9beae43cd8bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe80d713-7331-4f9d-87fc-7cfe358ff905",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91b0f60c-9c6d-4b77-bcdb-9bf7ff47e532",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3680219-40e1-4faa-9628-1d15ced851f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e321bef-7fe3-4fcb-b638-c6c1b066acfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44bbb77c-25a6-4124-be36-ffed2f234ad3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8649f32-8fb6-4e17-86cb-d31422b430fe",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab4f6129-6518-4363-8b39-446d505d79f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ae99168-843c-4f48-8936-5a2c198bb04a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acddbb7c-a244-4012-8d32-d8bac844a2ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3ac9541-4825-49fc-9315-d96d6936b657"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abff0475-e775-40fb-8112-8d4d006ad515",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d55abc4f-c3ba-4543-a69a-7f62fd153fc2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc06f805-b71b-4501-adb4-d3dd0b1a46d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb8d845c-a573-42e6-bc5a-97e2d41da7bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2828e30d-caf6-4770-925a-70f1a17782b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89a3c24c-455e-4512-8a4d-4eb4f3a9d86a",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "303065a1-c39c-4304-8740-25b2a5147582",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be6de01d-01e8-4114-9fda-d9868b8b626d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3498df1e-bdb9-49eb-98e8-c2d3dcc0b756",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1dec2ac-a5b1-459d-a470-ea5264ff1833"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f074e770-ff45-4b60-8db9-592ec0ecea7b",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a514af63-7d6b-482a-b329-39ffdc7eb99a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "150c2242-3a72-4825-994b-94fddfd30b7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c62614b-2c29-4903-ac3a-90a34b90d312",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53808e99-c762-4cdf-85e0-dd2de45932ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9116042a-5776-4b5a-95bf-b97251de42e2",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5791a99-2f1f-402e-9ccd-2e9128aeea78",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bda47e5b-50e3-4390-87b5-48c6ea2cc877"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c375f95-67fc-47c9-83f8-68a382a9997b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5707cd9-1650-4a4b-8a5b-135e70bd24e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "233ea31d-2aaf-440e-b843-ff7f816edb1b",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c25229a6-5031-4589-961c-65ca0272726c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76c31380-33b3-4f1d-8894-c1b0a0efc9a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "469bbb75-17bc-468a-a458-28402d95fea2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb7c39ec-2d3f-42e5-a4d6-fd41e2fdd3b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b75feed-ad71-4a4e-a00e-393414ca115a",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3253c2e-5e02-4827-9b37-b811715f4023",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb5ca3a5-13b3-4e74-aad8-f26cab167670"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a8f383f-acd3-44ea-a5d8-b78720e57d07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be9b5b4a-ab18-4149-aac1-cfab90e36098"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cfeb2aa-eb55-4f66-965b-f21cd8ce4828",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ea2dd6e-4b0e-434e-8b41-c60689cdbeb5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7b7709e-7bd9-4bcd-823e-51fec8c51162"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83d41bd0-57c8-4ab1-b5c6-abc96b9bf02b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6905426-9fc6-469a-a3e5-957fd9384414"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29116dab-7fd7-4bae-897b-6a4302844a96",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71d53b81-ee53-4c8f-a5d4-d23e0c4bae4c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b13d8abe-c9e4-415b-87b8-c264c9d17afd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab942522-6108-4956-9e26-bff567575eaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6930f5c-7530-40f6-8886-3f49ae388ba2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "117b2c53-7839-464c-bb06-8519f0556ef8",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "192059f8-a7a4-4b59-8457-bf7f0883ba86",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f91cd26-ced5-47d7-9025-7630f46d79f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fa9ce0d-b1cd-4f24-9358-f45aa585a332",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4eb402b6-6472-4ade-9933-c349508d8c6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db70394c-d085-4057-9cdc-788a8aa53030",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d6b10e3-2f35-4319-a322-dc8cf2aae68e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "043810bc-9390-4fe3-875d-3d337efc420f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a00361a-1216-4d54-bbd8-6091a09768e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff0b8ab3-4b20-4db8-b0b5-7a5cc0e98c83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45d90d69-a720-4e45-b2e6-24f265728415",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf362956-81e2-4b69-b905-0b4de4f55c74",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "62f82e28-bda5-4df1-a1db-31aaac973c89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a48b969a-b8fe-48ad-8297-fa002936fc5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad3f3af8-e12a-4c5d-b674-6caa55271942"
                        }
                      }
                    ]
                  },
                  {
                    "id": "840489d1-348a-4f86-bb63-2e535a5bca13",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7ae074c-e152-40b4-b9f2-00570cf83d85",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b05a0412-1237-4d92-ad3a-be9d3ff45034"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ba53fce-2918-4a58-ac50-d22c1ef9e778",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bae5b187-276f-4f1f-b535-d0bcedd442d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc64249a-4182-4983-8623-0b45d47bf217",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "681d2ac3-76a2-46fb-947e-dd067e267f25",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3cfba83-ac10-44f6-bdba-a1b0bca84b5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d3f2a91-b823-46a3-8305-d837dd2c2748",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ef8ffe9-f833-4fda-8d34-afae9df27c73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1bd792b-0e0b-48df-8b1f-ab6ca8f15704",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1abdb654-0cfd-42f9-8180-086859086fe2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "734f1f82-c524-4551-9b8a-7e8459efb160"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8feeab12-a807-4f0e-ba1f-34aade68e8af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "852d4017-4f31-4ded-8424-fa592ede5847"
                        }
                      }
                    ]
                  },
                  {
                    "id": "542cd25e-b73e-4076-a493-467eeacd7ea0",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4b9c046-9a62-4376-9401-99c6103659cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8fc2841f-82b7-495f-bb4f-7f19049aaee8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84e4f0b2-2ce8-4330-8f9f-51e116d573c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb8bd937-d247-4f8e-bd2c-6caee0d755db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14fb20b7-4698-42f8-ac59-3cf585275fe1",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8392080-5a0e-4a8c-81c6-62a39ec130b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e96ea2d-660e-49ce-847f-86335e1d45e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70501ffd-ffc9-43cf-bdc4-29b1a0857d56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "224d160e-87db-45f6-840d-a4b4a7dde62b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2744a366-68d0-452d-8d6b-84327a8728a0",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b82dad5f-a998-4abb-af1b-b50d8e61ccb7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4896ec5-36bf-42d8-875a-bbd6c970c36d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58981f57-5591-4a19-91c6-0d7ed1a33eb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06400a9e-69d8-4a75-9103-cf0541609814"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a66954e-9946-4335-bd72-4af15b7809f2",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffae34a9-a74e-4b1d-946e-d324f8f72802",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44baf861-15ac-4089-9f7a-de56e0749f4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "794c4201-76d2-4e50-85b2-225f7c837b9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62ab51f2-6f73-47ee-9cd6-543909664947"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5182b523-1aed-4b07-ad2b-536343da08a0",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa1c95ac-be62-4460-a40c-7ef522413dfb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2fa5edeb-cefa-45d8-a140-42be3561b3ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fe119b7-f54b-4271-816a-81665defe624",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55b51674-ef55-4dbb-bd63-e18025ccf34e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e3d6f4a-d47e-4663-9259-2f8b8f35fd45",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c2ffe12-1ddc-43f3-9786-d12b2a3c4dbf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "82114c8e-5de3-4131-b55c-f6776bdf77c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e231c484-620e-43dd-bdae-2d26bae61147",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "386d7bf8-1f96-447d-a0d8-53dd5953c3ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94601b0a-88bf-4613-80d0-910442753cc9",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d75bc686-8ade-40b9-8bb6-284aa780e5fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c35b0942-f591-40e4-af9b-ab455bfdd5cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98f31c0a-5819-4bc0-ba01-46924f483942",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce5f73e4-4dd2-46cb-9d99-98fc83ebf903"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba3ff7e7-a684-4725-8793-1767fe862225",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b33246e-5b0e-4517-8f7a-6a77e60a78e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f2b0c5d-b7b2-4ad5-ae10-3f96a804b8f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11c0186f-58cb-49f8-919d-2ef33080c8eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1220ab9-b1de-45b5-84e5-cbb139b8a1ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "663fed8b-588d-4c86-92f8-606538a3d9e1",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74318589-b589-4eea-866b-24531cdb443a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b7f8379-60b6-46e0-95bc-e04933e74100"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89d58c25-e34b-4dfb-990e-51e532af2961",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3d4468f-eec0-4eb3-87e6-41ff79990bab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "693d3796-0115-4809-ac6a-c9388c93bea7",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07cd02bf-b2ff-4270-a7d9-e1a5959483cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aaac3129-2fef-4f9d-b643-5a11256030a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16724237-499b-4c4d-b042-ebd99e54a5d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0e3cf3a-55ce-47ce-99d5-34e5bc7f0b66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cd1a1f8-64e5-47c6-9c00-d8c3a4ee1cc4",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4df7579f-9827-4627-a7df-a3630bb30f77",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8c5324f-aad1-4b84-82b8-fd02c8445891"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1a437ea-aed4-428a-8ad6-f68e04c31eae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64458e22-ca12-4ebf-9b22-4d318e3ebce1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c47ccac-eb33-45f0-8f56-f5333b19e6ed",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "743a4b51-8809-499e-b3a1-d4b37960713a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d4b95e0-8af8-4952-bd11-238ffab56c87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfaa00d6-f395-44d4-913a-8c14c75a1967",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d7e55ba-e041-452e-b6b6-a58d450db97d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b90c64e-f1b7-44ea-81b4-3e6dcb9f1f7a",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93218bb7-2513-4387-b31d-b45dacca8d7c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4470fff6-e869-44bb-96fc-5ca06994e742"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b32bfe56-eb65-407c-8125-850ca9943a9b",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4acef7e7-6a81-456c-8b7e-048e367eee57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3017d0eb-3458-46b2-81ee-758d5f347459",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d2886ca-255e-4181-a83c-6ebf87b4cbdd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd4fc5a0-814b-416e-8ac3-dd6f0a7e1599"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dad947ab-2088-4697-9424-754f6bcd7c7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "697229b7-e9f4-4662-8451-d685e274a497"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcc7fbba-bb96-4ffa-98bc-15926a2e2a52",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c30637c-5d48-4a8d-8355-dd6d24c941c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2513351-e90b-4517-84bc-4ac8a1b4f17f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2327f45-bf12-4968-af04-523082e774d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d102cef2-55d3-4542-ada6-680702f63fab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01b49747-a794-4dad-a658-e99e220a0f18",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0320424d-581a-4bb4-9731-609a0c8d444b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fde58ed1-6180-4606-892d-d987c3c54154"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a5d1563-0dfd-4740-8616-a2e9b69ae0c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f581cba3-d4a4-46aa-b350-f3d0285ff217"
                        }
                      }
                    ]
                  },
                  {
                    "id": "655b549d-aa89-46d4-857b-70e1d73ff887",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77c068cc-29ed-4ee5-87bf-85623ac1953e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6bcbf52-de31-43b6-919d-c57f834bb8ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9994fe6-4610-429d-adee-7c3c7513721f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f9cf214-1b1d-4d20-9471-4179dee1417c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64cf40e8-802e-4e4c-a4ee-b59216abc490",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97601b18-c6f8-486a-8c4b-581908452184",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e455e78f-38f7-48cf-ab97-618bc40f8605"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bf7ff93-cb3d-4bfb-ae19-c292a785937d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41cc409d-e2d4-4f47-af93-4b5f7384b685"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9bef1d9-c578-4df6-94c1-e971d12573df",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a540b3c-d58e-43df-9755-b5c42a9e6cc8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1bdbe6a9-b301-4344-962e-ab8f69c6d890"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6473e6b4-304a-410f-b608-ac8127c59d1d",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f39da14-d463-42ed-bedb-cd9a20ab8382"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9281d573-f5e5-4f70-96f5-f78543191dfb",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "152f68af-2741-42e6-b4e9-2ec12939684f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a08c31b-5f03-44ad-ae50-6869484da09a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b341ef7a-f707-4a1b-a1e4-2722a68a8fdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5af175e-2a27-4527-9504-824bee99e699"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b2c0c657-3796-4b34-b718-9050dc6e2470",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7bf1922a-910d-4d38-a914-fc7319f800a3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a9495354-dcd2-44b1-893e-5b1bee0bd41d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e8e7b140-f95e-40fe-9f8a-fdeeea081005"
                    }
                  }
                ]
              },
              {
                "id": "26148a10-0d63-475f-a9db-d646c0f4393f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3c7fd075-174f-4d70-8dd3-957e3e023e83",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3c3dbed-eb40-41ef-ac95-2abb9aaa09f8",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "9a12da7d-7476-49b1-8b4d-45bd0558c506"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0fbf645-f4b5-454b-b6ba-6725f3d00dc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "13bf7c9d-55ca-4d1c-b80d-db829b5f6169"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "76740bae-9b52-437f-9f29-8bfc0e1bb965",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f336bedc-06c9-4346-bcfc-b1e2723d7e9e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "edfc55a2-bf83-4481-86af-99e6dbbd2354",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f562f992-988e-4f17-90b1-8511f412cee4"
                    }
                  }
                ]
              },
              {
                "id": "f9e80462-370d-4076-88fa-94612e25e779",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "2f557684-4a15-44c6-a17e-5cc9b6b930d2",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d05f59e-9cee-4a4c-ba5c-da8eca02a34e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "f7b71126-3a86-4acd-a1e8-e94e99963f22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "255ca23d-b58a-4ecb-aed3-3e46b1ddfb98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf216152-b717-4cc1-839e-26fb5d99ece3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "a25ee050-b3b6-44f0-b4de-1b1a75ad48d6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c567055e-dd60-441d-8223-70e77a457bcd",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bca0a207-0d33-4464-8c13-439cee148bf3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "c18891ec-ecef-4d62-b173-30d42e2fc90a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "633f4edf-f8e1-4a8e-9cbb-9f2fc6962b69",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f36f914e-0427-45c6-b5e1-815cdb5d0290"
                    }
                  }
                ]
              },
              {
                "id": "08ddf51c-d9a4-4a3c-9a48-53399acaff09",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "093eab38-a9ac-4c98-8a57-548d3644513d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "ff00a1f7-a29f-4f32-a595-d8382a5f5511"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e0ad172e-bb17-4d03-b8d9-804cba0c65f3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9f24648b-bbde-471d-8dd8-7e04899416a8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3f4dcee3-7b3e-4443-a184-2f4adc2cdd9c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "7d1e8070-9dc6-4822-91cf-39facf58ccb3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3a917f98-2cc0-463c-87ea-f17918354cd1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6bc98601-760f-4439-849f-a4e31fd49d8a"
            }
          }
        ]
      },
      {
        "id": "d081f34a-34b4-4db1-9cf3-b783bf31edd0",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "a3dc52f5-0a1d-4384-aa04-272512ad4d91",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e585e3bb-c6d2-4538-a82c-c97615d9df4d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "301c72a7-0c3d-4bfa-98a2-be89f17cb5ba",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfec2a37-661d-442e-b71b-cd1bf851ed62",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "89be74e3-c840-4ea0-afc8-9167f7e8b605"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31b21b41-f887-47cf-8270-a9d5271e0770",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cdef8b9a-6959-4eb4-9034-f08e0e40ce95"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "400626b0-99dd-4062-838a-5e379d0a3393",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "566d979c-4f80-4e74-a6ec-d89f5f6796f0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "357b8368-6511-4f3e-9305-6d15e8015b18",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cfa75d64-b839-466f-8b37-5da298449212"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3d1584e6-fa6d-4b12-98e4-b298d1146bb5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "7167702c-3359-4d6c-9c10-d01e6a80a174"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "41256284-6e79-48ee-a9d5-3bbe9be393ac",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3dd467b8-8a89-493c-ab2b-b55574e2734c"
            }
          }
        ]
      },
      {
        "id": "44f829aa-6440-4557-8086-85ff8a4f7820",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "d25745a3-7415-4c7a-965a-7733b9867ce5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "878112cb-5cac-463a-b258-23aa70ad2be0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9edf3ce3-7d77-49de-8184-bd533a477615",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29a180ec-e975-44d8-bbc6-9f4e1f4737b9",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a71ef95b-f005-4755-b93d-47cc3d88048e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2465129-4cba-41a6-86aa-166a46c3291a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2c269738-e294-41f5-8f7f-4e6280dc10cb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7e19f49b-db63-44bd-b955-e395ff729928",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9f657958-c94c-49f3-848e-21b2da48b918"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6cbdb6e1-a97a-452e-baf2-aca426fbd94f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4fc51f64-7586-4537-909b-e47d2381812f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2d6ea6dc-0925-4387-84ee-3bf87f0cec79",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1010b6ab-90f3-4679-b20d-9d3559b66c99"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5ae525a0-4cbb-4977-a1bd-f7de6f3fe89d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "35ed3131-17eb-4739-b1bb-697531e2079c"
            }
          }
        ]
      },
      {
        "id": "daacca7a-e2ed-458a-b974-6cca7749fe79",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "88b7e107-b942-4435-a6b3-db66ade1d2ec",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1cea8983-8a58-40a8-98ac-f18a7dfbdfc7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8faf32ab-ce2c-4780-9bbb-482156691a0f",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22740f20-1f7f-4132-b204-8dea1c965719",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "377e70bc-b39e-4f4d-afb5-a96bb63d65a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d815f61e-2be6-4188-9d27-b2f65176057c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2fbd3f3e-ce21-43ce-8e75-299971a0773f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b5e3bd7f-46ef-45cf-96b7-4cc78318b120",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eecaa526-7aa3-4490-84eb-beb6e0bb0e8c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c09f0ec1-b5bc-4026-b4b4-77685abfd2d2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fef17bc0-05b5-4d6c-8633-0ea202e99335"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2acabcbc-479f-4bf5-8d45-24f3ade00e40",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "54e61195-84f3-4807-80ca-a164988d88de"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "91e6cce7-b065-48b8-b4c2-bbd3f329202b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fd77618f-8bc9-45f9-8d02-eb6b8eb1a344"
            }
          }
        ]
      },
      {
        "id": "50c1a09e-7053-428a-bcd6-acd3aa026dd2",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d0a37ad4-5194-4060-a01f-aade8711f3ff",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8c95851f-5e78-4488-9034-3f5e387f729e",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "c5e4ceac-86c3-47f6-b7c4-8979458db40f",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "01abfff1-985f-439b-9f19-ec540492e9e2",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4de064f7-a67a-4476-8d45-30ed9222925e",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 4
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 389.84920634920616,
      "responseMin": 6,
      "responseMax": 11153,
      "responseSd": 1660.6803662501004,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1723941819925,
      "completed": 1723941926516
    },
    "executions": [
      {
        "id": "8b4bad01-d3fc-40d7-9362-cd1619a9448d",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "dd686457-921b-4fb3-9a76-43cc612922c0",
          "httpRequestId": "d7488873-1935-44e6-a256-920ddfa1239c"
        },
        "item": {
          "id": "8b4bad01-d3fc-40d7-9362-cd1619a9448d",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "b2394264-57ad-41bf-83ce-c43298f6cce2",
          "status": "OK",
          "code": 200,
          "responseTime": 44,
          "responseSize": 0
        }
      },
      {
        "id": "41ad4c3a-d77b-484d-adb5-9b50521026ed",
        "cursor": {
          "ref": "fd26a70e-fad0-49e4-918a-aae0bf5ecdd2",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "35db180c-7850-40da-bcff-77ffcf5230d5"
        },
        "item": {
          "id": "41ad4c3a-d77b-484d-adb5-9b50521026ed",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "13d76d8a-6085-443b-b943-86f3f25f1fed",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "9ba1afb3-dfe0-4426-af56-3ed7b8d9344c",
        "cursor": {
          "ref": "cf8bea11-3956-4e39-a93d-9793fb0ce4e8",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "abebe0f1-deac-48d7-81ec-8cf736851574"
        },
        "item": {
          "id": "9ba1afb3-dfe0-4426-af56-3ed7b8d9344c",
          "name": "did_json"
        },
        "response": {
          "id": "d17688d2-a1bc-4907-82d6-1271e577a356",
          "status": "OK",
          "code": 200,
          "responseTime": 446,
          "responseSize": 1024
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6c8eadf-a874-4c76-b225-70ba1776411e",
        "cursor": {
          "ref": "56e45408-e403-4d7d-a90a-b14916164c7d",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "491108a0-d947-4409-bd4a-4ac75df76334"
        },
        "item": {
          "id": "b6c8eadf-a874-4c76-b225-70ba1776411e",
          "name": "did:invalid"
        },
        "response": {
          "id": "3eb91eb3-7833-4d46-87b4-3d9ef249ba8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2074,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6c8eadf-a874-4c76-b225-70ba1776411e",
        "cursor": {
          "ref": "56e45408-e403-4d7d-a90a-b14916164c7d",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "491108a0-d947-4409-bd4a-4ac75df76334"
        },
        "item": {
          "id": "b6c8eadf-a874-4c76-b225-70ba1776411e",
          "name": "did:invalid"
        },
        "response": {
          "id": "3eb91eb3-7833-4d46-87b4-3d9ef249ba8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2074,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67312545-cfe9-4279-ab26-2e3a274902c5",
        "cursor": {
          "ref": "36894772-3c65-44a8-9f49-ae1db3565fe6",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "fe099517-06a1-4a8d-9e93-5cf07df8371e"
        },
        "item": {
          "id": "67312545-cfe9-4279-ab26-2e3a274902c5",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "81baa27c-f01f-4406-b4c8-0b8d7b2d5ba2",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2396,
          "responseSize": 65
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebe89e84-244e-4d92-9478-07bb2738305a",
        "cursor": {
          "ref": "f5f4f263-9298-410c-b76b-16b009c03444",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "d9a31525-dc8e-4030-b637-40a6c0878ace"
        },
        "item": {
          "id": "ebe89e84-244e-4d92-9478-07bb2738305a",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "51e9ad71-5521-4db8-92e1-e1b9b9d160eb",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2124,
          "responseSize": 23
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21047523-95e2-4689-9193-73050d00f285",
        "cursor": {
          "ref": "2a30c4ab-fa03-47d9-a2f5-7fbe048f6521",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "65b6c92e-8729-4900-b2f9-3dcf69e63bba"
        },
        "item": {
          "id": "21047523-95e2-4689-9193-73050d00f285",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "347dd293-358f-4f8d-92bc-cac47e377173",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89ed961a-059f-4f79-b4b2-bd28099ed284",
        "cursor": {
          "ref": "acd82e9d-7690-4ca6-a0b8-f968dbe4f723",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "60e3186b-f462-49a7-bf62-94101062d3c1"
        },
        "item": {
          "id": "89ed961a-059f-4f79-b4b2-bd28099ed284",
          "name": "identifiers"
        },
        "response": {
          "id": "1ed44309-b576-4029-944f-8f2d3b597665",
          "status": "OK",
          "code": 200,
          "responseTime": 2222,
          "responseSize": 1040
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a51853d6-b1e9-4eb2-b536-0a9688f9d721",
        "cursor": {
          "ref": "0022eb2f-f7ac-4613-9d56-6ad489e1e860",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "26c1c7dc-75d1-4df3-966f-6322eedffd80"
        },
        "item": {
          "id": "a51853d6-b1e9-4eb2-b536-0a9688f9d721",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "b0674106-fb4b-44ca-913d-25a5e26e44a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6325eb0-a82e-43d1-8a4c-dbc1dd030dd9",
        "cursor": {
          "ref": "acc3adab-8a09-4a34-8d82-95688d5db62a",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "a5523a17-69f7-49ab-8b18-a11204d3ac2a"
        },
        "item": {
          "id": "b6325eb0-a82e-43d1-8a4c-dbc1dd030dd9",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "fdff31ef-d9b2-4ded-97ef-e0b89d0e57f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 89
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9404a140-fffb-490b-86c2-5ed32dda7f13",
        "cursor": {
          "ref": "6fe8f7f9-373e-494c-aa6a-171291da5caf",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "a6bde2ba-113e-4518-8949-79f3eefcca15"
        },
        "item": {
          "id": "9404a140-fffb-490b-86c2-5ed32dda7f13",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "6ca0858d-e9a1-45c3-b3bd-c21473b575b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4498ed3d-b5a0-4c56-85f2-0e7e128205a2",
        "cursor": {
          "ref": "5e48880c-1ee6-47e6-b40b-4876827ed6cd",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "df17fb6a-909c-444b-947b-358486bbb22e"
        },
        "item": {
          "id": "4498ed3d-b5a0-4c56-85f2-0e7e128205a2",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "e8d3d39f-797f-4d7d-ad72-03acf4b10732",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c86f0b4-02c8-46f4-8a45-760d5e52e99b",
        "cursor": {
          "ref": "b5e023a7-146e-44e2-b115-2e1b5440d0f7",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "db96f185-ce5c-47ec-89b6-014f13632355"
        },
        "item": {
          "id": "0c86f0b4-02c8-46f4-8a45-760d5e52e99b",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "2d1ad124-3e7f-4fc1-95d8-2c934104d49e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e6c393f-98da-4a9c-b641-0d6d535f22a4",
        "cursor": {
          "ref": "136dec78-7809-46ef-a5b6-81d227c9bc48",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "98230fa5-b9e9-4164-81f5-e6d422db434a"
        },
        "item": {
          "id": "9e6c393f-98da-4a9c-b641-0d6d535f22a4",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "35418ccc-ea68-4ef9-ad7c-ea1c1631f811",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "200cb9d2-48f2-4f58-b339-df633abbb268",
        "cursor": {
          "ref": "21db59a9-f08e-4058-a3e3-34049cc4e30c",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "94b91562-1971-490c-aed9-a96a7d787f57"
        },
        "item": {
          "id": "200cb9d2-48f2-4f58-b339-df633abbb268",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "abd4f1c0-d272-4d3c-bd4c-9d6b55467b14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42580e16-1518-4081-8ea0-9d8fcb7c3aa5",
        "cursor": {
          "ref": "7091b85d-6a84-4aca-946b-8cfbfab3fcbf",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "e7104d22-484a-4d31-a881-3510d0e79c72"
        },
        "item": {
          "id": "42580e16-1518-4081-8ea0-9d8fcb7c3aa5",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "8504082c-ed56-47b8-9d59-75ad4e800db5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b23456f-d482-44d7-8967-a83b864a1854",
        "cursor": {
          "ref": "83976287-a916-43da-ab9a-38527761010d",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "2757d1b3-8805-42f8-bd73-54f49c316e58"
        },
        "item": {
          "id": "3b23456f-d482-44d7-8967-a83b864a1854",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "0d110c2b-4ad5-4138-96c2-c3db5fcb57a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a183a6e2-1771-4535-89cc-af715b67f94d",
        "cursor": {
          "ref": "1afa2edd-af67-4a95-96e8-6e75d8de396c",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "730fb0d8-1442-4037-8e8b-2eba19c2321e"
        },
        "item": {
          "id": "a183a6e2-1771-4535-89cc-af715b67f94d",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "3d4604fc-8a94-4ba5-8755-388d67878d22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29c3574f-74d2-4ea2-9d12-774dd9d4d958",
        "cursor": {
          "ref": "b961bf11-b84c-401c-9fdc-586d6ded61d0",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "c8b7bd3c-6c40-49b9-9238-d8a917c2ef45"
        },
        "item": {
          "id": "29c3574f-74d2-4ea2-9d12-774dd9d4d958",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "0afa1b60-3977-4b85-acc8-a1fa6438424c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1019207-f843-4913-bb89-c4f4775d6a46",
        "cursor": {
          "ref": "e945c0ad-1e04-4ecf-b8b4-e2f163f72f7b",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "9f291be6-fbee-4741-bebc-f1df9ce1c5b3"
        },
        "item": {
          "id": "f1019207-f843-4913-bb89-c4f4775d6a46",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "dab3c1c4-56b8-4612-8158-ccdc760cdd6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a182e47d-cb20-4608-8ec3-58b17c69b84f",
        "cursor": {
          "ref": "42f4e4a1-0eab-4678-b4cd-284432f2f547",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "1569d24e-9ed4-40f6-b119-94978b7d0979"
        },
        "item": {
          "id": "a182e47d-cb20-4608-8ec3-58b17c69b84f",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "2a00b6df-e1d6-4a5a-94c0-3ca4a943a055",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54621b2d-a7ae-4116-880c-398fa8c4cdb2",
        "cursor": {
          "ref": "d093faeb-ae44-4a79-b477-afae2468ff5a",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "e9393022-c6c1-49ac-8a04-7ebb5fda55cb"
        },
        "item": {
          "id": "54621b2d-a7ae-4116-880c-398fa8c4cdb2",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "f9dc96e4-0beb-4e5a-9502-eb86f99e98d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a590fcf7-73a3-40d8-82f9-38ffcdc11e8f",
        "cursor": {
          "ref": "df71eca9-49b0-43f3-a1d7-41c75a9239ad",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "ec3c787a-ff45-4123-8bb9-39a3f4a349be"
        },
        "item": {
          "id": "a590fcf7-73a3-40d8-82f9-38ffcdc11e8f",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "6c6d61bd-06cd-48f0-a376-24c89f3bd0a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbbddcec-68b3-48d8-906d-2227349bba30",
        "cursor": {
          "ref": "7424500f-6d91-48d9-8a93-dde2648636d3",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "acd737f2-bfd0-471d-a102-bde22a378237"
        },
        "item": {
          "id": "dbbddcec-68b3-48d8-906d-2227349bba30",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "dfc9c59a-b10d-4a05-88fc-d9fa34b0ae1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6211e858-9b4d-4933-a918-9149d1da5abf",
        "cursor": {
          "ref": "16fd0471-3584-4538-83c2-80b1421586e6",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "fe1647dc-73d7-43d9-8169-4988f456b7c7"
        },
        "item": {
          "id": "6211e858-9b4d-4933-a918-9149d1da5abf",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "1d6be545-8979-4fb5-be66-e8506dcb6906",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65d18ac7-fa0d-495d-a440-85ff5e1a1faf",
        "cursor": {
          "ref": "97be3849-9402-444f-a9da-ca666cd82e67",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "0cab3f98-c69b-4f9e-a514-292e7c1eaba0"
        },
        "item": {
          "id": "65d18ac7-fa0d-495d-a440-85ff5e1a1faf",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "58d0d70b-a92f-43ad-a294-b0a0436ed5e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2719d2c-0ed8-4b76-b8ea-ba061d5cb942",
        "cursor": {
          "ref": "51ea1152-1800-4c8e-9581-f79d3e390ae2",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "5e2e7cd7-c3bc-4193-a6ed-01f7073afb6f"
        },
        "item": {
          "id": "a2719d2c-0ed8-4b76-b8ea-ba061d5cb942",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "1f158dc7-8f61-486e-a1cb-3630cd2e8ceb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba30bae5-d656-4d7c-a2c2-7b2559c067e6",
        "cursor": {
          "ref": "d74fc86a-19ec-4be5-ace0-d0b6077c3090",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "97182c97-b1e3-4f9e-8edf-9ecaccbe6eb7"
        },
        "item": {
          "id": "ba30bae5-d656-4d7c-a2c2-7b2559c067e6",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "341d6b74-f4c0-4384-a92c-782c1f2deed9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2567c67f-dad8-4e58-990f-16e1d99134ca",
        "cursor": {
          "ref": "f8bca3e2-173f-45d5-83e4-c6cfcd7f8567",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "4dc23897-c97a-465e-ad41-cad4d963ce09"
        },
        "item": {
          "id": "2567c67f-dad8-4e58-990f-16e1d99134ca",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "87856f99-cefc-41e1-b79d-aeda6b9967ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cacd9f80-cac6-4fad-b48e-61defc406c1d",
        "cursor": {
          "ref": "001463ce-6cc0-47fb-bc41-66ad01898f6b",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "00795662-a268-48b6-918b-74a35a6f3587"
        },
        "item": {
          "id": "cacd9f80-cac6-4fad-b48e-61defc406c1d",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "eb674d69-bde5-41fc-a8c4-0a882c696112",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3b6eaed-093b-4af9-b40f-06e3f5513598",
        "cursor": {
          "ref": "9b800c66-f47d-4a89-afef-f2c77607bec4",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "80321c6e-cde9-40e5-8e01-6ed4a4cc4115"
        },
        "item": {
          "id": "d3b6eaed-093b-4af9-b40f-06e3f5513598",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "25d1eed8-6a18-42d3-90d7-0b81e8d13bff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "657ba627-3778-4477-b410-7c38adcc0121",
        "cursor": {
          "ref": "814f4f7d-ad09-4952-bf16-e7a52d0d48f8",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "61f540a6-8d34-40b8-8aa2-12f7a9ff1bb2"
        },
        "item": {
          "id": "657ba627-3778-4477-b410-7c38adcc0121",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "c00baae3-70b0-4822-8ac0-d3cf05ca467a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "114ab94b-66e8-448c-a492-2310742041c8",
        "cursor": {
          "ref": "0ccb97f7-5d74-47c1-a779-49d3cb0e737a",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "d9177f23-f08f-4d71-a3a1-5f05a7a7f8a4"
        },
        "item": {
          "id": "114ab94b-66e8-448c-a492-2310742041c8",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "c462e159-1bf4-4234-a60b-03a1294b65bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e36f6267-f052-4af3-b1da-477e1aba4d0c",
        "cursor": {
          "ref": "5b096798-3ead-4f67-a8b2-4f3888452e85",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "6ffc7590-1853-4eec-b71b-34ebbf65ff22"
        },
        "item": {
          "id": "e36f6267-f052-4af3-b1da-477e1aba4d0c",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "441ce801-d494-4b55-862d-cfa0a8225a7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6297284b-76b2-4076-912d-6d1d8eef5f71",
        "cursor": {
          "ref": "2ed813da-2c01-4460-9787-d8a79db7cc21",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "05211789-48a0-41b9-8226-ebffd419eea8"
        },
        "item": {
          "id": "6297284b-76b2-4076-912d-6d1d8eef5f71",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "37bdc557-f915-476c-9036-f0dba3c0a641",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd5186a3-bcbb-446a-ac08-8033923b2423",
        "cursor": {
          "ref": "88ecc8b4-8f7e-4aab-be0a-9a629deebf3b",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "d4a7f00b-0f59-4fb8-9047-f9395a43469c"
        },
        "item": {
          "id": "bd5186a3-bcbb-446a-ac08-8033923b2423",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "53ecb089-f652-4672-9e0a-20e4cd589d17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a2c94b2-376e-4a1a-98c2-7a4810006b66",
        "cursor": {
          "ref": "dc64a2f9-46f6-4ca3-8269-7fb77dc2cec9",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "3f70ae13-6f08-4ef9-9f1c-488e35ce4c60"
        },
        "item": {
          "id": "6a2c94b2-376e-4a1a-98c2-7a4810006b66",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "57cf8b02-846e-4c0c-b98c-98ba9ad99da7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a963adc-d61f-45dc-95ef-dc76d29e3601",
        "cursor": {
          "ref": "f051e969-d256-40f7-a1c9-124e80950261",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "c9dc71bd-9b24-4339-83fb-d0d7262e254d"
        },
        "item": {
          "id": "1a963adc-d61f-45dc-95ef-dc76d29e3601",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "82fc7c51-4ef3-423d-9d70-bf7a86c76c36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3972b23b-18d9-4baf-a511-e30efe12b415",
        "cursor": {
          "ref": "892274a9-6157-44ba-a48f-327d61c49af9",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "638e0913-f7e0-4489-b782-66ed1ebaa4fd"
        },
        "item": {
          "id": "3972b23b-18d9-4baf-a511-e30efe12b415",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "dd1f8cc4-8a07-491b-b4bd-c7ae0b989d36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04b62970-ce08-42b9-896c-d640c62b55ec",
        "cursor": {
          "ref": "91076a48-dceb-4371-b2b7-0f1f386a8481",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "3feffc80-4864-454f-a515-0b59c3ba6532"
        },
        "item": {
          "id": "04b62970-ce08-42b9-896c-d640c62b55ec",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "a8074089-5d15-403f-8b57-ab5c66949dde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8107bd78-eefe-477a-a2c6-1f0559a0b4d5",
        "cursor": {
          "ref": "2f6ccd77-4278-491e-a701-765375778f30",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "3d3bbe7d-1b7c-4aa6-9a0a-8097d98262f3"
        },
        "item": {
          "id": "8107bd78-eefe-477a-a2c6-1f0559a0b4d5",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "5b40b258-950b-4718-8a63-788e0bd2f514",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7891d539-3d8e-4931-bd96-60d8c21c2f6b",
        "cursor": {
          "ref": "44b9e3a3-70ff-4ab0-b000-e91648c86394",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "d906c7d1-00ca-45d0-8806-6f31fd0eee9c"
        },
        "item": {
          "id": "7891d539-3d8e-4931-bd96-60d8c21c2f6b",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "57af7dfd-e4bb-42f3-9196-458b5d094653",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89d749a6-7d08-4622-8353-163745a13a5a",
        "cursor": {
          "ref": "a2a694da-b346-45dd-92a4-fadc2fdc918c",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "1c5c85d5-ac54-4d41-8a7e-bfeee3af10e3"
        },
        "item": {
          "id": "89d749a6-7d08-4622-8353-163745a13a5a",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "9170fcc2-2e0d-44a7-816b-9d0d5364b05e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0001663-03a9-4f52-81da-4181ba11257e",
        "cursor": {
          "ref": "09341282-37f1-42e9-9a91-1694807db69f",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "2e26d3c3-f10d-44c1-b8b6-11f5112eec93"
        },
        "item": {
          "id": "c0001663-03a9-4f52-81da-4181ba11257e",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "8bcc0ee1-052c-4a0f-8039-1080f23ebb6a",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 70,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85a28121-8889-4048-843a-064f7771ac31",
        "cursor": {
          "ref": "2ed8c07c-b8bd-4109-9370-b6f4bc452d33",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "6e3db845-a39e-4a26-ab28-a68fd0beb536"
        },
        "item": {
          "id": "85a28121-8889-4048-843a-064f7771ac31",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "884d7224-cf8b-456f-baa9-160713660f2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c3527e0-6af3-445a-9f82-10c45b48b1fe",
        "cursor": {
          "ref": "b759ae47-7eba-4ef5-ae8a-e0d978960eb8",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "494e0b13-01dc-44d0-b37f-6140ae8fc052"
        },
        "item": {
          "id": "6c3527e0-6af3-445a-9f82-10c45b48b1fe",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "4134b557-ee15-425f-af03-dc565b09cb1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "342d22ec-759d-4138-97e1-316ba95ea693",
        "cursor": {
          "ref": "db76fe10-83ed-4483-b6d0-16b38c32ecb4",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "65111d63-dbed-4adb-bec0-349bf0c11081"
        },
        "item": {
          "id": "342d22ec-759d-4138-97e1-316ba95ea693",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "d959f0ba-a22e-4a5e-a78a-7d75972a9d44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2b73344-b24d-4f74-96eb-afa1ae25e536",
        "cursor": {
          "ref": "d8093791-f244-49b4-9f8c-16d1719ca096",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "5331c128-0db5-456f-876b-5a853c9ffaf8"
        },
        "item": {
          "id": "c2b73344-b24d-4f74-96eb-afa1ae25e536",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "d8f8ad65-e741-4312-b7ca-0862cac1af46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33cd553c-0311-49b7-8c6b-fb3844b44a4f",
        "cursor": {
          "ref": "3630df4b-7325-4aad-9226-c98c6b277dc6",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "8fc1d088-8ee1-4798-a9fa-3c56ebae654d"
        },
        "item": {
          "id": "33cd553c-0311-49b7-8c6b-fb3844b44a4f",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "63db709c-3271-45c7-ad7d-9ab16bbd6203",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39a785e8-8383-4d59-a504-de7de2418dcb",
        "cursor": {
          "ref": "0423fdb8-024a-494d-9281-a3c0beaeba72",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "21f610e9-fefe-4529-a7d0-cbabfbce33cf"
        },
        "item": {
          "id": "39a785e8-8383-4d59-a504-de7de2418dcb",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "d89a529a-7d4a-4513-9cf9-97dc36310547",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1af6d06-75c9-4c48-807a-03e67060beb7",
        "cursor": {
          "ref": "0e09bf09-801c-4fa0-8edb-67530264917b",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "3c0c9680-8d76-4284-bbaa-f71cfbd9642a"
        },
        "item": {
          "id": "a1af6d06-75c9-4c48-807a-03e67060beb7",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "ba661f10-5f32-4882-b212-cef1b5042002",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 70,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1333fcd6-da32-44ec-8dc2-f0e4e8f5adc6",
        "cursor": {
          "ref": "086fb53f-4724-4e41-b6e8-e2dea75f74e5",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "c0ac3047-e4c7-48aa-9797-36687aa34b35"
        },
        "item": {
          "id": "1333fcd6-da32-44ec-8dc2-f0e4e8f5adc6",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "e083f085-2584-4e24-8afa-8bf68494d5d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e9a0cfb-ae58-40b2-bcfb-b8c8db0cff35",
        "cursor": {
          "ref": "a1e2f71a-d0a1-4cb3-85a2-9f6c6a606838",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "cd8fe01e-8a3f-4416-8c82-de39e37fbcb0"
        },
        "item": {
          "id": "0e9a0cfb-ae58-40b2-bcfb-b8c8db0cff35",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "837d5e3a-ac64-4540-97be-88a00ac3f4ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee3222f0-4249-4b25-83fb-89e72239b43a",
        "cursor": {
          "ref": "8233bfae-9447-4838-8dfa-0047c42f12cc",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "477e6915-a108-4dab-af06-cab1d5811f7a"
        },
        "item": {
          "id": "ee3222f0-4249-4b25-83fb-89e72239b43a",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "cbede2dc-7592-4eea-8f02-15f4f99b6bd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cef94787-7d91-4f29-a869-47bbd60eb4d3",
        "cursor": {
          "ref": "10cdce06-a3dc-4bb9-a5ad-9320a71cbfa7",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "324cac13-c0a7-4c69-8d6a-571c2151860c"
        },
        "item": {
          "id": "cef94787-7d91-4f29-a869-47bbd60eb4d3",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "861d0721-c5ef-4c69-90df-2fbb569ad042",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c941f51-ce04-43f6-9295-1061554c6157",
        "cursor": {
          "ref": "a5d5a39b-08c0-4a2b-becb-edaf531829b3",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "16625a91-faad-4ae3-9f99-874e0b08babb"
        },
        "item": {
          "id": "7c941f51-ce04-43f6-9295-1061554c6157",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "5e654c89-6cfb-41bd-be43-b5305c494380",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bc21faa-95eb-4981-8f4a-21ea67eaf8a6",
        "cursor": {
          "ref": "9f8ce19f-6e94-4a9d-9da6-a3adb186f041",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "b86b35f1-dffb-453e-8f77-92d9c29fad28"
        },
        "item": {
          "id": "2bc21faa-95eb-4981-8f4a-21ea67eaf8a6",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "b9ddd1d7-4fa2-4f20-8f65-1cad34f68074",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d36facb2-76d3-4fdb-94a9-9f7d0f2cf0f4",
        "cursor": {
          "ref": "7119c98f-9174-4f1f-a9d8-eef81dc99ae1",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "0c871778-7f77-493a-9452-1498b9cebef4"
        },
        "item": {
          "id": "d36facb2-76d3-4fdb-94a9-9f7d0f2cf0f4",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "f29d615b-7865-421e-bdb8-b49b6be0544e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef5943ac-9eea-46b6-86fe-cdc833e24584",
        "cursor": {
          "ref": "0a3f29e3-1361-4328-8049-58b73d5bd9d3",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "7d5fcc5f-d2eb-489c-b300-c390ed20c30e"
        },
        "item": {
          "id": "ef5943ac-9eea-46b6-86fe-cdc833e24584",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "b2075532-5dd2-49cc-b5ff-c5940e7972fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 98
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4632078e-fd38-4caa-b9bf-9c6c3d92b307",
        "cursor": {
          "ref": "0f569cd1-e0fa-4f55-89cd-52d795567273",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "f65c6141-3e72-4825-98c0-55f38cfb0f8b"
        },
        "item": {
          "id": "4632078e-fd38-4caa-b9bf-9c6c3d92b307",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "b52f620a-410c-49af-a0d3-e8e76b77c2de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33efa5cf-e673-4822-9357-8b39617c12b7",
        "cursor": {
          "ref": "a2284669-e8ab-4d6a-a169-1eed92c7515e",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "a847720f-97a4-4306-8dd9-6eec2f8b378e"
        },
        "item": {
          "id": "33efa5cf-e673-4822-9357-8b39617c12b7",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "58d7c814-2d84-46be-9146-b6059850e1a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8eaa33e-0b27-42ae-b7bc-14666751278d",
        "cursor": {
          "ref": "ef1d51ae-10d3-46cf-8649-9d9f50df35f5",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "442dd58e-220c-497c-ac15-c4f15a11a1ea"
        },
        "item": {
          "id": "a8eaa33e-0b27-42ae-b7bc-14666751278d",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "bed2a3c6-7a7d-411e-826d-382434c4e04c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b7de79e-c424-4593-9d7e-1d90cb7d7e6d",
        "cursor": {
          "ref": "1ef50938-7fe8-4f2a-bae8-3f694a439534",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "9660184a-5a08-476d-8887-ad897df47758"
        },
        "item": {
          "id": "4b7de79e-c424-4593-9d7e-1d90cb7d7e6d",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "76f9cd0a-117d-4b61-a7ea-ca910a8d400e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83ca0a81-2527-4610-85ec-96d69951cda9",
        "cursor": {
          "ref": "0937f76e-5fe5-4bd6-a143-be8295b50442",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "d31ef710-5633-49a0-b34c-2c8f67a55106"
        },
        "item": {
          "id": "83ca0a81-2527-4610-85ec-96d69951cda9",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "96666a1f-d39d-4299-afab-263503516b79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aeb2815-c18c-47e2-8779-0336fb97f1ac",
        "cursor": {
          "ref": "e62bfaf4-75ff-46ef-86ac-b38f91aa4340",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "2004e9a8-fb83-4c81-a6c7-048307f8c00f"
        },
        "item": {
          "id": "9aeb2815-c18c-47e2-8779-0336fb97f1ac",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "8ee7319a-c15a-484a-b210-702ee2ec8fc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ff42236-f72c-4c59-b5e2-5dec9bdd27c9",
        "cursor": {
          "ref": "692a4abc-bcd1-425e-a6f4-f68efe14b94b",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "d2b331cc-0eaf-48fa-9d66-339c8383e5d4"
        },
        "item": {
          "id": "4ff42236-f72c-4c59-b5e2-5dec9bdd27c9",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "cd14bdfc-7bef-4c09-a3af-1a869ec065b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf3fb9d2-485d-4472-8bf7-2cb4c6245763",
        "cursor": {
          "ref": "37ca665f-221e-4e4e-82a3-6cdadd6b69d2",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "e94a3887-4a4f-41ca-b2f1-63b5e0cd44be"
        },
        "item": {
          "id": "bf3fb9d2-485d-4472-8bf7-2cb4c6245763",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "5d656d2a-ec07-4fcb-96fd-48a1e701966d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b2359ec-df2d-4ee9-8506-ced2744d76ab",
        "cursor": {
          "ref": "6f81ff16-ca20-4bf1-bdfd-de00624f9fc8",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "87a4c52b-f930-4691-b7ef-5109b4c7444d"
        },
        "item": {
          "id": "8b2359ec-df2d-4ee9-8506-ced2744d76ab",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "931327be-30e0-42e3-ad6c-d5482d12b67c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe3ac5a9-1807-472d-9ced-5fb71f5702f5",
        "cursor": {
          "ref": "da839a31-106a-4776-a6a6-49720b7f3a0e",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "29049791-dc4d-4488-b32d-270d8e2d6e81"
        },
        "item": {
          "id": "fe3ac5a9-1807-472d-9ced-5fb71f5702f5",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "136779bb-af30-4c4b-a7c2-07e05d7844f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33e55599-5943-4477-b7f3-5d6ef6fd6053",
        "cursor": {
          "ref": "2ec6c9a2-e53e-4585-987f-e2b2c345e252",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "798ea930-b4f5-4182-bde6-e2fd9cb1ca67"
        },
        "item": {
          "id": "33e55599-5943-4477-b7f3-5d6ef6fd6053",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "26ac7a6b-da48-4196-b398-71d3c352bbb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 75
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a927ae89-1a17-4b07-8107-1d90e14aa351",
        "cursor": {
          "ref": "bc9b2974-8b9f-4cf8-837f-40e443d1e70d",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "96b7e9b5-ff48-4f38-95ae-47fccd8bf596"
        },
        "item": {
          "id": "a927ae89-1a17-4b07-8107-1d90e14aa351",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "5a1553a2-aef6-4f7a-9b9a-492a80642243",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43aedb04-10fa-4656-a565-b88b76cd2d11",
        "cursor": {
          "ref": "de70d712-2c36-4ad0-8c15-fdd7bf2968c6",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "cef905d9-c6b5-47e3-b4c7-c1aa0a6f22da"
        },
        "item": {
          "id": "43aedb04-10fa-4656-a565-b88b76cd2d11",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "7b621d4e-a99d-4265-b55d-37523433848a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8076be0-1481-402a-acba-7d2e8daf82d8",
        "cursor": {
          "ref": "0670eca6-548c-4be4-85d7-beacd3e4a095",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "06f0ff18-f495-49ff-b0f5-f578b3e6b0a1"
        },
        "item": {
          "id": "e8076be0-1481-402a-acba-7d2e8daf82d8",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "26d26a72-43b7-4ea6-a913-4f8ad6aafc51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c165aad-bb46-480d-9af5-a9591e6a97a9",
        "cursor": {
          "ref": "ee9a775d-8f34-4e1c-a092-54b7c9b94e16",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "d2481b7d-ecec-4dc2-acfe-c6ce0e6950fa"
        },
        "item": {
          "id": "6c165aad-bb46-480d-9af5-a9591e6a97a9",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "33bc2df1-75d8-4a35-8c42-225705b46044",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20bf032f-8bce-4f79-945b-a1b0b05ffb90",
        "cursor": {
          "ref": "a1703a2a-2ac5-4ab7-a9de-a09747acd447",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "33a9c62c-abe7-462a-b7fd-acd01f545441"
        },
        "item": {
          "id": "20bf032f-8bce-4f79-945b-a1b0b05ffb90",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "5c27d5b1-1863-42b9-8603-84408bd200dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75f9945e-b700-48e2-ae92-8273c31486a7",
        "cursor": {
          "ref": "c6f255e4-8470-46dd-b518-982d82428f98",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "275b9a0c-d885-4059-acfd-6021b977af88"
        },
        "item": {
          "id": "75f9945e-b700-48e2-ae92-8273c31486a7",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "68a94ff4-384c-4966-aca0-01be3b3dd9a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "060a662b-63d6-45ec-be26-663c6d39961f",
        "cursor": {
          "ref": "b056dd81-a485-4f2d-8250-1793f69d6585",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "9d7b5ec4-a933-4c77-9ff1-67dde5c7c023"
        },
        "item": {
          "id": "060a662b-63d6-45ec-be26-663c6d39961f",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "f96bc448-d0d9-4fab-a4cf-3f00ce18b868",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "425c468f-cac7-4e9b-a747-56b10bd9aa66",
        "cursor": {
          "ref": "d84d9867-ab28-4e58-8b30-15e20f73d7b9",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "fbb7a512-2eaf-454b-abbb-a5ff17e6f207"
        },
        "item": {
          "id": "425c468f-cac7-4e9b-a747-56b10bd9aa66",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "e10d5a6b-762d-4e1b-acca-a22eb9573c6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5548b093-b724-4217-95d1-91c4299ef4b1",
        "cursor": {
          "ref": "73f42458-4969-4ae7-8b8b-3b88f99caec7",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "fd2a532f-ede9-49dc-b23c-0f0fd755350f"
        },
        "item": {
          "id": "5548b093-b724-4217-95d1-91c4299ef4b1",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "9381e3ea-16b6-485b-b947-a40f17ffa5e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32ddcc09-1db3-43fb-99e2-d818ee0708c8",
        "cursor": {
          "ref": "646f810a-e7a1-48f3-95fe-de315925ab2b",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "4f1ec812-2bff-45ba-a2df-8dd89c762b6b"
        },
        "item": {
          "id": "32ddcc09-1db3-43fb-99e2-d818ee0708c8",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "322e582c-3537-468a-80e5-a4f1b9a2347e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60258f40-7db1-4462-9db6-853bebf12ab3",
        "cursor": {
          "ref": "b263c895-df02-45d1-837a-72ba8280824c",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "3ac121db-ee45-4405-bd5b-b9efc098d75e"
        },
        "item": {
          "id": "60258f40-7db1-4462-9db6-853bebf12ab3",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "98d9b40e-544b-4519-8866-6061171d9302",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b40f1cb8-9e25-496a-90f5-889de71d1b86",
        "cursor": {
          "ref": "39f3cd14-4959-43d3-a0b2-95615a632aa2",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "1babdd99-c8a3-44c2-a4d5-3d330e32638f"
        },
        "item": {
          "id": "b40f1cb8-9e25-496a-90f5-889de71d1b86",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "7f70e399-58b3-43e5-a396-8234f3e5f596",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65b43dea-18bb-4e08-8839-d89db80c8c85",
        "cursor": {
          "ref": "5950fd8c-0d93-4d70-bd66-44124a903f5e",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "61863092-fd84-4e24-8b90-3c3bcf5bcbba"
        },
        "item": {
          "id": "65b43dea-18bb-4e08-8839-d89db80c8c85",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "e5b7409d-42d7-4667-ad40-ecfce2110082",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0af0b53e-16d6-4fdb-aa98-acc8f50e9727",
        "cursor": {
          "ref": "22b515af-3f0f-46f1-805a-0780c7e0095a",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "23b145a3-9cf5-4a35-9e49-0072d783e38b"
        },
        "item": {
          "id": "0af0b53e-16d6-4fdb-aa98-acc8f50e9727",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "491c9c58-10b0-4c1a-89d7-b3ca8509c38a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3ce698c-c9c8-4570-a664-4352a2faa56c",
        "cursor": {
          "ref": "37bc6bf6-f046-4436-bded-71b26b528a70",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "a5502aba-318f-4265-9e9b-1914703284fe"
        },
        "item": {
          "id": "a3ce698c-c9c8-4570-a664-4352a2faa56c",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "7bc21a50-6a86-42b6-ba06-b96d08bb5b06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a665823f-9c90-4d30-a430-f94f2d5b8bb2",
        "cursor": {
          "ref": "788ab72b-fcb2-4134-8017-540ffd90474d",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "fd6c76ca-9f28-4244-884a-b1df3ff5100f"
        },
        "item": {
          "id": "a665823f-9c90-4d30-a430-f94f2d5b8bb2",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "c6c103e6-554d-4393-ae8c-2104ee60fc95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c8d0764-6fca-4249-bbb0-6c75d2636555",
        "cursor": {
          "ref": "b80ce964-7af9-41ed-b307-274df0e3f46c",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "c033689b-c78b-457f-b2fc-a8338424cb38"
        },
        "item": {
          "id": "5c8d0764-6fca-4249-bbb0-6c75d2636555",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "51b02515-af3b-48f3-bafb-bb6fc5331abd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "141dd016-3ceb-4c61-9e76-5a7fccdabbf5",
        "cursor": {
          "ref": "71f42129-025c-4337-969a-1a16c467420d",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "df51e307-f7c3-4cd1-aadf-fb9c5beaf4d6"
        },
        "item": {
          "id": "141dd016-3ceb-4c61-9e76-5a7fccdabbf5",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "353e7bc6-0c6f-4c29-9b22-8220436a7ebf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8032eb07-5373-4225-9c64-9160ce28bedb",
        "cursor": {
          "ref": "040795d4-73c5-46d0-8834-d474d84aedeb",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "a7156dad-08f3-4b7f-bf06-ef09e9e3af27"
        },
        "item": {
          "id": "8032eb07-5373-4225-9c64-9160ce28bedb",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "6a240df1-a5c6-49a3-b2f3-ee4753f5189c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "800fd54b-5fa1-4997-8c07-ecbb0874f5c6",
        "cursor": {
          "ref": "84e6c9d5-d19e-4df9-8232-818474a52c75",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "b39a264b-8f80-44c5-bbb7-3402edea4c55"
        },
        "item": {
          "id": "800fd54b-5fa1-4997-8c07-ecbb0874f5c6",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "e01b13d8-5783-4362-acbe-8aef17701839",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0212eb5-b111-4673-abf5-dc10cca7aeb3",
        "cursor": {
          "ref": "49dd660d-6abc-4a8b-9d40-5c6fe170244e",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "a1c02b53-e082-4cdd-801a-fad204219b0b"
        },
        "item": {
          "id": "c0212eb5-b111-4673-abf5-dc10cca7aeb3",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "6f3c91fb-8102-47b8-8ddd-cf1e6eb77343",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "236366e4-bdeb-4e43-a99c-3f07b7becb6f",
        "cursor": {
          "ref": "486b8e00-39ee-4c66-9021-5ce7abac7122",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "6626f960-71f8-4696-be61-c95bfc9b589f"
        },
        "item": {
          "id": "236366e4-bdeb-4e43-a99c-3f07b7becb6f",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "3db20f7b-779a-4b5a-8870-5a80d3693057",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1aa8926-b404-4505-913b-25c1798fb34d",
        "cursor": {
          "ref": "4ba0f5e8-a822-424e-ab50-6a2c8c53e820",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "d34d5759-3091-41df-a784-fe9d3bf782bd"
        },
        "item": {
          "id": "d1aa8926-b404-4505-913b-25c1798fb34d",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "967b6bf6-5a1d-4f4f-8557-95e5db83d03b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d73af1d7-959f-4c42-a9e8-8e59d9c3e7a5",
        "cursor": {
          "ref": "c3388158-302c-4631-8ac8-2249e04e380d",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "c6f0937d-38bb-4343-9521-005fbd804277"
        },
        "item": {
          "id": "d73af1d7-959f-4c42-a9e8-8e59d9c3e7a5",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "6f9c51ba-62dc-4038-b7fd-25cd41fa3cc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3cd3b6d-eeb6-420b-bac1-dfda112e7f3b",
        "cursor": {
          "ref": "7424bbbf-12bb-429c-a138-627690c3e8bf",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "5df0454e-b41f-4ca9-a95d-61e1fd3fd2a0"
        },
        "item": {
          "id": "e3cd3b6d-eeb6-420b-bac1-dfda112e7f3b",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "38f162c6-0c28-4938-aafe-2059fffa8582",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dafc006-1424-4c48-ad12-f50f24f8863a",
        "cursor": {
          "ref": "0115cbe9-0908-492c-b943-2a7da7e9dcfb",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "795df5f5-ec9f-4e70-8544-fd7055240643"
        },
        "item": {
          "id": "9dafc006-1424-4c48-ad12-f50f24f8863a",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "9c066491-6d5f-442f-8a46-1641bf329a30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e80c186-ca22-40b1-b82b-8c945acca50a",
        "cursor": {
          "ref": "a9f094f4-4247-4ba5-ba4e-56cf307689d9",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "c253dd00-1db4-4cf9-ae90-64a12d61985b"
        },
        "item": {
          "id": "9e80c186-ca22-40b1-b82b-8c945acca50a",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "e4ed4955-523d-42d7-9bbf-34092065f00e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75a12297-1bc2-4dca-94a4-0e82eca1fbdf",
        "cursor": {
          "ref": "c980e08a-d969-41bd-83a6-a294a50de775",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "9fcfc593-59f8-457e-965f-ce68c2ba80ef"
        },
        "item": {
          "id": "75a12297-1bc2-4dca-94a4-0e82eca1fbdf",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "8f6f39ed-5b2e-443c-a90f-9e9d21a1f36e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41f735af-f2b5-4d9a-bb8d-bd5482f8c54d",
        "cursor": {
          "ref": "2864d65a-1852-4a50-b359-1793327c5a32",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "e163ffcf-d308-46cd-96e1-6b6dda80d390"
        },
        "item": {
          "id": "41f735af-f2b5-4d9a-bb8d-bd5482f8c54d",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "5a6b4657-a5fa-4415-84f4-d4ea3e135dac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d257b57-820f-452e-9da5-f6c9071bd611",
        "cursor": {
          "ref": "a0195900-8b49-442d-9788-be86bd0eaa3a",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "b3e4b817-bbef-4a83-8545-0ab1851cd0d5"
        },
        "item": {
          "id": "5d257b57-820f-452e-9da5-f6c9071bd611",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "becc3819-da52-4dd7-90e8-c1b42cdeaf81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3345e8a-ee46-48dd-825f-2f62bf6ea2f7",
        "cursor": {
          "ref": "e28e5db3-2c40-4c46-ae44-a72e57fa808f",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "95ddcb82-d54b-49ea-b9a2-288b84b10adf"
        },
        "item": {
          "id": "a3345e8a-ee46-48dd-825f-2f62bf6ea2f7",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "3bbd20ca-9e81-47fa-9434-ebf9145c87f8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 69,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59b330b4-c051-445c-95b3-60e40cafa5b9",
        "cursor": {
          "ref": "d8cb754c-47ca-49df-a520-9c32b514f730",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "2e2fef78-2d8f-4cbb-8d79-385e5dfefeb4"
        },
        "item": {
          "id": "59b330b4-c051-445c-95b3-60e40cafa5b9",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "2ad671d7-de25-43d3-b2d2-56ba4001e79e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "e126e889-cd78-4b19-8133-2b0d7ca82935",
        "cursor": {
          "ref": "65c5ca44-7bcc-479e-b78e-5a429d2abee1",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "aba66c01-15f3-4987-ba11-afa068d4ac94"
        },
        "item": {
          "id": "e126e889-cd78-4b19-8133-2b0d7ca82935",
          "name": "credentials_issue"
        },
        "response": {
          "id": "2c080e93-5adb-4714-81c3-b175024c45ae",
          "status": "Created",
          "code": 201,
          "responseTime": 11062,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "f33ec7c4-c534-40ed-8d98-111965eda16b",
        "cursor": {
          "ref": "a70222f4-4ec3-4883-b273-fc2167e17acb",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "f24207a7-135b-4714-bfee-21de52ab8a03"
        },
        "item": {
          "id": "f33ec7c4-c534-40ed-8d98-111965eda16b",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "2c12e6d3-27e0-4018-8e97-8c7eb6c325ad",
          "status": "Created",
          "code": 201,
          "responseTime": 10490,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f17ca4a-d43b-41df-814e-bf39508068c9",
        "cursor": {
          "ref": "f60a2d61-1b77-4975-ad4b-db6fd163ad14",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "1c5dda52-20df-4c33-8f58-192356a96e19"
        },
        "item": {
          "id": "7f17ca4a-d43b-41df-814e-bf39508068c9",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "c4a495ee-ad6e-4760-a839-1bfb666291c5",
          "status": "Created",
          "code": 201,
          "responseTime": 10619,
          "responseSize": 1229
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "d15bf7cb-8a3a-4c4a-8c87-1b768003b740",
        "cursor": {
          "ref": "9fb16ae1-a7ee-4c4b-ba99-d464b4540407",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "66c4e5f4-93db-4b9f-801a-ab4ec1146e0f"
        },
        "item": {
          "id": "d15bf7cb-8a3a-4c4a-8c87-1b768003b740",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "afefbbc8-abf2-4d0e-ba50-952bd6d49087",
          "status": "Created",
          "code": 201,
          "responseTime": 11153,
          "responseSize": 1235
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "6395a80d-b72a-4731-b4a4-6c4acccf12e9",
        "cursor": {
          "ref": "cf5ad370-ecd7-472a-84ee-f0aca7799a5c",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "29ae640e-b0ff-436e-b7a1-17427c18f4ca"
        },
        "item": {
          "id": "6395a80d-b72a-4731-b4a4-6c4acccf12e9",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "1bab89ce-7a93-4fca-acc2-935cd12ca85d",
          "status": "Created",
          "code": 201,
          "responseTime": 10503,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "expected '2024-08-18T00:44:53Z' to equal '2006-01-02T15:04:05Z'",
              "stack": "AssertionError: expected '2024-08-18T00:44:53Z' to equal '2006-01-02T15:04:05Z'\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "ca2042c3-baf1-406b-8a49-2b97796ce598",
        "cursor": {
          "ref": "6d6ae146-e6d2-461d-8bb8-5be4e984ef47",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "771e77ec-3ac6-4dee-9bd0-165fcc566282"
        },
        "item": {
          "id": "ca2042c3-baf1-406b-8a49-2b97796ce598",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "bf8208a1-0314-4752-9b2e-dda8a4bd72c5",
          "status": "Created",
          "code": 201,
          "responseTime": 10674,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2c5eb33-9388-4cfa-a925-df277d396ed8",
        "cursor": {
          "ref": "0e926f4e-7f99-485c-9d68-8b6c0657d213",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "9113ffb3-fd84-4d89-8e81-2af5e6980aee"
        },
        "item": {
          "id": "c2c5eb33-9388-4cfa-a925-df277d396ed8",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "096c7976-ad59-4963-bfe2-5f5da3e28b67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0d82a78-3fd5-48a9-ac8c-69e416f1056c",
        "cursor": {
          "ref": "57fb96da-3457-4c31-adb4-8cfe1047e6da",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "a3181727-5221-42a7-afd4-49dbd591b125"
        },
        "item": {
          "id": "f0d82a78-3fd5-48a9-ac8c-69e416f1056c",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "376abb21-b3b2-4cc0-b98a-a9f6f4b73cc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a51035f1-f719-43dc-9757-bc3745b84c5a",
        "cursor": {
          "ref": "7899e19e-de9b-4b80-aa9b-13579689480b",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "0b015a24-341b-4d50-89a9-9052eb6a7911"
        },
        "item": {
          "id": "a51035f1-f719-43dc-9757-bc3745b84c5a",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "21df43f0-c7a2-4feb-a2dd-8738b48c709e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b39728a-a319-4ee7-88af-18ba1f3e3184",
        "cursor": {
          "ref": "44bea73a-1ed8-4fe9-9343-2b99684e27fb",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "87df3240-9706-448d-a49f-e623ef4c017b"
        },
        "item": {
          "id": "2b39728a-a319-4ee7-88af-18ba1f3e3184",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "47e738e5-32a5-4caa-9dab-eb176bc1ad06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "436af9c1-3e03-46dc-8fa9-4a26a6f42a2f",
        "cursor": {
          "ref": "98ff4f75-c397-4992-91fc-414c47bce292",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "6fd721c6-16e3-4ce0-823a-75fb25d14c12"
        },
        "item": {
          "id": "436af9c1-3e03-46dc-8fa9-4a26a6f42a2f",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "dff4e9fb-dc83-4e53-b511-72542dc11b16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ec91c7a-958b-4f82-9241-f4e15ab5ef35",
        "cursor": {
          "ref": "96bd8bfd-c0f6-4636-b4d5-3f56b99708ba",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "23fe6ada-1ad8-4827-9720-5448e3c255ce"
        },
        "item": {
          "id": "2ec91c7a-958b-4f82-9241-f4e15ab5ef35",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "41d60b80-08e2-4f39-8bfd-81bfd664035d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1965cb9d-e04b-42fc-88c7-60d5e796cb9f",
        "cursor": {
          "ref": "f4a23769-cf14-4fb0-9412-b584e47c2a0b",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "ac583b86-8e88-4817-af8f-28bc9227d536"
        },
        "item": {
          "id": "1965cb9d-e04b-42fc-88c7-60d5e796cb9f",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "08d51599-7709-4b40-9459-aa76cfb85edd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53598590-1fac-4e37-a666-93d827983659",
        "cursor": {
          "ref": "4af46248-9433-4d5a-8eb1-a33d9681917c",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "1c4c999f-0fab-4f32-a6cd-758217ac725c"
        },
        "item": {
          "id": "53598590-1fac-4e37-a666-93d827983659",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "c93980f1-9315-4975-88ee-8894c92018bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64d158c2-77da-437c-8c07-bcc368d27bbe",
        "cursor": {
          "ref": "1520279d-6717-4ef9-9618-23a085aa0424",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "18924dfa-ec21-49a7-a6bd-5229acc70c53"
        },
        "item": {
          "id": "64d158c2-77da-437c-8c07-bcc368d27bbe",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "f647c4a2-0fc2-482b-8d44-4d20ebf9ae6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c4d0cbb-6477-401e-9a39-87a3a1905036",
        "cursor": {
          "ref": "c9c385c8-7963-422c-8a6e-729aaa0363a4",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "d08239b3-87f2-41bc-8168-23232fd57969"
        },
        "item": {
          "id": "4c4d0cbb-6477-401e-9a39-87a3a1905036",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "7e5d6717-f587-414e-ba4d-993f280447cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51ef721f-c516-405f-b617-06deb0679be5",
        "cursor": {
          "ref": "43512431-366f-48c6-9770-2ebe75eb349b",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "1a97f9f6-fa68-4e5e-947f-2ffbce3e41ed"
        },
        "item": {
          "id": "51ef721f-c516-405f-b617-06deb0679be5",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "2132e901-c8f0-42d4-9983-ef1ab0ea3890",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a261c49a-ca63-4118-b36f-13862eea8e98",
        "cursor": {
          "ref": "0035c697-bfd9-4255-ad06-02d69fe6f97f",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "02bb27d5-63d6-4e60-a5e2-ac1531da9751"
        },
        "item": {
          "id": "a261c49a-ca63-4118-b36f-13862eea8e98",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "6d33a820-1165-4f50-82db-7319ae70d555",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70d0f9b9-e7a1-4e61-a34c-f94cd51e4d0f",
        "cursor": {
          "ref": "519dcc3e-ec40-4893-9060-fb2ee66ec7cd",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "ba10587e-0314-4759-849b-1cde346ff9c3"
        },
        "item": {
          "id": "70d0f9b9-e7a1-4e61-a34c-f94cd51e4d0f",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "e6c1af9e-a377-4892-b274-9737233177f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2bdcdce-173d-4793-8c75-fa703b5cbac1",
        "cursor": {
          "ref": "c566c155-c1a6-4b75-b728-ad62e38db6f0",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "8fe1a78f-15dc-41db-a93a-680f0c365216"
        },
        "item": {
          "id": "b2bdcdce-173d-4793-8c75-fa703b5cbac1",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "60800b6c-ba8e-48a5-8b2e-5b882c5e00d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31f93505-d927-4b5c-9daf-db8ba48b68ca",
        "cursor": {
          "ref": "9b7e98e7-e162-41bd-b7ff-fa7e624c5bc8",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "283d0d92-96b6-41c0-9d3b-059be5a6c6f2"
        },
        "item": {
          "id": "31f93505-d927-4b5c-9daf-db8ba48b68ca",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "b7f59770-b2b2-42c1-94d7-8d450aa01876",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3458bde8-474a-4b96-8f79-20de83d0000c",
        "cursor": {
          "ref": "8993361c-c1ea-4c2e-8424-6a35de3c5111",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "b7b17972-c658-4de5-805b-bf737ee2ba13"
        },
        "item": {
          "id": "3458bde8-474a-4b96-8f79-20de83d0000c",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "b5698095-9f44-49b9-a2e5-e5f0c76aae89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed578e02-89bf-4475-a580-4e06d48ca329",
        "cursor": {
          "ref": "6a95984f-613c-47aa-9edb-fb32a211b034",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "b2f6cd05-2036-4aae-b262-5d4beb00be97"
        },
        "item": {
          "id": "ed578e02-89bf-4475-a580-4e06d48ca329",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "8424cee6-1cc7-48bc-aa3e-d8a3ee52e107",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2d268d2-42f8-4527-82a9-295cdcedadeb",
        "cursor": {
          "ref": "efc84849-10e2-47b4-ac76-62e77896b444",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "9262f8f6-3eae-4e61-b3c2-8278d36f7f17"
        },
        "item": {
          "id": "e2d268d2-42f8-4527-82a9-295cdcedadeb",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "4aa1f7b3-bd53-487d-8115-1668b3f50c2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2df9ed50-170e-4f48-9d95-9dbb59332e9f",
        "cursor": {
          "ref": "b2a65c06-fd23-49cf-bf01-502909dafed6",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "766517dc-7c8a-4aaf-bca2-aad46564866c"
        },
        "item": {
          "id": "2df9ed50-170e-4f48-9d95-9dbb59332e9f",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "02f909c4-4ea0-451a-a6c5-9dfc89ea2cb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2e81522-9a0b-4cfa-89aa-5d8af445822d",
        "cursor": {
          "ref": "e397b704-27c7-418d-99c4-6c54c7a91195",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "34cc706d-bcf8-447a-9600-f80fe5b9ddc8"
        },
        "item": {
          "id": "a2e81522-9a0b-4cfa-89aa-5d8af445822d",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "99c8e574-e6ef-4194-8c05-5a8c989e58cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77dc4331-1e73-43fe-be6f-1ae10f95033b",
        "cursor": {
          "ref": "a66a2dec-3924-49c3-bedb-7aefd0a4ae55",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "44d38ce8-d9bc-4d89-b2d2-7a670451a6a6"
        },
        "item": {
          "id": "77dc4331-1e73-43fe-be6f-1ae10f95033b",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "c0d24ea3-de11-4860-b4b8-575bcc1ae347",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a070784b-bd02-49a2-aec3-b21a0199078d",
        "cursor": {
          "ref": "423814a1-7cc5-4c65-a314-2a6cef6bd132",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "a3c34025-6aa8-49f3-a4da-fc9a3bee81a5"
        },
        "item": {
          "id": "a070784b-bd02-49a2-aec3-b21a0199078d",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "dc4d1e9a-2bb9-42e9-8040-113f49c90cc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28f46fe3-b9ad-4730-917d-c2c96f6e4d2c",
        "cursor": {
          "ref": "9345811f-1d32-46f2-bd27-5285befbd920",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "b9cf8fc9-d513-49a5-a346-36ffcdff15ef"
        },
        "item": {
          "id": "28f46fe3-b9ad-4730-917d-c2c96f6e4d2c",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "a0830580-6586-43f4-a60c-df858a87b423",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "141af892-f535-4c35-90f6-c3e61efef97f",
        "cursor": {
          "ref": "493a3011-bca4-4c7e-869b-758b9d4e9a33",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "0365bb25-c041-44ce-8825-d8b720043c3a"
        },
        "item": {
          "id": "141af892-f535-4c35-90f6-c3e61efef97f",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "91b73b2d-14d2-47e0-aa6c-11631883822d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11cec187-a2dd-4861-bb80-978d3d764846",
        "cursor": {
          "ref": "50f45702-9a7e-4f44-8c9e-c84bb69a9891",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "40e61d1a-7bef-4b99-ac27-e035e6b1726c"
        },
        "item": {
          "id": "11cec187-a2dd-4861-bb80-978d3d764846",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "e59d55b0-86f4-4765-95bf-22e3423837b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6989c4fe-b990-49a9-93ea-b058ec84d008",
        "cursor": {
          "ref": "12f8a2a7-cb19-43a3-be50-9c1de61bf41d",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "eaa972df-de3a-4f97-ab41-926eb217c522"
        },
        "item": {
          "id": "6989c4fe-b990-49a9-93ea-b058ec84d008",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "0fb75bb2-4446-45a6-a8a8-f7c25db67441",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d599537-3f72-4bc8-8dcb-022c6178a4fb",
        "cursor": {
          "ref": "bd79001b-17bd-4041-ad52-b6cd54dc9f05",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "f92301f0-3adb-4bec-b990-151035a38c14"
        },
        "item": {
          "id": "3d599537-3f72-4bc8-8dcb-022c6178a4fb",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "6cbe50fe-5351-4214-9b72-12739fe1970e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e2ef428-bf7c-4728-86ab-33b87c93f071",
        "cursor": {
          "ref": "107e27d4-feea-483f-884a-e5747134cedb",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "4790ab67-1c3e-47ab-90b5-4a78bbee2897"
        },
        "item": {
          "id": "1e2ef428-bf7c-4728-86ab-33b87c93f071",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "10a9ae53-6d0f-472d-9820-4e973e5048ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cfb9ee0-e305-485e-99d6-c823edf3342d",
        "cursor": {
          "ref": "35aa347b-dcfc-405d-b8d7-727f24e4fcd6",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "bb108cec-c926-478b-99ee-98fc444d60b5"
        },
        "item": {
          "id": "1cfb9ee0-e305-485e-99d6-c823edf3342d",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "f98e104c-d7ed-4ae1-af64-fe3c3826fac7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28239405-303e-4a5f-84c0-8283fdd3e46c",
        "cursor": {
          "ref": "3763ac67-19c3-4f39-9de6-cfe39d8b6487",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "39e89415-5c36-4a86-819b-eb95249ebbcd"
        },
        "item": {
          "id": "28239405-303e-4a5f-84c0-8283fdd3e46c",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "9d76ca0a-1583-4539-9e2e-032f271ce045",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a2a726a-14ea-4433-a18a-3f444440aa22",
        "cursor": {
          "ref": "b7636039-18fe-400c-a5a3-274096052485",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "f5af9fd3-0218-4bc1-b3bf-0bac4ee408ac"
        },
        "item": {
          "id": "3a2a726a-14ea-4433-a18a-3f444440aa22",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "95ed3415-a5b4-44ce-8b12-1a79100c0ac2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de011346-552c-4f74-b760-061772848d0e",
        "cursor": {
          "ref": "f9f1e840-3dc4-4b9b-b335-58d8c4242337",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "71e69955-1e96-48ac-98d4-9840a77c3510"
        },
        "item": {
          "id": "de011346-552c-4f74-b760-061772848d0e",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "f0de63d8-f972-4735-a742-116c54552a9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ce500ec-a898-4aac-bdd4-a305a4880dfb",
        "cursor": {
          "ref": "bdbbd06e-243e-4f6a-89c4-dd1ea714066d",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "a6ed7a8b-7055-4af9-873f-4cbee827e37a"
        },
        "item": {
          "id": "2ce500ec-a898-4aac-bdd4-a305a4880dfb",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "ac1c6fed-3eee-401c-8bb9-1982035b74a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f176e18b-1fbe-4c7b-8be4-31fdcc92c853",
        "cursor": {
          "ref": "16522609-ce70-4ab7-bba3-9baf6bbd3820",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "492624fe-986f-45ae-a64c-b19dea82f6ce"
        },
        "item": {
          "id": "f176e18b-1fbe-4c7b-8be4-31fdcc92c853",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "f8924a22-880a-4516-b2ed-ee05b0ea6cea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56d77b45-0214-4374-baab-9cc8a82e57cc",
        "cursor": {
          "ref": "941858ea-d67d-426c-a0d0-2f9f8e9bbcb7",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "85cdcf33-4729-4217-ba55-da41320be032"
        },
        "item": {
          "id": "56d77b45-0214-4374-baab-9cc8a82e57cc",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "809af7e1-85f4-4047-bc18-765b79a1b06a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "016ad949-b3af-46a4-96db-5fbe09678dea",
        "cursor": {
          "ref": "55521ee1-53df-4872-a41d-08bab276cb54",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "47d8263a-9dff-40c3-9489-2c6442239a52"
        },
        "item": {
          "id": "016ad949-b3af-46a4-96db-5fbe09678dea",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "1e862cdc-07cb-434c-a232-4043748077f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59593fec-07d0-4bd8-a4f0-12a87a5bb318",
        "cursor": {
          "ref": "c9e03ed7-8cfd-493e-a7aa-f357a7902586",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "d579f24b-5228-4558-ad64-e5f069c028e3"
        },
        "item": {
          "id": "59593fec-07d0-4bd8-a4f0-12a87a5bb318",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "7173409f-a153-4676-abf6-e8effc22a118",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6479c609-9e1c-4ba0-bf35-7bb7c67507b9",
        "cursor": {
          "ref": "493753ed-79d6-44ea-b25a-747ccd2506b7",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "61d79dbf-c85d-4f68-b2af-5ce81d40d124"
        },
        "item": {
          "id": "6479c609-9e1c-4ba0-bf35-7bb7c67507b9",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "61fb5667-947c-4f49-b273-35be3f2d0d8c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 71,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16661fd9-50c9-4917-8b45-e59a11a68652",
        "cursor": {
          "ref": "536911ec-b4d1-4fef-aa5a-424d4f8bc84a",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "e55d050b-57ad-4bfb-9652-2c8d9cc80aca"
        },
        "item": {
          "id": "16661fd9-50c9-4917-8b45-e59a11a68652",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "ac18b631-2d87-4af9-aa33-b0ea9b8f496b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 88
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb98aaab-1196-4308-967d-31fd82d276d8",
        "cursor": {
          "ref": "83d4ed67-e8fb-4f63-b617-9a734323236d",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "f3cce32e-0217-4dc2-bc30-41ebc467afc6"
        },
        "item": {
          "id": "fb98aaab-1196-4308-967d-31fd82d276d8",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "f8b53f58-cdcf-405f-a9da-97c88c4fad41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8888d668-6aa4-4314-96ca-b77efb7ddfc1",
        "cursor": {
          "ref": "8205a1d1-43ee-401a-a259-43a217f73b2f",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "8429f784-84b3-4578-acdb-5ad78641479c"
        },
        "item": {
          "id": "8888d668-6aa4-4314-96ca-b77efb7ddfc1",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "c542ba91-c33e-48ac-a992-c7a7c99724c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ab0e681-b922-4e74-8187-8628e2179cc5",
        "cursor": {
          "ref": "b29ee8e1-3fed-4d89-b2c4-ba6cf434d7af",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "c4c230e1-507e-4308-9596-13ea5e743a46"
        },
        "item": {
          "id": "7ab0e681-b922-4e74-8187-8628e2179cc5",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "ba98ac74-37a2-4475-95a6-1a7e909d3243",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59614fa7-f597-4a8b-b177-d958e1c862c8",
        "cursor": {
          "ref": "0ece12e9-1f14-4759-910e-a737961530b1",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "b8217367-518b-4628-96de-2e2437dd04d4"
        },
        "item": {
          "id": "59614fa7-f597-4a8b-b177-d958e1c862c8",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "3f28df71-c435-4d5c-ba9a-a62a6219a6f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ca895a6-7298-4f3e-ad33-5c56c9b122ed",
        "cursor": {
          "ref": "2241bdb1-aeae-4fc8-9354-51c0cf76ba38",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "1862f1d1-1b4a-46f7-8cee-d2c3c01cd737"
        },
        "item": {
          "id": "4ca895a6-7298-4f3e-ad33-5c56c9b122ed",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "e842c3a8-c1d4-479c-a27c-a1b67eb18eb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1c151d0-c6ee-46be-9611-b96b730f979b",
        "cursor": {
          "ref": "e1342ccf-52d6-46f2-8110-677e47894f39",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "76d4c015-488f-4241-8245-9c4e3528a4b5"
        },
        "item": {
          "id": "e1c151d0-c6ee-46be-9611-b96b730f979b",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "3f3bf406-aa3a-4566-a3db-fda23c2564dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 99
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8eb20d3-2143-4e2b-a81f-72e98a570070",
        "cursor": {
          "ref": "ebfbc953-248f-478e-9b1e-0385a6be372c",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "b7614e3e-f6e0-48d3-8b18-d3a61f0646dc"
        },
        "item": {
          "id": "b8eb20d3-2143-4e2b-a81f-72e98a570070",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "170dadff-9796-43df-a48e-c6d1bb07f6f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75745017-cc73-41bb-9277-6e98a1825f77",
        "cursor": {
          "ref": "78bec405-cfaa-42ff-ad90-70f8ead45fc4",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "f0b0f139-16d5-4533-8edd-ddc0cb8389c3"
        },
        "item": {
          "id": "75745017-cc73-41bb-9277-6e98a1825f77",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "8404f34a-6a91-4482-ad83-b4f8a3a264b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51b010a6-94f6-4f71-ac70-98a354abe948",
        "cursor": {
          "ref": "66e5e45f-a9c1-471c-b752-f770ffb69102",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "0139d970-df40-4ed3-ae3d-3755988bd463"
        },
        "item": {
          "id": "51b010a6-94f6-4f71-ac70-98a354abe948",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "d639ed86-38b5-4a91-9656-d0259e9d3246",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1866969f-62df-4a98-a97c-19e0385f84f2",
        "cursor": {
          "ref": "982baa59-ba94-4d97-86c7-e5b9bf92379c",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "b8fee9a1-50cf-444f-99ba-84691fb6cc9b"
        },
        "item": {
          "id": "1866969f-62df-4a98-a97c-19e0385f84f2",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "84685e2e-d15d-47d1-a312-afba81f7350c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e669154-016d-4fa2-8007-89bc0e317817",
        "cursor": {
          "ref": "9c011edd-226b-44a8-bbbe-5723967de27c",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "e55257fe-457a-4928-a624-efd9f9cae52d"
        },
        "item": {
          "id": "7e669154-016d-4fa2-8007-89bc0e317817",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "349d23e5-8fb1-40a7-9043-6af68fe700be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea66b1c7-58b0-42c8-a2c4-4bced4971781",
        "cursor": {
          "ref": "5aea4958-8965-4c45-8b9c-bdaa106d4a06",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "cd3ba53f-9dcf-4969-8965-f31bf893962f"
        },
        "item": {
          "id": "ea66b1c7-58b0-42c8-a2c4-4bced4971781",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "a7ccbd73-d93d-43be-b67f-44bbb6b6dde8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6931fb24-a5e7-409b-867d-9be757b31adb",
        "cursor": {
          "ref": "c4e6436e-7a34-4c41-a2c2-b655ebab171f",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "b032440c-0698-454a-b9ab-ca09351988e5"
        },
        "item": {
          "id": "6931fb24-a5e7-409b-867d-9be757b31adb",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "30cb4239-c980-4955-acb9-4f2b41c4dc14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83656463-d143-4e00-87aa-119d3ed5637d",
        "cursor": {
          "ref": "a492a48b-e404-42e3-a783-2a8c2f29b836",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "ec006a28-2efd-47c3-aef0-d487171e29de"
        },
        "item": {
          "id": "83656463-d143-4e00-87aa-119d3ed5637d",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "61125ddf-49dd-446e-b51b-c922aee1bd37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3430c3ac-250d-4b23-be8d-bd1599204e76",
        "cursor": {
          "ref": "da85975e-81b6-470f-b41b-ef802dc6bb86",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "ba098365-6e77-468e-bf26-e307d22f936e"
        },
        "item": {
          "id": "3430c3ac-250d-4b23-be8d-bd1599204e76",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "6efa1a16-d9a1-4522-ae2d-4a381a3fd783",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24e85589-1819-43ba-959c-5140ed7cc0fd",
        "cursor": {
          "ref": "513d04ea-000b-4823-8a96-33da203e1660",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "d125134a-8ee2-4fa3-b434-cd3eec13b41d"
        },
        "item": {
          "id": "24e85589-1819-43ba-959c-5140ed7cc0fd",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "95fa304d-b77d-4012-9cfa-3e1e8d53230f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e584c7ca-f66c-43a9-b9ce-93a89d72a8d0",
        "cursor": {
          "ref": "66537651-e1a4-4b8b-ba3a-a9ed66b6e9d6",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "b4ecf8ce-7fac-40ab-87b0-3006cfc1d409"
        },
        "item": {
          "id": "e584c7ca-f66c-43a9-b9ce-93a89d72a8d0",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "44d0cfc3-7f45-4b18-b29f-dea6e894558d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02073c07-76d2-4926-8fe8-712571329b0c",
        "cursor": {
          "ref": "baf89998-11f9-4a08-9200-d78fc957947a",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "0f75ef73-ddea-47b0-973f-ee1772d0a2ab"
        },
        "item": {
          "id": "02073c07-76d2-4926-8fe8-712571329b0c",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "602badb9-3c1d-4730-944e-5e33a3203145",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ac7eb71-be7f-47e7-8a63-fbde2ecc59ff",
        "cursor": {
          "ref": "2c456219-62d7-4855-b9e7-b7419783afbb",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "8ed04ca0-53e2-4eb5-ba1f-adb52027c2d1"
        },
        "item": {
          "id": "6ac7eb71-be7f-47e7-8a63-fbde2ecc59ff",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "08e9961d-175a-4cfa-93de-6dbf49c678df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfa25c3f-b3e2-4eac-bd42-c34d7a00d1ab",
        "cursor": {
          "ref": "b46c1a34-c73d-419e-814e-221bfaede539",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "c9ab287f-1e2c-4dcd-aedb-d93a2faab5a1"
        },
        "item": {
          "id": "cfa25c3f-b3e2-4eac-bd42-c34d7a00d1ab",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "1026fa8d-ee36-439c-a046-ec79b45d6122",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5741e3b0-f9a4-40ce-9907-277e0e72d929",
        "cursor": {
          "ref": "446bad33-30f3-4909-adac-e74714461a3e",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "cc1f495b-364e-48a4-802a-d762c546de04"
        },
        "item": {
          "id": "5741e3b0-f9a4-40ce-9907-277e0e72d929",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "e0803c72-c07c-45a3-9721-9fdc8e75e48f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f39a3576-5d3c-42de-9a65-54292b1c8a9f",
        "cursor": {
          "ref": "07c6c758-34a4-4b72-a8d2-21eaa6ff4361",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "6c0478f0-2ca8-4b6a-bdad-f494edd19bf9"
        },
        "item": {
          "id": "f39a3576-5d3c-42de-9a65-54292b1c8a9f",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "455e837a-b6e4-4111-9e71-92f5ab4677b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e14f2137-1755-400e-9595-32b89f9ca423",
        "cursor": {
          "ref": "cee90f95-10e7-4d5f-a761-3908a8dc7cbe",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "31bcf33c-ae17-4c46-91b7-316d00f9eaa3"
        },
        "item": {
          "id": "e14f2137-1755-400e-9595-32b89f9ca423",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "4c70bdde-6754-4377-8ff6-1267ecc9d488",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0c5d69a-4a06-47c9-8bee-9b0dab64655e",
        "cursor": {
          "ref": "1040b1eb-3fab-41e1-8429-6e2627fc766e",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "ab401129-905a-4f47-8062-50575e8b96bf"
        },
        "item": {
          "id": "c0c5d69a-4a06-47c9-8bee-9b0dab64655e",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "20268a28-6c63-42ba-bff1-eff791599283",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df569d5e-066f-4b46-870b-6a9bfdb60342",
        "cursor": {
          "ref": "5dc1e8e2-7ba7-4b1f-a992-060a8af659b6",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "3d145891-e8b0-4224-8008-1cc10bcd464b"
        },
        "item": {
          "id": "df569d5e-066f-4b46-870b-6a9bfdb60342",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "1f2c4611-576e-445d-926c-1f5450862a25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6434ae7e-ee3e-4481-8965-44adce8733cb",
        "cursor": {
          "ref": "db04998a-f776-4554-9e2a-1cc8c1d41e25",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "183d2fc1-cf03-4419-938e-4bd2b6f44c6e"
        },
        "item": {
          "id": "6434ae7e-ee3e-4481-8965-44adce8733cb",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "e70f9868-14af-470e-81fa-2b51c52e78dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "545d0cf0-b1bf-42a4-9381-c350ed397788",
        "cursor": {
          "ref": "f615ff9b-42f1-4680-84b7-a9fffb1c5da4",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "81902050-f11e-4299-851f-8b3232f50620"
        },
        "item": {
          "id": "545d0cf0-b1bf-42a4-9381-c350ed397788",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "c4c7b4fe-e0a0-41d2-b07e-a765ab917fe2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cd17145-565e-459c-b9b3-73219bda7bc7",
        "cursor": {
          "ref": "639530ed-997c-4879-9377-e007903725ca",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "6a99388d-e615-4256-9f52-520943766359"
        },
        "item": {
          "id": "5cd17145-565e-459c-b9b3-73219bda7bc7",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "d1476e6b-6b51-4827-804e-e9fe3491174a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa40b9b9-2c52-4f64-8404-38ff789de290",
        "cursor": {
          "ref": "c962dd34-d792-404c-af4f-aaafb0a07777",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "589445cb-3d5d-4f4e-8d3f-465b9dff0aaa"
        },
        "item": {
          "id": "fa40b9b9-2c52-4f64-8404-38ff789de290",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "3388a4e4-512e-438b-8052-5a104d1959ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a839e914-dbc0-4007-8096-f349e52fadb4",
        "cursor": {
          "ref": "0891a353-e8f2-4c64-a2df-f2cd2fc5eae7",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "1f7c42de-cc21-4d3b-8bb5-b7c6ebcf035a"
        },
        "item": {
          "id": "a839e914-dbc0-4007-8096-f349e52fadb4",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "aab6c295-e468-4423-9360-b37ad9029157",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7a74786-39fc-4c17-afd9-610b8830e5db",
        "cursor": {
          "ref": "d9fa1048-cce0-484e-814b-e622b7555143",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "86fd6d5e-9796-4383-900b-ea859577df0a"
        },
        "item": {
          "id": "e7a74786-39fc-4c17-afd9-610b8830e5db",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "6354f6a5-e243-4924-a9a5-3c989107f1a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35e504f7-bdb0-42cd-ad7e-886a91b689c6",
        "cursor": {
          "ref": "fc4883bf-676c-4f36-ac82-0c82d18ab84a",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "2c987065-850b-4649-9bf1-98069ae61733"
        },
        "item": {
          "id": "35e504f7-bdb0-42cd-ad7e-886a91b689c6",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "640120bc-143d-4c29-ac8d-70b6add50eb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1be0500-e4a1-4716-aafc-46b51cc840e0",
        "cursor": {
          "ref": "8a1ae475-d7bc-424a-a7d9-1174b1edf0fb",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "6c429f3f-1769-47e5-9640-647202faee72"
        },
        "item": {
          "id": "b1be0500-e4a1-4716-aafc-46b51cc840e0",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "16e77c2c-7d09-42a2-8a52-58fa469726de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa4975e8-cdea-4d91-9a53-aab6d8bd7041",
        "cursor": {
          "ref": "006237c6-4aa0-40c4-aeb9-c0125d0881ed",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "dcbf8425-37f1-4f11-9c90-c5a0447a98e7"
        },
        "item": {
          "id": "fa4975e8-cdea-4d91-9a53-aab6d8bd7041",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "aec74f9c-b3ce-407b-9a1e-1eadb32b2b99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "382d0170-0eb5-4ab6-b068-cfce2f798d54",
        "cursor": {
          "ref": "9f06070b-6c40-412d-9988-7a89b2f1b85d",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "34423229-ade3-436b-aee4-d2a2bb89fe3a"
        },
        "item": {
          "id": "382d0170-0eb5-4ab6-b068-cfce2f798d54",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "15e13a9c-1c80-44b9-be1e-1f5e0194cc82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a7bfb78-2804-4135-a5e8-f9f1805ee01b",
        "cursor": {
          "ref": "54860cac-c458-4409-8ef5-f6cea25ebf48",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "f4b64d9d-1242-47f7-8f7c-44802a7f0c7b"
        },
        "item": {
          "id": "2a7bfb78-2804-4135-a5e8-f9f1805ee01b",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "9373c10d-2bf4-4261-9377-15f2a2602ea9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b91f8656-0ba2-4655-9d2b-fd0c441432a7",
        "cursor": {
          "ref": "217f5939-01e8-4720-a08f-4156caa2092f",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "b68ed621-7bba-454c-8313-982aa3f91c71"
        },
        "item": {
          "id": "b91f8656-0ba2-4655-9d2b-fd0c441432a7",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "e030ad13-2819-4c69-b24a-26ac7b6e40e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3d51289-45ff-4f8d-98e6-5656ef4edb6d",
        "cursor": {
          "ref": "67cd3368-a95a-4a75-8e0a-158bb56c6e07",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "db70b800-cbbb-4803-a7e4-a6d0cab78b82"
        },
        "item": {
          "id": "b3d51289-45ff-4f8d-98e6-5656ef4edb6d",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "dc240416-f4c5-49a3-90de-0dce1ec608ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81ba31e8-fb25-4d05-a4d4-a610397a3ea8",
        "cursor": {
          "ref": "9a207c48-d0f8-4c10-a3f7-8d2faa3b941f",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "65270179-48e1-4567-b5ef-037003b96afb"
        },
        "item": {
          "id": "81ba31e8-fb25-4d05-a4d4-a610397a3ea8",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "035f6526-c895-476e-8e42-24e7e65c4cd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36214662-77c6-44fe-bd2b-1c9b56db0733",
        "cursor": {
          "ref": "99ce6e3e-4f2b-41da-b86b-23e6f480435b",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "9960f5cb-c913-41ea-9c33-c8401d4b1a84"
        },
        "item": {
          "id": "36214662-77c6-44fe-bd2b-1c9b56db0733",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "65ce74d1-7f74-49d5-bb99-9f584230a4a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27ad545b-3787-4eb8-8d0d-1a5a7311e59e",
        "cursor": {
          "ref": "67516aba-9b5c-48eb-9b71-af765a1a3307",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "d3207f87-69d3-48f0-b2de-13f229acb8d3"
        },
        "item": {
          "id": "27ad545b-3787-4eb8-8d0d-1a5a7311e59e",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "d1a260c7-838b-4276-b59f-3ae76ed15440",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5029d7a5-0a04-4dfd-8b2d-4e2e2680564b",
        "cursor": {
          "ref": "defd215e-97e0-4a9f-a27a-314ad6794f16",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "1db6141d-f0fa-4f7b-bb28-4ffb374547c5"
        },
        "item": {
          "id": "5029d7a5-0a04-4dfd-8b2d-4e2e2680564b",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "dcd0fe45-0a1a-4ceb-a96f-7e2d23f0232c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30736a96-3118-47d2-82b0-03755a2317e5",
        "cursor": {
          "ref": "4b43b62e-698d-4827-a8d7-d332d0079b0c",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "83064c9d-0c3c-4aa7-a02c-e653228c3815"
        },
        "item": {
          "id": "30736a96-3118-47d2-82b0-03755a2317e5",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "73d1aff1-991f-46f8-af77-331510b54d70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "603ff5ff-5886-4911-bccc-4c1fc797237f",
        "cursor": {
          "ref": "f273446f-7731-4201-bcb8-46694fac26c6",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "107a3ebe-142d-4c13-888b-61d72ca31b1d"
        },
        "item": {
          "id": "603ff5ff-5886-4911-bccc-4c1fc797237f",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "ee5d2d86-d884-4bc2-8886-56446be90696",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc82e711-d259-47e1-94ad-eb4355866507",
        "cursor": {
          "ref": "aa4eb81e-4511-4870-b06e-5205b7a2e197",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "ca9524d2-94f0-4957-9f39-491e10b908bf"
        },
        "item": {
          "id": "bc82e711-d259-47e1-94ad-eb4355866507",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "c68a22f5-8bd4-455b-ac20-208094ca792a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92fa96b2-8e1d-4baf-821d-d168d57e9f75",
        "cursor": {
          "ref": "5c011e65-907f-49d0-8d23-dfbc3ecd2fae",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "696d5425-e538-4d69-8ae7-fd865d354f02"
        },
        "item": {
          "id": "92fa96b2-8e1d-4baf-821d-d168d57e9f75",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "ef81208e-2df5-477c-b2ad-284a2ffad1e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79f4f619-0cd3-44c8-9c69-e31e0559da9d",
        "cursor": {
          "ref": "451f4750-ba3b-453e-b622-e7715fad0d7e",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "62c40f07-de81-4acd-a81a-a934da7aa329"
        },
        "item": {
          "id": "79f4f619-0cd3-44c8-9c69-e31e0559da9d",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "b861b3f0-101d-4c9a-9b8a-c38b49fde2a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dad7a77-19b4-4dbb-befd-e8bd1b13f858",
        "cursor": {
          "ref": "56d9b636-07cb-4a1f-bcfd-ad06edc26955",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "940c8115-d520-4492-9af7-de120d7332df"
        },
        "item": {
          "id": "8dad7a77-19b4-4dbb-befd-e8bd1b13f858",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "f3ce2cb4-86c9-4c7d-ae56-f1810185e857",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72fa74d4-2c53-46b1-9dcc-2a833e02e166",
        "cursor": {
          "ref": "6537b57f-dd42-44d7-b461-60ece153dcb1",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "9d94a7f5-40fe-46e5-8916-c9854ccf9708"
        },
        "item": {
          "id": "72fa74d4-2c53-46b1-9dcc-2a833e02e166",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "856ebe79-847a-4187-9052-3da5563bde69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6979c5d4-7c79-459b-a8c8-11e521b6e461",
        "cursor": {
          "ref": "b322d629-ac10-46f5-8990-5713b903c444",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "d21c7855-c7c3-40d9-a7e2-eb839740fc3d"
        },
        "item": {
          "id": "6979c5d4-7c79-459b-a8c8-11e521b6e461",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "45543afd-2481-4715-990c-f57a9aa32feb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72abf748-1dc1-4e2d-bb06-7586dd643ee3",
        "cursor": {
          "ref": "3c934579-e83a-47e5-96cc-aaccc4225e54",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "a9d096cd-93ed-412c-a899-bbf8131eb8c2"
        },
        "item": {
          "id": "72abf748-1dc1-4e2d-bb06-7586dd643ee3",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "140eaa06-c9ae-4b16-8179-4e66c7decbda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 131
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15d628a1-7179-4b97-8245-9b3fcc49096a",
        "cursor": {
          "ref": "9d6a4b27-51b6-4442-85cf-2b4f5aba392e",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "79e00d60-3226-4d68-a4b1-5cf4dbe17816"
        },
        "item": {
          "id": "15d628a1-7179-4b97-8245-9b3fcc49096a",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "dd06a60c-80d1-48e6-b62c-99a532c76cb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e2ad4b3-f5a9-49b6-a7db-23b13975ae46",
        "cursor": {
          "ref": "ac545406-37e7-4f02-aae1-c72613e83b85",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "e418b8d9-10cd-4ce2-95c8-0a2d57ea425e"
        },
        "item": {
          "id": "4e2ad4b3-f5a9-49b6-a7db-23b13975ae46",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "ac742ef0-8590-4b34-8970-49b0c4459f18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bae26816-2e6e-4856-92b6-086b3da47158",
        "cursor": {
          "ref": "e01ff602-d252-4653-9552-60aa5ce8e293",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "e2958929-37d5-4ec0-b5d1-36b3134ad41f"
        },
        "item": {
          "id": "bae26816-2e6e-4856-92b6-086b3da47158",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "938417a9-f4c2-49f2-a17c-f52f37210f9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10ab0759-2881-4672-b4a8-cce7379f0d79",
        "cursor": {
          "ref": "d9e28e4e-cdcd-4339-88de-756954902faa",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "a5d7ab17-b148-495e-952f-2c45aba72bc5"
        },
        "item": {
          "id": "10ab0759-2881-4672-b4a8-cce7379f0d79",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "75e828bf-cc47-4cf1-9d22-f46beaf9eead",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15dea998-f6eb-439d-bfc4-acfbd5446718",
        "cursor": {
          "ref": "1120e113-7c53-4fbf-aa45-6262715c8bd4",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "6b1f9122-6ddc-44b8-9e59-f38744a84dbb"
        },
        "item": {
          "id": "15dea998-f6eb-439d-bfc4-acfbd5446718",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "a894d359-e7af-441b-b1e0-0a5dd523bf72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "416adfdc-70bc-4625-8da0-eb09bca55bb3",
        "cursor": {
          "ref": "8b2b7a4f-4487-4ffb-b417-8d7328036eb8",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "9e00b4cc-ff8a-4876-8152-18eb17334a7a"
        },
        "item": {
          "id": "416adfdc-70bc-4625-8da0-eb09bca55bb3",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "3664bbf6-82f2-4592-87f7-afad63e6d309",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5da1db55-4b57-4b5b-a526-744f763fabe0",
        "cursor": {
          "ref": "889d95e4-7941-4eac-9b4b-b3ea771beec9",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "cd0389e3-18d3-42a8-9cf7-3d8814d5f6f3"
        },
        "item": {
          "id": "5da1db55-4b57-4b5b-a526-744f763fabe0",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "80040d3d-38ac-4590-b80b-bed21eb9ecd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4032417-9a7a-483e-b4bd-9c6aada6e011",
        "cursor": {
          "ref": "0f74f455-f7c2-44e4-8255-8497631deea3",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "2ed69354-790d-44dd-b1f9-f8b469f917ae"
        },
        "item": {
          "id": "c4032417-9a7a-483e-b4bd-9c6aada6e011",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "b7beb83a-811f-47bc-a72c-e1ea7ef91f39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "423a0505-69e6-40ce-8f7e-23184fe6c67d",
        "cursor": {
          "ref": "9d609412-9a8a-4342-ac74-0e6a8290855b",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "1d6927b1-eaa6-44d0-b376-8ba2e2f79a43"
        },
        "item": {
          "id": "423a0505-69e6-40ce-8f7e-23184fe6c67d",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "33eb2416-623c-4163-b041-ee6d70e8d7de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe80d713-7331-4f9d-87fc-7cfe358ff905",
        "cursor": {
          "ref": "6c92a299-10c8-4c6b-b348-66d586ad39c0",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "dacb1ca8-73d0-4619-93e6-9b7b144d36eb"
        },
        "item": {
          "id": "fe80d713-7331-4f9d-87fc-7cfe358ff905",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "f2741fe2-d802-4f68-a001-384a70be0c85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8649f32-8fb6-4e17-86cb-d31422b430fe",
        "cursor": {
          "ref": "520bde59-27d1-43a5-a9cb-6a1ab37a46ae",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "149982c3-e802-478b-b998-c931deaf1da9"
        },
        "item": {
          "id": "f8649f32-8fb6-4e17-86cb-d31422b430fe",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "1510933c-3c28-4686-8205-b0bcdb3db5cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abff0475-e775-40fb-8112-8d4d006ad515",
        "cursor": {
          "ref": "28464338-057e-4459-ab7e-7bc93b40454b",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "ce405afc-053c-4e8a-a9c7-e8f4e9ab720d"
        },
        "item": {
          "id": "abff0475-e775-40fb-8112-8d4d006ad515",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "8c9065f6-7e16-424e-aba4-4c82d5520310",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89a3c24c-455e-4512-8a4d-4eb4f3a9d86a",
        "cursor": {
          "ref": "63a3ed0f-1d1d-42ee-b54d-ba4b6297c1eb",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "f75b2d44-cb5d-478c-b2e5-84e8caa76ce0"
        },
        "item": {
          "id": "89a3c24c-455e-4512-8a4d-4eb4f3a9d86a",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "164bc33e-ee74-4e2b-af65-e1c7e35d9233",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f074e770-ff45-4b60-8db9-592ec0ecea7b",
        "cursor": {
          "ref": "59b55215-3ac8-4380-8c17-19d2bddfdc17",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "e9f5ff65-0ad8-45c5-b72d-c7b2ca2290fd"
        },
        "item": {
          "id": "f074e770-ff45-4b60-8db9-592ec0ecea7b",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "35e2de7d-f281-4739-b140-645589d6ef18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9116042a-5776-4b5a-95bf-b97251de42e2",
        "cursor": {
          "ref": "2ebf7527-e98d-4c6a-be7e-862b1eb42682",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "5cc7a140-e3c5-4370-a728-8f18d07a8784"
        },
        "item": {
          "id": "9116042a-5776-4b5a-95bf-b97251de42e2",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "2c9e50d2-624e-475b-a0b9-78f6398f55f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "233ea31d-2aaf-440e-b843-ff7f816edb1b",
        "cursor": {
          "ref": "9676924e-07ba-4fdc-b5a9-f30ff8e6d851",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "54f2c0ba-87a7-4989-8b43-7dd2372c7231"
        },
        "item": {
          "id": "233ea31d-2aaf-440e-b843-ff7f816edb1b",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "2377d38a-7960-4381-90ba-91a67cdca0a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b75feed-ad71-4a4e-a00e-393414ca115a",
        "cursor": {
          "ref": "6bdc9acf-85bb-4125-ba18-29ee776cfc54",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "a5229726-95eb-4c1c-bfa8-f13ecb509ec8"
        },
        "item": {
          "id": "1b75feed-ad71-4a4e-a00e-393414ca115a",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "c6934ed3-b3a9-428b-8798-67e2b8a0eb95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cfeb2aa-eb55-4f66-965b-f21cd8ce4828",
        "cursor": {
          "ref": "1698ac18-989a-457b-9f37-8c5635b5998f",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "7c325185-a9a1-442b-9e28-6bae7e410c64"
        },
        "item": {
          "id": "2cfeb2aa-eb55-4f66-965b-f21cd8ce4828",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "bc5cf49d-072f-4570-b99e-6ba1121ec428",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29116dab-7fd7-4bae-897b-6a4302844a96",
        "cursor": {
          "ref": "28e26ef4-2fad-4b13-9db3-bf9ba62158c2",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "150c0da3-4e2b-48bc-a488-884e05b47b72"
        },
        "item": {
          "id": "29116dab-7fd7-4bae-897b-6a4302844a96",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "08652b52-16d7-488d-8669-7ce4108d245a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "117b2c53-7839-464c-bb06-8519f0556ef8",
        "cursor": {
          "ref": "eed81673-b5e5-43b6-a726-95001751291e",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "4a82db3c-2c3e-4da0-aeaf-7cbaf015a5df"
        },
        "item": {
          "id": "117b2c53-7839-464c-bb06-8519f0556ef8",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "83620d96-1d4a-4ae5-ae45-28932c317a00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db70394c-d085-4057-9cdc-788a8aa53030",
        "cursor": {
          "ref": "02e4562a-e372-4600-b3aa-271f94c8cff8",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "bd5547f1-a980-454d-93a4-dd15fcf912a5"
        },
        "item": {
          "id": "db70394c-d085-4057-9cdc-788a8aa53030",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "3269f22a-978e-48f3-acca-9ce2fafa28d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45d90d69-a720-4e45-b2e6-24f265728415",
        "cursor": {
          "ref": "ef123801-6f8c-415b-a932-cd3eeba8801a",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "41dbbb2f-e1f4-4f4e-bde9-24602a083749"
        },
        "item": {
          "id": "45d90d69-a720-4e45-b2e6-24f265728415",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "b54ec980-52a6-4594-917a-98bdcee68014",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "840489d1-348a-4f86-bb63-2e535a5bca13",
        "cursor": {
          "ref": "e34a6b0c-ba8f-4b3f-86de-c2f686b95e32",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "4f69099e-c14b-42ce-b71f-d28fa22d2995"
        },
        "item": {
          "id": "840489d1-348a-4f86-bb63-2e535a5bca13",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "2990e2ba-07e4-4a2a-adcc-53611a147a45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc64249a-4182-4983-8623-0b45d47bf217",
        "cursor": {
          "ref": "fa4791ec-8a30-402d-8607-1bb08728bca6",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "4026b1c0-266e-4e13-bf75-b17bb76646ae"
        },
        "item": {
          "id": "cc64249a-4182-4983-8623-0b45d47bf217",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "17968413-db3a-4800-931d-6086b5f5c401",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1bd792b-0e0b-48df-8b1f-ab6ca8f15704",
        "cursor": {
          "ref": "8c8d474f-d49a-4de3-a892-6e7fcf25d3af",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "6cfa1ab1-953d-49f1-8173-58e00d24b7ee"
        },
        "item": {
          "id": "f1bd792b-0e0b-48df-8b1f-ab6ca8f15704",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "041b34a2-d57d-4c22-ac7a-b37919577177",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "542cd25e-b73e-4076-a493-467eeacd7ea0",
        "cursor": {
          "ref": "582a6986-5185-4a2c-8260-70b8cccb73fa",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "9d6d4c78-bf54-43a8-b2de-13b547451c1c"
        },
        "item": {
          "id": "542cd25e-b73e-4076-a493-467eeacd7ea0",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "65e716a4-3f39-4c8c-be3b-7c357a52e06b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14fb20b7-4698-42f8-ac59-3cf585275fe1",
        "cursor": {
          "ref": "075dcfa8-c9d8-4dd6-a819-b725511722f7",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "dcddf088-9be4-490a-b781-8390d8d3dfac"
        },
        "item": {
          "id": "14fb20b7-4698-42f8-ac59-3cf585275fe1",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "14df0637-23b9-4581-8e30-879382c0743e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2744a366-68d0-452d-8d6b-84327a8728a0",
        "cursor": {
          "ref": "186486be-d80f-41cb-8c36-d5893a5d7f52",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "3261320c-4589-44fd-8e0b-6fffabaa535b"
        },
        "item": {
          "id": "2744a366-68d0-452d-8d6b-84327a8728a0",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "7ee44e0f-6ae6-49e5-b2c4-63cf6e10f37e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a66954e-9946-4335-bd72-4af15b7809f2",
        "cursor": {
          "ref": "e158d90f-6c98-4342-b205-2c68a4fd63fa",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "14b040bc-9fbc-4f39-a683-5d4648fdf704"
        },
        "item": {
          "id": "4a66954e-9946-4335-bd72-4af15b7809f2",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "997b4dfc-5fff-492a-a50d-7d025cfac32b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5182b523-1aed-4b07-ad2b-536343da08a0",
        "cursor": {
          "ref": "12b12c29-af56-4ca1-bcf1-16b43c0b84f3",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "03aca283-623a-4f89-889c-5ed8b797d6ad"
        },
        "item": {
          "id": "5182b523-1aed-4b07-ad2b-536343da08a0",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "b5c09791-1fc2-456d-83e7-3ad9663c6535",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e3d6f4a-d47e-4663-9259-2f8b8f35fd45",
        "cursor": {
          "ref": "6c2d24a9-f13f-4749-80e0-7d12e54dbf00",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "3c108416-8752-4399-bbf9-78c6f12d2330"
        },
        "item": {
          "id": "7e3d6f4a-d47e-4663-9259-2f8b8f35fd45",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "e372465c-5bee-4e47-aff9-3ca71dd92cff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94601b0a-88bf-4613-80d0-910442753cc9",
        "cursor": {
          "ref": "9fbcdfdf-151c-46ef-bc92-f0fccc640a68",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "674e960d-aea4-4049-a83e-2a562274eca5"
        },
        "item": {
          "id": "94601b0a-88bf-4613-80d0-910442753cc9",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "507e9900-01c7-47ef-ab06-afafe078ca5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba3ff7e7-a684-4725-8793-1767fe862225",
        "cursor": {
          "ref": "05d9203e-1257-474c-80ba-e05ea4658e0b",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "60975738-ce97-4a16-a2fe-0d0b70d43785"
        },
        "item": {
          "id": "ba3ff7e7-a684-4725-8793-1767fe862225",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "be3daf9d-2ef5-4d41-ba26-4e55c2e4e1d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "663fed8b-588d-4c86-92f8-606538a3d9e1",
        "cursor": {
          "ref": "5df82065-dac5-4340-8d5d-8ebe837493e6",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "c80c958b-05fe-4e87-b5db-43782d15d567"
        },
        "item": {
          "id": "663fed8b-588d-4c86-92f8-606538a3d9e1",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "53d8464e-acf7-4a6b-afe7-0c9bb2c49667",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "693d3796-0115-4809-ac6a-c9388c93bea7",
        "cursor": {
          "ref": "ed5ef0df-f80a-4315-ac9a-1a54dddf8dd6",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "7c9c8e11-bfe2-4b6c-838c-0d52495fad6d"
        },
        "item": {
          "id": "693d3796-0115-4809-ac6a-c9388c93bea7",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "59014f2f-7533-45f0-8c46-fc2f116bfe14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cd1a1f8-64e5-47c6-9c00-d8c3a4ee1cc4",
        "cursor": {
          "ref": "f7f5934f-5928-48df-8848-a7944bcee05a",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "5a576960-908a-43ee-ac7e-7239e6317be1"
        },
        "item": {
          "id": "4cd1a1f8-64e5-47c6-9c00-d8c3a4ee1cc4",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "d282ddcf-306c-4d98-adcf-8e72f04d85e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c47ccac-eb33-45f0-8f56-f5333b19e6ed",
        "cursor": {
          "ref": "d95b8777-0719-404a-aa07-abee6f427e9a",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "d24470b6-26ef-40e3-846d-8e4424967e42"
        },
        "item": {
          "id": "4c47ccac-eb33-45f0-8f56-f5333b19e6ed",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "424abe40-9ccd-49f9-a7b0-4608de219f00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b90c64e-f1b7-44ea-81b4-3e6dcb9f1f7a",
        "cursor": {
          "ref": "3d7bba22-fdd3-45d0-9685-00accae7ddec",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "4eac6600-75c6-4673-8f4a-9bd1620b5fad"
        },
        "item": {
          "id": "7b90c64e-f1b7-44ea-81b4-3e6dcb9f1f7a",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "4ec10b35-42b3-462f-a601-ea60cf0781a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3017d0eb-3458-46b2-81ee-758d5f347459",
        "cursor": {
          "ref": "349ec60e-c501-46b5-9af4-3d74e5887418",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "ea91a779-e806-4b09-8a42-825cad8383fc"
        },
        "item": {
          "id": "3017d0eb-3458-46b2-81ee-758d5f347459",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "6ef66961-8cb9-47b2-866a-26b6bba719d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcc7fbba-bb96-4ffa-98bc-15926a2e2a52",
        "cursor": {
          "ref": "10732ade-09c8-4832-8a48-be7705100bac",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "85a762b4-8e55-4dc1-8c98-865c7132cc8c"
        },
        "item": {
          "id": "bcc7fbba-bb96-4ffa-98bc-15926a2e2a52",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "902ac964-035a-415e-82d8-2fcd68b86ab7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01b49747-a794-4dad-a658-e99e220a0f18",
        "cursor": {
          "ref": "f28e2f8e-e1b9-468f-a8ea-e35eefb1e7cb",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "ee2aa612-6a95-42b3-a639-784474ea0b78"
        },
        "item": {
          "id": "01b49747-a794-4dad-a658-e99e220a0f18",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "34a0c1da-ecdb-46ba-8d43-913142f89895",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "655b549d-aa89-46d4-857b-70e1d73ff887",
        "cursor": {
          "ref": "4d0bf726-3be4-4e91-b6d0-d82c475872e2",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "9951936f-ed7e-4032-b306-7497b381d045"
        },
        "item": {
          "id": "655b549d-aa89-46d4-857b-70e1d73ff887",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "f142c076-f4da-4305-8444-67faf7c4b94e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64cf40e8-802e-4e4c-a4ee-b59216abc490",
        "cursor": {
          "ref": "017ef110-38ad-4006-8041-dedaca95232c",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "7872efa1-344e-4af5-9071-4e27abd3d393"
        },
        "item": {
          "id": "64cf40e8-802e-4e4c-a4ee-b59216abc490",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "4fc20ebe-72d4-4ea9-8225-20a5b9bf681f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9bef1d9-c578-4df6-94c1-e971d12573df",
        "cursor": {
          "ref": "ecfd7b55-f52e-45e2-86e7-fecc59308c62",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "2e126f00-94c0-4fe4-8e48-4fd741da7b46"
        },
        "item": {
          "id": "c9bef1d9-c578-4df6-94c1-e971d12573df",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "b1d71cc2-2d95-4b40-97ec-03f8574b7e96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9281d573-f5e5-4f70-96f5-f78543191dfb",
        "cursor": {
          "ref": "0fe8f8e2-455e-40d7-94f7-7346ca8613d7",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "c5a7efeb-35dc-433d-943b-ed0d0afa3a75"
        },
        "item": {
          "id": "9281d573-f5e5-4f70-96f5-f78543191dfb",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "7cdcac36-aa50-4e90-8b0f-499c34ab42a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c7fd075-174f-4d70-8dd3-957e3e023e83",
        "cursor": {
          "ref": "e97f7ba7-7747-4b85-969f-e7f23756eed1",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "4add7589-3f35-41f7-ae4d-b3de23878787"
        },
        "item": {
          "id": "3c7fd075-174f-4d70-8dd3-957e3e023e83",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "3568be32-9ac7-4bff-aaa0-d4f06cdfe938",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 71,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f557684-4a15-44c6-a17e-5cc9b6b930d2",
        "cursor": {
          "ref": "e5399638-0fcf-4bdc-9c10-0686c23e6ad3",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "3b785ad8-0e1c-47e3-80de-d38df3dd52b3"
        },
        "item": {
          "id": "2f557684-4a15-44c6-a17e-5cc9b6b930d2",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "d8aa5e70-ed41-4eaa-8fc4-69a2592c8f5f",
          "status": "OK",
          "code": 200,
          "responseTime": 2071,
          "responseSize": 416
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "c567055e-dd60-441d-8223-70e77a457bcd",
        "cursor": {
          "ref": "405ed1f6-c386-4c32-8f0b-7a32475c6ff9",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "f7c7936f-fc57-41e4-bcf9-b32028a6d293"
        },
        "item": {
          "id": "c567055e-dd60-441d-8223-70e77a457bcd",
          "name": "credentials_verify"
        },
        "response": {
          "id": "4f2339a5-472c-4212-b25b-7e711ff44fe0",
          "status": "OK",
          "code": 200,
          "responseTime": 2773,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "08ddf51c-d9a4-4a3c-9a48-53399acaff09",
        "cursor": {
          "ref": "d5459a89-a851-4529-a140-77a782a5ca3d",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "9b661d66-9b3d-4555-bad8-201f3a2cb8e3"
        },
        "item": {
          "id": "08ddf51c-d9a4-4a3c-9a48-53399acaff09",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "6a6669f8-31e2-41d6-a92f-43cfd382ba42",
          "status": "OK",
          "code": 200,
          "responseTime": 2557,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "301c72a7-0c3d-4bfa-98a2-be89f17cb5ba",
        "cursor": {
          "ref": "6500e4c4-5055-4a2a-a0c0-c9832e771b00",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "8e4b0710-645c-41e2-a003-c26c9d62bb7b"
        },
        "item": {
          "id": "301c72a7-0c3d-4bfa-98a2-be89f17cb5ba",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "945e580d-fb95-4d84-90d1-34e74248a297",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 72,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "301c72a7-0c3d-4bfa-98a2-be89f17cb5ba",
        "cursor": {
          "ref": "6500e4c4-5055-4a2a-a0c0-c9832e771b00",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "8e4b0710-645c-41e2-a003-c26c9d62bb7b"
        },
        "item": {
          "id": "301c72a7-0c3d-4bfa-98a2-be89f17cb5ba",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "945e580d-fb95-4d84-90d1-34e74248a297",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 72,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9edf3ce3-7d77-49de-8184-bd533a477615",
        "cursor": {
          "ref": "0a56352f-ca60-4e35-8638-db6d592ed65c",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "d61287fc-749e-4bbd-a4fb-461c07ce91c7"
        },
        "item": {
          "id": "9edf3ce3-7d77-49de-8184-bd533a477615",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "39715455-2eb4-4e4f-9e17-6fdff403185c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 72,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8faf32ab-ce2c-4780-9bbb-482156691a0f",
        "cursor": {
          "ref": "3b001684-b3fe-4dea-8f89-4e02d050c401",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "5e2c3e7b-f68c-4c31-87b6-2ea6b8be6bcf"
        },
        "item": {
          "id": "8faf32ab-ce2c-4780-9bbb-482156691a0f",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "5d95013f-a7bd-4ef6-a1ea-ad36b45253df",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}