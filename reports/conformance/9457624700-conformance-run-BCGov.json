{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "44442aba-d9de-4788-89f0-b838a6ddf1c7",
        "name": "Clear Cache",
        "item": [
          {
            "id": "e68fde06-b216-4b6a-8597-5297e8190ef6",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "bf54e72c-a990-44d1-a715-ff89db0fbfa7",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "5138972f-5e09-403a-88d8-859e3e895315"
                }
              }
            ]
          },
          {
            "id": "e3028422-5343-4809-8519-a227517f6316",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3af8277c-e57d-4cb0-9d02-87ecd9fff287",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "3987ff17-506e-4544-964a-3e71b1f91360"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "c4d4461e-850b-4cbc-86f0-e85c9ff46cf7",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "5074083e-81b6-4a99-b73f-da18b3094155",
            "name": "Positive Testing",
            "item": [
              {
                "id": "45241b83-a07e-4692-a534-f748ed5c00ce",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d2541b3f-c348-4e84-bf71-32bf7a156f2c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d3396ada-194f-4606-9718-118f748ca0c6"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2fd1a140-0cd5-4287-b8a9-bcfe236256e0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d2582f41-6b87-400f-9118-51572c47c3dc"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "42cf24cc-32c8-494a-ba92-890da12f4f56",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ec8ad518-47bf-4ff7-9d43-d23730fff484"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9a413c70-15a3-42b9-8e94-61222a18c4da",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "8aa5bd6a-0ef9-4e94-a342-b9571d25b50d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d04f5680-4af6-4e6b-a43a-03e48b4ea6a1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "51560f81-60d6-4410-b2f3-01fc2b1c9d7b"
            }
          }
        ]
      },
      {
        "id": "edef0701-5aee-4db7-be6d-ecd6df63e5aa",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "f874bbb0-0ce6-41f2-9785-06615ee5673e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e07d541c-315d-4f0a-9f51-a0f0de6dcf9b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d94a8c4c-a14c-454d-8fda-4071d5e7feec",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "205182ae-028e-4673-b8ce-28e4ca120dc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a26db12f-9547-4f6b-ac99-a1b5ed9b7203"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e191647-a31c-47de-995d-5da23025110e",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2d18eca-0fa3-47de-91a8-0cc76487be49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "75a1ed55-9b62-4b4a-88f2-15f1ceb5dc65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e25bcd9-247e-4811-991e-f84be4ac1eac",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14660a99-411e-4825-b8f4-8b716220f358",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "789f4dd2-0ac5-4e88-934e-a3485b5aa71b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "872df0e6-4d70-4a17-a14d-c9f49f0063aa",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "dc998175-187a-48cf-a9a4-2c643ca83ac9",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "585c674c-a64c-4abf-b7d7-fea8a05149ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fa21d9bd-82d0-45cf-8e48-07824cc362ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7a2d114-0ced-4c2a-a63a-fc6f2296105e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5eb1c49-2243-4a87-8237-90349af58a82"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "7e5c8be9-2e05-43f2-a7a0-99b978bb11e2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f6aff41f-db90-4f86-ba04-bbd8fe3c4c88",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "209ea2fd-b75a-41af-b90f-0ef6b974021c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "59a15abf-0caf-4797-9f84-c7c686abdef8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "93173ed2-419f-4bec-b95c-02fb0a6f98fb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "138d4034-6ddd-4e35-a9d5-013fa7c66f4f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "783292cc-ba45-4644-bc77-8bc8c621bb63",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d1d10600-0c0f-4c15-819e-40a89e1ec4ba"
            }
          }
        ]
      },
      {
        "id": "ba850d95-3bff-4b77-b358-802d33d7a824",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "9e17d289-1d5c-4817-8d3b-e0ae69fa45f7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bc7a07a1-aa42-495f-9520-3c943ffb21ef",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "e4276c6d-0857-4aad-b8ad-ecece6e9881e",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10ff10d3-6d0e-4183-a2a6-4344d1d410b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4785130e-6f8d-43dc-8346-2bea39d87ff5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e87d9ce-0181-4f6e-943c-128eaf004684",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b0a0b964-8a6f-422e-af72-165d35314510"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe11e42b-67c6-44fa-b432-337a60602034",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e19062b-2c5a-4280-8c52-8d89ec077e43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa429d0a-2b09-42bb-b9c2-a47353e3c11a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06b30cc6-0c97-4b89-a60b-b8246fc26ec3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "af4ce1ec-ab29-409b-b1ed-8a8dd89f93d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a56ba90-abcb-4efc-8624-747845d39317",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0173b5a0-bf34-4d92-8d48-73046558e83f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf69539b-2150-4b02-9800-a5f4777b54bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b786941-8d0b-400e-a50c-35acbc5ae80c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b5a5668d-b347-477c-837b-32e39a4966d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09c57fe1-31f6-4eda-8948-8173f06e8896",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da96704e-8b56-446d-8398-4404255ec44b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80326d1c-762e-4c23-b01e-f8e60dcefccf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e47a04af-4889-4de7-ad94-8d71076f8eb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "16e2f566-ba1a-4a1a-95f4-436f12954d94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f59d981f-bc09-4349-aa4b-1ea2704575ed",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb235840-31b6-4e0d-9baa-9e17b0d4b9bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8a90ed6-8cd7-480e-8072-35a8e4024d5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "038bfc26-41b5-48c2-bbdc-b3ab1823f4a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "763e02c9-3dfc-4af5-8061-72e5919b1e50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe296983-56b2-4610-b22b-f9667130eedd",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b16c1d5a-df83-47d0-8bf1-ef863abea897",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf2cb2ba-53ec-46a8-86ed-552751b83232"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "846b0a60-4896-48cc-8352-77c182a17ac7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d66fa62f-900a-456d-8fbb-273b2b25f8f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfc318e2-e78a-401c-9f01-bfbf300a716e",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b4268f8-2bcf-4e89-9c98-e192ede931fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84b6531c-6eff-472c-a270-3cec378350fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87576d01-8a20-4543-84ec-8888c68a1027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4ea2dacb-8ced-4941-9d81-a531a2a352b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "860e2b40-93d0-47e4-9640-f28032d522c5",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52f1ff85-04af-4357-a468-9044d1f06601",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7960bc18-f3d5-49f8-95b5-1296d47d9541"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abb7138e-9db1-4025-bdc8-4f07f6b14e47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6daa2b53-fc6f-4be9-8007-b84ff1e22176"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3526c939-be14-4462-8b04-d447bae1e24d",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62c350d0-daec-496f-96c5-10e7c78385c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11f010e5-2783-42cc-85e9-c97d545c664d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c39f333-95e9-4f57-9149-f16a7108175a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b1504f4b-ed0e-4370-83ed-5afce704b288"
                        }
                      }
                    ]
                  },
                  {
                    "id": "409c07d5-e5eb-4fec-9c4f-4efd0db63f90",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af373515-c571-4cba-8dbf-ab1c6db4ff76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b21ba8a1-0d11-40ed-9898-70256565c854"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36eb3ea2-1043-44d5-9a94-5cf73a627854",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "944ecaa8-1d2e-44c7-adf3-502b7f9dc57a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f3795bf-c90a-48bc-b2ee-30039aadac4b",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e0408c3-db82-472e-b020-34de85d4767e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1eeeeb5a-7c58-4608-b770-619351a1fca8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee4c3e64-410c-48cd-9b5f-182b9a3bdda2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "31fe62de-4a04-4fd8-8419-4a97d658169a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0a3c21d-ff83-4af4-88ef-4bae637c429e",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4119090d-82bd-44cc-bf37-0e4b4deceaaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2067ae7c-291b-425e-9ae1-edd9ed0fc194"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24d5a8aa-e565-4d50-9c3a-66399a19b95d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "22c6b96b-3327-4728-b19f-45e79b790d4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6a8a551-f701-44a6-8094-79853d6216b4",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92c21d07-05ee-49ab-ac77-6d7f968ef967",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a9c02a8-008d-4dd3-85ca-4478a1896c36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4471a57d-3d40-4334-980d-50c5a3c63a1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8c394e2c-7d78-4988-929d-45ba32dc64e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3da8c820-5c41-4107-b959-343ac3077eb5",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2f89139-3eed-4bdf-9b22-20f9a76c6950",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c470803d-0e16-4a8b-a878-46e0ed89feed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce3dc2c1-0cf7-48a6-a48f-0c683a1b1567",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c9f35220-e6dc-4405-9224-26021f8504b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0427d3fb-a6a3-4596-9208-8b33bdd99259",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "932aa440-e2e4-4f80-9d1e-a3070317c0d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6173befa-e829-4f9b-9aa0-adb999fb9e1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b817c2a0-669b-4a70-9198-6ca83c5b2c32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9de0caf0-10e4-458b-85a0-c13772ac64de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7267f692-214d-4b4a-b0d7-dd3bd27e1bdf",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0591d1c0-1be7-47ae-9a34-a52cb724c2c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "804fbe2f-663f-4b49-a37d-45a521075f69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edef7c03-c1d0-4ffe-92ec-7cb21ecc2c50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "907dbfbd-f830-4dee-868b-98862b31076f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d1b4768-922e-4421-b15d-c09d534661a3",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d902807c-ffb5-4a0b-9798-edfb8bb20524",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d4a0429-b75c-42fa-ae5e-8c4492e21244"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fa3d4ad-8798-49a3-9f11-8199d4850612",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "23ca4deb-4d43-4241-8093-5ac1729ef543"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a807df3d-52eb-4d3f-9db6-477c15792c08",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31400cef-7671-49ed-b914-29b494aaedfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c83f9d84-9c68-4b3d-a1bc-5c6f6edd4f89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05df9787-a21c-4c3a-8957-aebac8103af6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b8cb084-33e5-4e13-a326-93e374a6bb0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88a89423-b15f-4ccf-b257-557a77b64ed5",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d73b52f6-392d-4cae-818f-a6e25188d266",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "625cd534-46a4-4803-86f4-4e939ad1a9fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ef95dfa-c9cf-4bb7-ad47-0dd8631ace4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "30e4fc3f-cb6b-4dc5-897a-4fca300614fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eedd302-c917-4300-9f69-c61b83259d0f",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6dc3849-c702-4d8e-81bd-9421429492e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "264e113f-c8f8-4f1b-83d0-e966f230b16e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3361f8e6-6c34-4631-b320-9de4c086ae0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c2d04e63-4d85-462b-9515-1e244597c011"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a03450ed-b3d1-46bc-9b55-17bdd9ae3043",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "370077e1-cc96-4201-af3e-e0138cba8db5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "daff4452-510f-4085-b981-5a6c03ed24c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09a5d5e1-e07a-420b-ab3c-04afd6344bda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "31cc8550-ca5f-4d12-b219-56b237c1e4bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33157dc5-f63a-47cb-8b5d-d72da858a595",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3f470ac-db25-49e5-808a-577c9cbaa0a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfc09e7e-ea96-4ee1-9617-df8b9af9bcb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db538925-37b2-4fad-a752-90e226d862d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "33f41034-4154-4dc9-b9bb-efb45a81b0d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65eaecb3-dc20-48fa-ba45-c6db635fba70",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5f0982c-ae5a-487d-a604-08226829f6b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "177844f0-a9cf-49ae-a1d5-04d528941831"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bce28ac0-0469-41d1-98b1-cf98686044e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9d054f21-07fd-4a81-a741-cfffffc01cd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a35642f-d2ac-4c34-918a-08a452471444",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac604b13-77e1-428a-8207-6d06db2c7b9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac5e7020-f91c-41bc-829a-330e6d873361"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d9a4c2f-28b1-463c-9c14-f9738b1bd71e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e420ce8-a4c8-4ca3-8b78-c167fda5c1fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed95ba93-87f7-4db6-9466-fb17710cbbf1",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb255efa-68b0-41e5-9ce8-ec5b0de57bcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "281c194e-44c9-44a7-b00f-e9ad62efac36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d0d02f2-383a-4a1a-a4c9-9040376a28b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "05688a16-37eb-4ad9-8186-03857659237f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36fbd643-b70a-40be-a894-eb0c91ad6f35",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83d18484-d940-4813-bfbc-fcbb175889f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43cf3f3d-53ee-4b8f-93da-b4e0c7ff54b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccaac7ff-9fb8-4dd4-b0db-a156ea71cd67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "23db91ef-4e8b-45a2-968d-5e11f04046f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a6115a4-2d95-4231-ab78-63d019cd3f24",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e7b847b-d2d2-4ac5-ab7c-48db8ebebd8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27153341-1e4e-41e6-89b7-0a4011451f4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "707ede46-afdd-43a0-b3db-e4e8fddde4f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "93a30353-53ce-4349-b75b-c0893aeac449"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60469fad-5536-429a-ab31-52ef3d4bf0cc",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88b115c1-be5d-48ad-ade0-1c1a0884fd2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "276ce9d3-1f2a-43a8-a898-c1378277df28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24a2c238-7e5c-48b0-aa30-de93a51ac720",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "800881fd-7503-47c7-b4b6-865aab737f64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b22d0ae-c9e5-4913-adc9-4c944d4b92f9",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e8d74cb-765d-4e7d-b8b9-9ecf83fa75d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68d5d19d-b9ba-47e8-82a1-879a97c70742"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2199d0f8-c4ab-4fb9-8fe3-f0304dbcbbc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "17f2a0d6-b019-4b4f-8b47-8c83685c61e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "985a9395-3b41-4b50-b052-080804b18882",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1b09160-fac9-4729-ae20-113f3761bf03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0be70d6e-7330-4dbc-ba46-1ef57f0778ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55d51791-9c33-42b4-8ea7-62ce3ae1cfc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef369755-c379-4b90-8d3e-63ca0ea2a385"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d0f39e4-c494-44c5-8951-15dec09c4cd1",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9171044-ffe1-4e64-80a4-f1fb2eb5a8ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3155cf1-f731-4195-a610-dbedecae077a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb80007c-4b88-450d-9047-58d69b111986",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce132d5b-23ea-47a3-9633-47534bde8526"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b06537d3-374a-433f-952c-281aecf4429f",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37ea8912-f36c-4e5e-af96-8527af924889",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dcaf4af-b4ff-480e-aa6d-fda731176074"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf42173d-6293-4ec4-9798-2005cb0119af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9668bca1-7bbf-44e2-a25e-b332a44ac0f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7807061e-b997-4630-92ec-efea43eb3e99",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7c21325-411d-4176-ab08-c1846ab7061a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b152cad8-fe50-41d0-a957-36e2deb50954"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "668a547a-9206-43db-8181-f93e80156465",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a24ada6-db56-463d-9ab0-0d741fc16d24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fab7f529-f2c4-4fdd-8a8b-36baecbfa7e5",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91ba2a19-0154-4cd2-bdb7-e626538f1e86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50220de1-b132-445b-9251-6153cde66ddf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c7df8ad-60a5-47db-8fe6-21b4b0276751",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f63c9383-999b-420b-8253-8a8d698eedd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "333255e0-4cd0-4327-95ee-098f5ceefb5a",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12b592e1-ca10-428f-af53-3d77fef23d63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed0e12e7-c8f1-406d-962f-a5733327b7ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d50f57ec-246f-45b0-a835-0a692ab7116e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "951b103f-b1da-499a-a62d-4b35b0a2b528"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57d37814-5d3f-49aa-a284-203f90f980f7",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44862efc-620e-49d1-8860-c8709e4cfa58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "88ddb9f4-cb5b-423c-9f3c-d2b567905309"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81e01fbe-4584-4b0c-8163-9549d4d3f865",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "30a6d5e5-c2dd-44b7-87e5-30ca9f9791a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fc45083-f48d-48ae-9221-7debc4fc739a",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab167f91-57eb-4498-a32c-fddc3409da48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb8ca50e-912a-4bc4-b20e-3feb56f1c529"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b1f7500-2b30-4a34-9538-7afde24d6abf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "205ccd4e-921f-4a05-a871-08bca42bf6d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f5238bf-2556-41e4-87f8-9465da95efb3",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3d94e64-9a84-412b-95e3-2429ecd9a58c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc77fc32-1a4b-416e-b4be-86efeb24beac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "632075cd-21e0-4005-958f-59c82a09c9e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2e5538b7-f399-43ee-b74b-131bfeeeeb14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e424049f-29f8-4638-a316-6bd9fd65ca12",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4402504-ac23-4fea-9edd-4057eeea598a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75c510a8-ec06-4394-b8c0-afa3389c1e2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7561225-73ea-4e12-92a5-370c8001768d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c5699f7b-a4be-4d32-8d33-bc56d097e8b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "365597d1-fa05-47b0-a56a-40669526bf15",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abb9da25-9fa0-4cef-8040-d6ea8e3085ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d430305-8034-47ef-8bd3-ce83d65da5bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81f66d1d-c79d-4d26-910a-9a6c01af6cbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d7667329-020b-49d1-a2e0-ae185aeaf034"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77531ba3-1e87-4be4-8d9e-2d85f0a9995b",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2ff78ce-6c30-42dd-8603-901072e165f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f030cf00-8920-41ac-848b-9c215b317a20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9eb78aa2-eba7-409e-9fbb-9c408ec69d33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ee161307-a1cd-4a94-a059-56cb318273b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daa739ae-625e-469c-8d2f-d6ee6bf1b709",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d1315dd-565c-4b07-ab56-6ef64ae0b860",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "257de8d5-f007-4224-aa4b-9cc1c0f3ea5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac718a2a-6f80-41d2-ac5a-56938f878717",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "5d97af76-1c98-447a-b93a-a4def6dd23ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91bf63fa-aefb-4d0a-ba6d-6f8c16bbe381",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48262f24-fe4b-4c96-8cb1-1ce8a5a270cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64425676-113c-42f9-8795-467669f36164"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86202e3e-3960-45f1-97e3-e497bd255e94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "8409fcba-2332-45d5-a805-ca903b9014f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b09ec22-d167-42e7-aaa0-8ec12e4b0621",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83b96c02-cb0c-4af9-9bbf-d690dad32066",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d063d8b8-38bd-4205-8f35-fa948830f868"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28410f0e-c382-4883-a03d-40165e0f1adb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "2945900c-0254-45a8-b9af-490841c625bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a7146cd-00ff-4e72-801a-a41ebb1ad683",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93dc98e3-cd47-4ebd-bc36-35d1f22f88c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e8f034c-cf1a-4c43-9c08-eca984ea868c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a041a383-936b-4df4-9561-d9a2d7da5273",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d2e01d6-5fb9-4113-aeb8-3baccaaaecfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f91b560-d123-484e-b31a-5ca80835f084",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b8a03c2-7202-448c-a51c-769bd5cdd798",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d29df1f-3ccd-45d0-9dfc-c258e2999b21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71e94290-3d20-451c-b7a7-c254e9c7f423",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "38f14cb0-1dd8-4175-94c2-77f2f0177812"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51313406-6422-43c8-8799-1471dfdf961a",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d14a7a2d-a655-4d5d-8954-e7742427a984",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fb1ac2a-5dd0-4214-86f4-7aed3d6a0586"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfe86d29-d017-445e-ae81-bd4f0bd69362",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c4edfa4-cb37-48a3-bbd8-cce17c310d2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5573761-09cc-45f9-b826-4d0702d55737",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9070cb3f-eee8-45f6-b54c-55129127ebcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b95de98-ef47-44d2-b498-b3627c127d16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb5d9e14-ee99-41d8-a36d-bf132988281d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ba296a5-5308-4195-9195-18accde73177"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b06457a-e69e-40b4-a672-c46c43a3b0d9",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46d2bb32-4a4e-4813-9938-bdbd3e0f8c92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47299f35-6063-433f-a29c-568b8224339b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c9a4d4c-9b0d-4485-b7e0-dde098c6ae1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5fdf8830-fd46-4089-88ae-677359878ffb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81b21347-f406-495e-ac24-a2fd2b458ed6",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92e777da-219f-483b-bd1f-7a7f393372ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36ea6d31-789b-45db-b35a-90f6ae9e020f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c59101d-8a8d-4195-b7a8-665e840cfb28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b0fd43ab-101f-46ac-9afc-ec39f96036a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d0dd908-a9e0-491c-adb7-5fa17d6b373e",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "248ca1bb-9644-4f16-ba1a-fd45bf18fcb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75606afb-5623-45db-87b2-e3723917d245"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af97a7ea-44d5-449d-a646-45405e017b77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "6821c288-f1fd-4724-a816-e7b4cf844922"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fbfe68b-4247-4e9b-bb63-4f753adc8f08",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d66d5b0-7ffa-464f-8ac4-bbd4e59f6380",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac806129-113e-43ee-8aae-8f203d374941"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93bcf7fa-0c68-4b58-9002-ee9b88616b53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf989f3e-95e8-44ee-95f8-a846fd06efd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0fa9db0-a34c-48c8-8a75-f3f573e99452",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db54a6f8-25c1-4342-bc52-08baece722fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92134c6a-d550-469d-a98d-077a76833a6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2426faaf-48cd-4dad-a065-752999f360b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "99b7b9a5-bdc3-4e39-bc6d-dafee632fd6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86a7e52a-6be0-401a-8213-bafc154d13cd",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25ce0b90-9fee-4fa8-ae42-57c5747b5cb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a652414b-95ab-4815-b98d-d115e30bf204"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cb6e3ff-374d-41cb-8ee1-2d9013fc1608",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a54acd8-2147-44ec-9cd1-753cbe757f9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ad38a19-1baf-45a1-b9f6-98b908fd1b7a",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05a261db-f811-4e15-9d54-90201f19d4bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adee304a-d24e-415e-9453-c4aa4b6561a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4412c2b-628c-425f-90b1-a2c722484c57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2171e963-4290-4968-8559-651c40cd0241"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c0cb2ab-06d0-4e40-9156-0faaa99367f9",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92a9dcbe-8ce1-4f89-b740-f10de1917610",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50233491-bb52-4995-a606-3016ef2f4823"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b825a26-27d9-44e6-8065-e53e282bd674",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "07f76b72-702f-4953-b6a8-64c7a003b8e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cbd876b-b9e8-4701-b808-1245c8621aef",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1b84749-d08d-49b5-9755-9c06a28ce442",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13916c90-d775-4d03-9f96-138c9a708a8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22c6b057-23f9-4b44-9615-ba5cabbbe6d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "1a2f8296-3a37-41e9-a862-f4e544396e34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c11a89be-4afd-4337-9045-aa2067fb218d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59dadb39-a1ce-4ac9-8214-e63e8e325d86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ccc7e74-5d05-4288-a646-6410b841ef95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2644bb5-efb3-480c-82c0-982d353c8827",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d389b5a5-e405-4fd5-b931-7c6b3b301583"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b00c7b08-8653-498d-af5c-d775d18c4075",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cc2da7d-5f36-4b2d-9a67-59fe78d226a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2961d5d0-2863-4a74-88d1-c00eea4ca268"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57ce65ba-0d44-4048-a9e6-75f92f836510",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "973944c0-a49f-42a8-b471-a80491d88c79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6953823e-4848-4737-a6bb-d333b14bf87e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f3ca113-4941-4d48-9991-87a2e1d681a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea8fe078-b4e5-484a-8cfb-9a320159b52d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fc496bc-5524-4976-93c2-5189bc9dbd69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "9e7d5b6b-556e-4383-b96f-a0b646b690c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dead264-1880-4da3-a35a-7a499f703c35",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "766b5480-3b5c-4e26-8de3-60a2bce89065",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "689256f7-a9a4-4fc0-bc08-c7eae5f01849"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db7d25ac-8b27-4776-860f-9406817ed4e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "36700ae7-8433-4056-883f-f653e183c1fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ead5d00c-6b6d-4db4-8ba1-6eefc7a86128",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae28524c-9e93-4315-9cc5-05809098cd75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34b5dc3f-5e29-43af-a60b-7962bd079dc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5be3a505-1fbe-4c58-92ec-d1ecbbaa18f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "a935c42a-4f39-4216-8f22-2d5ff373808f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "653e90a2-ae5c-40e6-b0aa-1172a1cd2e94",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d01c39a1-3540-41ac-8609-21bda8657ece",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc10625e-7f0b-4fcc-9a94-13b9d804e24b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9b8a469-e0f6-4fa0-92e1-2dab20494a4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "6710a0c3-826b-4d85-8824-e200dde5ee6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b40d0620-5514-43ea-b4cb-d0127f9dcac2",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ee71d23-fbcf-412e-ba45-8bd4d4bbef23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4cd6602-6276-4efc-9a6a-a008cb17f5fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2161db4e-9a14-4cd1-aff4-d30fb11c6948",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee3a7505-adb0-48de-a3a3-29f9c0ccf53c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe3f4b2f-4996-4e9e-9657-2c97d544b682",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abb57716-dee2-4a79-a2a5-4c302a9eab91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bea8326d-ff38-426d-9960-a29601ef3d34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f1769d4-1209-4870-8903-2348fd26c760",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8844e4d3-010f-4431-baea-3f3228bf0317"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a73c2522-b665-46fb-b183-269cbc411f44",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3a89577-0c4b-48d2-9e8b-7c3cfeb7209f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd3ff23f-a7cd-4c31-89d5-5e88e17b31c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c859b0b-276d-4b79-b61e-5204603a6a4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d8ddeeac-70ec-40d9-8cb7-cca1ca9f8867"
                        }
                      }
                    ]
                  },
                  {
                    "id": "957b2ebb-95cf-4ba6-b1c8-feadaba84bee",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7a05cee-f7a5-4bd1-920e-56638cef418e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bedb4258-ffca-4896-aa3a-1a436295d3a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12362566-c5e2-4b82-88bf-ef38b719fba5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "35b331ce-4874-4d08-80ab-0bfeefc8e157"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b2cd5e8-6efc-41ef-b2ca-2ee1edd0068e",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b59758f-7d6f-496b-8c01-f1aa9a4ea350",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "696f28aa-97c0-42f5-a27b-d90e1bc7a94c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cf4120f-2286-42cb-bda5-b319a7923069",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "b167dd24-f529-4a10-ba94-f714243660f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "928c1ea4-ece5-4e26-a7e3-5ba3a065e1ea",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f62a423a-2ebf-468e-83f9-0b890aae436e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc441b01-3b82-43c0-9179-972a7f36aa47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18b6e149-5134-41fd-844d-25abe84b2aa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "760b33e3-34fd-4e74-b439-3a67a6008031"
                        }
                      }
                    ]
                  },
                  {
                    "id": "729986f3-87c9-4afc-8943-627a9d892ebc",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d059d1d-acc6-4afa-add0-e7ec1a2b8bdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e821113-4a54-473a-b45f-4c0e766f2ebe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c934f2b-5815-480b-aef5-1df83d5c1a74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd0f93c7-1738-4380-88d4-338ffa30cf9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d81e0353-254d-42e2-91c3-8269757e12a7",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ea8573c-3b0a-4122-8924-4c478f683a14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7a24976-a476-440b-bc90-6bb3c5447004"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "093da199-4df9-4f8d-aa2f-aac0b2a77595",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9df21d69-04f7-4e39-875d-2147fbc41b0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "004b4938-50c6-4820-b861-b359c8731904",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24df4c77-8a67-4b29-9d15-c26695894a4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b57df6c-5c34-46c5-a78a-c881b20f4ce6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6b6602a-a395-45b1-b9e2-8983aea19f2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "014ecf5d-0924-4c82-ab65-96398407e48f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d894f3a-7cee-4a78-b71e-0b8b0682fa51",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed956bf3-0327-4de4-baef-4568086093c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45e62d1b-faea-4b16-8a4b-b9d42b926f79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73be7d8c-5912-45e7-aae1-6575c0a15333",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6211144d-cccb-42d0-aa07-7bafe62575f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f20f31b9-5679-4db7-9ecd-710d18eb26f1",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38d65430-0995-4474-adab-edf8ba18dc61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "828237f3-81ac-48a4-84d4-633f6b8dc4e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af2303ac-b7af-4fe9-9940-e1c4b72700e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a8f61757-9603-4736-964b-d1483d80cccf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4491b41a-51d7-41cf-a864-219a11fc959a",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea3b07a4-efa3-4f02-8906-4a8c22da35e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8353972-721d-48c3-9535-03f8cb856ddd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "069a2b64-7158-4731-ad1e-4c1467dddcab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd9e9b58-ff4f-41fc-b470-572b0f28515b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f541b1b-d181-4075-9fae-b7d494bac33d",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "644be466-f717-481e-89c0-600ec2eb3294",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f04cf9ed-4cd0-4279-9baf-7fc23fc84045"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5a230ce-19e9-4815-b2f7-ed92ad0b0807",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d0079f3-dcc8-4735-bb8a-b03b6e1a2e55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96123d6f-b2f6-404b-96d5-ebb1e37f7263",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97223121-8e0f-492e-a8d0-43aba2ab993f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb2cef15-3bc2-4186-9a0b-749bfbb898e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df993151-898a-436b-8e9e-7fa11216cd3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c078e1e-ecbd-4239-9a6c-1ef6f5bc3f45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb66f88d-0d18-499a-8645-3203dbf956ae",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b3ef0f5-9c8a-4a65-af16-ed0b38b5ccbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97ebc6c8-ce4b-4586-b1dd-6bfac0ce503f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6964c0c6-4190-4904-8aae-1c1c689fe836",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e203561b-e945-428c-91eb-1077a66b8292"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d66b826e-ecb8-4d6f-85d3-c7a1052318ee",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f76271cd-ce34-4638-ac00-5e8663054d1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c138861-ac0a-4325-ab1c-9a44f2979a4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db56c505-0135-4695-ae19-e1b4023a2626",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3c4b6949-af2a-4e93-9f48-4e048a9d44cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5dcd249-ce67-494c-a1ca-5f4478a06a74",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e75860cc-1ec0-4558-a0da-f5753e44d5c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e8de0a5-bd35-4c09-9d83-b3526950146e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86223afb-5ba2-4f9d-bb51-dace1dbe05a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "639c733c-30f3-45fd-a961-2832a2a2ba39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb97047f-5efd-4aad-ad78-4770e6966bec",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aad89026-2cf4-4d05-b00e-c9d753b1b600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db9464b3-c994-4e50-a05a-68f52f249986"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48c6c993-8b70-4abe-ae09-65d73f24c54f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f210faac-be45-4c28-b8b0-e02529729cf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d7a3f7d-0327-46a6-ab89-bc8cdee31cee",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30e9c483-6a53-4215-8ca6-ae8b1602d9e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7e50ba2-2fe5-4bb0-85ce-46171cba3312"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3519ced-5262-4fec-9035-6fa6f271b096",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c9315006-fb84-47e2-937f-3bd64d160410"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea006123-b592-4a9c-9385-1c26b9788de9",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41659dd4-079c-417c-bd6c-a2007328c2a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0442e340-96dd-45e3-bc00-a3bba366e2ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97b3c81d-c69d-4c71-9e17-f617f926863b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ceabcef8-96f7-49e1-acd4-0e3d4cabe681"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed8d6326-0cc5-4e9b-9c4a-c71b7b096a18",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "700ec756-ac39-4b02-afd0-205c9da81293",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72eb0f69-5858-4090-8768-092f8c94de26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2203dcf7-f659-43a6-9961-83df6754b27e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "abe5c361-20ba-437c-a127-0af7b28fa311"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdf003a6-e72e-4c4d-a386-ac9a8b760f5c",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fc5a4d9-b4f1-40b5-9ccc-82a0ffc7ac18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "179911c6-dd4d-4b3c-a1a0-978c45aaaf4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a50782c9-3497-4e66-a81f-75eeed663e6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "18b5ee26-5e95-40d6-a01d-ff76e1315929"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4947435b-8db2-4b63-b53d-d8cb7e7159a6",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3d13c41-7654-41c9-b889-683c4e2668fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b89b5ffb-878a-44a6-9066-f218fd9e1627"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6837fb4-647b-4eff-8ff2-e26fa15f15ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c9beedc4-9aac-4e6b-a7a4-18f3a7996d67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c264a5b-9c67-4aba-a1ca-2a42a7fc97af",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eea049ba-f2b4-42c4-818b-1590f87fdf10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea3cf6b7-82dd-4f22-8ad3-d323355b708a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9b84571-7212-40dc-823c-aa9bbf0157a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ceb9171e-69d5-4da0-a6df-79db99f51be6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf193a00-5c34-4310-837e-77ba76d52037",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36db7748-e26a-48a1-9cd8-20fb7d86ad2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "127bea57-633b-4456-ae05-3cbf9963c627"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "286aa609-0420-4175-be6d-a95ca5efcc08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "2372fbe1-22df-4f5f-91dc-11a1082daaf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b695c99-0fb4-469e-a1b0-2b2a47a58b78",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0df3e17-52ff-4727-ac0e-bf4c93771e4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f74e00c3-9a02-48e6-b486-dfc35d92423a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67e38f28-7995-45b9-bdaf-7b533ea79745",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c88fb4ee-1eda-4381-998f-5222074266ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64cac049-234f-47f1-a61f-0a22f1eea70b",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4001624b-80fc-43ac-8a92-3c7a2b54d47b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c136707-6bf0-4fbd-92be-3070cf9ce1de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20ad0d0e-980b-4c1f-96f0-f3745f2d5cef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "92c0c981-2136-449f-988c-d06a39d0f73f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c5d7864-f8c8-4551-a0b2-6a1738ef5c87",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82c20732-b1ed-4716-b56e-1cdadd3f030b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0b855da-acfa-49c5-b362-33e1e377321a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87e63b0a-13a2-4d00-9129-b0eeed78cd23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "fea97836-1704-4613-8a46-02119ffe3e94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6753ead3-69dc-40c0-833a-288ec617fb54",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00c10220-e2e5-4c36-8259-76c4a91c1b09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "a78b11e1-df20-490d-b536-ab3f393b0e97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df7179fe-e4bd-4e72-9486-7a29e7a92fbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "c7682246-140d-4378-95ac-79dbe7637b4b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3c31ccdc-3c58-44c9-9941-cf08a86b48e5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "baa3c6e7-2378-4484-99ff-d8b30d577a75",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fdd8af3-7a3f-4354-ac85-c14cab356f36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "431ad108-0674-4870-b2d1-56f5c0a4be8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "420a8996-5924-4d84-b541-176974668d2e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1d3fc35f-763e-4b1a-b1b8-fddf75ae9253"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6914c9d2-881b-4627-8bed-21bd2ae3a19a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "80b6a921-cf58-4e18-a7c4-bf2ec3401e2b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "364ac271-8572-4eeb-b25c-6ff744120e71",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "698727fb-244a-4793-aae2-448401903445"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "438335f2-3ae2-48b6-90c6-cc09a5d4afd6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4c224be4-cc76-48e1-b5ab-dc8b2fe8ffbe"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7a0f1db5-e4f4-4dd5-8e68-a92efdb4bafd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3e4a55be-6238-4588-8e9f-2800e0bbb4d6"
                }
              }
            ]
          },
          {
            "id": "f32c55f1-128c-4f4c-845d-26e51d60b45c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3f307aca-0e96-4ad0-8586-4e0511791201",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "047b927a-523d-4dc5-93dc-1bfca3c16a3e",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e56198c1-b0ee-404c-886d-06c9365d20ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "7cd73339-c569-4148-ab43-6fdfb4889dc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ccfbe62-3be0-4bd7-93cf-562bcd660f8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "163deda7-348c-4c0b-993e-eea52f6e2690"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b5d87c72-6cdf-4846-9bec-79299b4f60e3",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "969d3626-0a23-4a2b-9fcc-2b6acb93753b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7db1e1a9-3bc5-41d1-8968-48ade6ef7fc8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8cbd54a9-1dc5-46b7-a147-4909b698c0c4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7b6f3d05-1655-4342-8fc2-2816da110395"
                    }
                  }
                ]
              },
              {
                "id": "3f0d41e1-a49f-450a-ba9c-9fc6849e5eee",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fc736447-845f-480d-ba3a-3d20e33fb3cd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8fcd0f71-2c3f-48a3-a767-cfc1198a42d3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5af87c4d-c93d-470b-8b42-0263341412d3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5c31d3c1-0f53-43f4-9ebe-068496a187b8"
                    }
                  }
                ]
              },
              {
                "id": "87bb1a70-0975-4556-a780-c43371492354",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4a18bbc0-d5e4-41bd-bb71-4d45a4d0f417",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "740cd742-d381-435a-94f2-c5b2324bf078"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a5e0c82f-d71e-4adf-8b1b-2691bbc3dcf1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "83de7157-2f4c-48b8-81de-b7644e99430d"
                    }
                  }
                ]
              },
              {
                "id": "22a0d317-f4c3-421e-9f4d-690258b1f53c",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4e1c3a12-4f76-4097-80bf-35dbdc2ab769",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "94460207-068e-4349-ac34-caa59e2ba21f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dc8c1dd6-6820-4b19-97a4-9672d13daed1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "60eb314e-275e-4103-b0d5-e433fd950991"
                    }
                  }
                ]
              },
              {
                "id": "1cce676e-cd30-4215-900d-647d05c31bb5",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d9d8e445-d317-4935-8d10-f1a054e81afa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6e2f55b3-1373-4769-8197-c0e54335d197"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3b391523-5256-4bac-bd65-df708251b60d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "ef282063-43b7-47db-bd6a-08294a8fe864"
                    }
                  }
                ]
              },
              {
                "id": "d3935e6f-99cc-4901-9d38-9978b0761731",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b35daeca-b038-4e81-90ee-eac512a14833",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1aa66d4a-4f48-4305-bba4-73eba0641b2d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "96e20ff7-3292-4f61-82cb-859dcb54d1e3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "87a70f6e-40a2-433e-894a-5864e759c96b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2c25d369-f0de-4d35-89e8-685ce7751d52",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1d47564c-508d-4608-91b3-74ad4db1c2cd"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ffe6ad38-f247-4142-b625-f96adceb98d2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "96a76273-263a-4376-a9a5-d939180993a4"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "01e909ef-6286-444f-a766-0a4f1e5a81aa",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "10db13e7-2b5f-4496-986b-c6eebb7e8d71"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "953e3574-08c6-4837-8337-3c1d22647831",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e36a8cce-2f15-432a-ab8e-161a6c7ec6ec"
            }
          }
        ]
      },
      {
        "id": "7976a162-aa8d-4794-ae61-13fc4f188cfe",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "8ce45461-0d41-4b08-b77d-19d4985c99a6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b31eb855-7b70-4668-9123-290210c353bc",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "eb832580-3783-4e9d-897c-a7ff94e0acc6",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "755cb38f-bd63-4542-9be6-0defa9283eb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b63be54d-33f9-48c5-9aef-b455ad0cab28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9324c30b-1bcb-4b98-b237-403c9c1dcf99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a986a58-9e85-4cd8-940a-05ac4b8bcbf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b75624df-5d3a-40ed-8277-9650bbc5087b",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71c8a9ee-d5f6-4901-b839-2fd40ca59b9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef2d6f7b-2a09-4cbd-ae45-756f552e5bbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17eefe42-78eb-4c98-8194-88b949980478",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff30b5e1-56e4-486b-9125-69fae487c98e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ec5a81f-8a13-4337-a95f-70acc24e787d",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "935c3bae-bfa4-4879-a1ed-ec9ce1962f79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "047079a4-593d-4947-9b25-a1241431f0e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd9dfa1d-6eb3-4ef6-9ed8-c799057057d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b753434f-55a0-4763-830d-c8dbe7aeaec6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e37a774b-7f1b-4bd8-aac8-49d6aa5c3756",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7732eed9-30b0-4915-8537-e3e7ba9b8578",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3033c86-514f-4477-a25b-2ea679d8407e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28071e85-32cd-432b-9f94-b24c061aebdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f14cb7c-b6ae-4ef9-88b2-54d16ea9c9d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc31148b-b206-49ec-9ef2-2fd80a82c0cc",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad8aac7f-6c18-4f2d-81e0-c899dc8a2d32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c67152fa-d2a2-4306-b2a3-4947a8da2f31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e051b5ba-3824-436a-83d5-2370b91a1d90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9cdd9234-0958-47a6-92b1-d6fff07200f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7f934d0-c3c7-4f4c-8b2f-ef4dee81ff43",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83a21a92-d2f6-48f5-b9a1-98ff1c55ba3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17117aa2-d2d0-42dd-8733-66b31f5bdf45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bdc51f4-bb73-46cc-a166-ce94233e34d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6a821c2a-89ad-4224-8ec5-ae7b671a4b02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2af7e015-0eda-4493-be6f-b94a81639841",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecbfe34d-9acc-41a0-983f-69848bbd0e2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c67be774-0426-43a5-ab46-ff1df7b308f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82c6749c-4348-4a43-818b-59bc8ecd04bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "f04757b9-907a-4af2-8d56-a1a5da07e129"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1128e14e-2583-43d9-be03-32251113ed91",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "398bfade-f113-4dad-830e-0f761b20056b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "141ae82a-b70f-4bbf-9b3d-7877f45fc356"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7b23a7f-2392-462c-ab54-d2ee607017cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "24903863-06f8-4e3a-9872-cae934876b3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "750cb7f8-c7aa-4d44-a6c3-6964eb5b4982",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ce10730-95d7-4315-9906-d731d99a754e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71950fa5-bba1-48a5-9d5c-3ed3955fb221"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "146b767f-e780-4a23-a947-9a74a524233c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ea743a2-5f5e-460c-a20a-b5b5b2de1bc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62c97ff2-af16-491b-abcf-ec1a93ce2c69",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a014f856-2f5a-44bc-a870-843083c19fdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52156f8c-b32a-44a0-b32a-6f4f24416b39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9389230-3463-4ba4-8a75-1222306d1ddb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6313df6f-6657-4546-ac03-b65fd0742547"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9590d85c-9ac7-4293-aef4-adbb1f278f3c",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c0269a3-9c9a-4a89-8cb3-db41c47a115c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f5d94d7-feb9-4bb4-a908-bbf2b690b870"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67d5a1d4-3aab-42f8-9849-bee09d93e3db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "6d56b233-b457-42ca-b96f-94a605be1fa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "301a1db9-1b2d-431e-9c5e-b6ab812d05b5",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa868c20-cb83-47d0-b865-ab2baa024422",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00ef9f0d-dfa0-4c28-b3fd-617abdc3d73d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2b23f9c-252b-4098-abf6-28e52e5be545",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "28069ee6-2079-49e0-b0b9-e80ee3fd2da6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88876ac1-2b6f-42c9-9944-17200dcac4c2",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "305e5063-c682-438a-b3f6-8cdd9b0d3714",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23cc7ce6-805a-48f8-ad67-d9221dd741e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "957af270-b34e-4e85-abda-f22fc5e89d1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "554295f1-34ad-4406-a193-fec16e6fcb1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0f11907-7eb3-4d29-9385-5623771b31b8",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8be34a98-74e0-43a8-8d1e-3a39f1250968",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4ffb5fb-f866-474b-bf10-fe02d8dc30af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7d33937-3dbf-4dcf-b552-34194e86383f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "440a4c6f-5b5f-4960-87a7-b9d24efdbc37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "379a9ede-aa33-4f29-84a8-228409ddff23",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6153c1d0-fd4e-4548-8d22-0e18c594519a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd643a16-8775-42fc-8ec9-777fc23613d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba7a5857-2231-47ba-b00d-7daae6f7cbb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "748b9e2f-0b91-4d83-872c-d947d813e77e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97de410f-3ac1-40c0-b2c5-7d0ad7ca89bf",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b82156b-71c6-41d8-b663-409468f7e7a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b44aeba1-466f-47c8-b0d9-2f9631cd2d33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d8a8c64-6208-4adb-b4f9-54db16e50a97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "34c89aa4-3b4f-487e-ac5f-24b298ef48cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaca3d76-1041-4771-b1ad-e59e0bcae28a",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "587165aa-5a7d-416d-b2bc-364caa0d987f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e95f30a-48a9-413e-a187-fc1ada38c7e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5089da61-9bdf-4d13-ae8c-51c0dbd678d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef8d7a56-7fd3-440e-8828-401cbefe8981"
                        }
                      }
                    ]
                  },
                  {
                    "id": "917dfb30-11ba-44b0-b116-2dee5090ce68",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afb31c0b-2835-4d7d-a4f0-2c53eded8f3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "839e4363-3238-4f51-a37b-f84adc6dcbe8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "777674fc-af5f-40ed-ad51-62a17c838180",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "94bfaded-231b-4c94-b558-e010e19228f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55ea0ca0-590d-47b5-8b5b-7bb7da3871df",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8afc9a6d-c9d3-4c1e-ae18-cdec72767769",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b652b029-d2fe-4ff2-bac2-ae7f92ff2921"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a7ddd56-019f-4456-bdb0-9ceabb5fb1bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0580fbb9-70dc-4dbc-8f23-94382290af0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "496138c5-ce57-4706-b2a2-0f21c7d03fcd",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "460e43b1-8e58-4bce-9302-4b4c638d3c92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af67f49c-967a-46d4-9a11-5e4678e06722"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cde387b4-ea44-4982-9faa-156f38e8b2a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1d8e640-7250-48a6-9cfa-fc9ec903637d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a0ab050-a374-446b-87c2-ea7e2e2e8325",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0088cca1-b7b8-4b87-8c2d-43dcf7301f7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cf4fee3-5858-4eb4-a780-1dd15cd1dc0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e169865-3a92-4d70-99c2-1911213853b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d9302f6-b83e-4608-9d78-cc80947ebab3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d276afc-0590-4059-8a7b-3f35991f4541",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c895552-63fa-4871-b05f-4b1ad88c8d65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7de43a2a-c764-47f6-b57a-c4ff117ed547"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b091309d-8875-4e3b-b9ff-2588b3e1fc44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0bbcedd7-66f2-469a-8cc5-5daf08180631"
                        }
                      }
                    ]
                  },
                  {
                    "id": "219e9d01-d89f-41a2-be3d-73ac807565a4",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07e9bfda-83a1-4252-8161-33f0f1012037",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bb4f831-e608-44fb-9d7e-fa3bac400ea6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2324206-ed87-4d25-8d39-26ab8d19cb07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ccd2368a-87ab-4264-9831-6607c6b61f45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9492b8d2-ebeb-4ce4-a52e-b30a8af04665",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59aa529f-b476-4cfe-bced-72d0853bcb38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5402e29a-1e5c-4877-98b6-4fd05daef1b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9a822a2-80f5-4e65-9842-68abedc10f9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ac61e7f-d9bb-451b-8ffb-464e62a16706"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ef93f46-9fb0-4bdc-8a77-8b7a6d282114",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04edaa79-8cf9-469a-a495-58c9838bbe48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01d1b285-48df-44d9-948b-84dc4fe446eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b0f7f50-2a5f-4f2e-a454-d9d826cd63d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "970e870c-7b0c-48e5-8f3c-8fb1f9c8cf23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aca76dac-7e12-447c-baa8-09f02c7d03af",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b349c27-2f39-4f69-afb0-1357686b3e17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b5c0d6a-69f1-48b6-8ac8-b24caf71e968"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aedcf2be-456f-422d-aff0-f5fb78a8fe9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c4a3bb9-fcfb-4885-b773-2dc8e1396c83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4aa8a71f-e754-40e8-895b-3a046435c15c",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fa1ee7b-2461-493b-bf5c-33cca82daa32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26a8f87b-672a-49b0-8d15-332d737333c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04d48417-6643-4d89-9cfa-55728d0c848c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "19bcbd91-8493-4f42-9847-2518b0b9ad92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8638ea19-02f6-4ff5-b2cd-83409d0993a7",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32d7538d-65b7-4267-95bb-43f3060ca6af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f24fe29-ac7a-4c30-983d-fade1bdc8dd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55cb03e8-695c-4069-abe6-b6bfd43426c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8bba4893-867e-48e1-9ae2-cae3e4fcc5b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec76b187-8718-45f2-8276-2b5ba87ed0d2",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9a006d8-1440-4539-a253-67edc97b1032",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "217e4e10-b24e-4983-8fa3-3626bc0d7c74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc14a4fe-f641-4315-a6d5-a44f911de79a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3c3f489-e95c-4c11-802e-6e7d1c10a5ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ade0d98-8974-4154-ab58-21d196a56048",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45ed1950-6d1e-4ca7-ad18-6df467673010",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9c0d1d5-d4fa-4bcd-a001-af5287abbfc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8754926b-b069-4f9e-b0cf-8cb5ba3569d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9edf60d5-c236-4870-a9e5-33ecbc955aaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faf0b5ba-114e-4c8f-b180-f9a65b036f2a",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97ddcf19-b80c-40d2-9c04-8dca77250c71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0a84c6f-1181-45af-a007-8eceaa947e6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbe9bb99-f7f7-492c-8324-266fa39969f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2852cf6f-c6f0-43ac-9d2c-a0a256021850"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b33dbd96-0793-4b18-b31d-0b7db925fd92",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc4dc101-7a26-4606-aa36-51ec43610359",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "614b2211-6fe5-4322-a61e-342f44b498e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f1f8332-3454-4a54-8198-b2db136169b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2002f60-08da-41d6-a070-7c83c3d9012d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10b6b9a4-8876-4436-a11e-db47a7729942",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56558f05-2455-4ceb-b52e-5ada710dcd42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c932605-75bc-401b-935f-fc865c5aa999"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a5e4b9c-95d8-42d7-a5a9-096e13e3b7f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f969fe7-d4f9-49da-83d1-40543c654f2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dc643df-53f3-4629-b62a-2052d32b4aa2",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "389aca0a-d726-4be4-95e7-ce3ada2faae6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90d0e5f6-e8cb-416e-beb9-f447e5db3781"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2acee7f-af00-4fb5-a7ba-611dd6796929",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e62ac5b-da4f-4253-9135-4ba5fef40a49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddb57197-72f1-4278-8067-22a72574c2b7",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88ab4865-1799-48f1-af1e-3393a464cf73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbae788c-e5c3-4b96-a086-31dc14afb157"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "babb8e31-8362-48c5-8fc9-b2e06de93d8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e80bcc7-1ea9-4b6a-bdd2-ecbf62bf4e68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "802513df-a8cb-4493-9e04-5ba3c29f2fb7",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b05cbdd0-0a86-43f8-a5da-77205b83c91b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "941694b7-06a1-4187-8236-ca9c7b892686"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b2f5ce6-e213-4430-9af0-71a54b75384e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2713b657-f705-47f7-ae79-3556be8a1386"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47fc0e8d-8852-43c1-90d9-4b672bd8226d",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bf65a50-6888-4271-a7a5-e654df14c4eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe5a3278-c591-4984-b4c2-6e8d88186afd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bffdb25a-a76a-4644-8bed-e6189ef4d9e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3068da9d-d269-467a-977a-1dd181d515c3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f33bed19-0466-4755-8605-0796415f9df8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5e55ce14-6146-4730-95e3-d88e6d74cc6d",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdf53877-b10a-4260-a723-1348e2b71ccb",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "af6c6b98-0f04-45a5-aa92-e97405c4b990"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e47686f-d868-429c-ae6a-ca6432e8c101",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4c3b6f97-18aa-4341-836f-3ff1e62ec66d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2cf4f4c8-8dd1-4912-b225-6d572681b141",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e0930512-75cb-4c3b-a4e1-24f60c054dcb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f1aa39b7-945a-4399-8c70-8f171031b8af",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "213ce80e-83f9-4634-bf32-1b7c4a16d269"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fa529fcd-214b-4bd0-bb48-d2435754df5d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2af7362e-7839-45e9-abe5-f5d8796599fe"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "62526bd4-7687-4643-a93a-d5f3ed6169db",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7a1974a9-9a10-45e9-b90b-ffb6c94be31a"
            }
          }
        ]
      },
      {
        "id": "26c56bed-3f12-4c21-93f9-ec23a33c863e",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "7d92bf00-a7d9-4120-be34-c2b8ff235bb9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "125a2d13-818c-465c-a854-feecd328ec95",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c168bedb-b364-43ea-8df5-40c9eeedd567",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "063f8309-bd5f-479b-933c-8cc8a7ca2f87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ea1630c-12f0-49e8-9796-a0a25647da38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faf57dc6-5ade-4d7b-8395-4383adfba10b",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6637bab-8860-4b63-8805-42e46f72fbc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4739f67c-990a-4ed5-9277-e209f3159f11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "192d4661-218a-4439-adde-20b62e2e65f1",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3d843f8-f383-4355-8d96-3e746e5cb247",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a274b220-a32d-4bb9-a588-96f9d07d51d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2953b712-057d-4568-8b58-22c98a6b92ff",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81430c6a-61bd-4bd3-b642-031c5d8aba06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a625d834-7307-4cb1-857e-5f8cc46fbb9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce5e929a-01a9-446c-9cc7-b87f5423f31d",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed975e1e-f375-4f14-a084-5877dee7adab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdea2a53-bc0a-465a-a131-104c89fd9e73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6af12d42-62b9-4d50-a5f4-c5e7817533bc",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d302ca4f-c8c0-495f-8d8e-a54e8e4d5a2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "792f995c-8073-43fe-9d65-1b7a09373084"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4323915c-6880-4366-9a2c-65205af35f9b",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63c469a8-7036-4198-9232-c9a4c5d9c4f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0739237-15a2-4cef-84dc-1f4da6ce4060"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7312d499-20b7-410e-91d0-817da8828422",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79e52b15-e39f-4fec-ad35-23e05d136c99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cba82ed2-9298-41b7-88f0-f4f484ecf2a2",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8b754a0-de59-4b81-afaa-4cdc7c10ff4f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f62fbc98-577a-421d-90cf-f606a4dcab79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5d2d2cb-e41a-4726-ba44-38c59790e89e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "907bba13-01a4-4cf1-aedd-08270a01a2c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1dfd43b-5816-4337-9222-7069acd5a0ac",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac6e8e6f-db54-4cde-babc-f5d7daec4efb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "301c47b2-b1a7-4f27-a78f-2bccc9cc3579"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e18c81a-7e0a-4d7f-b1cc-ace4760e1b24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44eab3d4-a7fa-4749-aa49-226ca1a49800"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3e69ebb-3977-4779-982e-4e2577cb73cf",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff996ee4-1c4e-4196-8a61-f320cab2597c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e917580f-5a79-47c8-8d4b-3c19d4fec985"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6c381af-216c-4c89-bbc8-73c10d795206",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ce3f20b-4a7e-4855-aa56-9bfe5f99afa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f862d3a-bc78-4790-b8ec-9343f20ea75e",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d43d9058-9560-4e80-8a66-b9ed48fbd397",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a969485c-95f3-4c9d-86d9-a010965e1871"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "705d5580-39fd-4452-9012-a1796f4212dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba25bcd7-fc53-4154-ba1d-9842f69ee4ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03b8edeb-1e6d-4b71-925c-97bb7a8131b2",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6d8cb47-9862-43ec-b0ea-60d2269414b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cfc1d73-ed8d-4178-9d93-a8af41b8bfd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3b07871-c670-4155-aea6-7fbf2cb4d9f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "538168a9-5b7e-467d-b494-3174ae6c2a28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2aebce80-226b-4ac5-a122-744fc0ff3dd5",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61858310-f69a-4bcd-ba98-8133b38199cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3ab0ac6-0d38-4bd1-924e-7e5f8592f75d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4478c187-2969-46cb-ad14-3c3fc3db5207",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8a3be40-e390-4c27-9039-f4f5e17d5432"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61e0f1f1-fd2c-4008-8595-f1fcbf019cf4",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5e59d9c-48fb-491d-92f2-2355c005fa35",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de927569-9b46-4060-9e2d-a06a9e84f89e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c890f16-9a91-4014-badb-7c1cc9e6054d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "986df64a-1647-4691-bb7f-dad238038ea6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb41b1d3-ed91-42b6-a1dd-cf864a3aef9d",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b1bed8c-5ce4-4f68-b683-18a232f0ae6d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4df15e8a-c063-458a-8590-7c36db3e7b00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cea451a5-8403-41d7-b239-83875bdf49a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b89edd47-2fe1-464b-a37d-4bc6db9f9dc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "013d2e3c-7569-4f02-a2d0-a103cfa3f184",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6acb0370-e14b-44b0-a4ba-449b3e01e3f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "478c733f-6fda-4c64-97ac-a2767f6b16b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "009ab155-fbd3-48b9-8b89-2f811bf1b47e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ffadd0f-2002-40d9-b8a7-a3bb7b07ad48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "582d63e7-5905-436d-9026-d1e6c2e764bb",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13373ad1-b5d3-4d22-adcf-ae8bef7fb105",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bf802b2-684d-4e5d-85b9-45c21be11eef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9d950f3-7d80-40b1-903b-b3edd7930482",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "492387b0-9d4e-4eee-a6e0-0c7dbbd915a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3b637a9-84e2-43c9-86d4-379b96048128",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42244930-6562-43f0-9e48-8d9eab87312a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c18545f8-afc4-42ca-8d45-5aaa9c7d82f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9224ce1-d29a-45ea-a541-5bafeebf987b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "119c499f-f367-4528-b88c-db2b8c129893"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffcb0f8a-bc42-4f45-a0c1-72b0c5156c9e",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4547ca6f-fc53-4fc8-b295-5438013c4f16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e37c194d-3e23-4756-b050-f9dc1b428208"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a90f6c6-dfe5-41ef-9fbd-68b14ff5f89c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dfedd0a-7589-42b0-84ff-a02b9d5a457c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2ab92de-5627-4ecd-9f39-c66c86119d62",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d37c177-2054-44a8-92a8-3045172cb739",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "493505c3-c277-4cec-8d55-a7033493674b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4211016-7b20-4e8f-8ed2-d2eb762db321",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62f09bba-0b0e-4c41-8fa7-34c098d65c96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "335ba394-b21a-4a3b-b78a-52972a5868e9",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3ec13cc-9060-4d1d-90b0-9f25e37050d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bacd4b59-cd56-4fe5-9c26-59e9e800fae1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "162944ce-f803-4207-90d8-b43db861c0e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1e6eada-eaab-4531-884d-00cefbebb263"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3990bbdb-f385-4f88-86ae-49b2c90ba9b1",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d11faa22-aaf7-42e7-9d65-0a7efb0fe1d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65899ff6-5e44-4f75-82da-7b03a3fd2deb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d606ff6-20f2-49f2-b687-405265d4eb62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e13bb1f3-c333-48ed-b2a1-952a2b25054e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fea011fe-5ae6-451c-a09f-8f0b555dcf2f",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b04c41e-2c06-4b8e-b3ea-0227728aa0ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a1e5e0e-2a6f-41ce-b9db-21b5034016a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7cdbce7-f876-49f3-b568-8d98d1218822",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20c53ee4-fa1d-4d05-b0d3-3ee3b32f0fef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef9d7223-c312-4b89-af46-6c348874f913",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c76f81e3-487f-407f-8e3b-8f8e6611619e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a96396b7-f916-4355-9e2b-d1e731f0e742"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f520146e-5ab7-43b1-98de-eb87c3945545",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49e822b9-492f-4de1-b375-ef0dc1f36f63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11804f1a-04c0-4c99-b2c3-aad131dcd1a9",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fed27cfe-7ec2-470c-9ea3-32f77814f567",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "513796f0-fce4-4124-8788-94a2d236ddc8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6021404-daa6-4142-b13c-90d5342bf930",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c95edb10-3560-4310-b856-84783eb47c1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ab10a1d-f2e6-4494-ae33-24fe970b5f81",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c98dda77-1e00-4525-adfc-5a530677952d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8b07e98-4535-4051-8b6a-52ab2b92f0a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "caf12014-90e1-48f9-933e-2a81c4f2cec4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a69e88ea-5f31-4ca5-8960-e40fc75d6bd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8215c26-cbd6-417d-bf77-2d4875be04c5",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "229efe83-808a-408c-a5d2-f75febcf3706",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c630eaf1-be83-4b11-800b-10ceb3fb3ce0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dfcbc68-727f-40c1-bc5b-f2e04a7ef9c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf96b5df-88d8-40ff-9a27-a69a7b61dff5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc277198-93ef-4fff-9158-00d7c852a488",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43a2fdc5-f213-480c-b76a-51a2520c8c84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67ee1e5d-f99a-4e2b-8fb1-f51fa774a035"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aeb3924-6650-493e-9e38-b4cb593a1d6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cee7bcfe-adc8-473e-b553-fff40df4cb75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "979a4b0c-3d58-44bd-a54d-4bb934e7837b",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d17523f-3424-48af-8290-d4e24a25cead",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d053574-b977-497b-abe3-f105fa4b0517"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5ed062b-ca7e-4ee0-857b-48e82153d69b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d44a0e4-4a2b-4abf-ab18-e45703bb3aa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "331baa8b-1409-468d-97df-ad8d53c32184",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d204116-14be-4fd3-9631-202aa0b0a8b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7a34f19-a123-41d2-ae14-7b70f57de468"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da1890a5-d409-42ce-877d-d883b51bba1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7311d832-7d98-443c-a3a0-e386dc5474ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca40b3bd-d662-4f4b-8c9d-70cb7b6df021",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cd2f3fe-76ca-4d7b-bb7c-9687b7c5c4b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7390913-5475-4d53-a148-985ddaf483db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "617266ee-7f86-45f7-86cb-806c49a168d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f20b0575-d7f1-4187-bb87-1211e96e8c1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae9dcd53-2640-4b02-922f-8a3aeb17e76d",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "935809c0-d46e-4c85-9c18-dbcfa473cdc6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3d30bfb-d490-4d79-82af-6459d0d0c856"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e2d160b-a475-4115-849f-a4ed3c01c81b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1a31133-e0a8-4562-9172-bde378d8d715"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beb3ce66-e9e1-45fe-8e3f-3c00a0ebf302",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94c7adab-43c7-4742-8117-c215364d3a9f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c83dff23-7a0f-4bb4-9763-f394cd63d91f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a49394a6-2ea4-4d61-831f-a6a62da9724b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1010cf8-8b5b-4b6e-a44f-08b6b7381b4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89beb36a-8fcd-45ae-8e08-7ad9a20d29f2",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93b300e1-8d1b-47a0-aa06-27b4edf24814",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b110e0d-047b-4334-9dcc-17c8a5ac6236"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d0c6877-3dda-42db-b58f-2b3ab23b97ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43644434-bda2-486f-ae83-67833e6cb997"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb82ec84-537f-4c9e-a035-6b9096408cf1",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46bc75df-93e8-4fd6-88d9-06f4c7b9d9b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7078a636-277e-46fa-9e67-01c406d2922c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9351a78-1de3-4c45-84f2-e62374b4488e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0684e63c-9bde-4416-8293-ce35514d158a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4671a01c-73a2-491b-86e4-d1d009deecad",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7684cf3-4699-4b33-b6a4-024451048fc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "665773d3-749f-4c5e-a74f-404ff1884cb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71750b9a-1fba-43e6-a309-9b5310b5ef6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53b1b98e-da86-4fdd-be3f-82ea45d1578a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c829fe55-2b5e-449c-bef7-30850532f927",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3316ac9-7c50-453e-a7eb-4cce66822702",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be43e204-e38f-4185-8c93-d52bf0374b58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c053b3f-cd03-4254-aef8-7c0244d1ccf4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59858806-1c1b-4a52-8fcf-8d0b5964d988"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44d55f12-4c49-4105-992b-cbe87009fbcd",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77abf905-40cd-4bf4-b1ab-b359bd904d5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5b3fdb1-78c5-422c-bf2d-3eaf4a6f6371"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e382c4e-bd07-43cf-99ff-03a411687233",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "054bdb62-6762-4c16-9e7c-2e6eb7ea7e89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12adc0f0-7d8a-48e0-9b6c-44058b7f0656",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0321b77-e7f7-4370-99b5-9601e10b9b6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24cdb9bc-4509-47bd-b41f-d0bfa0dbdca7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8c8c65a-b8a4-455b-a0f9-4cac682be154",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5967d2b5-5547-425b-bba4-6c5e06c6c16b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a8fdbf8-87d4-48c4-bb5a-25ca4a0b5285",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3266fdbe-8ae1-4cda-b08f-01413a935917",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e69e5220-1598-4eb0-a60e-1887d86b45c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5289aff5-6cbf-432b-942b-3a5bdbd8a7ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "433b0f84-9208-4faf-a982-dc614cbc3226"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d8ff192-5332-4a6b-b46b-3c8cca7b47e1",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1736da8a-a188-4183-8c5b-17226b8c7460",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f19627f2-b053-474e-a1e3-b4ea048789ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0de032a2-d235-4a18-9c9d-3e0c8a4034cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38145f07-c4a9-4cdd-b544-909b9387d369"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eef24eca-8946-4716-8bd1-1c99d32dc013",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03f703bd-bfd3-4259-a552-6f33bdad6cd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af53d60b-f4ae-4c8c-8614-34c400eea418"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b501018d-1378-410f-8bf4-a11da8b5ee01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9161a5b-16ca-4188-91a4-31c15c6268ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "717d64f9-1bb2-421b-be4e-3d23c80f5b2e",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae994676-6920-4eef-b7b9-2b2d7769d40f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51a8cc07-b082-4dbe-ae9f-a6a85970fa1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4b26c52-d657-4b58-9611-c1e790f17002",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6ffda25-8e64-426f-9739-4b6925ada947"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7180b3d6-7aa9-4bcc-b530-78e885df6021",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74272b18-b2d8-4ea1-8d0e-6847c3c17e76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08cc4029-a213-43e7-8eb5-de1fa306be50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36dca689-ac85-4521-99c0-7bca52c0613d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb2a6d5f-0723-443d-8fe0-72357c4395d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8f8dad6-f88e-48f5-8de9-76fd82c642c6",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa09b16c-2369-42e9-9ad6-e6f0ee7a1e09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65fbb345-fa74-43ad-8ee1-4780573bc760"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11e50607-2138-4c5e-87da-23200d1e1b3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b86f1c9c-02af-463c-82ec-10f57e48e106"
                        }
                      }
                    ]
                  },
                  {
                    "id": "722885a6-405f-4361-bf96-0e360b41a3f6",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b093ba1-7492-485c-8566-d3b2193d9203",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5d00b83-1320-4b8f-aed2-830adfe46516"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be6d23bf-9aa6-4b77-9acb-7a7a92ef6bea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8b03bfb-074d-4b77-be2b-7613ca5ff42e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d25ad46b-f709-4968-9bc4-600d9f42e46a",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "730bb98f-e8c0-47f3-8fab-b0343719791c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a1d3354-6648-4c6a-b840-511ffd1f0328"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2e1136c-2ece-4dce-a3f6-676129f6609b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4487785-6586-4e93-bd67-0f41a701474d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f23f037-290a-4c13-a63e-d2308762e71a",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1f4cd7e-b648-4f8a-9983-cb8a6dbb5416",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a25124ca-b610-475c-9425-9985741bceb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e08e8baa-b40b-4626-af6d-e09687d56b06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e3f4298-20ce-40bd-a59b-d5dabec84e76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "987e86b9-4f79-4f3b-b507-f73b5030de9d",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a37254f-f6a8-44d5-b8f7-b36ca30ed492",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89c514b9-a104-4c88-896e-18088d709f84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "744d7cc0-2720-4478-b486-1c20ba63dac3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "503272c3-315c-4bc5-922b-96d4bc3403fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52492ca0-860a-444e-be61-46fb6ef31728",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbd3f097-b3bd-4260-b6e4-64aa82ad1726",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8af3950-81d9-4dae-8f99-558367016d4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9cdd678-c448-46bf-8141-a897822305f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af9b6aa6-b4d3-45ab-817b-2b53d99d0e7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf263844-6af1-42f9-8667-a1033f2aab6b",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0bd85be-1ff0-42f4-b28e-b65170b78e6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "024ef997-da3e-43f1-95e1-13538436ad10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "218bd3a4-abd4-46c2-b860-6b4c17d1df99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d4aef3d-74db-4e75-a5fb-5b698e4b51d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28de9b33-9a80-4d70-974b-16ddaf6d2537",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ef6785f-bb37-4ffe-8c92-3a2c5454222a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb7dd5b9-804a-4d34-9fda-2f51182b2f80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fba2aee9-686b-4312-819d-b87c41e88fd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e164911-0770-4a27-97b9-59051055e85d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "012e8208-fbed-41a8-85ea-ff901a0b92b5",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c50bc07-d98d-4b2f-967f-ee9d7db2ddc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "555af33b-b17e-4350-a7b4-cb4663547fdf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18c6aff9-14be-4a2d-a7d0-33a7e2c19c75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e59939d4-e3e2-4906-8522-05aa9e2be92f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5f3b3c1-3d58-47dc-9d78-2b9801434fc2",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3adc1004-984a-4004-8d4a-51cbee7ef096",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "619564de-a1f2-459b-b690-6cf8815256a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef0d595f-90fd-439c-88a7-ae0594cd2727",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "841521ca-bbc8-4350-9fc0-b2f1cf6d567c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b618ac3d-57ab-400b-89d1-aa084bc9d036",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "718dcf51-839b-4338-9b73-fec4ceb18fa9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "620b1f37-4d00-4a3c-84e3-7fd0890239f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60bfcecb-9f98-4685-89c2-b2180b6e46fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b4187ea-08e1-4bbf-a310-58ccf349fc7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40390fb4-6632-4c11-ac28-6cc7ebdf703f",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c5cf6ad-5c1a-4b8d-84f2-5a2de1ac3315",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c694ded1-780c-4174-8c1b-ae71ad7d179e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de5320ce-a9bd-42b6-8ed0-37886f14bdaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be3354bd-d46f-4aaa-98d9-38f750a7a68b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdadf13b-c495-4b7e-890f-45cdbf431bb1",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "637fa681-0537-4790-a7fe-6f13a4f75385",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9b19283-7478-4b38-b267-9a5f331f1370"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "353184cb-ccc7-4e00-936d-676349d2e500",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11cfa7a3-9118-4c86-85b3-4d2dfcdb025c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1397ebc-94a0-4630-9761-3b80928868b9",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3abdf656-6658-4a43-8832-fd6e249954be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d03eefdd-c2ed-4261-b749-28a43db9add0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dc1e665-e11a-4f5d-8906-217afcbd3d2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6310073c-6b18-4da8-8940-a4030b754569"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b9b9414-24a1-4853-86e8-43b3711e15d7",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66857bc3-00a7-4b0b-9697-3db2b6f73449",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7da9e46c-8a89-48f3-9c37-7847bd609258"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5ada08c-4565-47ff-8892-2edf2ee06821",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f4c172a-3468-49c9-8dc5-cc766f4458ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "191f7648-da34-4487-b554-62e833d41524",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45afe195-bd48-45b9-8bfe-bf238e1d5da2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b4cf24d-c217-41b5-9eeb-aa879e85d16d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a0584f2-8451-46a5-9dc9-267d1724ef43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61077971-315d-4e1d-8582-52cef80896d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f1dc2a1-d355-48ba-b62f-3b1a1bfdab82",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "626eb509-4ce5-4933-9a09-54ac01afcdf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a17ec9c-1ad5-4641-bb17-d15219cbfc5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "206b8385-4f8d-470a-8fab-f1c67df4a353",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3543e6b8-4fa5-4e2a-8670-7e0286dfc0b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25c1d78f-0bfa-4a68-9bc4-01455936f574",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5a6b62c-cdc8-4828-8b1f-f6f89c981d5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58f54aac-4d2f-4252-9602-601106f20b6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edf91979-3e23-4a39-9617-b71c1bbd269b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3744a241-cd61-4bdc-aca0-c752d1168a8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf15525f-a87e-4ffd-bcf9-f43afe158092",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27f20b63-4ed7-4a3c-87ba-93fce5f6e013",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31434988-5694-49fb-aabf-03d69614a7f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0e1d720-857c-4fb3-a417-0fbf528d54cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "286a6973-f32a-493c-b24e-b51147890c7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "787bf737-fd55-40be-bbcb-e94d8c389ab0",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af7540e2-6d39-4431-ae95-3daa315a2278",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dbfd8f35-753c-468c-b79f-e16fb1b1f0b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "358a7fc0-446d-448d-b1f2-230e598eee9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b2360c5-3b5e-4db4-b363-f6552768a0fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81b62793-172d-4fd9-9217-047222d1f301",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab9ae5ce-8a27-457e-b908-f914a791b5cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a083ef16-4be9-4d60-b012-b59549183c6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79ccf9f3-6012-4a05-a68a-6280773ea53d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb68d2d2-9408-4a58-943b-7e0388c7add4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d01bfd31-3ba8-432a-abf2-5e6da1aff852",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9438e90f-4c20-4358-8ff2-3f8836657dfc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d6d99f3-3647-4da9-ba15-2b0ac05ea5e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5580c836-1ede-4df4-b50e-88e58b7f2c5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8b27cf7-aa6c-4f0b-ab44-e595e14d2e6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01559441-a10c-4f8e-b773-3da50f6f376f",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33642ea4-a773-46b9-a27a-9bebeb3ac76e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a62ef16-cc21-4f7f-a9f8-12a342ad4f8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7140386-a029-47fa-b931-d73cef982b32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad2e2b1b-172b-4025-bce6-4b61f136b5b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "292cb043-cad9-4c77-ab08-91c4030fbee7",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47057e9a-0d08-4ee7-9fa5-9c9aadea22a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00ae6bf5-c5d2-4dde-9b2f-a245e6582579"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0cf1a7c-f086-4fbb-8925-24d58f6d0281",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23de2d3c-bd42-4f04-904b-ce8ce2177531"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c1bd74a-ac14-4c24-a635-9ec1cfa829e3",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf4950cc-3a38-4bae-88e4-deb5c0d15215",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db552862-079c-4a67-8431-a5cee9d4c41f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fa90a79-6659-426e-a839-26e7cd754c77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb9de26b-aaaa-4b50-a074-e77ca8997a0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7aa69f43-4bc2-4225-ac84-8f6e493742cb",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff04d41e-f911-4166-a156-43cb7704a891",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90085937-48c8-47bd-8a74-4baf73ad5633"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3f13ca3-0103-4d0f-a159-d403e21dad5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de71ea78-7394-4bb5-a2b8-9cac4e96a837"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b05752d-6406-4d59-81bd-8d30ecc38d1d",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25701ef4-981a-4960-b03c-8e77f6c16638",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7749c0ab-125c-44a1-93c2-2310d7e53fe7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44140ceb-3f9d-41d3-896e-f5bd1bfbf617",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d5a3212-7d2d-4e1a-9818-cf215f476166"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e949f2c-3141-4f74-a2b4-cb8b613d0e94",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8ba01f9-780e-422b-a9ea-a70e037753f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a67c845-a146-4260-8947-d296d25a0602"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8503ddc0-b8c4-46bb-9b0b-9a550a482e7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e619e48c-c930-4041-96b3-901cfb04eb54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2004b141-d54a-4530-a723-1e0da6ae99ad",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bb063f5-10d4-43f3-b961-72064d6c32fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99b5bb67-af35-42eb-b43c-64612c31e15a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "501db95a-8c09-40e8-8ce4-8035758c3960",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8655cab1-3f4b-49c6-bacf-e1aa75bb145c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9015fb23-ad2a-4917-a8df-8392ee1f2c5c",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b462f9d0-7f47-4d0e-9b69-915998a87ba7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d43a80b-f80b-4253-8633-71c0feb7c015"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b37c58bb-1aca-44d7-8e31-08eb6876c1bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5300dec7-c473-46c5-ba6a-1b00bf0b9252"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4aba18d0-ef1f-4d8a-9a29-0d193712e1f3",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3588e17-8b23-4672-bb29-f9aae6edf5a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42b2c05d-6e8d-4408-be4a-cf66c16d3fd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9da9bf01-4e5e-41b1-b2ae-8e53f735657b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b6ef3f5-3705-4e72-81fd-c791770eae5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76f22a6c-dc76-4a02-a6fd-4f6347551464",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dbff76c-6c6d-436a-8e12-5d74dfad0f76",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a98fdb90-39fe-4908-b9cd-2815a7fc64d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31c436d9-ed8b-436f-a7a9-92bfbc2415dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab043575-f35e-4eee-bf86-f8a86a22219c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbf75721-1515-494e-822b-619f4089bac1",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c4ab5dd-1720-4f60-a06a-3e614712eb26",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d3b5c1c-79d7-4fe1-91fb-6de6964543d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "941d86c0-510f-4825-a9ff-0280c73ede81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4aab269-3010-499e-9d91-09bd508ec623"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fec7bfb0-48e5-4528-84c5-13d9c27922fa",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "201c88d6-b1a5-4725-ab27-7ce75f8f3396",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "82f89fd9-a564-4b90-a975-030861327878"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcce83e6-6cd7-4945-8063-8288f7850b36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "725bcc41-0e45-43dd-94a8-608b533ea7f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99dfc609-eb9f-4476-9163-12a474b7992b",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77315f57-b057-4e9d-9d50-8f33bc418aa1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "963ceac4-680a-440b-b85d-46fe17954814"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7a3e8c9-669f-411d-8f5b-a6cb8daefd5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebca7522-ab92-4316-abf0-bc3cf32599b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa300947-a3b4-4161-8d5f-89192c7cbc75",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f42c585b-6be6-43a6-9b8e-3123ed5f6706",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56a783a2-3596-4520-a489-2027beb606eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec807285-807f-4fed-b933-cf4039e94dba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfc93eb6-c1d6-4578-897e-8a5cf7f7400c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9ee6d44-d45e-4552-b186-c725168e2746",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d227a727-dd5e-4e67-9660-ab69ebcceb99",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aca94319-951e-40a4-b88b-d5a96f694a3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22bc9a00-5b27-4d7f-98ab-64e797943fb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f3ea887-ec7e-4a12-a034-e7eb65b54dab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe546d34-2443-4301-8bbc-b95f62f4500d",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d41da652-b4da-4659-a3f2-8662f1f0efd5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36e80f64-f849-4ed4-9a71-8d22f7894feb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48d0cc27-c467-4ab0-9c77-1aaa9b01d758",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4394e74-78d8-4362-b1dd-76f5777f9718"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c482eb21-9fc6-4232-a178-1c6cb95da5c0",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e37c3e4-c82a-471a-9346-78557f2e7e62",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3a1d630-d02b-4107-a3fe-440ca66f2bdf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30ca531a-25c2-48b1-b08a-26fd1ba26d0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed603ab5-875a-45da-a01e-6bf7da3ce30e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c3161b6-dc41-4f46-ba40-dc6aef08d1e0",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53273071-cf1c-41d9-a3ef-6d5a4f99a8f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ebddc870-3694-457b-af1b-c145851e99aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a17ba88b-c4be-4f00-ae68-2c5c0859eda9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10d7db84-c006-453e-8677-fc3c7609e851"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a8358b6-0b16-451c-b960-f12fb1fb6e29",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "392181b2-b616-40ce-beda-66a5244aa84d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b378f76-24ac-4ec5-ac29-348dbb31d84c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f18f82d-a330-466c-8109-838585f7479f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0424f521-57f5-4512-8a49-a61d6b3101e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "465b900b-1207-4e23-84b7-e9a63c579d19",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92cfa1f0-3070-47e7-a984-b65147222ffc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94da327b-95b9-47ba-8642-03b680890ba7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfdadad7-73d3-410c-9a43-0a6ef984cd1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a364fdd-b775-4b85-85c1-2b8ba0996319"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ee468a4-dffb-47a0-ae60-021b342230f3",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e202d99-2874-4ea7-bc93-d4bec7eb9841",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93177f15-3d72-4f80-b0ca-a81266fc0797"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35ed726b-cd18-4bb1-a040-640d6894f9d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee0c59cc-d376-457b-8646-c1d4c3176d5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8addc749-91e1-441e-a7e2-ba95804bd13c",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49b085de-6869-47e0-b89f-173bfaddbb82",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f572e15-93c6-409f-8659-c8a294a2d32d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88de9eec-7431-4fd3-a595-7bcb1029c7b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31968773-a0dd-4c6a-8f15-b6fc27c89915"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f36c2d41-bfc9-4201-8627-484260673e3c",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47fc18ca-862e-4ff2-9724-708d82530952",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3d237e4-1b27-4232-bec9-02090afefe2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c29eb18-e9c6-457a-a74e-cd1deb28cc8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d3f2914-9230-45fc-a6f5-1a2fd27fcb2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da6f80e7-2eac-439b-80d4-e7e2eb0ae4dc",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c494e82-c5dd-42d1-bea9-19493db1c394",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7e69110-d0a9-49d7-96ee-4985204659e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82e4713a-28c3-4984-b8a9-0667ab3641c1",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b358fda-b4e2-4486-b631-ed3b3d1d9d56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dab2e3e2-1bb3-405a-bcfc-b3314ba419de",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38c91d7e-5d66-4770-abd0-633405c7fb96",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b7f7a7c-aa51-4b5f-b1b3-14e1e3636446"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c2dfed9-31be-4654-b665-56b228698680",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d5e2b4c-d2e0-4a52-8297-063159c0fd40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71d9017f-24ad-4cb9-94d0-8ede481f138d",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb60c507-127e-43a8-affa-0131b9455100",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91dae284-a2ee-48fc-a6ec-767e24f663fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28a9af2a-4a11-4fe3-85b2-c86cf46582e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "299a8a8a-0303-40ac-816d-72f10c8b6c2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "041b1329-ea02-4531-a416-b22b57fc9ec2",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7062df1a-2a95-4931-8e17-cb5016ebe08b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2f352cf-92ae-45e3-9845-55b665f32224"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea03e686-17a9-4c50-95fb-39ab526e0edf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ae94c5b-a3a3-4878-925a-cffde2f659f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ec7eacf-87f5-48a2-9d6b-b8d7fff4ca38",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2800790c-e20c-4257-bbf9-cd6d6ff00cc9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d7ee267-aa1f-4d95-a74a-2b671e1e6bc7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efdf12ad-5db5-435d-bbfd-b2fc922c8200",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed814bfe-2865-4573-bf10-a6c05404ff82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16f912c2-b96d-4957-8cc4-16b7490c79b4",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ff05273-d229-40e0-be21-cf89266a3248",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "adb87e7d-0054-4dd7-97a1-a741346d6a94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ea50838-1731-4e5c-879f-8b4e77e12763",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c590e8a-7079-4ce1-baf7-34b24a83d3f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9420d4cd-6c7e-4f57-93b0-3cf681811d2b",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84efdc17-7472-4bf1-82cd-f34bc8f7c018",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe3fa3d9-5b17-4747-901d-d860cd3b27e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3170b2b2-d07f-4488-80a8-80bd93d15fcd",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b712a736-32e6-4d51-96d3-73c7551faa4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38517f57-2452-4ce2-997e-e98223600d82",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "884829d5-53ce-474e-ad31-26454a9176ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bfae5176-5d56-4821-bab1-baaa0dae75bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75fe4b4e-fd38-4b74-ad54-090c68273620",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25edc94c-bf09-436f-9b37-f42c55bcf1af"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5e0ea5fe-eda9-4241-a746-dd740ee66ffc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "773fa3b6-2271-4aa8-96de-ab10d5b8b3ab"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "08722b45-8c14-4c49-8846-324e4034dc89",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c8a4148f-8780-483d-b7be-642631fcec76"
                    }
                  }
                ]
              },
              {
                "id": "80ca6d2e-0db3-4260-9f88-9471bc98c736",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fbb03ca5-4821-4ab4-baf5-2f072b3babac",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7f2fa95-850f-4fd5-909f-18c8c7d856fc",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "d10260e0-68b4-44ee-b3d9-53499f548de8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "217e35ad-ca57-49b3-9fd4-d872c3856ba0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3cd1d5d4-1846-4594-add2-518910fd7ed4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "55c46fde-8f37-4f76-876b-9ab5218f1a0f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "82769335-6b67-442c-8122-1e17f2e54893"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "74936349-996b-41e2-80bc-b53b681ef84b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "92c1a557-186a-4d7a-bafc-eedd710870dc"
                    }
                  }
                ]
              },
              {
                "id": "ccee097c-fe46-4923-8254-999e9fa78ffe",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "d77dd36e-58de-4c83-ab2e-5b6c7c0a5180",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05817f4d-1321-405b-9024-a9df6886ba6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "add42872-9656-4f6d-b514-ad4e96e8b3a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc1fe5c9-eeec-4f7b-ac9a-6e53f85b1ee7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc140527-deef-4035-a910-7d5f9b6974be"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "efa9a487-eae9-4175-bcde-a64992054987",
            "name": "Positive Testing",
            "item": [
              {
                "id": "10028023-ec31-49b2-bad3-0a8074ac5c7c",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5561597a-f582-4de7-9a0c-894acfd2a49e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "31c1441a-feb4-4450-a83b-d44a4ccb33dd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1da07db4-da4a-45cc-92a8-13d887ba6e4e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "227cdfb3-e35f-47d8-8de5-69112d0f4024"
                    }
                  }
                ]
              },
              {
                "id": "c0b25c9f-802b-481a-9bde-edaa0bc04e68",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7b8e4403-0dfb-4679-ae05-46d8967fba01",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "4c11513d-8ffe-4654-94cd-2e3d29ec7085"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5ce5122c-838e-44d9-af55-c1bb01ee4be5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c19f4dda-7899-4066-b1cb-a4a8b5b145ff"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d952f698-b4f1-4823-9b1c-11c94a1b1fc2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "d9056e46-d764-431f-a740-ef3dc722138b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4f1a9c2b-fe8d-4545-af9a-34823c588e19",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7edf5d3e-7de6-456b-afb8-87ca6220daf3"
            }
          }
        ]
      },
      {
        "id": "e89914c5-04d5-4a37-88ef-87460531c851",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "139a6afe-ae84-4b0f-bc22-65fcc306946d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dbef2130-31e2-473d-964a-718711616b50",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "df38a7cb-1c9a-4f65-a1aa-b3f3f5dd131a",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3f2df84-c449-4d48-81a3-fc4a74eb0516",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "686b86cd-802c-40cb-915e-46603e643099"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "958a00ae-54b9-44ea-bd03-48acf5b17b46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3fa00a35-db86-4ad7-a332-2897f5aea717"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "703ff2fe-8208-4941-ac48-b036aff69b3b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bbc279c8-c78f-457e-a2d2-308af96e3265"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c43be78d-c547-400a-ad33-9b11e0ba293f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e9a91c87-ce1f-41e7-b2b0-978dc9a23e41"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cd3c9e36-f0d5-4933-975f-62c08a4517b7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "aabc6e56-af36-43ad-a364-5e0b5b95bff7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ec69bfbe-2733-44e2-a05a-458e89979ba5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "84daec1c-a56b-4f7c-9c25-192a93498d51"
            }
          }
        ]
      },
      {
        "id": "e44705f2-9442-4394-b88c-4bfeca40e699",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "92284c88-10d3-4c94-aaa1-0a38435e4c77",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a4366c04-1e7d-45ee-941d-72559c728f53",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "260f673f-2228-461a-a729-0d2b104b2b15",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4307fb8-da18-443e-b5da-5655e9a3da45",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "73f5c3ea-97e8-42ab-88cf-584ee4bd7087"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be009c77-1d80-493d-b512-14033337966d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9daa7503-2902-4e0b-856a-2552eb973993"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2b8a8547-8e41-40b1-8faa-5ad4ba9e4cb7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ec6325e8-50ae-4c57-8d40-283fb1dfaa09"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6db341a6-4916-4f29-af5a-6d551b7defc4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8a9e353b-ee0f-4325-b2fb-1facee472427"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5c9a6d03-b743-4a0e-935d-970b77c95835",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9ee5ab70-86c5-4ec4-a47f-da1beb2eb396"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1d1666de-f5ec-4975-bee1-ec99adc74a5a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "70462df1-421d-4efe-9525-8c49cfd59a9c"
            }
          }
        ]
      },
      {
        "id": "04800686-ae31-43af-8ff1-ca67f49b2ee4",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "cb474326-7e9a-4e99-b26e-603b955c863f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e0f3f17d-6b57-4ced-ab21-673d4fa6b6ee",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b08119ae-9fc9-46ec-8752-5dab108eed0a",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d582f2b2-e82e-43ba-8620-d086c1fe2591",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "020a8d75-a0f5-4843-bd99-ba19a417d2aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c01d53ad-59ed-4a71-916e-b41bd7d0b857",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5d796485-949d-42d3-a59d-f07659d4c56c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "78618a10-2c45-4047-97d2-27c0a1bfd4fb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b514e9c8-50c9-4009-8955-1999724ae95f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "85411154-dde7-4c11-b752-5d39c799cd3a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d954f84e-5175-4933-8973-f46706e19602"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e27b4209-0179-4f38-b672-1f7dff9e3b11",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e1ed091b-e59b-4517-9674-7d2429edca9f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "da70fb42-d490-45f5-97a3-ab62f1c4594b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0d3f0e81-1266-4d93-ab79-0425e03b32de"
            }
          }
        ]
      },
      {
        "id": "917a3acc-a158-4c32-a66b-e52975a05ab2",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e9232063-5ea2-47bb-9d48-cfd17deaa58e",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "aee68563-5967-42e1-925e-e92892b21048",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "3ae8a48f-2217-452b-b2ee-8dac7748fefe",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "51941f35-9a1b-43e6-9111-2fae499e7102",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b4efe977-fb13-4969-b734-8b3a327e9aa4",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 5
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 249.6547619047618,
      "responseMin": 6,
      "responseMax": 6901,
      "responseSd": 1032.1775198084663,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1718066280488,
      "completed": 1718066352493
    },
    "executions": [
      {
        "id": "e68fde06-b216-4b6a-8597-5297e8190ef6",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "b076905c-3e23-47c8-8a14-8ebf54e81f8b",
          "httpRequestId": "8022f62f-d72f-4d9a-afe4-6c599dd061c2"
        },
        "item": {
          "id": "e68fde06-b216-4b6a-8597-5297e8190ef6",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "a639f8e7-443b-4af4-8875-b3b9d044654d",
          "status": "OK",
          "code": 200,
          "responseTime": 48,
          "responseSize": 0
        }
      },
      {
        "id": "e3028422-5343-4809-8519-a227517f6316",
        "cursor": {
          "ref": "2db090f7-2132-4d81-bb6c-7385a53fceca",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "ab2754e4-acc1-40e3-912d-d2bad018ea02"
        },
        "item": {
          "id": "e3028422-5343-4809-8519-a227517f6316",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "a298cc2c-8e25-43df-93b5-6c983f23a48f",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "45241b83-a07e-4692-a534-f748ed5c00ce",
        "cursor": {
          "ref": "c1618e8d-f97e-4607-8315-f4fb83ee0b85",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "ecd00453-3a7d-45dc-958d-1d81ce5bc194"
        },
        "item": {
          "id": "45241b83-a07e-4692-a534-f748ed5c00ce",
          "name": "did_json"
        },
        "response": {
          "id": "70c3327c-83a7-4451-803c-805ad0bfdf2a",
          "status": "OK",
          "code": 200,
          "responseTime": 175,
          "responseSize": 1024
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d94a8c4c-a14c-454d-8fda-4071d5e7feec",
        "cursor": {
          "ref": "40699c62-0b1e-4afb-9387-878b9b599b21",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "d65d7aec-3b23-41ce-9b28-51eab81046a8"
        },
        "item": {
          "id": "d94a8c4c-a14c-454d-8fda-4071d5e7feec",
          "name": "did:invalid"
        },
        "response": {
          "id": "f421f851-9938-46a8-a625-e112c29267f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1902,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d94a8c4c-a14c-454d-8fda-4071d5e7feec",
        "cursor": {
          "ref": "40699c62-0b1e-4afb-9387-878b9b599b21",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "d65d7aec-3b23-41ce-9b28-51eab81046a8"
        },
        "item": {
          "id": "d94a8c4c-a14c-454d-8fda-4071d5e7feec",
          "name": "did:invalid"
        },
        "response": {
          "id": "f421f851-9938-46a8-a625-e112c29267f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1902,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e191647-a31c-47de-995d-5da23025110e",
        "cursor": {
          "ref": "261a81fa-bf02-4dcd-bbc1-255b5e5656bf",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "ab06c511-fb40-4841-9644-888bbec38ce9"
        },
        "item": {
          "id": "8e191647-a31c-47de-995d-5da23025110e",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "91c6e9ae-d096-4026-b556-2fa6ad5709d7",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 2627,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 404",
              "message": "expected response to have status code 404 but got 500",
              "stack": "AssertionError: expected response to have status code 404 but got 500\n   at Object.eval sandbox-script.js:1:5)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e25bcd9-247e-4811-991e-f84be4ac1eac",
        "cursor": {
          "ref": "38d56504-d41e-4be7-9f1a-5755184e3c97",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "42fab918-9211-48ca-9aaa-dedc3cc3accf"
        },
        "item": {
          "id": "9e25bcd9-247e-4811-991e-f84be4ac1eac",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "8db427c7-56f3-417c-9e7f-71a20fc31464",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1889,
          "responseSize": 23
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc998175-187a-48cf-a9a4-2c643ca83ac9",
        "cursor": {
          "ref": "f618591f-cad7-4d07-8138-c6d31c38ac3c",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "c594ae92-a573-4db6-a7d8-8a4fc1ff763d"
        },
        "item": {
          "id": "dc998175-187a-48cf-a9a4-2c643ca83ac9",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "ea9a502f-ef47-4dd5-865f-64bfad84cbeb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6aff41f-db90-4f86-ba04-bbd8fe3c4c88",
        "cursor": {
          "ref": "4b3fde5b-10f9-4397-87a4-30b6f09bc7d7",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "2be25949-e1d4-4d78-93f9-baad7fa08587"
        },
        "item": {
          "id": "f6aff41f-db90-4f86-ba04-bbd8fe3c4c88",
          "name": "identifiers"
        },
        "response": {
          "id": "882e2c37-4b44-4a69-98df-99cd7127d4b2",
          "status": "OK",
          "code": 200,
          "responseTime": 2211,
          "responseSize": 1040
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4276c6d-0857-4aad-b8ad-ecece6e9881e",
        "cursor": {
          "ref": "03a8f473-7969-46c3-91b8-4a6a6c9db851",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "5db73b11-680e-4501-b18c-31284edde372"
        },
        "item": {
          "id": "e4276c6d-0857-4aad-b8ad-ecece6e9881e",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "ab5e9c63-9881-46d7-b2d3-829a21c79acd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe11e42b-67c6-44fa-b432-337a60602034",
        "cursor": {
          "ref": "9bc4bf47-b822-4d6c-a19b-99ae5f039c2c",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "32fbef67-8c00-4470-8eeb-193804d19a9f"
        },
        "item": {
          "id": "fe11e42b-67c6-44fa-b432-337a60602034",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "69db5e3d-5c91-47f8-9f73-79bb57739180",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 89
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a56ba90-abcb-4efc-8624-747845d39317",
        "cursor": {
          "ref": "76e89a61-f2a8-4ade-b5f2-d987eb8c12f9",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "bd1d1a43-e7f9-4d5f-beb6-4583f133139b"
        },
        "item": {
          "id": "0a56ba90-abcb-4efc-8624-747845d39317",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "551f433f-18a2-44d5-a0f2-d5bdffaebfc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09c57fe1-31f6-4eda-8948-8173f06e8896",
        "cursor": {
          "ref": "b17e8b8d-04a8-461e-8f71-661d0b0cd577",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "7f142f18-a448-4ad3-870f-259d4ff84051"
        },
        "item": {
          "id": "09c57fe1-31f6-4eda-8948-8173f06e8896",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "14d9c58a-32f7-4660-b816-5cd5b04141a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f59d981f-bc09-4349-aa4b-1ea2704575ed",
        "cursor": {
          "ref": "2e072c5d-3a3b-4193-a873-44eb0527b987",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "01cb29a8-41b1-4603-8ccc-e7ecf320f630"
        },
        "item": {
          "id": "f59d981f-bc09-4349-aa4b-1ea2704575ed",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "01b39e35-dd65-4712-b75e-080074a2b156",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe296983-56b2-4610-b22b-f9667130eedd",
        "cursor": {
          "ref": "a0997604-d78b-4c49-b027-15223abb87a4",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "6d56c877-64c5-4abb-8b67-a721626cc8cd"
        },
        "item": {
          "id": "fe296983-56b2-4610-b22b-f9667130eedd",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "c67291d4-ee5a-4746-b555-d774a03abf2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfc318e2-e78a-401c-9f01-bfbf300a716e",
        "cursor": {
          "ref": "0fac6555-cdb2-4929-857f-6725b6935eb6",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "984b536e-9475-45d7-a49e-5aaef12c406e"
        },
        "item": {
          "id": "cfc318e2-e78a-401c-9f01-bfbf300a716e",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "bff898b0-caad-486c-b90b-3393327aec67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "860e2b40-93d0-47e4-9640-f28032d522c5",
        "cursor": {
          "ref": "ebcdb866-b0c8-4383-8da9-029ec888a361",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "a6620c79-061c-4476-9f6b-88bfa9adf465"
        },
        "item": {
          "id": "860e2b40-93d0-47e4-9640-f28032d522c5",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "ba0a36ad-2600-4246-9c46-8698cefc5d42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3526c939-be14-4462-8b04-d447bae1e24d",
        "cursor": {
          "ref": "dc72241a-900a-41e4-87d6-35bc72fa700b",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "b8152700-d593-446e-b0fd-30f3ac0a8238"
        },
        "item": {
          "id": "3526c939-be14-4462-8b04-d447bae1e24d",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "c2c60081-8f62-49fc-b871-0aa014217280",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "409c07d5-e5eb-4fec-9c4f-4efd0db63f90",
        "cursor": {
          "ref": "35f8acb7-97aa-4462-b6e9-9b7b303b20d0",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "45cdb2e6-9156-4961-923c-bec7d764aef3"
        },
        "item": {
          "id": "409c07d5-e5eb-4fec-9c4f-4efd0db63f90",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "d2bc8623-7746-4c9e-9049-78fa50e65e11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f3795bf-c90a-48bc-b2ee-30039aadac4b",
        "cursor": {
          "ref": "389a73bb-f30d-44f6-aac6-ee8e5f1310b2",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "620af62b-5d66-488a-9729-f567aea5baca"
        },
        "item": {
          "id": "1f3795bf-c90a-48bc-b2ee-30039aadac4b",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "9b55b45e-4d6e-4563-9333-dba2fd030a71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0a3c21d-ff83-4af4-88ef-4bae637c429e",
        "cursor": {
          "ref": "ce08c63d-379d-465a-81e7-02377c9cb454",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "07b1d48d-16e9-41f0-8e4f-0d69c8885002"
        },
        "item": {
          "id": "a0a3c21d-ff83-4af4-88ef-4bae637c429e",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "6e36cb74-0dea-4503-a6b8-3b11a6f8a85f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6a8a551-f701-44a6-8094-79853d6216b4",
        "cursor": {
          "ref": "d55cfc7e-056b-43a9-b26b-e401f164a5a1",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "cc137c70-87bf-47ff-939a-ca500fc5dc07"
        },
        "item": {
          "id": "f6a8a551-f701-44a6-8094-79853d6216b4",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "3952dd8d-aed9-40de-a162-4ecd45ee55f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3da8c820-5c41-4107-b959-343ac3077eb5",
        "cursor": {
          "ref": "ab3bae45-73ae-4274-862a-375e4a335319",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "37bc5f10-7283-448e-a344-5b95dcd3406f"
        },
        "item": {
          "id": "3da8c820-5c41-4107-b959-343ac3077eb5",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "ae9c6e40-a8ae-4e55-b3aa-3dacf15841d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0427d3fb-a6a3-4596-9208-8b33bdd99259",
        "cursor": {
          "ref": "8e7b8b40-2f5a-4fc1-bb2f-0f714d417e65",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "d27fa9a9-9b43-4e6f-a424-2944e1c36e9b"
        },
        "item": {
          "id": "0427d3fb-a6a3-4596-9208-8b33bdd99259",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "19ae1da9-98d2-4bfc-8eb6-16651b6708d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7267f692-214d-4b4a-b0d7-dd3bd27e1bdf",
        "cursor": {
          "ref": "96a7e345-38d5-4cb8-8ddf-d415b95634d1",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "362d2c05-383d-4d1f-98da-d98e039412d6"
        },
        "item": {
          "id": "7267f692-214d-4b4a-b0d7-dd3bd27e1bdf",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "75570fdb-6ad9-4f9b-a5e6-e5520f4f3226",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d1b4768-922e-4421-b15d-c09d534661a3",
        "cursor": {
          "ref": "0e120813-ddc8-4ada-a8c8-423c0f9b36c9",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "b8f169a6-11f0-4ead-967b-82aca1c99ff7"
        },
        "item": {
          "id": "1d1b4768-922e-4421-b15d-c09d534661a3",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "95cf798e-e4cc-420c-b45a-d0ee48d489e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a807df3d-52eb-4d3f-9db6-477c15792c08",
        "cursor": {
          "ref": "f7b16bf0-24e1-40c8-87f2-164b4b1ea6c6",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "149c382d-1244-439a-baf6-6b406b6d866d"
        },
        "item": {
          "id": "a807df3d-52eb-4d3f-9db6-477c15792c08",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "cce5fa30-9ef3-4769-82e8-c6dd364dad40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88a89423-b15f-4ccf-b257-557a77b64ed5",
        "cursor": {
          "ref": "6aeb4fc7-7404-42e9-a214-ba5721762f62",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "22cf8b11-dbe3-40d0-bc6e-cd3ab9ac303e"
        },
        "item": {
          "id": "88a89423-b15f-4ccf-b257-557a77b64ed5",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "d86fb979-17ca-4fd8-b85a-118c9360a627",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eedd302-c917-4300-9f69-c61b83259d0f",
        "cursor": {
          "ref": "a9a0b0bb-4766-41fa-a798-9cb545626c13",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "e9d53b70-96fe-4bca-baab-740f441e654c"
        },
        "item": {
          "id": "5eedd302-c917-4300-9f69-c61b83259d0f",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "d3a30e64-4617-4fbc-8088-23a1718a774d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a03450ed-b3d1-46bc-9b55-17bdd9ae3043",
        "cursor": {
          "ref": "0f6498ae-7bc1-41a6-800a-f0590d5bb514",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "b35765ff-bccf-447b-8473-e63757a3084f"
        },
        "item": {
          "id": "a03450ed-b3d1-46bc-9b55-17bdd9ae3043",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "0e7db8f6-08fb-4133-adae-c85fea60ae36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33157dc5-f63a-47cb-8b5d-d72da858a595",
        "cursor": {
          "ref": "bdcd4ece-590a-4be9-8c31-02d0abd02c55",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "74d8e304-d00f-4728-ba6c-d028e562a9bf"
        },
        "item": {
          "id": "33157dc5-f63a-47cb-8b5d-d72da858a595",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "da1fd928-d2ca-4478-877a-fc270baa2de6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65eaecb3-dc20-48fa-ba45-c6db635fba70",
        "cursor": {
          "ref": "f2701402-c6af-421e-bd6a-c721c6e6f9a5",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "1ce888bd-bb40-400a-b633-d1602543fa5f"
        },
        "item": {
          "id": "65eaecb3-dc20-48fa-ba45-c6db635fba70",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "b003db57-394e-45af-a66e-543a57dfe369",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a35642f-d2ac-4c34-918a-08a452471444",
        "cursor": {
          "ref": "55ac5f3d-6a82-42f7-8acc-1a28dbcc757e",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "17eabd3e-b5a7-4123-962d-46babe18662c"
        },
        "item": {
          "id": "1a35642f-d2ac-4c34-918a-08a452471444",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "c615eb65-87ca-40ba-b746-b955872b585f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed95ba93-87f7-4db6-9466-fb17710cbbf1",
        "cursor": {
          "ref": "4c81b1ce-99bd-4a22-bacd-f7d1e4cffbd8",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "6a474462-da29-45e6-9872-1f6b2979684c"
        },
        "item": {
          "id": "ed95ba93-87f7-4db6-9466-fb17710cbbf1",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "d7686536-ab0a-4807-b9fa-a86dbb843d46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36fbd643-b70a-40be-a894-eb0c91ad6f35",
        "cursor": {
          "ref": "9ecd806c-431e-4896-b961-4b2bd00e3694",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "7fc840b1-15f1-4fd1-9a05-123c8c33b5c7"
        },
        "item": {
          "id": "36fbd643-b70a-40be-a894-eb0c91ad6f35",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "144d5a1b-c9dc-4b16-ab20-54a9b789327c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a6115a4-2d95-4231-ab78-63d019cd3f24",
        "cursor": {
          "ref": "dfa34ea8-b0ce-4bfc-ba8c-dd1c2bec8f2b",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "c604a9be-89e6-44bb-9669-bda37e929eec"
        },
        "item": {
          "id": "2a6115a4-2d95-4231-ab78-63d019cd3f24",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "38813cb5-dfa3-4ba0-81a9-dddd1f900349",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60469fad-5536-429a-ab31-52ef3d4bf0cc",
        "cursor": {
          "ref": "fde0b9e5-c1af-44e1-8e1d-2f2597481caf",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "fd331fbf-8a5b-4ec5-afbe-84221fc8f48c"
        },
        "item": {
          "id": "60469fad-5536-429a-ab31-52ef3d4bf0cc",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "0aade0b6-d2b8-4cb9-b2c8-042c00a1b129",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b22d0ae-c9e5-4913-adc9-4c944d4b92f9",
        "cursor": {
          "ref": "d71df3f8-4e8b-4fbf-a34d-1f45e2be1356",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "d18d7da3-5595-46a4-bd21-5cca46a30d3e"
        },
        "item": {
          "id": "5b22d0ae-c9e5-4913-adc9-4c944d4b92f9",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "21abd9a9-55f7-484f-8099-3ed2c0dc8661",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "985a9395-3b41-4b50-b052-080804b18882",
        "cursor": {
          "ref": "14358388-0573-495c-839c-ac1fabc552b4",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "25f5a317-5c5b-4fa9-b927-1754f3b71c46"
        },
        "item": {
          "id": "985a9395-3b41-4b50-b052-080804b18882",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "01d99d4e-31a9-40a4-bb7d-307b8dcd6157",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d0f39e4-c494-44c5-8951-15dec09c4cd1",
        "cursor": {
          "ref": "b2a726d2-0e08-450e-b7ff-79175c0c5b89",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "f1d3a9b7-1299-4eb5-b00f-3f4bc8d4f58d"
        },
        "item": {
          "id": "3d0f39e4-c494-44c5-8951-15dec09c4cd1",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "42abc4aa-f9df-4288-8277-02e77f0acb93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b06537d3-374a-433f-952c-281aecf4429f",
        "cursor": {
          "ref": "1de6c889-b35b-4c4a-a59e-5162173f76d1",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "b001044a-a0b0-4506-baa1-7029d32cfebf"
        },
        "item": {
          "id": "b06537d3-374a-433f-952c-281aecf4429f",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "4f2e15de-0106-4f94-b27b-7c509ae47716",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7807061e-b997-4630-92ec-efea43eb3e99",
        "cursor": {
          "ref": "1bcf646f-7c7c-4fa6-934f-b16a3f3b7567",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "799ef152-46b9-4253-a1ed-10f522c69119"
        },
        "item": {
          "id": "7807061e-b997-4630-92ec-efea43eb3e99",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "f8d4a2e7-47f7-48ff-9c2d-ff50f7e8107a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fab7f529-f2c4-4fdd-8a8b-36baecbfa7e5",
        "cursor": {
          "ref": "8a1378ab-dddc-47da-b5e2-ab3a7a5d5b83",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "edd6b60e-7c68-4ffa-bdbc-631f2810166f"
        },
        "item": {
          "id": "fab7f529-f2c4-4fdd-8a8b-36baecbfa7e5",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "1e398104-1950-4716-bc76-aaa3a4626c7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "333255e0-4cd0-4327-95ee-098f5ceefb5a",
        "cursor": {
          "ref": "7288a954-b2a9-4ba5-8919-1a030200a249",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "b7b105fa-9b03-4d88-97cd-b7ee81e5eb15"
        },
        "item": {
          "id": "333255e0-4cd0-4327-95ee-098f5ceefb5a",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "258026d1-4620-47c9-9535-13ac77c2772a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57d37814-5d3f-49aa-a284-203f90f980f7",
        "cursor": {
          "ref": "ebf7beb7-53be-407b-8120-fefcb66e7cfb",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "8c3e61a8-2600-4dba-ba40-37e6a00a5512"
        },
        "item": {
          "id": "57d37814-5d3f-49aa-a284-203f90f980f7",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "64108035-6802-451d-b13b-64dcf795dfe9",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 32,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fc45083-f48d-48ae-9221-7debc4fc739a",
        "cursor": {
          "ref": "4fff9a3c-f045-4616-a2ed-be150d5b7360",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "f97faa70-a3e6-422d-8bb5-e4a38b1c2f3d"
        },
        "item": {
          "id": "4fc45083-f48d-48ae-9221-7debc4fc739a",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "4ace4c4b-599e-4db2-8f0c-2d0951f48296",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f5238bf-2556-41e4-87f8-9465da95efb3",
        "cursor": {
          "ref": "81f96f58-20ef-4d9a-8d81-cf805dc3207f",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "53f992d7-d899-417c-8238-c4c37382a73f"
        },
        "item": {
          "id": "8f5238bf-2556-41e4-87f8-9465da95efb3",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "85b1b06b-3b65-45bd-87c5-e6da96a3a13e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e424049f-29f8-4638-a316-6bd9fd65ca12",
        "cursor": {
          "ref": "6fd81592-535f-4209-94fd-4208afd432dd",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "33d77d55-9397-47fa-b80a-4d47bf982c66"
        },
        "item": {
          "id": "e424049f-29f8-4638-a316-6bd9fd65ca12",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "c810b818-745f-4f21-a638-734bb13086e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "365597d1-fa05-47b0-a56a-40669526bf15",
        "cursor": {
          "ref": "3cd8bb7f-b96b-4afc-9451-0a86dfc78993",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "97ee38bd-fd74-4ec9-a000-ac0550bd2330"
        },
        "item": {
          "id": "365597d1-fa05-47b0-a56a-40669526bf15",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "95fe7941-21e4-4f3f-aeae-696727d77a2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77531ba3-1e87-4be4-8d9e-2d85f0a9995b",
        "cursor": {
          "ref": "4ce63f83-9891-447f-b922-cc1700a49342",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "4f7837bb-ce2a-48e2-ba9b-cb5941c5b5fa"
        },
        "item": {
          "id": "77531ba3-1e87-4be4-8d9e-2d85f0a9995b",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "3c581718-feea-424e-b56a-39f5e2d4a59c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daa739ae-625e-469c-8d2f-d6ee6bf1b709",
        "cursor": {
          "ref": "013a350e-4969-4da2-8a47-5dfd3c1fc1f6",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "eff7fb07-a059-45e2-bc95-2bd7326430fa"
        },
        "item": {
          "id": "daa739ae-625e-469c-8d2f-d6ee6bf1b709",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "438e6f1a-d8b6-47f0-b755-19130b4535ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91bf63fa-aefb-4d0a-ba6d-6f8c16bbe381",
        "cursor": {
          "ref": "a7c76b91-0b64-403d-bf48-5521aee84639",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "7adccf41-acee-4dbd-a4df-7404ff5e6c4f"
        },
        "item": {
          "id": "91bf63fa-aefb-4d0a-ba6d-6f8c16bbe381",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "d1a1dfb1-b1a3-4f8c-a576-9017353d28c8",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 32,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b09ec22-d167-42e7-aaa0-8ec12e4b0621",
        "cursor": {
          "ref": "840bd62d-4573-46a2-93b7-d94219b2fe24",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "895f950b-f1e6-4b5c-8ecf-75cdf4cec9ae"
        },
        "item": {
          "id": "4b09ec22-d167-42e7-aaa0-8ec12e4b0621",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "0948ae63-8686-47d3-a703-e21daaba0c48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a7146cd-00ff-4e72-801a-a41ebb1ad683",
        "cursor": {
          "ref": "f77ea4cf-014f-41bd-802f-1d2ee9681e3a",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "aab03351-048c-4fb1-8446-c8a621c8a4d2"
        },
        "item": {
          "id": "9a7146cd-00ff-4e72-801a-a41ebb1ad683",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "4550156f-37db-43dd-9de5-da2b1f9e94b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f91b560-d123-484e-b31a-5ca80835f084",
        "cursor": {
          "ref": "80fb26d8-516f-4474-bb15-2f05bb4791a7",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "ccce5702-9572-409f-8867-21edb381727b"
        },
        "item": {
          "id": "0f91b560-d123-484e-b31a-5ca80835f084",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "4fd9e4a2-8880-44c9-a8bd-619cf79a7c0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51313406-6422-43c8-8799-1471dfdf961a",
        "cursor": {
          "ref": "d5206d0c-112c-482f-91fd-24de9597010f",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "be4d083e-e1e7-4ea1-bcb1-cfa4f8f5f339"
        },
        "item": {
          "id": "51313406-6422-43c8-8799-1471dfdf961a",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "d6a3ca94-f4d2-44bc-8ad8-c7b3ccc10b56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5573761-09cc-45f9-b826-4d0702d55737",
        "cursor": {
          "ref": "24665208-e71c-478f-9b5f-95272100da5b",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "57ecf5d5-1d0b-4991-9845-266ef46d3d05"
        },
        "item": {
          "id": "e5573761-09cc-45f9-b826-4d0702d55737",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "df73369e-bb44-4e90-a0c6-6d0e151af62d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b06457a-e69e-40b4-a672-c46c43a3b0d9",
        "cursor": {
          "ref": "6009e75e-0456-41ec-ad04-1e72fc3cd5a3",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "5eb3b253-df05-45e3-8ae2-907ebece2c26"
        },
        "item": {
          "id": "1b06457a-e69e-40b4-a672-c46c43a3b0d9",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "7945a098-c3e7-4f47-ac3f-d16b69b6f706",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81b21347-f406-495e-ac24-a2fd2b458ed6",
        "cursor": {
          "ref": "ec4dee2c-8db7-4e6b-9921-75ae6cd9f2ee",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "2dfd86ed-c377-4657-8801-deb657cf0aeb"
        },
        "item": {
          "id": "81b21347-f406-495e-ac24-a2fd2b458ed6",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "a9c88366-a88e-489d-bd6a-4f7688973ccb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d0dd908-a9e0-491c-adb7-5fa17d6b373e",
        "cursor": {
          "ref": "483c6b90-324c-45d7-b0cd-4504b552e3f1",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "70c06179-c2fb-449e-89f2-2df64f5c912f"
        },
        "item": {
          "id": "3d0dd908-a9e0-491c-adb7-5fa17d6b373e",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "46a0c427-059f-4861-b0ad-9723f65a2d16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 98
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fbfe68b-4247-4e9b-bb63-4f753adc8f08",
        "cursor": {
          "ref": "ee98efd3-9a0e-4d60-aa88-641b38ea16ef",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "ad0704ed-9244-4154-9d73-b49e3dee1ea9"
        },
        "item": {
          "id": "0fbfe68b-4247-4e9b-bb63-4f753adc8f08",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "8081927b-cd08-412e-9c91-98ed66e8935c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0fa9db0-a34c-48c8-8a75-f3f573e99452",
        "cursor": {
          "ref": "e15a3644-bac2-4dbc-a9aa-cde4c6ec2463",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "f877c417-1bb2-486a-8a2d-7f67b61a8488"
        },
        "item": {
          "id": "e0fa9db0-a34c-48c8-8a75-f3f573e99452",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "b20159c9-063e-480c-a6fd-ef7695c42bd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86a7e52a-6be0-401a-8213-bafc154d13cd",
        "cursor": {
          "ref": "faf84ea8-2547-4cf8-8bb9-a5ea86068c87",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "6198e40a-0ee0-47da-ba47-c79ca8b0102b"
        },
        "item": {
          "id": "86a7e52a-6be0-401a-8213-bafc154d13cd",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "589f4b4b-fab2-453f-a826-db7577899823",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ad38a19-1baf-45a1-b9f6-98b908fd1b7a",
        "cursor": {
          "ref": "4c82cb57-8c41-4106-99c4-f8a934494a88",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "b48e837f-b149-42e4-851e-7ad9525a1cdb"
        },
        "item": {
          "id": "8ad38a19-1baf-45a1-b9f6-98b908fd1b7a",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "4d83929a-4021-45b3-94d2-8a82dab083ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c0cb2ab-06d0-4e40-9156-0faaa99367f9",
        "cursor": {
          "ref": "fb862da3-f556-41b6-98a3-e7f8d47a1da6",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "dbbe6c0f-83ad-4141-991f-33e81e19bddb"
        },
        "item": {
          "id": "3c0cb2ab-06d0-4e40-9156-0faaa99367f9",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "10983a82-2031-48cd-a316-c130cfb68f5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cbd876b-b9e8-4701-b808-1245c8621aef",
        "cursor": {
          "ref": "e815e2d1-f959-437c-973b-a917f9c25035",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "09953092-facb-48ea-b2fb-0305131b53d4"
        },
        "item": {
          "id": "5cbd876b-b9e8-4701-b808-1245c8621aef",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "e51c0f76-d0ec-47b2-9579-b89edca4a9e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c11a89be-4afd-4337-9045-aa2067fb218d",
        "cursor": {
          "ref": "bb2abdb8-146d-47c2-a714-b4bf15ee2e15",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "0ca711f2-c892-4ce9-9e48-801e26196380"
        },
        "item": {
          "id": "c11a89be-4afd-4337-9045-aa2067fb218d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "2ad2e513-9442-4391-b2ef-91d536754e20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b00c7b08-8653-498d-af5c-d775d18c4075",
        "cursor": {
          "ref": "d142a8ce-2633-43f7-a4d9-74391330f1ca",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "7f582c4d-92ca-4b4c-8f65-e041e5fd784a"
        },
        "item": {
          "id": "b00c7b08-8653-498d-af5c-d775d18c4075",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "ffe7a569-1b39-4501-825a-83ea55577293",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6953823e-4848-4737-a6bb-d333b14bf87e",
        "cursor": {
          "ref": "bb5c700f-1ec5-41c6-aa10-73604d40a1a6",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "b7c908d8-71d1-463a-894a-2ae51119c477"
        },
        "item": {
          "id": "6953823e-4848-4737-a6bb-d333b14bf87e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "72786150-6c8a-48db-989d-ab773820932d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dead264-1880-4da3-a35a-7a499f703c35",
        "cursor": {
          "ref": "6ef6c82b-9e66-480d-8cac-bb2d68f8a34f",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "dc894af7-1242-4e51-b107-1866c6953d42"
        },
        "item": {
          "id": "9dead264-1880-4da3-a35a-7a499f703c35",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "210d6704-80f5-4658-9867-476a89e1441f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ead5d00c-6b6d-4db4-8ba1-6eefc7a86128",
        "cursor": {
          "ref": "87c6c57b-ef38-4ead-8c8e-2cc639a6490f",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "c3cc20f5-4380-41e1-92c0-fca1cf4a7f76"
        },
        "item": {
          "id": "ead5d00c-6b6d-4db4-8ba1-6eefc7a86128",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "d0b0dafa-fe1c-43f0-a708-bbcd133cfafb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 75
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "653e90a2-ae5c-40e6-b0aa-1172a1cd2e94",
        "cursor": {
          "ref": "c14ce4a6-74b8-4127-9f42-ca720ab0a4d0",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "2b2cb530-2c63-446d-8b85-c47782563306"
        },
        "item": {
          "id": "653e90a2-ae5c-40e6-b0aa-1172a1cd2e94",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "5dbde46a-99a2-4106-8f39-5b71ef9ed6b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b40d0620-5514-43ea-b4cb-d0127f9dcac2",
        "cursor": {
          "ref": "b5a255e4-e911-4e26-89f3-358dcb0f7e9a",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "b0a6d1a3-b818-469a-9b0d-c54e7dd2d8bc"
        },
        "item": {
          "id": "b40d0620-5514-43ea-b4cb-d0127f9dcac2",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "c282d78a-a027-462b-85cf-ff2f7be7541a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe3f4b2f-4996-4e9e-9657-2c97d544b682",
        "cursor": {
          "ref": "3b8b0f58-359b-4fa6-8ee3-30d16f29700a",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "30a64fd7-b821-4d50-b082-94945bc9b43d"
        },
        "item": {
          "id": "fe3f4b2f-4996-4e9e-9657-2c97d544b682",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "00336dba-1eb4-4f1d-a93e-5118c345ca0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a73c2522-b665-46fb-b183-269cbc411f44",
        "cursor": {
          "ref": "b53f1bfa-5698-459a-97a8-a290250779b8",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "9c3f0d1a-3b8c-4d41-9bcb-ebd853f2c069"
        },
        "item": {
          "id": "a73c2522-b665-46fb-b183-269cbc411f44",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "4dad2652-9726-4c34-a0ba-d5d24688134d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "957b2ebb-95cf-4ba6-b1c8-feadaba84bee",
        "cursor": {
          "ref": "37fae250-b89c-4a57-91a9-ef008d7ee785",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "6143c278-f8cc-4548-a676-dff01fc0a7b9"
        },
        "item": {
          "id": "957b2ebb-95cf-4ba6-b1c8-feadaba84bee",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "83b4fd05-2b80-4a2e-938e-678945336ca3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b2cd5e8-6efc-41ef-b2ca-2ee1edd0068e",
        "cursor": {
          "ref": "33c3221a-447d-4f6a-98ea-414c01d4d486",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "1e3c60ce-1d43-45ff-9c77-3e2a2261fd0c"
        },
        "item": {
          "id": "7b2cd5e8-6efc-41ef-b2ca-2ee1edd0068e",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "9f6a74f5-349a-4901-8fc7-db106e30061b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "928c1ea4-ece5-4e26-a7e3-5ba3a065e1ea",
        "cursor": {
          "ref": "12e7cc12-9bc2-4308-be19-7b028143a51d",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "5dc61a22-0444-49ed-8c0d-7ffe7a7f1a47"
        },
        "item": {
          "id": "928c1ea4-ece5-4e26-a7e3-5ba3a065e1ea",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "d683e20a-b6c9-48e7-a6a4-538d715c19eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "729986f3-87c9-4afc-8943-627a9d892ebc",
        "cursor": {
          "ref": "2ef69e45-bcc5-4ddf-983c-b816d11022be",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "7bf1981d-0f93-45b8-895a-941fad47e0e0"
        },
        "item": {
          "id": "729986f3-87c9-4afc-8943-627a9d892ebc",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "4b420293-3d5a-45ea-819a-5e0cc900dc32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d81e0353-254d-42e2-91c3-8269757e12a7",
        "cursor": {
          "ref": "9f5ae3be-338e-4181-86c2-d39ebd81c12b",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "8702ad66-60bf-41f8-8e13-891767b79047"
        },
        "item": {
          "id": "d81e0353-254d-42e2-91c3-8269757e12a7",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "35e4ad62-e14d-409e-9935-3c00b848993c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "004b4938-50c6-4820-b861-b359c8731904",
        "cursor": {
          "ref": "7aaa392c-8248-449d-a4a3-9292fa6dd7a9",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "36f41ffe-0a2c-46a1-be93-de000d90d4b8"
        },
        "item": {
          "id": "004b4938-50c6-4820-b861-b359c8731904",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "e9b19425-8515-46a0-ba49-e3dfe17aa77a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d894f3a-7cee-4a78-b71e-0b8b0682fa51",
        "cursor": {
          "ref": "8a4a893b-8626-4190-a98b-208f15fa5afd",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "e27a67a3-aa0e-4568-bb43-264d45d4ecb5"
        },
        "item": {
          "id": "0d894f3a-7cee-4a78-b71e-0b8b0682fa51",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "c021287f-480d-4f47-81f6-57a619851885",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f20f31b9-5679-4db7-9ecd-710d18eb26f1",
        "cursor": {
          "ref": "6ad92f67-0ece-4c92-afe2-eec0a959d646",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "04f9fb24-5bd2-4379-a938-60fdec193d3f"
        },
        "item": {
          "id": "f20f31b9-5679-4db7-9ecd-710d18eb26f1",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "f7268dde-f7a9-41db-9627-1e9069d24bb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4491b41a-51d7-41cf-a864-219a11fc959a",
        "cursor": {
          "ref": "02ae896a-6e82-4f23-8324-d2bc024ddf46",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "2581f4c8-a759-4f5d-b974-e257e9b689e6"
        },
        "item": {
          "id": "4491b41a-51d7-41cf-a864-219a11fc959a",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "e8046a1a-bfe3-4c43-b98c-ec5438becab2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f541b1b-d181-4075-9fae-b7d494bac33d",
        "cursor": {
          "ref": "8652356c-6ccc-467a-b5da-6ff22b25fcb2",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "f5d3bf6c-68aa-41b5-bb43-668a674b4911"
        },
        "item": {
          "id": "1f541b1b-d181-4075-9fae-b7d494bac33d",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "0daab30c-7828-4d5d-aea8-4413c7978836",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96123d6f-b2f6-404b-96d5-ebb1e37f7263",
        "cursor": {
          "ref": "6a37c64e-efe9-4322-9588-c88118a44749",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "850e0e37-9bed-473d-8fb7-2a67acfd828a"
        },
        "item": {
          "id": "96123d6f-b2f6-404b-96d5-ebb1e37f7263",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "f04964aa-ed31-4b76-a627-a6eb99223d8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb66f88d-0d18-499a-8645-3203dbf956ae",
        "cursor": {
          "ref": "882544e9-0926-4e6d-9567-d7bec765722b",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "1b934ba1-b72a-49c4-9067-f6acbd576251"
        },
        "item": {
          "id": "cb66f88d-0d18-499a-8645-3203dbf956ae",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "0dffb7e9-d270-419a-ad16-769befae568e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d66b826e-ecb8-4d6f-85d3-c7a1052318ee",
        "cursor": {
          "ref": "9ab9d274-028a-4e3c-8a78-0ce39dece28a",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "a57794cb-b928-4de2-a893-2c4564312628"
        },
        "item": {
          "id": "d66b826e-ecb8-4d6f-85d3-c7a1052318ee",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "34189005-edd5-4126-8889-07c9d995cfbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5dcd249-ce67-494c-a1ca-5f4478a06a74",
        "cursor": {
          "ref": "e2c3530f-37a0-4778-92a6-24da55ad4735",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "9fddaa32-3687-4a55-bcdd-68aa275c954c"
        },
        "item": {
          "id": "e5dcd249-ce67-494c-a1ca-5f4478a06a74",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "29723c85-530e-4451-a6f6-57f7f6967f4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb97047f-5efd-4aad-ad78-4770e6966bec",
        "cursor": {
          "ref": "b011b936-6fb8-4eca-9839-d5d43e8cc917",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "99452949-f47c-442b-b182-8388d33768e1"
        },
        "item": {
          "id": "eb97047f-5efd-4aad-ad78-4770e6966bec",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "028392b0-82d0-4429-8da2-78f6e202a59d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d7a3f7d-0327-46a6-ab89-bc8cdee31cee",
        "cursor": {
          "ref": "75b3a682-2a1a-42f4-a25e-1c213252ccc9",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "8e83b840-926c-4ad3-8522-e15285f48559"
        },
        "item": {
          "id": "4d7a3f7d-0327-46a6-ab89-bc8cdee31cee",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "b68f9a0b-65a2-4707-9b4d-5f78e0c36869",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea006123-b592-4a9c-9385-1c26b9788de9",
        "cursor": {
          "ref": "d0b0af95-f5c2-482d-a1b5-4d66c58134f3",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "c922e186-af62-44a6-a842-7bd279674d1a"
        },
        "item": {
          "id": "ea006123-b592-4a9c-9385-1c26b9788de9",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "5a9442b9-2574-463f-aafa-39aebe428866",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed8d6326-0cc5-4e9b-9c4a-c71b7b096a18",
        "cursor": {
          "ref": "36a04937-8923-4a9e-8c41-cac8cecb940c",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "88d19b2f-16f5-41e6-85aa-9a1bffa57a4e"
        },
        "item": {
          "id": "ed8d6326-0cc5-4e9b-9c4a-c71b7b096a18",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "abf17926-3304-45da-b7a6-ed6469bfb90d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdf003a6-e72e-4c4d-a386-ac9a8b760f5c",
        "cursor": {
          "ref": "cde1f921-1616-452d-9d7b-496a332c84fa",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "1106a130-c98d-4247-bf57-93d01dd1e0d6"
        },
        "item": {
          "id": "fdf003a6-e72e-4c4d-a386-ac9a8b760f5c",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "309801d7-589c-48a5-9f0a-eb529ad6bee8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4947435b-8db2-4b63-b53d-d8cb7e7159a6",
        "cursor": {
          "ref": "42d5530d-6e2b-42b6-a827-7be3ea1c2b68",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "e3d3b623-b180-4c7d-be38-b082591d44b6"
        },
        "item": {
          "id": "4947435b-8db2-4b63-b53d-d8cb7e7159a6",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "c9c14c56-6e89-467d-90e2-209f70ffc655",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c264a5b-9c67-4aba-a1ca-2a42a7fc97af",
        "cursor": {
          "ref": "a12ccdc7-176c-4bae-82ac-1cf2d18e838c",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "caa333ed-1ca6-43f0-a842-faadc183c7cd"
        },
        "item": {
          "id": "6c264a5b-9c67-4aba-a1ca-2a42a7fc97af",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "06af3136-0269-4016-bb23-724679ab04ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf193a00-5c34-4310-837e-77ba76d52037",
        "cursor": {
          "ref": "c7a8f408-2363-4d0a-b0a3-74df8d5e71f1",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "d9da417e-ea62-49e7-9b78-292399ddc4ce"
        },
        "item": {
          "id": "bf193a00-5c34-4310-837e-77ba76d52037",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "c4f15944-636e-4687-8074-f056949b83b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b695c99-0fb4-469e-a1b0-2b2a47a58b78",
        "cursor": {
          "ref": "3949c966-d863-4480-a1c9-54cbbc3a9fec",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "1eeb8b67-7e29-435f-aab9-71621ee96447"
        },
        "item": {
          "id": "3b695c99-0fb4-469e-a1b0-2b2a47a58b78",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "a40a5a38-e506-4d48-ac6a-fa23d8354a79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64cac049-234f-47f1-a61f-0a22f1eea70b",
        "cursor": {
          "ref": "b0d6703f-3e7c-4929-9bab-9f7540f5b1a5",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "5fe5db92-bed9-458d-b28b-e8df3ec96821"
        },
        "item": {
          "id": "64cac049-234f-47f1-a61f-0a22f1eea70b",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "2d6940d6-2634-4980-965e-d4390827a0fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c5d7864-f8c8-4551-a0b2-6a1738ef5c87",
        "cursor": {
          "ref": "beb31ce0-3ac2-4e3c-aa4f-024e43803fe7",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "eb374aa9-3c89-4f42-a91b-171d2fe5f0af"
        },
        "item": {
          "id": "2c5d7864-f8c8-4551-a0b2-6a1738ef5c87",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "cc40ca38-c3f2-4009-8156-305613f621ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6753ead3-69dc-40c0-833a-288ec617fb54",
        "cursor": {
          "ref": "f2806e21-b55d-4c7c-a113-c7c6c3b52fa4",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "4279f99f-8aa0-471b-8008-ef125b6b95a4"
        },
        "item": {
          "id": "6753ead3-69dc-40c0-833a-288ec617fb54",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "6027421e-e33d-44fe-87bb-110b726eca88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baa3c6e7-2378-4484-99ff-d8b30d577a75",
        "cursor": {
          "ref": "3fd09d69-618e-4cd1-96e8-bb9df2d930d1",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "471f48c1-30df-4479-89b0-3333fef3786e"
        },
        "item": {
          "id": "baa3c6e7-2378-4484-99ff-d8b30d577a75",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "c1e8c990-c86d-40a3-a569-fba10d7d4c8d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "047b927a-523d-4dc5-93dc-1bfca3c16a3e",
        "cursor": {
          "ref": "6512a088-1a13-4b65-a578-1ddd09849daa",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "e44045c0-0b82-4527-a202-f4b2669e9b17"
        },
        "item": {
          "id": "047b927a-523d-4dc5-93dc-1bfca3c16a3e",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "4adcdc53-8b5a-42b5-af76-77d7ac5850c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "b5d87c72-6cdf-4846-9bec-79299b4f60e3",
        "cursor": {
          "ref": "935132d6-a352-45ae-9df6-4dad23bb0ef6",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "b0a902f8-f2d2-4f6b-8831-7e6ab4ff90ac"
        },
        "item": {
          "id": "b5d87c72-6cdf-4846-9bec-79299b4f60e3",
          "name": "credentials_issue"
        },
        "response": {
          "id": "2a0d7a4b-d0a9-4f07-86f9-c6654dab1a37",
          "status": "Created",
          "code": 201,
          "responseTime": 6901,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f0d41e1-a49f-450a-ba9c-9fc6849e5eee",
        "cursor": {
          "ref": "6dad5271-2748-4f79-9aaf-0b9198be037d",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "ba568c98-ddc3-43f0-9de9-ff179598be71"
        },
        "item": {
          "id": "3f0d41e1-a49f-450a-ba9c-9fc6849e5eee",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "1d478082-8fc3-4082-b9f4-d1429d820c2e",
          "status": "Created",
          "code": 201,
          "responseTime": 6167,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "87bb1a70-0975-4556-a780-c43371492354",
        "cursor": {
          "ref": "a114dac7-de5f-4716-a99b-ce223c3c25fe",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "fb46fc04-62aa-4e49-b6c1-67b1e734f644"
        },
        "item": {
          "id": "87bb1a70-0975-4556-a780-c43371492354",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "238ecca7-696a-41ac-99fb-916c8bf3a984",
          "status": "Created",
          "code": 201,
          "responseTime": 6176,
          "responseSize": 1229
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "22a0d317-f4c3-421e-9f4d-690258b1f53c",
        "cursor": {
          "ref": "44e68b54-f3f6-40f2-a8f9-6c9c2a1d0ea5",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "cdc14b6e-411c-45dd-af22-b90a09b8101c"
        },
        "item": {
          "id": "22a0d317-f4c3-421e-9f4d-690258b1f53c",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "5309e550-6142-4abc-8019-004a0fde043d",
          "status": "Created",
          "code": 201,
          "responseTime": 6534,
          "responseSize": 1235
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cce676e-cd30-4215-900d-647d05c31bb5",
        "cursor": {
          "ref": "eba5d714-d1f1-4e4e-9bbc-4aa0f86e726f",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "51b8d35d-8096-4897-a587-0fcd68c7eb77"
        },
        "item": {
          "id": "1cce676e-cd30-4215-900d-647d05c31bb5",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "ee1cdb03-da15-4d96-9089-74122ba80523",
          "status": "Created",
          "code": 201,
          "responseTime": 6321,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "expected '2024-06-11T00:38:48Z' to equal '2006-01-02T15:04:05Z'",
              "stack": "AssertionError: expected '2024-06-11T00:38:48Z' to equal '2006-01-02T15:04:05Z'\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "d3935e6f-99cc-4901-9d38-9978b0761731",
        "cursor": {
          "ref": "69e3f4d8-55d8-4599-87f0-7e14df2de13b",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "4b4be2c7-f331-4a30-8919-b2eb1f0dd974"
        },
        "item": {
          "id": "d3935e6f-99cc-4901-9d38-9978b0761731",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "81f02720-5681-4cb2-b98a-578ca0f4ef1a",
          "status": "Created",
          "code": 201,
          "responseTime": 6248,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb832580-3783-4e9d-897c-a7ff94e0acc6",
        "cursor": {
          "ref": "b3608452-f6cc-4e1e-855d-d21df04c7e3f",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "14965802-7566-4011-8ff8-cd9512a7f109"
        },
        "item": {
          "id": "eb832580-3783-4e9d-897c-a7ff94e0acc6",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "a3f0f56e-3ad9-491e-9451-b48fbda91246",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b75624df-5d3a-40ed-8277-9650bbc5087b",
        "cursor": {
          "ref": "67f5a51e-fad7-426e-93a6-34694688abe3",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "4f686e52-287b-4931-bf8e-b9b89572d32c"
        },
        "item": {
          "id": "b75624df-5d3a-40ed-8277-9650bbc5087b",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "35a22596-b70c-4131-ab83-eb4121e12c70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ec5a81f-8a13-4337-a95f-70acc24e787d",
        "cursor": {
          "ref": "3aa0935e-8a4c-4e42-8c97-e30e939ae48c",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "d4081267-c17b-43c7-b706-09fa5ff93c74"
        },
        "item": {
          "id": "2ec5a81f-8a13-4337-a95f-70acc24e787d",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "f09a3d87-d1d5-4af6-91c9-4ee7639ac9d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e37a774b-7f1b-4bd8-aac8-49d6aa5c3756",
        "cursor": {
          "ref": "ab49239d-e9c0-442f-bb10-9a911382d88d",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "20c10e24-3a93-4ecf-9d27-e5809ff124c0"
        },
        "item": {
          "id": "e37a774b-7f1b-4bd8-aac8-49d6aa5c3756",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "3ebe9b38-2b4b-49fe-81d1-fa4850ab5bca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc31148b-b206-49ec-9ef2-2fd80a82c0cc",
        "cursor": {
          "ref": "2add42fe-b02a-4c98-aa16-eae2960eea81",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "3ee8cdbc-c9c5-4d06-b95e-2adc59f43154"
        },
        "item": {
          "id": "bc31148b-b206-49ec-9ef2-2fd80a82c0cc",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "e1d5cc22-5cc3-452f-9796-233af72eafc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7f934d0-c3c7-4f4c-8b2f-ef4dee81ff43",
        "cursor": {
          "ref": "6b66b477-34b5-4ba6-9291-e42cf57ca4bd",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "6a5ca72b-d48e-44eb-a8df-8535e8a82581"
        },
        "item": {
          "id": "a7f934d0-c3c7-4f4c-8b2f-ef4dee81ff43",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "9a98396d-0235-4a51-8400-32d0df00ce44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2af7e015-0eda-4493-be6f-b94a81639841",
        "cursor": {
          "ref": "5b4c6569-0902-4ef2-933a-8743a1f1deaf",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "dfb71b62-7b64-4b8d-a8f1-a4ccc44a617a"
        },
        "item": {
          "id": "2af7e015-0eda-4493-be6f-b94a81639841",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "86012fb9-2ea2-4180-a1f3-5a1005034738",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1128e14e-2583-43d9-be03-32251113ed91",
        "cursor": {
          "ref": "2bff14e8-c8c9-452a-ac2f-d981d547d19d",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "a7e28c97-27cb-448e-af64-ddf9ac9a6736"
        },
        "item": {
          "id": "1128e14e-2583-43d9-be03-32251113ed91",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "b0b21f98-253c-4173-b9e8-101ed3304f9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "750cb7f8-c7aa-4d44-a6c3-6964eb5b4982",
        "cursor": {
          "ref": "c4c00c16-31e1-4dd1-b2d7-7149252f3e68",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "55788a05-3226-4586-a529-71ccc97fb11e"
        },
        "item": {
          "id": "750cb7f8-c7aa-4d44-a6c3-6964eb5b4982",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "d5c5450f-fee9-4f6b-be44-6039ae3f37f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62c97ff2-af16-491b-abcf-ec1a93ce2c69",
        "cursor": {
          "ref": "537b8e66-75bf-4a0b-99e7-6b2a7f352b64",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "7f6f6ce4-fd99-43c8-ab02-6254a6a131b2"
        },
        "item": {
          "id": "62c97ff2-af16-491b-abcf-ec1a93ce2c69",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "f9393b75-cb1e-46c9-9092-62a9a7e67daf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9590d85c-9ac7-4293-aef4-adbb1f278f3c",
        "cursor": {
          "ref": "aa97d0f5-5858-42c9-ab5c-65022c863d87",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "b655d15f-bba2-4030-88fa-9ffcbd882157"
        },
        "item": {
          "id": "9590d85c-9ac7-4293-aef4-adbb1f278f3c",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "46c2aae2-1a99-48d1-b4d9-dc3b82ef425c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 110,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "301a1db9-1b2d-431e-9c5e-b6ab812d05b5",
        "cursor": {
          "ref": "3b39c086-76ce-4163-b343-45a23a0ae4a0",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "e6e332c3-6f05-49e3-92d5-83283328af6b"
        },
        "item": {
          "id": "301a1db9-1b2d-431e-9c5e-b6ab812d05b5",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "d194d7d2-fb46-4733-92d1-e060fffb6570",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88876ac1-2b6f-42c9-9944-17200dcac4c2",
        "cursor": {
          "ref": "41057887-b49b-44aa-9b73-18e44890467a",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "ec91c9b8-e242-4375-8149-e16e2c1af242"
        },
        "item": {
          "id": "88876ac1-2b6f-42c9-9944-17200dcac4c2",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "95e7942b-f524-4bfc-9057-69353645c6b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0f11907-7eb3-4d29-9385-5623771b31b8",
        "cursor": {
          "ref": "57a2a153-db27-4558-a96f-37892c533866",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "8942dd6e-f479-41c1-8f6d-71de75e48caf"
        },
        "item": {
          "id": "a0f11907-7eb3-4d29-9385-5623771b31b8",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "5befa6cc-9588-4a5a-9b60-ec9d0e7b4bc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "379a9ede-aa33-4f29-84a8-228409ddff23",
        "cursor": {
          "ref": "4015a7ca-1e17-4911-acde-3e53a0c6460b",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "ba227b3d-4417-42d2-b822-7993ce162959"
        },
        "item": {
          "id": "379a9ede-aa33-4f29-84a8-228409ddff23",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "77b484ba-e8cb-44ac-acef-bad68e833e6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97de410f-3ac1-40c0-b2c5-7d0ad7ca89bf",
        "cursor": {
          "ref": "9ffcee96-6b3d-429a-8b5b-1da6cb59f7d7",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "9ed88b31-d700-4ad7-90c0-e5992247faa4"
        },
        "item": {
          "id": "97de410f-3ac1-40c0-b2c5-7d0ad7ca89bf",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "3e030541-3a90-4cd5-ba61-8dd83e723ec8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaca3d76-1041-4771-b1ad-e59e0bcae28a",
        "cursor": {
          "ref": "b70c410d-8e72-48bf-b26b-3f91a3637ca8",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "ebe72ac0-6852-4253-ba8a-827f968e2f50"
        },
        "item": {
          "id": "aaca3d76-1041-4771-b1ad-e59e0bcae28a",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "fc7416ef-5c4f-4819-a91d-8cd24ea60cb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "917dfb30-11ba-44b0-b116-2dee5090ce68",
        "cursor": {
          "ref": "2d9f1114-03d9-45a3-95b7-c34fc9b1342e",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "5f418704-19e6-4de7-bb21-b0569ef67450"
        },
        "item": {
          "id": "917dfb30-11ba-44b0-b116-2dee5090ce68",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "11c08069-c8a5-4451-981f-70dc7d30cc9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55ea0ca0-590d-47b5-8b5b-7bb7da3871df",
        "cursor": {
          "ref": "857ee3bc-e0e7-4035-821d-4bc85ebe7e69",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "3a47842d-f9a9-4349-8f68-2e6fa4de874c"
        },
        "item": {
          "id": "55ea0ca0-590d-47b5-8b5b-7bb7da3871df",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "c8c0947d-6cca-4442-93b7-60f049dec8f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "496138c5-ce57-4706-b2a2-0f21c7d03fcd",
        "cursor": {
          "ref": "65b7e693-4af1-454c-a44c-5aee9abc806b",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "a3ce5d3c-fc84-4580-8995-d368c5a1ce64"
        },
        "item": {
          "id": "496138c5-ce57-4706-b2a2-0f21c7d03fcd",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "870fece1-06de-4165-bbcf-13a95833c80e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a0ab050-a374-446b-87c2-ea7e2e2e8325",
        "cursor": {
          "ref": "d982da87-c810-439e-a82c-4218485cd101",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "dbdcf4dc-e047-4364-8ccc-d61ad48d64ef"
        },
        "item": {
          "id": "4a0ab050-a374-446b-87c2-ea7e2e2e8325",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "7ddca87f-68f2-458c-a9f7-9bb7438deabc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d276afc-0590-4059-8a7b-3f35991f4541",
        "cursor": {
          "ref": "64ccbdad-177e-403d-95b5-2aa8e8a3e3e9",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "393842ad-f8e4-4b9c-abd5-66638f8d83fc"
        },
        "item": {
          "id": "8d276afc-0590-4059-8a7b-3f35991f4541",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "f139b59e-805c-4e92-bae7-57ac1dfd81db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "219e9d01-d89f-41a2-be3d-73ac807565a4",
        "cursor": {
          "ref": "93553518-b222-4e31-9b3e-856f50f78962",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "f9203729-3b20-4a36-98b2-15af4b302970"
        },
        "item": {
          "id": "219e9d01-d89f-41a2-be3d-73ac807565a4",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "a535f4c0-b667-4eb8-bce5-3a3a72b32c24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9492b8d2-ebeb-4ce4-a52e-b30a8af04665",
        "cursor": {
          "ref": "b298460a-75e3-45cf-a200-08192c0a0b2a",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "f670f30f-2dbe-4223-9132-d38ff6e0127d"
        },
        "item": {
          "id": "9492b8d2-ebeb-4ce4-a52e-b30a8af04665",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "242a4a21-3de7-44b0-b4d8-7faa32ab0bd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ef93f46-9fb0-4bdc-8a77-8b7a6d282114",
        "cursor": {
          "ref": "de4ac02b-5d28-41f5-a1fa-8c9bf903ce73",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "33d6fffa-484c-41d1-aa79-a0754d348389"
        },
        "item": {
          "id": "8ef93f46-9fb0-4bdc-8a77-8b7a6d282114",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "f97c7aad-fb3c-4d3e-ac40-82e83d5f1086",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aca76dac-7e12-447c-baa8-09f02c7d03af",
        "cursor": {
          "ref": "2ef5c2af-9745-4a9a-a65a-bf07ee1b3601",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "e52def48-b1ea-459f-a1bc-74a00ebc7fda"
        },
        "item": {
          "id": "aca76dac-7e12-447c-baa8-09f02c7d03af",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "b141863b-b143-479f-bcb3-46956dba56ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aa8a71f-e754-40e8-895b-3a046435c15c",
        "cursor": {
          "ref": "cb0b92d9-df1b-421b-8952-a9eeab5669f8",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "32cefd46-8b84-4b8e-a096-d29b881826f4"
        },
        "item": {
          "id": "4aa8a71f-e754-40e8-895b-3a046435c15c",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "a64b5ac7-e0e0-4593-aca2-4e73ed904ab6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8638ea19-02f6-4ff5-b2cd-83409d0993a7",
        "cursor": {
          "ref": "9d1add2c-ffdc-44ec-96f3-bd786b5e5a32",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "325c1df1-7ec6-46c4-a850-99fce698d7a4"
        },
        "item": {
          "id": "8638ea19-02f6-4ff5-b2cd-83409d0993a7",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "e05a5d06-1077-4518-98ad-f6acd4e78b39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec76b187-8718-45f2-8276-2b5ba87ed0d2",
        "cursor": {
          "ref": "ecfb297b-a63c-412b-bfe1-93bcf9042fe6",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "c7217226-2705-4c14-837d-5b7088954045"
        },
        "item": {
          "id": "ec76b187-8718-45f2-8276-2b5ba87ed0d2",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "eae02c34-a2d9-4a9a-b236-24d072a57249",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ade0d98-8974-4154-ab58-21d196a56048",
        "cursor": {
          "ref": "dbc18b8d-f01b-43c4-bb18-604257877962",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "194c483f-fa8c-4826-95ae-03f227f2261d"
        },
        "item": {
          "id": "2ade0d98-8974-4154-ab58-21d196a56048",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "fa4bb513-87a0-4d46-bde5-bbf9593e1267",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faf0b5ba-114e-4c8f-b180-f9a65b036f2a",
        "cursor": {
          "ref": "e4c2f033-c37d-40e9-874f-dfcb676ce92c",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "255bfac3-2c96-459f-ad6a-87cd27188c9b"
        },
        "item": {
          "id": "faf0b5ba-114e-4c8f-b180-f9a65b036f2a",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "f86cdc2d-f158-4c29-8f51-9f887fc9f325",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b33dbd96-0793-4b18-b31d-0b7db925fd92",
        "cursor": {
          "ref": "b7d9c35e-ff18-436f-8bf8-7b25c3c278a5",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "c7557473-cfe8-44d8-9f31-a6f1102a2a6f"
        },
        "item": {
          "id": "b33dbd96-0793-4b18-b31d-0b7db925fd92",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "f0177f96-868d-4b8b-a1f8-b23172e598bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10b6b9a4-8876-4436-a11e-db47a7729942",
        "cursor": {
          "ref": "7b7249ac-47f1-4533-a424-b3a46a0dd9c8",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "a60ba8d4-5067-4348-a734-65266447c635"
        },
        "item": {
          "id": "10b6b9a4-8876-4436-a11e-db47a7729942",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "c538f60e-8b43-4d4d-8495-e183a30e630b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dc643df-53f3-4629-b62a-2052d32b4aa2",
        "cursor": {
          "ref": "1a0ab107-6239-4deb-b9ce-8860ddedee8a",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "46f6c5d2-18a2-40e5-8d72-c609260d84c7"
        },
        "item": {
          "id": "5dc643df-53f3-4629-b62a-2052d32b4aa2",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "d56a6b4d-0634-4fbf-8f59-734dbaaf4835",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddb57197-72f1-4278-8067-22a72574c2b7",
        "cursor": {
          "ref": "a4f29e86-27e3-424e-ae69-586eef452f09",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "cb0ff11b-72e8-44df-b961-785b7426aa56"
        },
        "item": {
          "id": "ddb57197-72f1-4278-8067-22a72574c2b7",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "5c3495f4-4306-4cba-becd-b065d491f2e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "802513df-a8cb-4493-9e04-5ba3c29f2fb7",
        "cursor": {
          "ref": "e23f0ab4-9d4c-4fd6-bafa-297327d04bac",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "728e3471-fbb3-4c47-950c-b55e0e96730d"
        },
        "item": {
          "id": "802513df-a8cb-4493-9e04-5ba3c29f2fb7",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "089b3db5-db6c-4652-8f10-6e12d1e18d5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47fc0e8d-8852-43c1-90d9-4b672bd8226d",
        "cursor": {
          "ref": "410adab2-4569-4069-bc3b-7130c928ef05",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "9c203eca-592b-4285-9788-6387abec71e6"
        },
        "item": {
          "id": "47fc0e8d-8852-43c1-90d9-4b672bd8226d",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "09fcf8f6-81bc-4725-b837-8f4fd13857c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e55ce14-6146-4730-95e3-d88e6d74cc6d",
        "cursor": {
          "ref": "53e7c5a5-5815-4a36-b801-265bc0bc01bd",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "103f2c78-f8c0-4a41-9357-ca1d1d62bfc4"
        },
        "item": {
          "id": "5e55ce14-6146-4730-95e3-d88e6d74cc6d",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "6ec3c07e-c1c1-439d-97e9-061310de02db",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c168bedb-b364-43ea-8df5-40c9eeedd567",
        "cursor": {
          "ref": "8701d443-c3ff-4db8-a358-0931c3f40b67",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "123e5c71-5678-4f9d-b822-28a9fca327bb"
        },
        "item": {
          "id": "c168bedb-b364-43ea-8df5-40c9eeedd567",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "b354d9ca-5772-4ef2-899a-d897823a7f39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 88
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faf57dc6-5ade-4d7b-8395-4383adfba10b",
        "cursor": {
          "ref": "2f3b6aff-1cc7-4204-aa08-0c4cf7832444",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "f2b792f4-e929-463e-9df5-aff5eabbb873"
        },
        "item": {
          "id": "faf57dc6-5ade-4d7b-8395-4383adfba10b",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "a379db8f-4985-4fde-9b17-f2becebf0f3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "192d4661-218a-4439-adde-20b62e2e65f1",
        "cursor": {
          "ref": "d3cb6346-beb0-49df-9b0b-e1428eadf6c6",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "93239fa0-4628-4622-997c-cef775a4e15c"
        },
        "item": {
          "id": "192d4661-218a-4439-adde-20b62e2e65f1",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "de5668bd-02cd-4150-be24-8e1bd808252e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2953b712-057d-4568-8b58-22c98a6b92ff",
        "cursor": {
          "ref": "93ff9d60-2046-4ee1-a9d7-301ded4a2bdd",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "f5faef99-1e3d-41e1-9b52-7b235387187e"
        },
        "item": {
          "id": "2953b712-057d-4568-8b58-22c98a6b92ff",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "7ec0ae78-6d04-45b8-b023-5fdca0a9e4ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce5e929a-01a9-446c-9cc7-b87f5423f31d",
        "cursor": {
          "ref": "6aa78551-2680-49be-a489-4efe7325b1ab",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "01bff3b1-be1e-4d6d-892a-2121fe0303ce"
        },
        "item": {
          "id": "ce5e929a-01a9-446c-9cc7-b87f5423f31d",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "116b37ea-c9be-4c12-9b49-19ae140a95ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6af12d42-62b9-4d50-a5f4-c5e7817533bc",
        "cursor": {
          "ref": "29e40d32-c836-4508-899f-b35115519f18",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "f7dd3e43-5084-4943-900e-167116924143"
        },
        "item": {
          "id": "6af12d42-62b9-4d50-a5f4-c5e7817533bc",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "23162949-b714-4efa-8921-403b129a5616",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4323915c-6880-4366-9a2c-65205af35f9b",
        "cursor": {
          "ref": "be0d7479-d1ee-4676-90d1-5c45a2b3dd50",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "ea65d2eb-b6ae-4965-a22b-f80024ff2eea"
        },
        "item": {
          "id": "4323915c-6880-4366-9a2c-65205af35f9b",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "ba863d63-2265-4616-a447-9180d070f27b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 99
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cba82ed2-9298-41b7-88f0-f4f484ecf2a2",
        "cursor": {
          "ref": "ba188a02-131c-4698-be27-d7e9e906d26b",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "3b9740ac-9762-47d4-a0b3-cc652664fa5e"
        },
        "item": {
          "id": "cba82ed2-9298-41b7-88f0-f4f484ecf2a2",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "3a7a4518-c749-4ae6-aa09-e1e56c58c06a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1dfd43b-5816-4337-9222-7069acd5a0ac",
        "cursor": {
          "ref": "ba0b309a-621e-4a29-b354-951599ef1f15",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "fe764fc0-d88b-4a5e-b2ec-b27da0beceec"
        },
        "item": {
          "id": "e1dfd43b-5816-4337-9222-7069acd5a0ac",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "26284258-914d-4e11-874d-13354a53e635",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3e69ebb-3977-4779-982e-4e2577cb73cf",
        "cursor": {
          "ref": "55986e8b-5113-4b79-a4db-ad7572a0d170",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "e2b51206-f954-479c-9626-4ca9cd44e94b"
        },
        "item": {
          "id": "b3e69ebb-3977-4779-982e-4e2577cb73cf",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "326e8ef4-5c66-4a01-9ca5-4c5ddde027a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f862d3a-bc78-4790-b8ec-9343f20ea75e",
        "cursor": {
          "ref": "184024cf-1e4a-40bf-8b00-7a5aded1dc25",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "a7faff3e-74ff-41f8-8fc4-46e46f408573"
        },
        "item": {
          "id": "6f862d3a-bc78-4790-b8ec-9343f20ea75e",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "2d4222e2-7789-4685-9d2b-43daa7170b5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03b8edeb-1e6d-4b71-925c-97bb7a8131b2",
        "cursor": {
          "ref": "b6e2d7c9-ccf7-4f71-be38-a8bb03249391",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "986adfca-a0eb-4071-937c-6c4b6a35bd57"
        },
        "item": {
          "id": "03b8edeb-1e6d-4b71-925c-97bb7a8131b2",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "51bbb69d-9b6f-47ff-a491-db987fe554af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aebce80-226b-4ac5-a122-744fc0ff3dd5",
        "cursor": {
          "ref": "eef0f7f3-3d29-4bb5-bafb-c471cccdce3f",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "c6cd818f-d68e-497d-8ec1-8a8ad3b25a04"
        },
        "item": {
          "id": "2aebce80-226b-4ac5-a122-744fc0ff3dd5",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "94ae74e3-15f2-4f3c-a956-68b66fc67379",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61e0f1f1-fd2c-4008-8595-f1fcbf019cf4",
        "cursor": {
          "ref": "a6ce6cde-ffe1-42d8-8b3b-e5b31997e632",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "7c68b271-f08c-4d33-b830-5965070bfed4"
        },
        "item": {
          "id": "61e0f1f1-fd2c-4008-8595-f1fcbf019cf4",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "ca27ffd3-727c-4e02-b6f3-86c4250a73cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb41b1d3-ed91-42b6-a1dd-cf864a3aef9d",
        "cursor": {
          "ref": "7ff0f536-a215-4281-96cf-033c024af9b1",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "471efc54-359a-4d55-ab3e-ae35bb29aef3"
        },
        "item": {
          "id": "fb41b1d3-ed91-42b6-a1dd-cf864a3aef9d",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "dd698b1b-c538-430e-aff6-66f9b269adf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "013d2e3c-7569-4f02-a2d0-a103cfa3f184",
        "cursor": {
          "ref": "e1903c5a-2a7d-4295-bb1d-96a326f9915b",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "956f3417-176e-4147-aed8-8bedaa1ce5ae"
        },
        "item": {
          "id": "013d2e3c-7569-4f02-a2d0-a103cfa3f184",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "0c3afe7b-b6cb-462a-aa8b-79b86410c9ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "582d63e7-5905-436d-9026-d1e6c2e764bb",
        "cursor": {
          "ref": "735dc9a7-0046-40e7-956b-7c6b9a2b4d3b",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "bc2a34b4-e23b-48e3-8cec-034819aeeed0"
        },
        "item": {
          "id": "582d63e7-5905-436d-9026-d1e6c2e764bb",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "be74cb77-ce23-499b-a0b0-edf659b5a2d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3b637a9-84e2-43c9-86d4-379b96048128",
        "cursor": {
          "ref": "060e573d-e24e-4fbc-9925-401f333020eb",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "318ea660-982f-4198-b3fc-1c3df271c495"
        },
        "item": {
          "id": "b3b637a9-84e2-43c9-86d4-379b96048128",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "ea54851d-5e14-4490-acf0-aaeb67be20a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffcb0f8a-bc42-4f45-a0c1-72b0c5156c9e",
        "cursor": {
          "ref": "bccf871f-ab43-43a6-9ef7-b0bd9cbd04bb",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "16505702-30c9-40e6-9099-7fb201d50a38"
        },
        "item": {
          "id": "ffcb0f8a-bc42-4f45-a0c1-72b0c5156c9e",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "ea6ce620-a9db-40b0-b093-63321a795519",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2ab92de-5627-4ecd-9f39-c66c86119d62",
        "cursor": {
          "ref": "ce75506b-51f0-4a35-9c8c-78c710b5957f",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "6ec3f9b5-003d-42ab-9cf7-c8d9321cdf9c"
        },
        "item": {
          "id": "d2ab92de-5627-4ecd-9f39-c66c86119d62",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "c1bc254e-8e6c-4937-8da7-477517ee8245",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "335ba394-b21a-4a3b-b78a-52972a5868e9",
        "cursor": {
          "ref": "3fbc9d8e-b29e-4f00-bff4-30f7cc7020d8",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "5ab0859c-38b3-461b-b206-94477e5e0611"
        },
        "item": {
          "id": "335ba394-b21a-4a3b-b78a-52972a5868e9",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "075bb1b7-2372-44c8-950a-e02b2b6fdadc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3990bbdb-f385-4f88-86ae-49b2c90ba9b1",
        "cursor": {
          "ref": "424e7d4a-f3a1-4061-8629-693037a41474",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "a86bfaf9-b904-43f7-b27f-84cf97dc8690"
        },
        "item": {
          "id": "3990bbdb-f385-4f88-86ae-49b2c90ba9b1",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "a8b6e022-7d7c-4b3c-8782-bafc0d97897b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fea011fe-5ae6-451c-a09f-8f0b555dcf2f",
        "cursor": {
          "ref": "0ea8e331-d3dc-4253-9b63-9430bad2ea2b",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "70d701d5-2460-4afa-b232-47d8eda31217"
        },
        "item": {
          "id": "fea011fe-5ae6-451c-a09f-8f0b555dcf2f",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "fc0cf9d3-0087-43fa-9bf1-43ba0aac3dd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef9d7223-c312-4b89-af46-6c348874f913",
        "cursor": {
          "ref": "949176b5-b300-4aa1-8122-b6a7039080e7",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "9a62c900-025e-4233-a7b1-154a6acb119e"
        },
        "item": {
          "id": "ef9d7223-c312-4b89-af46-6c348874f913",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "f81f8174-76e3-4487-a795-b14343dff8e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11804f1a-04c0-4c99-b2c3-aad131dcd1a9",
        "cursor": {
          "ref": "93d77f1f-e1e1-431e-bb9b-44bd20b5a9f4",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "c033cf74-f27f-4c82-9e40-67a0892039b4"
        },
        "item": {
          "id": "11804f1a-04c0-4c99-b2c3-aad131dcd1a9",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "df4c15d2-cd01-482d-bf30-50cf74e8cfad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ab10a1d-f2e6-4494-ae33-24fe970b5f81",
        "cursor": {
          "ref": "d346431d-0f8e-46ed-9f0d-8ba3dca29a86",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "779c81e0-71e4-4b8b-bf70-419d85cbb175"
        },
        "item": {
          "id": "2ab10a1d-f2e6-4494-ae33-24fe970b5f81",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "55847091-bce8-4cf6-8a11-b037f09cb708",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8215c26-cbd6-417d-bf77-2d4875be04c5",
        "cursor": {
          "ref": "ff428262-95bd-4e79-aa07-18ce16fc902d",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "8a6499af-46f2-4f25-a3fe-6b22aa41fbef"
        },
        "item": {
          "id": "b8215c26-cbd6-417d-bf77-2d4875be04c5",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "0e5916ca-b9b1-4a68-a3c7-4359c1f1e413",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc277198-93ef-4fff-9158-00d7c852a488",
        "cursor": {
          "ref": "f22345f2-e800-42f3-9867-7366cb653db1",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "fb696f51-b8c3-48a4-b23e-c9aec339bdd0"
        },
        "item": {
          "id": "cc277198-93ef-4fff-9158-00d7c852a488",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "761feb93-4cc8-4412-9842-cd2e84ba912b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "979a4b0c-3d58-44bd-a54d-4bb934e7837b",
        "cursor": {
          "ref": "a8d91943-1725-43fa-ae8e-1f74d9b67295",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "073e0ea5-fda8-4940-babd-71132e8b072d"
        },
        "item": {
          "id": "979a4b0c-3d58-44bd-a54d-4bb934e7837b",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "98e2c8e0-1767-473c-9e2c-fa45e34654c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "331baa8b-1409-468d-97df-ad8d53c32184",
        "cursor": {
          "ref": "00b7cbe1-9332-40b4-bef5-010806f51ec8",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "10d515aa-3560-4baf-95cf-56c7a5bb78ff"
        },
        "item": {
          "id": "331baa8b-1409-468d-97df-ad8d53c32184",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "d6e80231-e497-400f-94f0-74f69b7e5679",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca40b3bd-d662-4f4b-8c9d-70cb7b6df021",
        "cursor": {
          "ref": "3afc5ae8-670f-4077-85d1-7a9d93df1127",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "c0845e5a-f917-4ef3-a818-cf99a78138e5"
        },
        "item": {
          "id": "ca40b3bd-d662-4f4b-8c9d-70cb7b6df021",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "55aca781-daf6-40ca-b2d2-03996f7eea01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae9dcd53-2640-4b02-922f-8a3aeb17e76d",
        "cursor": {
          "ref": "c28ee07c-2a45-4991-a069-9ba630ca4716",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "d68c8a12-ce6d-4cf4-99f7-f457be327915"
        },
        "item": {
          "id": "ae9dcd53-2640-4b02-922f-8a3aeb17e76d",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "f5dbf02e-c375-4143-ba32-580cdfff571c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beb3ce66-e9e1-45fe-8e3f-3c00a0ebf302",
        "cursor": {
          "ref": "d5df2f0b-a3e7-492f-a445-de6dd694fa14",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "85f460dc-9c25-4a18-b3c4-bfed24f56562"
        },
        "item": {
          "id": "beb3ce66-e9e1-45fe-8e3f-3c00a0ebf302",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "ba5ee138-9f17-4d7b-9f29-3b2138d1d90f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89beb36a-8fcd-45ae-8e08-7ad9a20d29f2",
        "cursor": {
          "ref": "686a7d3d-6d07-4d8b-b0a2-b5edefdd4c01",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "0236ca34-4098-409e-b42c-a3300a9e464b"
        },
        "item": {
          "id": "89beb36a-8fcd-45ae-8e08-7ad9a20d29f2",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "1e88543c-26c0-44b3-b053-58233b6f838d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb82ec84-537f-4c9e-a035-6b9096408cf1",
        "cursor": {
          "ref": "486b62d1-b952-40ee-9556-ca305b296d79",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "be2d2a48-3f7c-47f0-b9c7-a4a967249ae7"
        },
        "item": {
          "id": "cb82ec84-537f-4c9e-a035-6b9096408cf1",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "ffbbbc3b-d7b9-4a40-820b-366052683d08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4671a01c-73a2-491b-86e4-d1d009deecad",
        "cursor": {
          "ref": "e56c2df4-ee5f-4bc6-a189-26f75aa7fc4a",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "3093dc38-dc56-41ab-bd77-eece0bd5a5a3"
        },
        "item": {
          "id": "4671a01c-73a2-491b-86e4-d1d009deecad",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "03b1863b-159a-4c60-b9f0-a2244c6ce47c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c829fe55-2b5e-449c-bef7-30850532f927",
        "cursor": {
          "ref": "883be842-1a3e-4e7c-9169-f5f04950197f",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "4fddd0c3-9c7c-4b4a-8b0a-be30bc67ff1a"
        },
        "item": {
          "id": "c829fe55-2b5e-449c-bef7-30850532f927",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "b26a4907-b822-4c34-8e2c-623f0405a369",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44d55f12-4c49-4105-992b-cbe87009fbcd",
        "cursor": {
          "ref": "e9da72ca-ad98-4408-8798-019eb0daad2c",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "81fbf70f-3c13-49d8-af40-b9de11b9d303"
        },
        "item": {
          "id": "44d55f12-4c49-4105-992b-cbe87009fbcd",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "c78a8202-8e39-4003-87b9-53adc47f8d85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12adc0f0-7d8a-48e0-9b6c-44058b7f0656",
        "cursor": {
          "ref": "9659d94b-620d-4b2f-a714-c79dabca20e2",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "ccf4af0e-3db8-42fa-8a4c-a55862aa3742"
        },
        "item": {
          "id": "12adc0f0-7d8a-48e0-9b6c-44058b7f0656",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "c8f2cd97-0447-4b7b-adeb-73b122c5e309",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a8fdbf8-87d4-48c4-bb5a-25ca4a0b5285",
        "cursor": {
          "ref": "d4a75fab-8f47-42a6-aa8a-b9ac2887ab43",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "90e223b5-77fe-4d89-af91-560bec99b28e"
        },
        "item": {
          "id": "2a8fdbf8-87d4-48c4-bb5a-25ca4a0b5285",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "c4f6346e-19ea-4aab-a116-62b0d526b9a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d8ff192-5332-4a6b-b46b-3c8cca7b47e1",
        "cursor": {
          "ref": "78028350-0403-40a7-8aa0-a7329d1710a7",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "a8fbc269-38a8-4e89-8f16-bcbedb92a5c1"
        },
        "item": {
          "id": "2d8ff192-5332-4a6b-b46b-3c8cca7b47e1",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "bd5b5f73-b871-4a0d-ada1-b3da9fb5cfdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eef24eca-8946-4716-8bd1-1c99d32dc013",
        "cursor": {
          "ref": "588800a8-e024-47f2-882e-deb2d8852eb4",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "764578ee-0f94-4191-83d4-f6a4b5c99b21"
        },
        "item": {
          "id": "eef24eca-8946-4716-8bd1-1c99d32dc013",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "d52cabca-acb3-4d1d-b7a3-35b7e3492f11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "717d64f9-1bb2-421b-be4e-3d23c80f5b2e",
        "cursor": {
          "ref": "c42fcccc-d533-4c35-bce3-8cb563746a59",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "5f220bb3-1435-42ab-b40c-b4f9ab9ace7c"
        },
        "item": {
          "id": "717d64f9-1bb2-421b-be4e-3d23c80f5b2e",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "69a5f472-4258-4b0e-b996-51f52d14cd43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7180b3d6-7aa9-4bcc-b530-78e885df6021",
        "cursor": {
          "ref": "d54edc13-bae4-4739-8bdb-fed266372d89",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "707600a0-d5c3-405c-9572-ffedb87feeef"
        },
        "item": {
          "id": "7180b3d6-7aa9-4bcc-b530-78e885df6021",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "bcc4b5d2-7427-4b4b-a771-a5a2b326b9db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8f8dad6-f88e-48f5-8de9-76fd82c642c6",
        "cursor": {
          "ref": "f00a3919-0953-4952-83a1-8c02eeca5485",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "fd02255a-38d7-4525-b661-626db57becd4"
        },
        "item": {
          "id": "d8f8dad6-f88e-48f5-8de9-76fd82c642c6",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "75a7048a-9909-4990-b1ff-bdb12ade2326",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "722885a6-405f-4361-bf96-0e360b41a3f6",
        "cursor": {
          "ref": "e34c2bcc-6f87-4f82-882e-304d3bd4bd17",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "328f17b6-c9fb-436d-931e-791ee8fd4d2b"
        },
        "item": {
          "id": "722885a6-405f-4361-bf96-0e360b41a3f6",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "ec252c51-24f6-41aa-b81a-68fdfe3cea45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d25ad46b-f709-4968-9bc4-600d9f42e46a",
        "cursor": {
          "ref": "89285490-46f5-4a6f-b7ef-c01a70c2276e",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "0c880f77-dc2c-4558-abd0-7096f5994400"
        },
        "item": {
          "id": "d25ad46b-f709-4968-9bc4-600d9f42e46a",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "04561bb7-ee42-4bab-ae60-234b640c996a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f23f037-290a-4c13-a63e-d2308762e71a",
        "cursor": {
          "ref": "2abdf727-750d-4a5e-b479-7901e84614d1",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "b6486491-26c0-4e67-992d-a3032af99a41"
        },
        "item": {
          "id": "7f23f037-290a-4c13-a63e-d2308762e71a",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "6e912871-7382-4d50-9e14-46fb0411f048",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "987e86b9-4f79-4f3b-b507-f73b5030de9d",
        "cursor": {
          "ref": "e90181d0-e1d5-429e-b223-046a61143f4c",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "05879b21-49ae-492d-8ee4-60f61836d657"
        },
        "item": {
          "id": "987e86b9-4f79-4f3b-b507-f73b5030de9d",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "a44631ec-0f5e-4354-95b7-dccfed22a7a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52492ca0-860a-444e-be61-46fb6ef31728",
        "cursor": {
          "ref": "7c95382b-46c4-4ba6-8329-ceb9134bc76e",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "8bde2f5a-e150-4e1f-9e1e-9c6acd0a4142"
        },
        "item": {
          "id": "52492ca0-860a-444e-be61-46fb6ef31728",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "dd514c6e-f893-4c01-a325-024fff405827",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf263844-6af1-42f9-8667-a1033f2aab6b",
        "cursor": {
          "ref": "9a105d06-a79b-4a35-8b8e-e1930c9e4a7c",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "b499394a-afca-48d6-80d4-a81bc396abfb"
        },
        "item": {
          "id": "bf263844-6af1-42f9-8667-a1033f2aab6b",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "edd48616-207c-4b18-916d-778e74ba635c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28de9b33-9a80-4d70-974b-16ddaf6d2537",
        "cursor": {
          "ref": "32f12687-e2be-481b-bc45-f203d4085828",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "c667e89b-acee-489a-b082-11eaacf1be4c"
        },
        "item": {
          "id": "28de9b33-9a80-4d70-974b-16ddaf6d2537",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "a7de6419-85a9-4e3a-917a-59264c9142ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 131
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "012e8208-fbed-41a8-85ea-ff901a0b92b5",
        "cursor": {
          "ref": "cb7289c1-d684-48ea-856f-51ae5bad7624",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "4e7f8e63-14ee-4317-a784-d02b0519442a"
        },
        "item": {
          "id": "012e8208-fbed-41a8-85ea-ff901a0b92b5",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "5e5ac98f-a248-4b55-bb90-84479f34e2bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5f3b3c1-3d58-47dc-9d78-2b9801434fc2",
        "cursor": {
          "ref": "72ea805f-8440-457c-a0b7-2e0ad88f2d07",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "4e19608a-83b9-4880-8295-e67c124e62e7"
        },
        "item": {
          "id": "c5f3b3c1-3d58-47dc-9d78-2b9801434fc2",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "785bedf2-2a03-453d-a31b-21dfdb071485",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b618ac3d-57ab-400b-89d1-aa084bc9d036",
        "cursor": {
          "ref": "6edf2650-a0da-40a4-869c-f966792f9db9",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "d1cc4cfd-48b9-422f-a5cb-1c64c79a9b93"
        },
        "item": {
          "id": "b618ac3d-57ab-400b-89d1-aa084bc9d036",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "c50914bc-1e1d-4424-9e27-bb31b467d3b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40390fb4-6632-4c11-ac28-6cc7ebdf703f",
        "cursor": {
          "ref": "900f57ec-bf4a-4728-9418-ffcb32a17a02",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "d3493db3-f91a-4cd3-bd23-77a407d2a549"
        },
        "item": {
          "id": "40390fb4-6632-4c11-ac28-6cc7ebdf703f",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "77445ba8-0f1d-4198-8dd0-d84399e3cd54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdadf13b-c495-4b7e-890f-45cdbf431bb1",
        "cursor": {
          "ref": "8521040d-fa1b-4272-8157-58981d9b242b",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "7b561b16-1b4d-4551-a97d-a31537f47730"
        },
        "item": {
          "id": "fdadf13b-c495-4b7e-890f-45cdbf431bb1",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "1790adea-d9e7-4671-b295-913129394385",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1397ebc-94a0-4630-9761-3b80928868b9",
        "cursor": {
          "ref": "34276383-9e76-4438-b26f-468a4e5b3ad8",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "99a10ccb-fad4-4c6e-b3ab-9aa6bc38922c"
        },
        "item": {
          "id": "f1397ebc-94a0-4630-9761-3b80928868b9",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "31ca3c71-f198-4255-b8f5-3dc417761a22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b9b9414-24a1-4853-86e8-43b3711e15d7",
        "cursor": {
          "ref": "4cdd0c8f-c55f-4cf0-b256-ce58b09b8416",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "1f12ae10-4080-414c-82bc-bcf242bd2843"
        },
        "item": {
          "id": "5b9b9414-24a1-4853-86e8-43b3711e15d7",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "a9fe78e1-b902-47f8-b042-9b16debd3b7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "191f7648-da34-4487-b554-62e833d41524",
        "cursor": {
          "ref": "1bac0b06-3c7b-45e0-a7aa-351944305aa0",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "a16fd6a6-a331-42a4-b329-56d582ac7d66"
        },
        "item": {
          "id": "191f7648-da34-4487-b554-62e833d41524",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "b0b70886-92bb-43e2-8f34-0f058d49d91d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f1dc2a1-d355-48ba-b62f-3b1a1bfdab82",
        "cursor": {
          "ref": "d2d942d8-2cdb-4e8d-adda-0ccf742a3298",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "fcb4c05e-e98c-4c96-9750-3f943aa23b8a"
        },
        "item": {
          "id": "9f1dc2a1-d355-48ba-b62f-3b1a1bfdab82",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "d6fcd3d0-5851-44e5-9fc1-3e96184424c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25c1d78f-0bfa-4a68-9bc4-01455936f574",
        "cursor": {
          "ref": "26c37c15-a7f9-4bb3-be2d-19d3ca3c2706",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "d846ce79-b550-48c3-9c08-0a0e54aefa72"
        },
        "item": {
          "id": "25c1d78f-0bfa-4a68-9bc4-01455936f574",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "4f5cb6a1-bf30-42da-b873-96114c863f9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf15525f-a87e-4ffd-bcf9-f43afe158092",
        "cursor": {
          "ref": "1b133f20-0990-49b4-95eb-704be6b36726",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "8db323a7-e646-43f7-8853-891f7e4eac11"
        },
        "item": {
          "id": "bf15525f-a87e-4ffd-bcf9-f43afe158092",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "36450a1a-b852-42bf-9ede-8b32b6d2866f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "787bf737-fd55-40be-bbcb-e94d8c389ab0",
        "cursor": {
          "ref": "b89133ff-3c71-4017-ba9f-d4675b1ac501",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "98dad80d-9f92-4000-927d-4366d54595ba"
        },
        "item": {
          "id": "787bf737-fd55-40be-bbcb-e94d8c389ab0",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "e3638dc8-3a50-40cd-bfdf-bd9e2a21e1be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81b62793-172d-4fd9-9217-047222d1f301",
        "cursor": {
          "ref": "e9150ad1-f91e-434b-af16-0f8f80461b48",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "13ddafc9-5dee-4b79-af5f-06ddc16510e8"
        },
        "item": {
          "id": "81b62793-172d-4fd9-9217-047222d1f301",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "5ed3c4c9-d6a2-49d3-8c7b-2d8cb8b321ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d01bfd31-3ba8-432a-abf2-5e6da1aff852",
        "cursor": {
          "ref": "28eaf257-c821-4bd0-81c6-ab2de8df40b9",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "86bc6fba-5d52-41bd-b7d5-d2b2a546ad2e"
        },
        "item": {
          "id": "d01bfd31-3ba8-432a-abf2-5e6da1aff852",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "5fd33f5a-6067-4f18-bcd0-39846c8007aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01559441-a10c-4f8e-b773-3da50f6f376f",
        "cursor": {
          "ref": "f149f29f-c270-4f02-ba11-a264e85c6860",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "2ddd14fa-36bf-40f3-a8ba-37f65ce28d9d"
        },
        "item": {
          "id": "01559441-a10c-4f8e-b773-3da50f6f376f",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "611a5353-d8bf-40c0-afbb-be316227aee0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "292cb043-cad9-4c77-ab08-91c4030fbee7",
        "cursor": {
          "ref": "8bbace9c-cf9a-412b-bd5f-9afd0cf1a058",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "587f0825-9aad-4d15-b340-8b3d1255e3f0"
        },
        "item": {
          "id": "292cb043-cad9-4c77-ab08-91c4030fbee7",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "0b6515e2-5d17-482d-96b9-d602767ec593",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c1bd74a-ac14-4c24-a635-9ec1cfa829e3",
        "cursor": {
          "ref": "38c50713-6974-4e4e-bbbf-f6f678d1018e",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "79a2c8fe-943d-46fc-8289-645d5a31a536"
        },
        "item": {
          "id": "5c1bd74a-ac14-4c24-a635-9ec1cfa829e3",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "1e7075a4-0107-418d-9d2a-5f46e8f8265f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aa69f43-4bc2-4225-ac84-8f6e493742cb",
        "cursor": {
          "ref": "9d2b1bd1-38a3-4924-91ee-6002fad15501",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "7f88245c-3236-4865-8e79-0d495d506892"
        },
        "item": {
          "id": "7aa69f43-4bc2-4225-ac84-8f6e493742cb",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "c2f2b732-ae75-40e3-a33a-e7920d9958ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b05752d-6406-4d59-81bd-8d30ecc38d1d",
        "cursor": {
          "ref": "ff36f0c0-adf7-41d9-8e02-c4a42e4d0b3a",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "7d9940eb-4e9c-426d-9788-b4638bbe1696"
        },
        "item": {
          "id": "6b05752d-6406-4d59-81bd-8d30ecc38d1d",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "645e329d-1c27-4472-a702-df450b857987",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e949f2c-3141-4f74-a2b4-cb8b613d0e94",
        "cursor": {
          "ref": "bd65bb10-3a0d-496b-ae84-8eb4069144c0",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "8818a241-4756-4c33-879f-614e4a64914d"
        },
        "item": {
          "id": "7e949f2c-3141-4f74-a2b4-cb8b613d0e94",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "103a59a3-fb7b-4b40-a01a-c2b67f932302",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2004b141-d54a-4530-a723-1e0da6ae99ad",
        "cursor": {
          "ref": "ac144271-2967-48b1-8054-a373405fa622",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "4ed1f208-21d2-4c3b-b14a-acbd10110bee"
        },
        "item": {
          "id": "2004b141-d54a-4530-a723-1e0da6ae99ad",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "b8dc7a05-830d-4d84-94e1-49c6166d023b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9015fb23-ad2a-4917-a8df-8392ee1f2c5c",
        "cursor": {
          "ref": "a157daa1-dff5-439d-9f6d-c5c3f916229b",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "d868be4e-d90a-4f95-9657-c566b93f6946"
        },
        "item": {
          "id": "9015fb23-ad2a-4917-a8df-8392ee1f2c5c",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "ddbe8c35-b86b-4d05-8a3d-c2cd769fa427",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aba18d0-ef1f-4d8a-9a29-0d193712e1f3",
        "cursor": {
          "ref": "2c7196b1-55ca-408c-a95d-3eb3a235a7f2",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "72acddf4-faae-4656-9043-95cbc36f63ba"
        },
        "item": {
          "id": "4aba18d0-ef1f-4d8a-9a29-0d193712e1f3",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "b6807202-5b54-45aa-9621-113069334a78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76f22a6c-dc76-4a02-a6fd-4f6347551464",
        "cursor": {
          "ref": "7fce248e-075c-446c-8ede-931e10d77248",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "db263579-62be-4e32-acd2-ca8e1a7d7894"
        },
        "item": {
          "id": "76f22a6c-dc76-4a02-a6fd-4f6347551464",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "f39d9410-8fe9-4376-97a2-3cd8facb2f47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbf75721-1515-494e-822b-619f4089bac1",
        "cursor": {
          "ref": "4a9074a2-aae0-4acc-92e5-5b953b6e4504",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "3bbf5295-05a3-4111-9813-801397bd7674"
        },
        "item": {
          "id": "cbf75721-1515-494e-822b-619f4089bac1",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "bd03bd3d-3498-45db-95d8-a642bae78ef5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fec7bfb0-48e5-4528-84c5-13d9c27922fa",
        "cursor": {
          "ref": "e3e6af6b-135d-4a9f-97dd-333c1ae22afe",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "3507676a-a9b7-444e-813b-f388e49ed25d"
        },
        "item": {
          "id": "fec7bfb0-48e5-4528-84c5-13d9c27922fa",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "7eaec849-8235-42b3-875b-41f173876b39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99dfc609-eb9f-4476-9163-12a474b7992b",
        "cursor": {
          "ref": "22d3de12-9a1c-41de-b10c-c8606683c90c",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "c26e84d4-b6d0-489c-91ed-5eb21d15e409"
        },
        "item": {
          "id": "99dfc609-eb9f-4476-9163-12a474b7992b",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "098b45ec-ff78-45ea-8d41-319019a0fe35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa300947-a3b4-4161-8d5f-89192c7cbc75",
        "cursor": {
          "ref": "711afe53-f58d-4478-9bd4-5ee1a906c989",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "919e9e72-ed80-463e-8d92-8a718522f3c9"
        },
        "item": {
          "id": "fa300947-a3b4-4161-8d5f-89192c7cbc75",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "6b4afd89-109f-411b-87c3-c62af3e2e55d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9ee6d44-d45e-4552-b186-c725168e2746",
        "cursor": {
          "ref": "35f2058a-0219-430b-9b9c-df9cf0990d26",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "41217e1f-f79a-4e73-8221-8b8bc4dc9fc8"
        },
        "item": {
          "id": "c9ee6d44-d45e-4552-b186-c725168e2746",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "a2c86619-e886-4c70-b1b9-6890fa647f4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe546d34-2443-4301-8bbc-b95f62f4500d",
        "cursor": {
          "ref": "ed29d990-d0d4-4e2a-9181-8b47053fbe6d",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "373575ec-ebde-4e2f-9ad2-508e1c6f28ec"
        },
        "item": {
          "id": "fe546d34-2443-4301-8bbc-b95f62f4500d",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "2eedc087-6a50-4f5b-9708-7a12172d5bd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c482eb21-9fc6-4232-a178-1c6cb95da5c0",
        "cursor": {
          "ref": "20f04eef-d7ee-44ef-9864-174958c07e23",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "e350f94d-4393-45fc-b13e-e43dd072a638"
        },
        "item": {
          "id": "c482eb21-9fc6-4232-a178-1c6cb95da5c0",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "fdd60b2f-8e40-4fc1-9414-264680b5cb21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c3161b6-dc41-4f46-ba40-dc6aef08d1e0",
        "cursor": {
          "ref": "f6c79b3b-1ea0-4789-803d-dfbec0cf3604",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "41fad19d-c946-486d-8d61-42048e9c7a94"
        },
        "item": {
          "id": "6c3161b6-dc41-4f46-ba40-dc6aef08d1e0",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "9e1294d3-a567-43e7-b89e-295e1bd77ab1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a8358b6-0b16-451c-b960-f12fb1fb6e29",
        "cursor": {
          "ref": "cc3fc6bb-deea-47d3-872a-c57eeef0a388",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "bd631456-78a3-41d4-ad6f-3b725071d7ca"
        },
        "item": {
          "id": "5a8358b6-0b16-451c-b960-f12fb1fb6e29",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "a6012c87-cf67-4a9b-aa4b-5a6c2d041afc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "465b900b-1207-4e23-84b7-e9a63c579d19",
        "cursor": {
          "ref": "084850e0-7b32-4cdb-b1b2-ffa02e1ca49e",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "3160f908-8ac6-4587-9379-33b4131becad"
        },
        "item": {
          "id": "465b900b-1207-4e23-84b7-e9a63c579d19",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "3e068166-605d-4e92-8f2a-4b98ddf229c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ee468a4-dffb-47a0-ae60-021b342230f3",
        "cursor": {
          "ref": "eb6d4c6d-b982-4809-a3fb-40c244f19e34",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "b41383a1-3e4e-4a79-a914-67e4f5e3fde4"
        },
        "item": {
          "id": "4ee468a4-dffb-47a0-ae60-021b342230f3",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "ea2e6c32-91f8-4794-a823-d7ab7ba6ff5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8addc749-91e1-441e-a7e2-ba95804bd13c",
        "cursor": {
          "ref": "fb6d679a-9db8-425e-8e0b-cd21060f84c2",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "2577a297-ea1f-47ed-852c-cfe2ef8cf232"
        },
        "item": {
          "id": "8addc749-91e1-441e-a7e2-ba95804bd13c",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "518c04e7-7619-44d9-920f-922b6f34a881",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f36c2d41-bfc9-4201-8627-484260673e3c",
        "cursor": {
          "ref": "3bbf942f-8f16-4307-a0e0-34f78f4879dd",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "d8165f72-2233-41c1-91ac-969db810a393"
        },
        "item": {
          "id": "f36c2d41-bfc9-4201-8627-484260673e3c",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "4612bba7-e1fd-48d7-9099-3c071bc8e260",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da6f80e7-2eac-439b-80d4-e7e2eb0ae4dc",
        "cursor": {
          "ref": "902d0405-3ec2-4eee-b939-3da0e47f197d",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "8cf926a2-da04-4507-bcb8-4c371903adc8"
        },
        "item": {
          "id": "da6f80e7-2eac-439b-80d4-e7e2eb0ae4dc",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "25e66cda-638a-4635-9af2-4bd27aa71225",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dab2e3e2-1bb3-405a-bcfc-b3314ba419de",
        "cursor": {
          "ref": "acddba8d-2279-443f-9bdd-1b8142959138",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "ee8cc90b-316c-44c2-afe5-82ba05fae588"
        },
        "item": {
          "id": "dab2e3e2-1bb3-405a-bcfc-b3314ba419de",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "405b3488-e146-40fd-8af0-38c031ae4024",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71d9017f-24ad-4cb9-94d0-8ede481f138d",
        "cursor": {
          "ref": "b74c5564-cdfd-4e9d-b28d-88307fb902dd",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "96b8d4c3-f89f-4c57-9b8c-f0247268130f"
        },
        "item": {
          "id": "71d9017f-24ad-4cb9-94d0-8ede481f138d",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "1b5f59ec-23da-436c-9ab3-50019cab523c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "041b1329-ea02-4531-a416-b22b57fc9ec2",
        "cursor": {
          "ref": "b90ef903-4406-47ca-8295-e790332887a0",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "5adedf3d-9780-416f-b8cc-93d43a9d2e26"
        },
        "item": {
          "id": "041b1329-ea02-4531-a416-b22b57fc9ec2",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "787f570a-cddd-47a1-9d55-a159e69518cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ec7eacf-87f5-48a2-9d6b-b8d7fff4ca38",
        "cursor": {
          "ref": "d6cf87d1-be01-491f-ad01-63285ab03d02",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "77ab6fb8-a033-43c6-af2c-1045970a419e"
        },
        "item": {
          "id": "9ec7eacf-87f5-48a2-9d6b-b8d7fff4ca38",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "abdec085-0b62-4a66-900f-c2150bc20ce2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16f912c2-b96d-4957-8cc4-16b7490c79b4",
        "cursor": {
          "ref": "99969f63-c531-47ad-85cc-1f32d1b99753",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "3fb327f4-9639-4913-9fb2-63a47ca3edf9"
        },
        "item": {
          "id": "16f912c2-b96d-4957-8cc4-16b7490c79b4",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "66a8ec5d-93d6-4627-a2c1-365d1f97ebcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9420d4cd-6c7e-4f57-93b0-3cf681811d2b",
        "cursor": {
          "ref": "efdae2e4-02d8-43b8-8325-8252bcd34ce4",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "3062ac41-b7b1-49d4-bcc7-3b2880dfe63b"
        },
        "item": {
          "id": "9420d4cd-6c7e-4f57-93b0-3cf681811d2b",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "c6d912a7-8831-4e87-8f03-0b82b38dc689",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38517f57-2452-4ce2-997e-e98223600d82",
        "cursor": {
          "ref": "2f59b12f-2d1c-43c3-ab70-9bd22bc4138b",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "f96574e1-0158-4aab-98bd-7a2e22337717"
        },
        "item": {
          "id": "38517f57-2452-4ce2-997e-e98223600d82",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "4fb3e762-6fab-4ffb-aa4e-1b04228797d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbb03ca5-4821-4ab4-baf5-2f072b3babac",
        "cursor": {
          "ref": "2af49cff-8edf-4cbe-a6ad-6999a73f647c",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "65bba0bd-a755-45f7-be55-44bfd683be76"
        },
        "item": {
          "id": "fbb03ca5-4821-4ab4-baf5-2f072b3babac",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "b93bcc44-6681-410b-b996-f1a57ade29e9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d77dd36e-58de-4c83-ab2e-5b6c7c0a5180",
        "cursor": {
          "ref": "b1dbd7ad-8866-4daf-86cd-130669e9e735",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "566fe6ef-9c65-40e4-9efc-672275e689f3"
        },
        "item": {
          "id": "d77dd36e-58de-4c83-ab2e-5b6c7c0a5180",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "cf33fa98-4e81-4775-9181-a922a9c6a781",
          "status": "OK",
          "code": 200,
          "responseTime": 2297,
          "responseSize": 416
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "10028023-ec31-49b2-bad3-0a8074ac5c7c",
        "cursor": {
          "ref": "3af3c3dd-4bb0-45dd-a790-f9ee95a7cb3a",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "43c232ad-4803-449a-8826-62d5f724b0ec"
        },
        "item": {
          "id": "10028023-ec31-49b2-bad3-0a8074ac5c7c",
          "name": "credentials_verify"
        },
        "response": {
          "id": "e6beb88a-f5b1-4c79-aab2-4b99416c935b",
          "status": "OK",
          "code": 200,
          "responseTime": 2829,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0b25c9f-802b-481a-9bde-edaa0bc04e68",
        "cursor": {
          "ref": "03d43c59-fef1-4edc-b30f-8420af09b68b",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "3f1d0ec3-a4d4-4a67-94ba-8075056e3e80"
        },
        "item": {
          "id": "c0b25c9f-802b-481a-9bde-edaa0bc04e68",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "6156eb06-be74-4ff6-bbc5-7b1ba866d863",
          "status": "OK",
          "code": 200,
          "responseTime": 2470,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "df38a7cb-1c9a-4f65-a1aa-b3f3f5dd131a",
        "cursor": {
          "ref": "0515e85b-61ff-4e03-acd5-5fcebeadbc23",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "0eebab67-0981-4ad2-a31e-e4482e3c3ed4"
        },
        "item": {
          "id": "df38a7cb-1c9a-4f65-a1aa-b3f3f5dd131a",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "9ab74f9d-7624-4aab-805b-28a1a4956ce5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df38a7cb-1c9a-4f65-a1aa-b3f3f5dd131a",
        "cursor": {
          "ref": "0515e85b-61ff-4e03-acd5-5fcebeadbc23",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "0eebab67-0981-4ad2-a31e-e4482e3c3ed4"
        },
        "item": {
          "id": "df38a7cb-1c9a-4f65-a1aa-b3f3f5dd131a",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "9ab74f9d-7624-4aab-805b-28a1a4956ce5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "260f673f-2228-461a-a729-0d2b104b2b15",
        "cursor": {
          "ref": "21bd3623-604a-49d6-9bad-4ac321746ee0",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "3591b2c2-4f1f-471b-8fed-744ddac68654"
        },
        "item": {
          "id": "260f673f-2228-461a-a729-0d2b104b2b15",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "fb39a498-00cb-405e-9ad0-d4013ef715fd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b08119ae-9fc9-46ec-8752-5dab108eed0a",
        "cursor": {
          "ref": "780bba3c-ea1c-46d3-a3cd-ea6d2dd40669",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "90175c19-30cd-4cc4-a98c-7e0e2fef8876"
        },
        "item": {
          "id": "b08119ae-9fc9-46ec-8752-5dab108eed0a",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "8f973b3d-f95c-4faa-b999-7b52a4b2e053",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}