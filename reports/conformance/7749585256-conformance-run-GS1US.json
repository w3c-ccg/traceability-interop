{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "e9e7bd9c-a8a1-41dc-a8d1-0a7791aa2378",
        "name": "Clear Cache",
        "item": [
          {
            "id": "e8e25a5c-e8f7-4351-8ee3-28ab741b8d92",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "25e9e6bc-c6bd-4d0f-b58a-901882175aec",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "b4ab5c19-710d-4a4c-aca1-c96c27f69e7d"
                }
              }
            ]
          },
          {
            "id": "2d2a99d2-6f39-4d73-8108-4a0612aa7d96",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "52cb2abc-03d7-4f6d-b93f-f283cd54f980",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "e5c80523-2571-4c09-9a5e-bb131514e168"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "abbd9109-f5a6-4020-a6ed-75ecd3639285",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "c561339f-998d-48c5-84b4-8eb8342316e0",
            "name": "Positive Testing",
            "item": [
              {
                "id": "fbc267f2-bc98-4467-8627-5a06f4f67908",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1d509764-abe5-4fde-88e0-c3056d263085",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fe3741ed-20a9-4bf3-bec8-635bc4806deb"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "30197426-878f-41d8-87f6-8ff41a31de74",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4de35b19-6582-44f7-a5fa-e6a13b5b3f87"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "cb2427de-9a83-40c6-b476-6e308b7f57f5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "87733b04-b075-4236-adda-ac653349fc95"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "96e4a0cd-c722-461c-b91f-59c8c2c79132",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "ba025f93-77d4-4d4a-9fc6-4237e6be0084"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "15808c0a-15e7-4674-9744-b25863ac5fd2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "403949fa-5aea-4a02-af2a-4241f4f1f001"
            }
          }
        ]
      },
      {
        "id": "605026b5-88e7-4676-b536-dc030b0bf2a3",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "fbf1ef27-c2e0-4b22-8e1e-5939baffc582",
            "name": "Negative Testing",
            "item": [
              {
                "id": "51d81678-3d37-4ad0-9ab4-e4afbfff3717",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "de22f115-3871-4380-943f-59a0bd1f7114",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a6e97ba-db07-40d7-b755-84c73e7cacc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b2a674d5-983e-439b-8a6d-66f27ea7f8a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b5efada-3c43-4077-825c-7c271425b99d",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c00c89c8-956f-426e-8575-108182dbf3d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5b6161a7-2238-4cb9-95d9-a1d72d79978a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb5b4bdf-d107-427e-b021-0182f736e7d3",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9166f095-4d88-45af-bf5c-cf49912c3e35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e4875033-3a68-4262-b328-a18cc1555e05"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "19cb6789-6a3e-4fc4-84e3-7bb9fa0737b3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f6559a6e-38a6-4dd6-8462-124bc35bed55",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c2c1818-7a8d-45fa-a13f-a0c7605b2651",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "999df590-5aec-4453-98a7-97b986c35476"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fc0cb94-c3fc-4c14-9405-3fe895c7f19e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a847c15-d786-4945-a082-b0b494324209"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "0c8c8290-e2f6-443f-b0ae-6eeb8671de96",
            "name": "Positive Testing",
            "item": [
              {
                "id": "fec4c81d-5a50-4491-879f-c91891b14f18",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "db5f188a-12c0-4d68-8ff2-71162deed598",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "96c9de41-bd7a-4992-ad2e-f50323dd9d81"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ee372ecf-c368-473f-b5c3-57e0804df5c4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "434fd6d9-1837-4170-b94a-e39a723c6738"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2caa1f47-0045-4cc4-b780-97f3f1a69e52",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "358504dc-a9c6-4fdd-8b7c-dc3751d8693b"
            }
          }
        ]
      },
      {
        "id": "4702dfb5-e943-4530-871f-620bf451077d",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "4d9e96e4-64da-4631-915c-664af1f01665",
            "name": "Negative Testing",
            "item": [
              {
                "id": "020bd2c1-fa97-4968-9dfe-24dd10032d78",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "5cad9004-75fc-42d4-b172-562bf24d44b8",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1757e9e5-f8c0-4846-8066-5c1935609f69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68e1b8d2-35c4-4945-9edd-cb4129e82554"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16a04bdc-4edc-48ec-b1c2-2b589f8f024d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9e7d99b9-0504-4b37-880c-59e61f3b8f4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5e91830-5ea6-49fa-ad01-ea5219e90c06",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2d10f82-2442-472a-936b-ecf7c33914f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acfd7efb-577c-4141-9421-86d4de34f955"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1809031-3da0-498c-b8e8-3cd95fa790df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "041f6aee-a88f-44b2-b71e-760d7d943a8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc59470c-eafd-4c92-97e1-831e253b9477",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2e7eeb7-623e-451c-8c20-1e198b3a4ace",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f42b721-a184-4d5b-8c0d-6cbf4590bf69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "936680ba-cd6e-4421-b03b-44c64d178c06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a03ead00-c6d9-4063-a3e6-bdef07dc67e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9956b9e-4ac0-4383-8671-ca4fc4afedb8",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b6e8673-7f3e-4d25-932f-2f695a2c4fb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f70bda38-eef2-4538-82ef-87da2315d7ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff511119-18ff-443e-be74-ce0aff91a146",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b0606033-aebb-47a2-af1b-7092f8d66303"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd3a3bc0-2923-4f39-b323-51767c73bfe9",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f14dd4a0-4d89-4753-9d6c-8f66c2d2d4f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dd7a03d-ed05-462b-b107-38a8eed11dab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcf4456d-bafa-40bf-9b97-37a79dddbc50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "15be3562-9380-4c20-975e-c1d384d56a4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74ab9e89-9de2-4262-84e8-6ef26663ea3d",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c28ac7dd-27b3-4aa3-981d-321efc73037d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f2132cb-72c5-4822-b27e-1ae4f40b40ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b70380a-b155-42ea-8b8c-1cddb75e2707",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2c9af92a-ed4c-4c41-90af-fb0d5e73f7be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14041a8f-44f5-435f-a506-420dd54e1702",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8803f771-e700-4778-a412-487b8f337c8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd7858a1-012d-4061-9332-f7b0f553d40b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f5df605-66a7-463e-829a-11c57bd99760",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "55981f8a-9282-4e4e-974d-be56567d2239"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c412b1da-3a78-4666-96db-bc27a7197249",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90778f16-976b-4ede-adec-4c4b409e5eb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd96d247-5fe4-4407-85ea-96695a54c9ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff45ec8a-61f6-44e1-b58c-748a27692285",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "67de7763-1833-4bd0-94d2-41a491060f25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1338636-999f-43d5-a6d6-805d4ec24054",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e18fb6d-7500-41f3-ae20-f81dcd93c784",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2a9bc16-3022-4cee-b82b-cc980a04e187"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e7ad9b7-a9be-4ce5-a35b-a634652958b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c82136d2-dbf8-40a5-8a40-5f917e506408"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c4c77ce-2777-4014-ac8f-971be7692a2b",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f0b4272-7663-43f9-b632-e6a6b84fbd62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3bb4016-9d57-4366-b1c9-6d2ec6258414"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8e112fd-52eb-421c-8412-f55552fd9303",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "896a9b40-7993-47b3-8f62-fd0286bcfd20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64d13ba4-a5a7-4f64-89fb-8d8d2e84f548",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49abfb2b-df76-453e-b43c-ac51ea050cff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5545d89-abd1-43a9-afea-33079c990239"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c76f71be-8afb-4593-8dde-4c70f5d9668d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4460ea95-59e8-44c3-ba0d-fe5fb3378c88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ab91f80-02d9-4f89-8cde-e326cdce9fef",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac629962-4e64-4cc2-acf8-958639470b3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "013177ee-f112-4679-b5d1-78040aae61e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5eb68bc9-3288-4dc5-ad03-a40170ac51dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "35280dba-0943-4f57-9075-f538b8d6d6c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "800cd759-4269-4eff-ae4e-673dad44062a",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14b3b940-6977-4670-af6c-431b096fa0c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe70df71-c925-432c-8792-23df929b6a8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "758e5290-aa5f-4515-a864-5d1f593744ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "05aefee7-f21d-41f5-9466-e1b91e7b4aa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4423021-b3c6-4dc3-ad40-882d12caef65",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24eeb06e-260b-4959-93a5-4e26152a1f8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d167d8f9-f0ac-49be-bc7d-4dde07f4a429"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6e201a2-41d0-41a9-95b0-543712503209",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "257243cb-cb2b-4e94-bfb7-e127e38765e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0e67db8-5d3a-41a3-bd34-2fdc67c3a738",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47dfd12a-4057-4bc6-a4c6-f145d40cb1f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66dff6a5-40a1-48f3-94e3-3d7eb46b92f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c037ad6-f09a-46a1-b81a-d8307efde03b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "efa1f195-0281-49b9-9def-73c820a1c5b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43e4636f-3381-416a-821c-08de644303c3",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75ce2c27-6797-448b-9dc9-7657049c4fb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6d298dd-f8d1-467c-b566-ed5b8e788676"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07840d5e-62a0-400f-94b3-7cdf0686cf3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "96fb63b7-c42d-4a71-9719-9478e8e830f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c333fe8a-de8c-411f-aad8-400d57d61d19",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f60d05a4-daf2-4b7e-9165-969dfa2754ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c50ee7c4-c660-47e7-9d17-d1293c039c4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28d630f7-fff6-43d9-b5ef-a039eef10957",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f485876a-061d-40fe-9c91-4dee518c5a6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9f74576-0368-44e3-a93b-77bd7579b4b7",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b163ae5d-2281-4d9a-9d54-6c0a933b45d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edd4dd1d-bb09-4d6e-b8e2-7a08eb344578"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32032094-14e2-4b00-a7dc-5d2e1e373937",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "59c0d430-a435-4368-826e-924f89e604b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14a8dedc-3588-43e4-8794-c9b28d673889",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fb8df0f-92ff-42d4-bc48-a3bd615d12f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fde6c33-9fa1-44c1-b03d-c4f65c926add"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d583607-d64a-40a2-8d75-f800731995ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d0e963c-0789-494f-b787-ca035c1472c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d4fcc1c-bedb-4168-a5c8-89862c867a75",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5beb1dcd-c215-434f-96fe-43675631c428",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86d3c482-e5d3-4757-9b4f-469dd6e17a63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5c18aa5-efc0-4aad-a0eb-2b5eeea9a31a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b3a73031-36f1-4823-88f4-78961e0f7154"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c89463b-0053-4ba0-af28-40bfe655ab39",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "580545ea-c629-46e8-b67f-a56ce4f23f7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6904f3ca-cd4e-4a37-847d-286b57241b7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e09ad5a-f99f-45a1-9356-9cb99b27d270",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "90f07c0a-b14c-467d-bf5a-99522fa359ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cbee8f7-f9eb-4023-8ef5-4e7abc2dab12",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72fbeb43-9db8-41a8-9455-249bc79365a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0721b021-d453-4b9f-914a-1605939e3ef5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4675c04-351b-450e-a676-10af2cf177bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "12bd2710-665a-4a2a-9bcd-b43a18516b30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a69e030-49c8-4b78-8086-b1a234ef8ff0",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d618469-5a93-4627-b0ed-e76f315077c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e09202ec-0211-4bf7-9176-d6bebbfb7094"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "027e6b2d-7cc2-4fb3-9e44-6abd21141408",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "274c325a-604a-4458-9035-5354c9c9186f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ac20c94-0e87-42a1-8b87-2e637eea4d53",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b02086b-c53e-46db-83a3-41ae94cf18d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10639f27-9e60-4c38-a838-07ed326fa620"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5b2e769-bea7-4687-83dd-408038ffe4fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee09bf4e-556a-4a9b-86f5-b7396b26fcdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06e5677b-b1ea-4495-8fed-22d374b0b1b8",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a15f6fa-75dd-4493-88c1-504701daad25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "479ea4e1-cf5f-4cad-8cf3-a09816031dbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e149059-5a98-4b58-8da2-371ad6c9e38c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5ca25ce-6928-4810-9cae-9a40b1539fe6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daaff08c-652f-4d1c-88cd-f1907bdee401",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58e49397-df3b-4d7d-b95e-37bf30bf5c67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "752051b6-dac0-4703-a81a-98243e29f349"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6611d30-ef30-4a84-ab38-f4fee50dbb23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "36ca0e73-b4c6-4ca6-b1ca-8e3a409a542a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e34f7e16-8f98-4867-aee2-7231c130e3bd",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc00fb48-f6af-4528-8a21-ccfaee335fd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "791b5aae-95d3-47e4-b9a8-f52ab43ad85d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6c210a7-875a-4081-ad12-94dfbf194531",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "77e96e5f-4401-4786-9171-96e79a3f13b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a74a8c2-b966-41fd-9faa-50189b725a46",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae464de4-d207-43a0-9beb-0dea7d3023d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a24fcf71-4462-41f2-9721-1b852691a326"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1756aad9-9351-4191-81a5-be533f6fc5d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "63f0a563-7a60-417f-99f9-25417037fc14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fea566e2-d24b-4587-b6c5-1bdf3d833d82",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70a06afc-a91b-4de9-aa25-dc5a26b208be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2b52e5d-8462-421f-ba58-52c90bc2a945"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ab58f38-8fd2-44ee-9467-bc9c43b031c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7520ef2-d3aa-4aa7-944f-ba5274911c2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05b3be3d-6462-4e55-beb7-7cc49a44606e",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c5ebbc2-44fb-4bb5-8fbe-538428b58a31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50479518-fb00-45ca-a6bd-676dfa35e052"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1ef080a-cf17-46d2-b187-098870df2d72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "5835a5b7-8fc7-4806-8c54-641922e64787"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45b015aa-3d9f-4890-8596-29b1438208ee",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9d54da0-d044-45c1-b178-2a5becad1397",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "214f79cd-7b82-46f6-9cda-8dd41f2e3719"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e619e46-5ba2-416a-b05a-c17d9fb62548",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8528bb22-970f-4dba-9bae-35b16bef5d0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "990ef015-a212-4ff7-bff8-17459aa75297",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9790e3a1-98cf-4eb2-aa27-a04c0e198606",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e97ebf9c-3ab6-4852-92a9-e8643b497b9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cf20a0c-c397-4236-bbf9-9d0e96d3e9a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8c77a753-ea1e-428a-9060-29848fbf0698"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c2d3df2-86ac-4a39-a54e-59e37c5db33a",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2925af2c-68e5-454b-a8a5-ef209ea4ec81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8710079e-2ebc-4fdb-bd1b-7f0ed65efa4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e745c23-5783-4da7-80e9-f319b07406fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "64baa38e-5b75-44bf-9de8-48d4d2877ac2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7957b4ac-ab30-43c3-8e85-73b40e9ef8a4",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c7769d5-2d44-46f6-8fd0-7532bcb65256",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56a81989-0410-4006-bd58-f68ba56e83ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d96edf6-6dcd-47f9-b5a2-375bb57af465",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3afd74da-fda1-4f61-abd1-61cbcb0f786d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5276742f-8227-4421-8f51-f75d9159a25a",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17e1d2d0-1bc5-4d28-abb9-6dcfcc845e4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0081af8d-6840-4aca-884b-5fd62354d064"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fda501d-a9d5-4e68-b342-61dfcd5ee17b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "b7383f8d-549d-48e0-984f-4fc0683b80c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd546da9-ae8b-4ae1-9178-9484e3c40296",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3b9aea0-4e2a-4092-a6f4-9750bc2048f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "80a1763f-71a4-4148-9c23-59db04d174b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc26b688-d9b0-4042-980d-6773cbb38083",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4ea10a18-0566-4b2e-9cf1-16b99b6b095b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "909082f2-15e3-4dc2-9d1b-bd1c713a9ecd",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fffee9d-cb4e-47e3-aa1c-3211845a2bff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d84ca0bc-379e-4af0-b96a-28a873123cf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fabf951-ec3b-4aad-ad4c-93d0d56867f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e6d8be65-d2c6-4005-bef3-184c6d70b299"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1ca98d9-c4a9-4fe8-880e-0b1e783aed76",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fa271bc-7bd7-4f09-bb0b-ae04879b1cf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "222deafd-addc-4e35-871f-9a7c124a4947"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36b59fdf-b1c1-4f1f-8ddb-aa1dc7707b62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "20cd46b3-4a39-454c-b388-b93468413472"
                        }
                      }
                    ]
                  },
                  {
                    "id": "675dd6ae-813c-45ac-bbba-56471dc8bf64",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88947518-0969-4ff9-b8fc-ff904efc4fd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7be2560-be6b-4063-a063-db942267c296"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfaf2b94-1820-4554-abe5-0d4321064b0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c96d507c-78e6-4f6d-8db5-39c5599a49fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3621de9b-afee-43ef-9beb-30026965e861",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca942828-eaa2-49fd-b2b2-9318609f298a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "330c87ba-0460-43a2-952d-87fdc1a5f107"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b458bff-b87b-40f7-a029-2d93092dde66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1556176d-89e6-47ec-943f-aac040150957"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ff42252-1edc-4b88-851d-cade867a20a7",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "207e91fc-4f39-45dd-b710-8945487d24f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75300f71-2678-46b1-aaa6-340bb96ecc4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "272fb151-e08d-4328-8eb1-19b451aa8878",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "01205735-dc80-4b2b-ad17-e710d0600675"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f21601f-60c9-41b2-87d9-bcb417bb33e9",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "806df839-e717-4385-b3af-c07655093bd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5e60cd8-cf21-4c6a-a186-85fdcdf3e9f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50e1c22f-7774-408f-a27c-01b022be468c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "9f574495-bb51-49b7-9343-05eed3f4f5e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35dc785b-6baa-4bce-bade-aef37f9bb516",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f4988f6-03e5-4b43-bd89-f6e3332548e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b911bf23-92b2-448d-9d48-6525901fd5c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "116b10d5-d908-4c46-a9da-43b824136492",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "a61e9547-672d-42c7-96ef-d11572bfc245"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dc8fefb-7303-414b-9c74-8b52c1e1c93d",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c9fea2b-8fd7-4eee-addc-c2f690c33554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efc2e4b2-68a3-401d-b402-71330596eccf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6216eefc-8f9e-4c59-b255-92c3cd1c757f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "02229f83-c582-4852-b6cd-15bbcd137ca5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca5f0ceb-a28c-4019-9232-bed9bf7b1ef0",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7a82edd-66bc-48ac-90a5-1fe90fbfbbcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37e49097-61cf-46d2-bd23-5b7059526d1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "371a8826-1a4f-43b1-903b-3966cbd66af3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "629a29da-5bf2-4b62-9f53-b2d50ed717ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64062943-6f26-4eaf-9d05-ff72a8a5e099",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a965032-053e-41f1-a584-66f115bd6b8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09593434-67f1-49dc-8deb-c7ec89a44c12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee8c15ad-5489-403c-94bd-b32b345b8f98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "31d35da1-891d-4d22-8fea-6cc98aa1c15c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f0e401d-7580-4757-986b-84c142e7f1d7",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7e7b4fd-8e51-4e71-80fe-71d89d5666b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a8e73b3-79e3-4654-af16-6f153d566109"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35c9e36e-ea0e-46af-8bb8-b0c18e72a0a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6d27e49-ecf3-4b82-b04d-81f8f04ce085"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9380b1bd-f113-40e6-a974-324103ef2403",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ab10698-984d-4af7-93bc-b567a0624e0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99b5a7d2-1224-41eb-8945-58696d80c40e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a83ac640-01d7-468f-b3bd-d2c7f5483077",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "67cc8054-56e9-436f-9849-a363bd8138a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33366d30-9db1-4c27-978a-3b402824d29e",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44184c33-b4c0-4822-b7fe-89752379d03c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c8696ce-0269-4f33-be43-66355ff913d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47f47962-b7ca-4938-90d9-71f00360d4f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d5c92835-bba9-4726-83d2-ff110e95e33c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37aa8268-5775-4844-99a8-0a8653017c55",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfc20a6d-9eda-4527-968e-17aedf50dd69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e89a6ec5-cd33-484f-bd3e-522406ac553b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fae0aac-253a-499a-9116-40055fd3d4aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cfed007f-3419-4794-be45-09ce59edd1dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d20ada8a-9370-4788-8853-160739c231f9",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d16c6fa1-23c8-48ca-ac1d-63e348f65210",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80729bf9-4181-4b1d-9c0a-408d660ddc4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cfa62a9-5f7d-4c2f-a748-6545ed3824da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "b7edee5f-75b4-4e8f-a07a-f4e9dd42b1a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "008fe55e-695f-4a68-9ff6-f8275b7b4289",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6325aadb-a7a7-489e-b73d-74f92a6b9c74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be8101d2-ff93-46d9-b564-210a7bbdce22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b4a42c8-0bcc-465b-b830-b6f3af10e927",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e5f9ac5-7f0c-4c20-96fd-7daddc5fc573"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21045037-40ec-4170-8e51-357b260858d3",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf9286c0-2ca7-4530-8603-c37eeb4f867c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f59ce5a-27da-45d9-ae0a-bc52267c2b02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40f5bf19-6518-42ed-b19f-7835151bc370",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4afebdae-f69c-481e-97a6-91ad7182f3e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "330ff03d-28d3-4744-9973-f833928b3db3",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac4b7bfd-6c2e-4730-9408-1482c9e12765",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fde06d0a-2561-4714-9133-ee480595f566"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc1f1e6f-41af-4a88-a947-8be042b78a7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d99af31e-49a5-44a1-9f80-b1552fc0027a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bae822c-15c5-4fd8-9a33-5dc58a996912",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc34908e-78c1-425c-972f-0bba8d33a1f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a471678b-fdc6-4ec8-987c-cfe039c0a5aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8a03da1-7bce-43c7-b22c-1d9214bfd599",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b05de36-a399-4dc2-86fa-2df4e53f37cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "807a1898-f140-4820-a644-d88a29ba78b6",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6869085-2149-4b25-b756-1fff04076bd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a731226f-b820-455f-a73f-8badbb075ffc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e121037b-b6b2-47f1-991b-ace9a9ad2f60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "f5ce06cf-8e96-430e-a1b8-a1b725a0e257"
                        }
                      }
                    ]
                  },
                  {
                    "id": "603af2be-4fba-4bd7-b03b-8226cbd65c51",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0543f1d4-1cc0-4807-bd08-559327c6e75b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6ed7e5d-9c96-484c-8206-1adda2708ba9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6da04a0a-9b00-4125-92cc-e2915877d073",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f9a3260d-516a-4ad6-ab19-94a956bc61a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32421921-0823-4f0a-9b1a-53edba7a7f39",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea3c346d-5965-427c-927c-e213fb40245f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2180a4af-9928-4e3c-bd31-5ef78e717473"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30f24f2e-4394-46c8-b6b7-6b925f79dc91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "878b07f9-f075-4c2a-8e9c-c707f6162d81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d29379e4-6124-4619-b6c7-4eb94cedda1d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c67e8d4-7f73-44c5-958a-b2902016ca77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4de4afb4-7a83-4caf-81da-bd0522b3d59d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bdf4066-8918-4b43-9867-e09843024106",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "bea94455-a487-4c85-8dc0-c07683eb32cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f43b5cf4-85a7-4054-a828-6625e1d582cf",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "641e855e-4a47-4d32-bab5-b0f2ac9c7c28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48d9837a-8318-406e-a5d3-8156b4c68b70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "872de878-fe56-4dc0-bb02-7a7e1681bd36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "62fcdc46-fc51-4933-8b7d-9d8988eb1bbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e52933c7-66f8-47c3-9933-7b2e0bd86ebc",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e27ecf5-d790-4f1c-9fcf-f4cd48d0373f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4e93c23-cdc9-43d2-855b-6971b711ed5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e09a8b5d-bb22-4787-a782-4c5e045ce4d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "509e53bb-ec91-47c7-9b47-fab05ed00d82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7cbc563-148e-4043-adb5-205583d91602",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1991d57-69d7-46ce-8bbe-597351a9da62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f4add1e-532b-4c2f-bf65-f4e0e46903d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3ac0810-0903-40a7-968e-97cd782a45c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "70137341-0584-4e03-89d7-51a9bb564605"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb6537a9-739b-404c-98fc-90512092223a",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b5bea2b-2919-495e-ab26-079c6f39531a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "460747ec-f4f2-49ed-b17a-583d953c6e73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db712c0a-b543-4ba3-85e4-646bce5ea6df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1a37aa8-64e2-4d5a-8b21-5d86f014aae8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "002b837d-bd8d-41e4-8b45-6d2e2fa1b758",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e385266-d08e-4b2a-8211-617ae87697a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9a1df46-58ea-42b1-a7bb-fec33b9a586f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c9f341b-c9e1-457f-a1de-0716c13c1ef6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5fcf2640-4946-48f1-837d-ea51f04f310e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "917c4133-8b1a-4ea4-ab73-1a35be13366f",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b55393d-22fa-41d2-92e2-a71709c261bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0ea49a2-4138-4c57-8dea-9a9646af6bd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "210ea29c-75da-40d1-85e3-f27c5bcd634b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c9f4714d-3823-4c98-bf44-5063ae70231d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da4bb6ee-8e08-4194-bac5-3789d2a3c892",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9429efd9-9d67-4834-986f-7a212bfa1cf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4dc8cef-5c2b-4f22-ac84-ce578b5e2e68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "036514c5-bad7-4743-853a-16572dd30618",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a74a83f4-35b2-4d90-9659-e32b352374a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07260e36-afde-4876-b09f-3a68f160ee93",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f6bb230-bf76-4233-ab7f-1dd5dc65726d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e12d734f-951b-4ba6-8084-fc53c77b9906"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1cd532a-82cd-4e8b-84bf-5b7423fac565",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f6c6a6de-854d-4c50-86a8-8b3ef56d1b9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52cb2f6d-1a26-4d63-bca3-e79ec2eb2ebf",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "034ceaaf-a590-48be-8545-b548b4ef0037",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7b9c20c-1cbc-4886-904f-3701d120f98c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "558a0a60-1dc7-4938-9bd7-e9e86eb32c10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "fad81a65-949d-4b10-ae08-6d3f72552abb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebcfb9c6-397f-4fca-88ed-2d5acea612ec",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "657e466b-fb3c-47a6-8f4a-7e22a8f22d2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5e221f6-4cbc-4c65-b128-6c1cdc468356"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "034fd694-e553-4447-b946-6ed35d3b079e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3d5792c-5682-4b7e-b7c1-6e3962caf977"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1ffd738-d6d3-4847-8887-f0177d2b82a3",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c58ad5a7-3b4a-4f70-9a21-b6d7d99dffcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45663032-8e17-48ef-a28e-a0ab79857da4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1d651d4-b328-468e-86c6-ee26711fe250",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a7593c0-ffdf-48cc-ba27-7fc09e544863"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89b0d3ca-003a-49c2-94b8-3df2682b7f86",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2154e31-17d7-410a-8efd-39c360aebfc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc5aa66f-68fa-43ee-8cc5-c154ca2495d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9db4087-857d-49da-8d70-8f7b1d79df00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "88b65a4b-ba1a-41b7-8b18-8b4cf4efc5d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c405e69-73d3-4a8e-994c-2ea4017054af",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b85fedf7-9900-44ec-991f-bc4b137ed895",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "024d8d62-fb61-4c82-afe7-7782fcfed238"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "293bb882-5786-42be-b560-1528899515f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad6fc20e-50ac-4361-9688-ac77fbcd9a6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "133217c9-910c-4921-8c15-df22a6f956e2",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53b2c35b-d012-4688-9a45-dca3bcf12e40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99f143fa-7ce1-46a3-b6d5-b41e900f16b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d36017b-951e-4156-aa2b-520ef144cc69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8b2e4615-c9cb-493c-be0f-578b38f865f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44248862-cd55-4f33-810b-959d8352f047",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3b229a9-5864-4542-8c81-19d1e9238de1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e113c35-ec92-472c-9ea0-ce6361f586c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b51d9a3-5db3-4ac3-a4fc-2dc6183232fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c1a62cd0-7e22-4bdb-8b88-c13396ef154a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3a7b656-029e-44c5-b903-24bb68e3998a",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c225cee0-8977-4a94-9ca3-1df86092d4f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b57086a-6ca6-4719-b6c8-3909164a6b48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9eead54a-0f21-4c8a-bb48-1afb7ee40524",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f154255-7c91-4f97-bec2-be5464585e59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c793cb6-0608-4973-98e7-5722b73d5a9c",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b26beb5d-f284-48d8-9fda-535a6431ec3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3498f14-c23c-494b-886c-418bf2da35bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6091bc71-2f70-479f-9ae5-d18f26f480fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "21f14d27-a3b6-423a-be2f-13061dbd7f38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0f1746d-8f30-4e08-87ac-89a424b04b5b",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c9a29e0-c7f8-478c-bcee-0aea1fd69479",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "409eac4a-d970-4c2f-b2d0-a7393de94a1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51e06089-fdb4-4a47-92d3-70cce3754726",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd2fe95b-7725-431c-a39c-fc2ab099ce97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2fabd3b-1e1c-4cce-a1f2-e46d29c670b1",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ea45dfe-77d3-4d46-ada8-16915bcafe97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17f3b76b-1780-4714-9838-dc5add5bfe8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "052a2624-4e7f-4a92-87c8-a57d9377a513",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5beb25d2-692c-4a01-bed5-ca5766bb8177"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aecf9f55-cee9-44cf-8564-d7f769f33892",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ddd8024-7792-429b-b130-5792c80d1a71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d7ceafe-cb79-41dc-8822-1b458bfcd766"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bed5e06f-2ec8-4cf3-89f2-f99944a027df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0985e798-14fa-4d19-a933-5d98e987eaa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed1b6c4c-d150-4a70-a651-575e7efccad6",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05dbb684-ee09-49d0-9ff2-191f69faac7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b9299dd-fbe4-49e0-bbc3-fb0ac1f3710d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da4b41ca-a691-43c1-a62a-99ad45b9be19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "db2d60da-c024-4e7d-9d77-03535e0894f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59657e26-c03f-4d55-ba76-3070d1246357",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0535acb6-8d51-4820-b592-aac197e9c946",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6303fa58-4f7b-4aa5-933e-af7d6b48f523"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46cb3134-3494-40e9-a74e-c6fa77b57309",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a40cf65b-6b63-4473-9422-e7234c0c524c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37d19296-77b9-464b-b65f-a982ac505bb9",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "586dce38-56cf-4095-a7b4-87b45c388e10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b6ba3d6-8a1d-4d82-85ce-8488b4d35576"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b64c0819-fbf5-452c-9001-a64fc70883f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2165b3fc-d388-47cd-84fc-5a66069ffbbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1e0c555-7d30-4899-9001-683fe68f4b2e",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dadad72e-d155-4d2b-ad5b-e28794a22e84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf3adc0e-7488-40b0-9c06-8084bb32a4da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "016f7464-3b3e-4792-8f62-71d0fafb1464",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2092d136-b467-40b9-9f60-89d1b93ff220"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c931afa3-29c7-4e3d-a5a2-89d66b8e9ab9",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4815e39d-569e-4b02-b250-d001ac68c611",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfc9ef25-5f79-45fb-8912-6df54bbc1524"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57aad1e1-0e34-4b10-b69b-2283956270b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "76ca9961-3d46-416d-8b67-0aa399b6a67c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "484043e5-a44e-4fc4-b2c0-cedc41e2f9c4",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8ba4b2e-e1b1-4995-b055-2f2dfb8d8c13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ea54bba-9e79-4fcf-b552-1f57f395eb33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d61b353-8f16-4ace-9aca-36a841809006",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "94b7885c-e87c-4c26-8cbf-8dba6e9f7482"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a530c4e7-571f-41b9-94ba-d01fea9cde2b",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3eddbe5-8a54-4d11-8180-1554df79895e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72100b6d-b950-4b31-a2d0-9dac9a8db1b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a60b62fd-7889-44f1-ae8a-67909ffc7406",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b8b733ee-9cfb-482d-8ec2-20c08214fa89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "003b247a-e5d5-4f8a-9022-3a5b344a2ea8",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2038722-6013-40b5-8d63-57abf5f1886a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b28255e9-4e18-418d-8157-935991c8894a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62734a24-0d32-4882-82a5-a6de256e06b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "32d1ca0c-f429-4859-b7b6-f9743f2d521d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "927dc1f5-1826-4471-a7e2-affb4949eabf",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f29b7a0-c845-4cd2-881b-7d77b1fa1333",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85600cb4-9cf2-42f7-9bbb-35bec26e274b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b8d7234-6025-410c-a3c1-2bd230852415",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "05c1e63f-850c-4c04-bcaa-1d45c4827372"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a277d023-7d86-4a9e-9e9b-f5f1511509a4",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f72a195-bb1b-4392-9906-dcb50d0fd93f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f484868a-6405-4478-bd3e-93497aee0175"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b2df804-d865-4c78-b23c-f80e51edede8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1bf60d5a-0dcc-469a-a8b4-104749f8194f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3221057a-1171-4e1d-a3ee-6666aad4438a",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86dfc0a7-3e23-48de-ba6d-f97487706d67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed8d10a0-dc0f-4d6d-afa3-f35eec38b33e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da09857f-3b43-40c9-8ccd-a30d4e3446fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "53ae724c-ca35-438e-b958-a4cc3160745a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caeb895d-d618-491f-ae2a-e19893e85826",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd7c9f95-5ccb-45df-8f48-0d06c3cf5779",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a64eef5-ebf3-4171-85ba-576cba8ad64b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9978d4bd-872c-4799-a679-0b4e8dfe7379",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "aefc5220-ee22-4d6b-9a7d-b0e88a7b6a07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4860db8c-6b8e-4a03-8d01-bd1786520082",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "754f21bc-3a59-43fd-b8ef-8f0f256cc7cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "c0d186ad-c7ea-40f7-ac37-9d42c503bdba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6c01856-bca7-4a41-901a-c2088c79e436",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "6ef60018-cba0-48ae-a477-948a490d9793"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f78642b9-6148-4541-9855-fef07e10d17c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "31130f83-4beb-4a16-b3ed-31c39d067c8b",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "429b850b-fac8-4905-9302-ed492de28c85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "95f1dbdf-8766-464f-b1f2-58154211e50f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de0ba177-f53e-4e22-9130-3044bc0efd20",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bab40aed-0a3c-483c-9b65-b39cb06ecd4f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6302897c-ab57-4087-b952-269e32f3ced9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f6cee593-db6f-4551-a672-8c4eb0b44819"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "78194dfd-bdf5-4564-b9a4-073735bd3ec7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "308f45e9-662a-43c7-969c-f1c5603583a2"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f682d48c-6d82-42cf-8ffb-821772c621b1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "32f5d32d-a1a8-4c76-80ee-a16d34f033f7"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c52a5b58-d4ca-4dc8-8b94-dc58268b630b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "dbdb6f23-e799-4ce2-93dc-f983e71e1c76"
                }
              }
            ]
          },
          {
            "id": "d68ce1e4-2cde-481c-b240-1cb1eae6d90d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d9c052a7-6159-43a6-90e1-5ebd760b8a7a",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "b736d683-cee9-4da3-8567-3dfc5193cb48",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1fcb423-dcd5-4410-8e63-734ec85c4636",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "91c8b2d5-24f7-466e-8dfc-15a6b70921b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6c41ef2-2830-44b5-a77a-fc3b99d7d152",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbe7b1fd-303c-4d48-a238-a1c5fa671e30"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "52167c91-d24a-4fef-85ae-d42ae3a63dde",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8ef76e94-c960-4a83-8c6d-790a5883488a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b97e38e5-cb3f-418c-9693-c617a4c48fb0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "44593c49-5931-4c33-8a71-14ba9ba14815",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "326c66d0-6bb0-42fb-b927-d45a10bd68da"
                    }
                  }
                ]
              },
              {
                "id": "a5cbca2e-780a-4ad9-9cb3-36e75cf70ffe",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "be666a19-ea26-4ef6-a96e-ebba203f5ce4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8e98bdaf-d6e6-440d-82ab-fd1da29f02d0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f7b80f85-3ca8-4b73-8d47-b4ae2754402e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d808b84e-3003-4113-9642-0d6cebc488db"
                    }
                  }
                ]
              },
              {
                "id": "4a42b373-d3e1-40d6-8361-d5ae2a029bd6",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "25e0645d-7ff7-47a7-a9af-dbff4778b2b6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "eb1b5ad5-a78a-461c-beaa-3480e3ef2860"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9687bad0-6d9c-49c0-8ace-fbf841125b90",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b0cc6be8-3b45-48ad-bf4d-6f783e2922f4"
                    }
                  }
                ]
              },
              {
                "id": "1a9cf840-d8c4-447e-8b6f-fef37bf922bd",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e057b361-6f20-4ea6-a5a2-a33d21fb8444",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0d4d13d0-0e94-4f88-9d15-ca8efd4e1032"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f84593c8-06a9-4408-9b88-9c2caad69588",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "6ebaa547-2b2a-40c5-bf21-5b67d0694093"
                    }
                  }
                ]
              },
              {
                "id": "eb5fb288-1264-4c5c-a576-c5b9cddc7c55",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c7ba78de-01f1-48e4-983a-7b289c835713",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bd85371e-7ec6-4afa-beef-ea2a3f4579ed"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0a101ab2-1e36-48cd-9c76-699399bb51a3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "7239adc2-bdf8-4f81-b9aa-8e5bd0be92c3"
                    }
                  }
                ]
              },
              {
                "id": "25287fcf-9848-4689-a49c-24be84ee7413",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "22228b10-38bb-4e2b-b06c-214a1c77aa33",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fd8126cb-f0ef-41b0-ba9b-7ef2c9bdc1b2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0a9f84e3-8158-47e4-8ef7-6534032a3b9d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "fad23dd1-bc18-4dda-8670-9f508887bb2f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c092aa73-4e3d-456c-8e88-1ad4e6a86e29",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4b15e4a8-3be1-48c3-b257-1d81ace728ca"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "15feb59d-08d4-4802-9af8-623d699a23c9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "99d682e4-4302-4fff-8ffe-5e24d32fe75c"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7ffbf5c8-8905-40af-9d6b-4ed1ebfc3e00",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "cfc69c4b-6ef3-44ab-8e11-b6237af4acaf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "17235325-dac9-4a4c-8d57-ed7a5cec4e3a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ddd0477a-3aed-4f77-be7d-2f21cf7bd77a"
            }
          }
        ]
      },
      {
        "id": "29b13b57-7c26-472f-be3b-dd19591e4c32",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "164b454d-151f-4ab2-bf72-416e42d1fa39",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0f5225bd-4758-4f71-b7d2-9292efd79375",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4c437ac9-9084-445c-9fe0-4e4fb120d396",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b3363eb-4610-43ac-98aa-e4cd04b8ccfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "932f7e5b-cbc3-4365-afb7-b1c84d2c6231"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8c9bc31-5076-4e1a-a6dc-7810cbdbd8a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "b52a68e1-fefd-4d4f-a0cb-806a0cdd273f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f33182a-edd7-40fc-a9b5-c94015e4b9ee",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd187a86-c6d7-40f9-809a-ab4e6a760f9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "010cbd82-9ab9-411c-aa9e-077ce6a07f48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a4caa32-fd60-4233-8273-60731d9c2eac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "316a3747-4af6-46a8-8509-4e044f48a10e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f729948a-21d5-4596-98ad-eb8a1de3aff4",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6d0589f-1413-4151-9f19-b4cbaaae5196",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aaaf4e88-d6ca-47f0-850f-f36b9d650434"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5962c23-c1d1-4ec8-86e1-c5d442375d51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "af96c427-1105-4955-b555-a70a61af6d99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3319e273-ec11-4c81-97a0-3fb061ae729c",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1927ffe-3b41-44ed-8465-c90259ee58a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b71bf40-7e03-40df-9324-877577eb338a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "741cce92-6005-4561-89ca-e449e9097c56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e73eb093-ab0a-4320-aa31-d0cb2bc25e67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9596da4-84c0-4db3-a73a-67fc6de79ae0",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec937935-0abb-4a77-b971-1bd10588ccfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a047fde-1c5b-4644-989c-74789e25c45d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39de93a2-0a82-47c9-84d5-8fa6f676db29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0884b07b-3205-47f4-895e-4866c2d3f6d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd4a3c38-faef-4f47-aed0-a528f0d843e9",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d69034da-d6c0-47aa-a0dc-ae7a358a6b2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb5526e9-4c4d-4199-af74-64cf60fe365c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82c10b61-fac4-4b72-879d-5d6a988ef832",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "42190113-01f9-4359-8f9a-4e84a45772e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34687d66-15b6-4eaa-a60f-3cb17535bc8e",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4ed7684-5879-43e1-8ef0-3b5f7eb1e722",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e71fb69-ed74-4421-8121-d0dba9fb94fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b15526fa-9e2f-4fe4-b1bf-8e7e52adc048",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "c55826ba-995f-43b2-a170-1ba48429ee2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75228daf-0601-4a15-b826-dbc1bbb3a30b",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e1133a8-454c-4279-9cca-8d079fd17ae2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57e01f89-19a6-4d1c-b654-c94446094aeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82689028-e19e-45f9-8c2e-c038275daab5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab2753ba-fd03-4179-8853-1205a6840177"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a149b22f-b997-4ee6-9df3-527399ee925b",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7961ca2-c45e-47a9-8018-2e4132d4f57b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cada1bd-2951-4988-9a4c-88d0f80dd487"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2e4cece-804a-416c-a945-97e927db0747",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ef895c2-5d38-477a-ab9d-f036ccbd2ef8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c9304fb-71b3-4e44-ae60-6a2ec27997e4",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1158fac2-420e-46bb-888e-eadf6d8dc43d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c68c4ae8-828b-4463-b87c-e59662f6d722"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfd5988c-e93e-4de1-b9fb-82233be27ae3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "16bfac5c-535f-4caf-86da-d3fbb17309eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65ba29b3-eac5-4ee9-990f-6f804f3ab2ef",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b76e5eea-8327-4c73-b89b-f008c55bd7b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "496123f9-72ed-4bf2-9a96-f6d9e92f5e80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cb367d1-3afe-4a3d-a762-d20aac23e447",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "0b593b8c-cd8a-40a2-8a2d-5501a559ba86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faf63b92-5f90-4194-82ac-8d06ec24b269",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f76febd4-4b7c-4dc8-acf6-d9eb8163d36b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0563ad2b-e0f4-4157-87c1-07805a7d348a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "804ec37c-fdee-4f61-bfd6-f98ea7cd9b4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "afbaf759-14b7-4bd4-9c3e-29177349fa1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1627f58e-14ae-4123-b140-f9c708b99bba",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15bdf24d-2836-415a-9895-e359bf57e5e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5db4f2b-b2b3-487e-a1cb-fbd90b18fde0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b656d08a-9cbb-4815-9828-519af25ab485",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6367f418-a181-41ca-b862-4ea8fb15be82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f10f02ee-4831-4f82-927c-d8631715a23c",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1f98dbc-bbe2-4679-a534-324382205ee4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bffe10bb-5d52-489a-819a-dbedc4b844b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dacbb46c-919f-4434-95e7-3a81f59ba94b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd7f39c1-d64f-41e7-aaeb-40c421d9e448"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88b3a87b-faef-4775-b570-74ed3df0ffbc",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1911558e-3db7-4bf5-ba67-5cf6d8629f6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc1fc111-da71-465b-803b-c071e7b2f353"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "345dfe13-1f69-43f4-a5b0-7f0103375a03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "c8434e6b-138f-46f7-bc9b-3327728ae7a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afd729cd-4412-42be-9195-33bb1c9e07c0",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffaf5f3c-410d-4c2b-8ea2-08d686d920f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d2fbaac-d7d5-4d22-b8f8-7c91ad295188"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe1966ff-aa92-453d-a221-ca7009320908",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "989f7c29-c0f4-4f3b-88f6-f9e665c66553"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b80db5a-21cf-4230-a23e-401044a2b7c9",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ea29497-8ca5-415e-95e0-c806097218b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0be1edd1-b31b-450f-af0e-f5c0fecbfa07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cb94356-4b60-4d92-a576-0806c9b2f67d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ac7935c-6624-4cea-80e6-c0732eb4db56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99de2cd2-b5cb-4240-a96f-765137d55a25",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1a12cbe-582c-4b80-a9d9-8cb7d0b03460",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e5aa7aa-75c2-481c-8df1-ef657e405925"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7f9dea6-b957-4b14-bc8a-21e55331b6fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a49ae463-7207-43fb-af2b-c0591ca86581"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37f90bcc-92af-4027-8d11-a25f78e3bafa",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69884395-819c-4387-a986-163f10410d44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ab5cc7c-66ab-41f6-91cb-8a3cd275e7fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4900f791-e90b-4155-90b6-37c8c04d6e03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "63ae1a3a-c645-4218-ab44-3db500d3bd9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2aa624a-ef5d-43df-84e8-6f18d673698f",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62e3eca4-c04b-4a50-80e6-a3de9bcb49dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4a2c6af-7050-4f9e-ad64-e4349ce92818"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44d64ba1-2a17-4d7d-8bd4-2c5467a9151f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "48197190-2156-41a0-a6ea-d98fe5716603"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acee0c99-de88-4798-a7d8-32dd74627406",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbe7eacb-4846-4e59-98d9-eaca068dbbe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85bab960-b99f-476b-8d50-dc6538f4cbdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9499681-a8f1-413b-83cc-1a34f5876a88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b57efc9f-1fb7-4482-8c99-2595c36042c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d18b4b27-7688-4670-9ef9-5affcbb65b54",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b818e1d4-bf0d-4841-939a-16345b00a558",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1612a178-e06d-4639-a28e-1b09c651c656"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42a34198-4e86-4b46-8a3b-9253113fec2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d415a33-d375-4e7b-9b77-905f44c62d02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "358546d3-f86e-4302-984f-cafd3f44e3fe",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1206bc2-68ce-48b5-8183-c5568a754bed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c5b5730-8615-40a4-9144-9c470dbd4867"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d397329-7825-46f5-97ad-5a8f08595937",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff172949-f1e7-4c0b-822d-b77da0748dde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cda7da5-1095-4d32-b5eb-d4b643cb2334",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5c554bc-6750-4c65-984a-141ee5fa8a36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "391fdf90-5419-4334-b070-e2cc90e6ed5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f216a73-67e8-49a7-9336-69faa39d75b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2964c98f-dbee-455e-bae9-f0a9ff5f9e42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a759791-6823-4385-9939-1f216dc3e28b",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1268780c-7bbd-441c-bcb0-1b0fb0c45017",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "730d90a6-a5bd-4e0f-b7ca-98c687600ca5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67938a2d-3a33-4ed6-98c9-ee685169e287",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a6803cf-ddd7-49d4-ad11-490dba87d3b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c668aaf0-17b6-46bf-b5d0-511ad3036d90",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e60d6213-6d6b-40cb-950c-4558276a63d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60a6899c-ce9d-40b0-91ac-d22e5465f324"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c080050-5219-44be-97aa-8258a641e903",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c10346ee-3716-484f-a6ff-0a1e3d78c7bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e307d12-282a-4a8a-9d18-c4a7dd8da487",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9fac2b4-d2cd-4878-b967-0b0289ec177d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbf3b8e2-31e3-4aa6-a395-064a7f7ce49e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ff674ce-08c5-49a1-804e-42fbeea3ddfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ba40139-e134-4268-a0ff-8b7eee773cb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75fdd165-0ee7-483f-bb78-27da3a61d85c",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "787d31b6-09f9-4602-9934-eebd916d50c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2ec34ee-8e16-49f7-8980-3e97822de3f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb7733a6-a5ee-41a0-ae2c-2dde0a89413a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "61d385c5-29f0-42f2-a3eb-edb5e85cc6cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "129004be-8d73-48df-a487-29fbd90aa736",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee6c5ed3-4e55-4cc0-bf86-26835532b340",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4b169e0-ed6c-4570-b7d8-3daa37407e4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3b6ac1e-e5ff-4659-b171-ba3a926e5cdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d52d47bf-6b0e-4ce5-8693-ea2ca5ba4f6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1a3be8a-6d13-4800-8c04-e4bdb446d09f",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df7111eb-13c0-4a6e-a078-847046074916",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "714e2e1e-903a-469e-b362-8dd7af505ca2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b8e04e2-ec37-459b-9a5e-f0d2a835bfc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fed210fd-acbb-4238-b797-b8b82093ef75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "635a7eab-9572-484d-a27c-c03489cff6b9",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa5b0ef6-ba9c-4f71-be60-0944eb0f8869",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee6c1b4f-338c-41e6-827f-fa817b3543f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e70bf62-20cf-41f9-9269-e5bfca241fea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8af5bb98-26d0-4475-8774-3fd158e1d683"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ee9ef5a-7699-4675-a7b3-0e9546750670",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "908e9b31-a792-486f-a3bf-f28110407780",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb90388d-2a9e-4e54-9d19-4d23803e1df9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84d8b12a-bc90-446c-b61c-ea34e3007d84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "95a53e95-faa7-4594-8176-34a37d5d7fba"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1ab8e7e2-5d31-4b1d-86b2-9582302a3260",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "037fa30c-e38d-450b-b629-c2e86f2cabdc",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c0074c0-36bb-4cef-910f-e4c8716fd631",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "77610c4d-f333-4061-8ace-c8162f303688"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3353a7d-4a2b-4874-9b8a-1c2c0fdff433",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dd63db68-9012-4b13-8888-ba14e062e805"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "552e020c-b91a-41fd-a56c-29ed7e04d375",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fb5fce28-d04c-4ccf-88ce-858379368567"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0a412812-e865-4072-bb02-35f96fa13f5a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eba050f9-1fb9-4182-9757-1d09560f9b9f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2908d760-e590-4f09-aedb-e33f629aa81f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "812637aa-9f4f-41fe-b713-36f4b63db37a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "835fd52c-5a1e-47fb-a768-ca008f45360d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "eb4daf36-53ef-4dcb-904e-78b9f760a3f0"
            }
          }
        ]
      },
      {
        "id": "e5b6bbcc-59fa-4ae1-a3e4-24cf1f00b292",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "10215de5-ba67-437a-8425-932bc7be84a4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a7acef69-53a6-4aee-b66c-55ee13deb29b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e85346c7-7b36-44b3-b9be-ca39492bdcb3",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fa50861-c155-423d-add0-c33ffe9118fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13a8a581-6b4e-44f1-81ed-4ccf92d115f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60238b8e-b561-409b-a5df-4b9152f5aebd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a3f29c1-73d2-4a67-a217-8e63c8c0a940"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f4d474b-314a-433b-a2f9-de4f646459ef",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "936b9627-9767-4a45-8791-8b71a7b0cb2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23585829-dba5-47ab-9771-b6559cabccbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df439351-4464-4558-a56b-4e7a166e9b7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b515cfcf-06d3-466c-a509-413c0898cf00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ade6cdb-c739-4c72-afb2-12eabecc71a4",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02da76ce-235c-4bf5-8ae1-a677b8d9418c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1904a99-8836-4e61-894e-94651195162d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78d31b7f-b2e5-45ea-ad3b-e0ac358888ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e2a64c0a-606f-4bf5-80de-6d9066f6a66e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f22c3438-267b-45cc-9ad7-f2d3adddfa4e",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d56bfae-0795-407e-8da6-54669acb552e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e4fe581-211c-4e4f-be4f-c6e2fc8c37a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b8fe2db-d255-4b7b-8c03-6b9122470076",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a2f6d7b-f2bd-4d14-8e32-d45bcebe3096"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91639c01-87f2-4eb9-a550-247768248ceb",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb2b44dc-e25b-4695-a78b-37d392088f09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "492ceed6-f702-402f-a72e-94ae8ae88305"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89fe7b5f-fc5c-4bbd-825c-50f9af4e09c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "822fe6e2-63d8-4117-a3d8-66ed8f6910f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b921497-ad5b-4bcd-a0c9-0cc3ffb3435e",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9476ea7d-f924-4436-8ead-41283914b1a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e603a1da-3208-44d0-840e-f237ff1f5234"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f269a86-5445-4efe-af65-4de111ce0443",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b40de2d4-b78a-4a77-b322-b659911bf840"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eacb5160-c3cd-45ea-a277-200a80fd13c2",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c8b6513-1754-4b30-9509-44e131239bbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f38a8c9-3dec-4efd-8196-335f2d38851a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f21c142-81c4-44a2-b4b7-15b90b6b340f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "aaea386a-96ac-4b62-a805-b6389b60d4c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "532c5ebd-6f0c-484b-bb6b-b2d5ef8a88d4",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c48f6da3-966c-4956-bc91-68034efd4246",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67e48f0a-0230-4256-b625-5ff8ff006d04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "691774a1-b50a-448f-863c-defff53628f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c9f4421-cb31-4dfb-9d00-eb93f1b33f1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ca1ee9f-f1c6-40a1-b67f-cdbf8efc9b7e",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5527bcbe-37ea-4653-99e7-71ef44ad9686",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "146017a5-3363-4b72-81ec-f3875c40f4af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a5dd7e8-f3ef-437f-a5f3-1f095a2712a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6cceab27-6fc2-46aa-a6d0-77a53cde571e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "798adb28-ad18-47dc-9109-60ad7e35e42a",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b1fd52f-20d6-4dcb-9777-4344b325426b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cadeacd-6807-4a3d-aff2-853cb0c19104"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1204a1a2-e4c4-4c17-9a0c-57085772075e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "65ee010b-90cd-4388-9266-263f91bac81e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d506187b-8956-447a-bf26-92b2fa0dbb43",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14f6f23b-02e1-49dd-b461-12bfff421c94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64a45039-6e74-4801-a213-306aeaf06c68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d15ac66-9cfd-4125-a028-24419cdca1da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "0019a57e-dc7a-43e7-8e13-97a909a9a88e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d34253b6-bb6b-4c0f-ac7a-381fe641662d",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c2ba2f0-1e6d-40e2-9ad2-739b289ae8ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d19bbf6-338e-459c-b14b-b3bfe3041962"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4345c61-f4f7-44f7-9795-189c47d6db87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "317231d7-5bf4-4fe3-91eb-98e0908573f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9737347-87c1-4971-b3b1-e7abe0a27e6d",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5b3448e-ba80-477d-aae7-cd717d8e7cd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f38855b6-a968-4dc6-a42a-2c21ecd49f1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e5dcf7d-24d4-47b8-9e58-94e2c9106a66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "90ea37d6-3171-42c4-befd-af27d0c34204"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cd8b79f-f6f8-49a5-9d45-68581c3c294e",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ed03c36-41b6-4ef5-8252-e17c29126144",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d6b073a-332f-44a6-96b4-0043d017110c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4a9e975-3c7b-426b-a6b3-d91759a08ba1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "836cd5f6-7c90-4309-b85a-ca2b048d1a11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "286ea3ef-69e3-4f3d-9219-019971135e85",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37b9fab7-e1cc-4ff4-bab3-5f959c1976cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1e3a813-c65b-47ab-9781-00b563addcad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07335be2-d62e-47bd-8fce-02d8f3d72d6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "972ecdd5-67e6-4ab5-ac0c-8b14a07b52ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb2d1ef3-bf03-49b1-923d-19fd5da77a7a",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "490544e9-8c0e-4357-8f1d-dec99b22017c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "436ccea2-4bd9-4cb7-900f-39dc4dbb853b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8281cfb2-42d2-4971-94b2-194b64b95b22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "e9c4f669-9cf0-4c27-a4ea-eaccb0d2eb32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "054f75d7-cdf4-4f6b-8587-09109e6124f9",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1f8ddde-4cfd-404b-bbfb-4b1764148441",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ece6c849-fc51-4ebf-8c76-9f27f99845c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05b24846-d0c2-4a53-a006-4fd03703f91e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "d21903f0-8a58-4805-88a9-6f67358331ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2a90b0f-9390-4ef0-9a8c-d3404e05ce4e",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed22be8e-9108-44a1-b531-b5705139d0e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4b820fc-7384-4eb3-bec6-a6be1f37314b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d69039e-ccfa-4223-90dd-c3ebc42a2852",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1a8a195-0b91-456b-aae7-71ed2fd71e8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "392b4668-26b7-4fc3-b6bb-a75526f6abb2",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5c85d71-9faa-4b73-a71c-c127f76955cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bceadb38-1390-4208-9a68-ac5c2446ef70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9e91c84-54cd-4d8e-a904-6c4ce957d2ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "67463540-8083-474d-b602-7b607f8860d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d7b054e-a9a7-46e3-a31b-84085957c949",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78e8a283-f785-4d99-baf5-7ed539a80362",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f951b5cb-83ff-46dc-8d96-126332d08ba5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a51ac25-52b7-419b-b846-1eb90ae0203b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a2ad843c-ca16-469b-9a1a-440070434751"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6726bd24-6695-4ec7-b7e6-3b36aa0cd7a6",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dac71f5-51d1-4547-8fc5-4efe13dec4de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43da1614-8f11-40a6-b0cb-c9909335437d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dc33c7d-f93b-4fff-8ad8-4f32769be6cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6854faa5-1b8a-4945-b2aa-5595a27e92e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab722fe9-34c7-46b5-9708-0b4e55db9a97",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15f49775-6774-4dd6-890c-ad1315d6ad7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e6c3372-5654-41e5-91e2-86d1c8f661b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0609dbd-3076-4272-9564-38356c6f0e70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eafe137b-9cbd-48ea-a0f6-fd62b1822b2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "047aa1ff-6964-4a79-865d-2b25ed7bbc6e",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30889032-8cde-40ca-bc45-e893c1569562",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45976b97-8af0-42ad-956d-81d9aeeb48fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "604e5bfb-a947-48cd-bf77-4a43b4293879",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6503ca06-bb5a-4983-adc4-7f09f99c1abe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fd8d01d-867e-45fa-9a75-1d4f2f508bba",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff3ded2a-9f90-4976-bbc6-09151adc1dbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46a61f37-8647-420e-925a-cbc6e8ba6fea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe7127a7-75ef-4898-920b-bf5b6e60dcbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "180413bb-287f-4a2e-92a2-d6454388b1a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba869ae7-e622-433d-8265-bbfc49bb3f46",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67c92d3e-df90-4af1-9f83-df81f99eabd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b5d4f35-a4cb-4f66-8e1c-518bd98d3b43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bf09537-9e1f-49b2-b421-a494c418acf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "080d28ef-6225-41e4-971d-c3cd6a6533da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bd1662b-2524-4ae7-9f2c-d830e18ff4af",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6084c6d6-1085-4462-be9b-9df2508efcf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "195a841f-b708-404b-bd35-49fda4d48612"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3888d3f7-fff0-4529-a2a1-95873b2fbf53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ab781be-a7e5-49f3-a535-64dbd96cca16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12b7b28e-99ac-414d-bd6c-2d2eaa2ff691",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "068b3bac-3e95-481d-8ee9-01f1e143fd8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "376e0895-0630-4a96-a6ea-74c65017f782"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8f791f7-e72d-47b4-8ed7-9b87410b99bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7bf231e7-cd44-4631-8181-3587c964ea7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1693d197-6db3-430e-8efb-dd45fcefe95c",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54db2f40-f789-4e94-8835-a5e0b5a219e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "caa9a2c3-d9ff-49cc-971b-af887e1fba29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "463853f3-f183-4db5-b4d0-c46eb05cd8dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "33286969-7999-4eba-b073-bed95e94f475"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc8e3bf8-c2c3-49e5-a543-3a618c79be05",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2f6bd28-b402-492b-922a-b066d55a7775",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da95ff38-a72c-4235-8b28-5b6f3f49f976"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "233e3860-81fa-4f96-9deb-b5e5abe3ecb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb7e5cf7-0a07-45fa-920f-2a57ad7187a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb3233c7-cad1-4b1a-9c38-9b0adc609346",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1165608e-8798-4bac-8de9-6a0586096704",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd72087a-2bb3-4839-b4eb-beafc0f0a42c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d964edf-151f-4e96-a9ee-449667ebad1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c076e19-d466-42e8-8977-b8f39c1c4e62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43d33218-88dc-4450-bd40-529c58303a63",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c500d9f-5029-4bff-a7fc-479f953109b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dfb1aef-b1be-45d1-8255-3b8e4297347a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3ca7e85-4c8a-4b11-8d10-c7972f8529ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "31b53b72-3412-4824-9ff6-c93986a3508f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47e3a1c7-b320-4093-9550-aa0657291e13",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f350d99a-de18-4070-b666-3f122afc9d7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a15d160e-c02c-4ca8-a1d3-0501b8b8a3ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9780b84d-3533-4034-aad6-8d217f200e0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9dbf5b91-3bd8-4d57-b910-c5438bf20d13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccd9c710-624d-4d19-bac5-94a277bc65f5",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f03e149-02a7-4620-9914-cd565c2a41c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14bc4ddc-dd7c-4853-ba50-9052016adf65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d101f2bb-59bc-44b4-a56c-f8a73b9b2978",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e8ccff6-29e3-440a-8229-7c2d42571894"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc84cf72-7816-47ea-b96d-d4554475dbea",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "235469ff-281e-479b-803a-a6ed9e719555",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a71181c0-1eb7-4d86-999f-d7625bbeab4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af8474c4-103b-4fc8-ba29-e7d81fa791f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b2009c5-44cb-4568-87b0-d466151ce39a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36eda37c-8e0e-4f21-a449-fef9a7e11a0e",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ab23acc-4fc4-474b-bdee-dac9b65ad834",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff57cf83-c055-485d-ba26-4385effe14a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69792b57-d193-4fab-ac9d-fa638f9b892d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "be07123b-0f31-4e1e-8e43-bb38d89e595d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d083e0a9-2e97-4763-bae1-8ce541d07a8a",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "494a9de8-1c3b-4154-93d3-ac68489b6144",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ece78618-7a6e-429d-afd4-c1826c3b181e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96f97d54-ac64-4368-80e1-500109eddc39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "76613138-50e2-41b9-98c7-92b1a35bf817"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd025019-6b02-4768-9bd9-4894dda19aa3",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1331580-99fe-41e5-800e-fd969139ad22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ceb2ab16-36e1-41ec-a544-04e1d331cd07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11816d4c-bc8b-4315-8a48-3a23a00aca74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f5077a0-bc34-4d29-b523-a31f25cdb1dc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "56a0040e-146e-49c4-aa78-4d875966331c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d80a8a2b-9fa2-46fd-a3e1-0fd52fb93988",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da470152-d2f3-4a53-b701-18351ed6b611",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "b1b008d1-d131-4ea3-a4bd-f245f4001df8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb5a26fb-e678-4980-becf-86fa6fc4f0fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "529bbc9a-3607-4207-8295-3df64268c305"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e4ba0d23-0f3a-4093-adff-e47ea3f48605",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f18a5c55-d010-41bc-818b-09a14abf5ace"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c12de4c5-a498-4116-ad1c-a7002c8fd338",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c0de7a75-9d14-40b1-b11e-74183fc11b03"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f8007d63-c7a7-400c-aa0d-8cdf0299c37a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "fbe847f4-424e-4347-8c82-ac365f55ed6e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "651d70db-b954-487a-8741-7065d4fc3bee",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "85d95a02-276a-4b8f-a633-204c6fdd949d"
            }
          }
        ]
      },
      {
        "id": "ef3fc64e-d06f-4026-9924-ec44eb08cd0a",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "1a788c14-944d-435a-a143-352a90953a04",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7e711b84-3071-42f1-a388-d6ccea26cbc6",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e9e97b3e-df9a-406d-bd06-61d7d0ee2daf",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25aea7bd-9522-4cc2-9d4e-fd42c33e8696",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "250f01a7-6e41-48f4-bd60-c5ad00452da2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3e4254d-8629-47f9-a422-57482808bb56",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7c35d2e-546a-4ccc-aaa7-4ea162b6c854",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24d61ef4-0eb7-4975-b88c-312ee33abdca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d20eae9-1020-44b9-b0e9-7cfc5936d9ec",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dde8ef6-a8b4-4af4-8fca-2a483e344fa0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08b377da-0d8f-4f5f-889e-7f719a4412f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ea7a21f-77d0-4f62-9b1c-27bca3748c04",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bb55cf2-5461-4006-97ea-9f663acdb45b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73918225-f9a2-4869-b483-f97464469502"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59aeb99e-4375-4461-8cf2-54eee6a4576c",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffc22ba6-a282-4521-b378-8b6702148815",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5aa6f2e1-d859-4852-9b1a-8bba130206bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf321a38-57b5-4350-9891-43f2506c9e7b",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bcaf59a-dadf-444d-b304-2310b6c85e46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb45ae1c-f621-469f-b90d-a8cbadc2c5bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfd6de9d-1df6-4cac-aa1c-18eaf1fc5fa2",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da99b764-42fe-4f29-9cea-fe3eb0f8ed2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "429bc6b8-9b31-4901-8feb-f55fc2966461"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c24612c5-e7be-4214-b083-2ffb3e7d8336",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d749ea2c-5d28-444c-b7b7-0a31930d3fad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "763bf556-6f29-4649-b8e0-6c3941efe011",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2c6a546-4b4e-4bc5-bdd2-63db8adaaaca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba28744a-9392-4c2e-bbc6-e096690795df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c754a407-e6f5-4445-a354-bea74e61fcfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "130d9620-8035-4152-b7ce-e11f3623d235"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63e21633-ce16-48e1-b4b2-80d6fdd535d9",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40baf525-17a8-4990-8e19-9394297e69cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31a7846f-8d9b-4445-b056-ad343f346278"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae57f4c9-462d-467c-9498-37ac0c23f2a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df37ac6e-4f05-4868-b674-3a528e0068c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "736a53aa-86a0-409b-926e-8d0667c8b75a",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0816d59b-8374-453e-a9d8-67d80cf0e968",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e13e399-e9a8-490a-a73e-a3f7e0f848e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd43aac8-4bbe-4115-898e-367a1227f804",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dddb5af2-fabe-42a7-897d-b0c84dfb9d1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8047e0bf-96cd-44bd-a432-8fb8d7351188",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d5ed870-5eee-423f-82c8-024df0ce7422",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b768ff5e-a6cb-4cc6-ac95-78ebc8b8effb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ada04b1-d4e8-4ad3-99c2-3ee9bfd18434",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1884625d-7558-41e8-86d5-90b560558152"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b98693a-9a24-445c-9073-7fbca27783b4",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb9874dc-4fd2-41b9-bcbc-025784724a13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45574ba4-201b-4b8f-9173-152d9d0c8af2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d30b9f05-68d6-448a-a740-49260ff3648c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2e9b2b4-7267-4dd5-9fd4-f1fc7c4f768e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa31f1e5-2f6a-43cc-b4ed-82ad6775490b",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7edc0eff-ccf4-4894-a92c-ac203c352029",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3590ff59-3d0a-40e0-9be0-d136e3487d07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3690103f-2c4b-409c-9f65-a1451800720f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47464ae3-97a2-4c92-be00-881c1ad013b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92da5cc1-5c97-4364-a079-6b47a4e782bd",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e982df21-7938-422d-a462-46f6793ece60",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19836b1e-59ed-4f78-b605-828967afbd64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b9aa5dd-1156-409f-9884-d736c0f9ce73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa547495-95cb-4c8c-9dbe-a0ca26457d57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e66cbc6b-ff47-4f4c-9072-bc46f760fa05",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7d4489a-df01-48c2-b032-34cce0370bec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26d44ac6-cbd7-450a-9ea6-14eb45b2e21e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5080333e-07b3-4b94-a009-633b53d82bc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbf80cbd-4e8c-42d9-ad2c-af9e0013dbe6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e64f1a9-6fc9-4965-ab0b-c1583612ba2e",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fc4c852-6409-410a-8021-0b5ca9f16537",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "caaba57d-00ba-4c54-a953-3affe46467de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7873fef0-fa3b-44bf-8933-1b8e5aa659cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce7d9a02-4476-4e9b-bb07-ae6ca059bbff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e3ee726-75f9-4bf8-9f86-a0b4e0418b47",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f051a2b-6d37-4bc8-9f65-ec17c2f14117",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3424f4fb-811b-4da2-8a3f-933c2eb18696"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3396b39-ef14-46e4-b6d8-36a932c293d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d18f7128-06fd-4f67-b038-c1aa034bf9bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf840f01-b5ea-458b-b1d3-7cbb97f3b5dc",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a435f559-850d-49eb-959f-779c5d90ed0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97672eb0-0b74-4f19-873a-5a00f28a698e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ff823bc-e0fa-4005-ba5f-e5db2f0d2fb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1f415fa-4d1d-4197-8625-95ec372c221a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c95d4955-b10f-4891-8a02-8a48566b8efd",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ec05b4f-f849-49f7-bbc3-b562455d4f9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20921668-da3e-4ce9-bfa9-86ddb02461fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5c16d49-cd07-4c00-bc18-581956e7613a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "436cd8e4-6422-4191-b0e4-00cd51431222"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9bbf6e2-d583-48ff-b023-0803a1e2539c",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fc706ae-da06-4baa-864e-2ceda3ef253d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ac6f13b-46ba-40a2-b6db-b791c1238269"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a97278ed-ae67-49ea-9941-c55d22184243",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f9eb10a-5f62-4426-820a-58a709251d3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bcb03fb-8a18-4bdb-a89c-5644fda76055",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4086fabb-f3d2-43fc-84fc-e6a0d8357741",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b981144d-dc6a-43e4-a57d-c32f86536a39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0edd5621-9aff-4031-bde3-63690a4040e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c5e2126-b969-4d5a-9c16-33138166a0b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86ff2710-c5a2-424a-9d20-37203aa1448b",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34ab6afa-8ac4-4ae4-93fe-67ea48487284",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "846ff44f-64ea-406d-a08b-1481f28af965"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aba68f0-88d1-40e1-938f-ba38e4bec55a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c63eb7ab-a8a6-4682-9c10-0b46178f8a5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3695e5b-a2b5-4ad9-b532-bad91840255a",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f2f9207-8746-4c44-8190-47f1e5763a18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "552ec008-9797-4eed-80f8-892d7eb4d610"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d16ff4c7-9015-4837-b429-0ab657390e12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ed1fee5-7746-4ec3-8591-63fb1b267537"
                        }
                      }
                    ]
                  },
                  {
                    "id": "744ea85e-5bf3-44e6-a03a-7a7ca7d977b1",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5183fa57-674e-4def-aa0e-ad76e532bdd8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01169f13-0456-42ac-aca9-77b0b602b2d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40bd5e75-3f63-4894-8492-0b59eb8325a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a164eb1-f1d5-4a4c-b07c-32dd711793dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b97ac31-d504-4e64-ba01-615dcae6668e",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "341ad4b9-f1db-44d3-b3e4-ef0bef711dec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2fe13e68-d573-45b1-9782-d768f31510f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "533f6a18-3fb5-429d-b262-092494bb915d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f709134a-5294-4da2-9bf3-6f0c0626629e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24385e15-a8fc-4f6e-b6d2-99d9d9062edc",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53050aa9-9a44-4c53-bd4a-7ec0ba56818c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "afb333f6-99d8-403d-889e-ef32bac9b660"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a04c95c6-fdaa-44e8-aa9b-3039515f6bb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb306211-2436-482b-b72e-e3e5a36eb1e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b908701-8c3b-4a5d-9aee-e6c6ef5b4394",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae40f095-dd87-4bb1-bfcf-beab4f6e671f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87a940e9-7796-4bb3-986e-ab5482334edf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4af74208-3356-4692-9a3a-6112d8ddbd21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed43e817-89e2-480f-b893-d573b2c6e07c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb8e4377-7641-493a-862a-ef9029fa8462",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcecc12c-3226-463f-ac5d-0599d679c85c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4582d2b3-45be-4a02-af1a-57aaca61ea05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52ee4bf9-efe3-4fa6-9554-93755874a890",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05e1d766-e280-43dd-8d9e-ee30ddbf89b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "deceb0fd-3acc-4229-850e-3b777c3d2adb",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5414d479-a6b0-4631-a492-78365f05b890",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "662c0faf-2af6-4381-be5e-0c4b7f16024b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4646648b-3b3b-494a-b7d2-4b63c53bdca9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e95b554-194d-4645-984f-026b0385bfb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8654be95-d5d7-4cf3-803d-b6c24d8c985f",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e0fa6dc-52ae-400b-916a-ed855753b604",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f71ebf0-b944-4c2c-9387-03bca66ef744"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cf48301-1264-499a-a941-40d731baefeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e08d15b5-92f6-487a-a629-9e1540f845c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f72b8206-3e70-4aaa-8313-f5c4b56c660f",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b118f8dd-33d5-4666-96fe-d9bc5ae597a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3cb169a-b7fd-4b98-aa05-a396d500f5e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "910b2b87-a5a3-4eee-93ed-1c3d59bce872",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f3f7598-e218-49f0-ab05-d5bc5edd4f47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf116997-c8d0-46dc-9cb7-af29ee3132b4",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bc3fb9e-aea3-4bd8-bf49-a6cf2ba4e759",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7bb08cc-2ca7-4a06-8e70-b9fd66f44485"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "600268e4-8ddf-41f9-aa4b-45dc48ce6cea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a69fd00c-3a6b-42a6-9e80-11927a1fb47a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c695abf-5d4b-49b3-a6dc-febff25195cb",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37f7f0db-f893-441b-9725-023ae8b4b1fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6af8949-eedd-446b-b9df-c137d8db1db9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e36fff82-336c-4287-99c4-79ce05751cbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc46cf91-3422-421f-a06f-242fb5d27b76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82ff5bc4-cd35-45c5-a44a-5908399fd286",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79ebfdbd-f833-4c1e-a60b-af23347e98ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9949b377-486e-4b2d-8022-b0a00aabc05d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40fa2ed6-c74a-4b56-84ae-16a6156fd238",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6720fcc-bb1c-4ab3-b656-c0da4f71f017"
                        }
                      }
                    ]
                  },
                  {
                    "id": "627ca1ad-c80a-4545-908d-1acbd1280600",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af703ab7-2f8c-4e7d-996f-4ad31ff3c886",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6361573-53e9-473a-a7f6-6ee911c80827"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd084127-8f3f-4dd4-8381-85ee52543a0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a67c9a4c-7084-42ab-9d40-f2e454261711"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83d5743a-b942-4c68-903f-4cee5a9b5ddc",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13629e87-fb47-4865-bc7e-f9fb52ee4fbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "262f86a4-dbfa-4f5d-8166-7e3b491416f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c957b09-25f5-41da-8e97-f57092b4eb57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8469e659-e1e4-44b6-a2e9-6410f58abfc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92d84076-9e9f-4c41-9dbd-f0c07bdb0638",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f65cbdbb-0cb3-41f9-87f6-2f8ce197e31b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbe610a6-b291-4a8d-acde-8770131e48fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9efb7532-5347-4245-b9b3-3a4c34f11400",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a440f810-1028-4f4c-a103-42cd052dbd21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eb92741-09fd-45c4-ad83-60810c27b88e",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "167a11d3-72ed-4f85-bded-a10ec43df83a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aaa9d103-1822-47f6-9a5d-1afc0061eca9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73ea421e-a84c-48e7-9f93-2364cfdfc912",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "881207fd-973f-4d70-814d-39b1c6730660"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c60cf3c1-be57-4811-8c57-fc2e9263cbd1",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6beb724d-62db-47e9-88a2-49d8d814fafb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "394986fe-69eb-4fee-8d04-e18f97ea7883"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "646d28e6-03ee-4ea5-8024-5faa8d5d764f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b2455c2-48e5-4df7-9cee-06905e9b2640"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ac370b4-ffc2-4029-9a5a-52410a858cc2",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f768428b-2d5b-4775-b253-7a8da797dbb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41870f5f-7fc9-43bd-856f-47fcd8cc6ab0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "212c174e-06cc-4940-be1b-857672c90ae0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d371d96f-16d8-4ddf-9ab4-117053f03384"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9f801e0-7d0b-4fec-a8b3-686ddf9d5615",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ec5242b-2534-426b-b833-b379c10bc208",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76c8b50c-0863-428c-a594-a238488018dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44a22d17-c390-434d-8da4-fa568cbd9e2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cc698a5-2453-43cd-b5c6-105397dadc09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf6de571-84a7-490f-bf59-0e62ed5b68d1",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72601c6d-a6b1-4ed7-9a9c-b4b8752f9a93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56387f1d-da06-4f04-bdff-01245234c9e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b794ec7a-c6a5-4f97-b473-9e067b670737",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f251cd81-dd1c-4d33-8e60-a792cd510829"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce5a2806-1912-4dc5-b16f-5366a852221a",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef7a677d-fc2b-4ad7-b523-5c117d189b38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9015ef00-b342-4456-981d-c3c7f0499d5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bdd7b35-e6f2-43ab-982f-21351291bf92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bccaf715-6b73-4939-9b6c-0ae93672d94f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6309b8c-1a95-4f5b-8285-0ed148599636",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f167cde1-291e-42c0-8e34-d218b8f508a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f9b51f7-4170-4754-8bfc-db7689d7bc9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd08b551-9db0-4582-aa4a-d44d49546d0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93206651-8047-44ab-bb96-b295a5e1490b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26cf5ee5-ee55-4141-88b7-7818f7b5c2f3",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cffff0d-37ca-4666-9d92-c4ac7bfa5853",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40b6a9ce-0cd6-4878-91bc-f1a6ad6d82b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22d2b219-ae85-4341-a5a1-a4544d0182ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74beff8a-22c9-4a4a-8bf5-25c089defa84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56052290-51ee-4509-99a6-b5fc40e9fe55",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f1a3bc3-6807-48cd-896b-a6190cd8f713",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "feb99ed5-ec87-41d5-8e34-2e9ea3523927"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b46c167c-e657-45d2-9cca-e10bc45f154d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dcb6add-3867-4bf4-9b84-00ef075dae30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1708c514-262e-4cfb-8543-612fa4503bd0",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad414c69-5eb1-42b7-88b7-416e0809b9e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0018ef2a-b7a6-4191-ae20-beaca3362d84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd2d9079-ac84-42af-93e1-a003cafc09cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11c61f71-bf21-4a4a-a639-f4e28cc965fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30f6e7c8-8da8-4616-b45a-2055bf073f84",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e260450-774e-49c7-9329-74556f10c089",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95781ad1-1190-485f-92c3-85fa34dd085b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25eaaf4b-12ee-48c6-b74f-d82d0f6159ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a152d67d-5785-41d3-9af5-accce89ebba3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ac25700-34a7-40a2-8528-654206a27c15",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8ddd2d1-ffc0-4a58-9bf1-462e1df0e397",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7aa032fc-6dad-4b51-9918-6875508d2525"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d036958-b5d9-425a-a84e-79183e9e437c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc552537-a5a1-4bf7-856d-649b94803c77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c1b0121-2ff8-4fe9-a862-b20915d59708",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25bb35d4-799c-4356-8d79-b883cc106b80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b606b9f-a520-489f-b5fd-6085c1e8b0c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f8bed16-2dd4-4a23-9444-11e344bf3b97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a168d51f-ecd4-4a9b-b399-39d043667762"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfbb9f4e-4eb4-41d2-ae65-8d55a90af4ba",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ae84ed0-227e-4f97-b370-2f4739f5850a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "449a0ef3-7650-4c89-b82d-fcae639e8767"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cef74812-e48e-496c-a188-8c6755d10b29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24712bd2-804f-44e3-8d9b-1b6a34ab4326"
                        }
                      }
                    ]
                  },
                  {
                    "id": "821e4d20-fb2b-4d2c-bc38-a193879d41a1",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d02b125-b77a-43a8-8573-5b07b05ef799",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d66d51c0-8a45-4988-adb3-80893e77b366"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d752ada-51d2-49db-b5ca-b16289ee8f1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "041bfe21-adeb-4bae-b477-7f4579c90433"
                        }
                      }
                    ]
                  },
                  {
                    "id": "942f6740-f482-46ba-bbf2-fb0ac9f9581a",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cff3b2e1-5825-433f-b8ad-178ea0906e25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "647461d8-e271-4104-a4b1-ad5df1209962"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b13ef437-0de7-4656-8bec-ded55c3b0e29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1b0d802-5dc2-4e90-a5fa-42eba9dded62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "626f3f67-8cf3-499e-9800-daf23cd76496",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29eda3e3-bf92-47bd-bacb-b509895a97ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16b47131-4b18-427b-bc94-71a805093b68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27150653-8224-4693-83b9-2e543b5eca7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "065947d1-c851-4a9d-8c55-1c6140bd8b22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c403c64-0185-4daf-b584-d705305e03d4",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3a781a9-230c-4c3d-9697-c318d8aed749",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d81afc8-12bf-4bdb-af56-ba8ca53ae24e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cae1e1e-069d-4737-b7fa-d6073a23f9df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bb185f4-076d-40e6-8a61-73ff8c76caf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f0ffabb-0274-4a3b-a27f-6a7430d7d9f2",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d777899-1e52-41d5-b93b-cc16c640d7a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76998db5-b29a-4fa6-997c-3fd4f529a71c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bceea93-73ec-4a88-80bf-a585f7e754f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac3e4873-2fc2-4650-a9cc-65bda9b47d1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e52e3f3e-6b67-4ae4-b839-8c2c647729e0",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5d881c7-9f55-49ea-9e9f-7bf2f799430c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5919308-662b-41a6-ae8f-f23d353ac0f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40e67294-c37a-440a-abb7-ab458c63d0e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2eda0d5-dfcc-46a6-b52d-f6e4ea01ef3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a0e0bcf-d4f6-4594-9c09-2eaa995d373a",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "888530ae-b312-4c86-9b7f-a067e664f9cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09f0723d-8e6e-469e-be56-d4badd17ce1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05056340-d838-409f-9f49-e5158db28a3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12e96335-b96a-46a7-8850-f67bbd594f0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1b40e4b-a543-4e69-93f2-030c2ea7f197",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e0f25a1-cbb1-4ffa-a40a-e24c0e4422e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60ad47a5-01ee-47e2-b2e7-57af47a0a8ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c509fd8f-b347-4590-99bd-5461603673b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d16e36a8-ccc5-4aaf-a0cc-982d753b161b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a6af1fa-c9ed-454d-8fc0-9b6e7867e6d1",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db6b5208-5e8c-430b-b729-79324c647a5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46992bd3-8a3d-4e44-9f5a-a4dc88c84fa6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "167b5515-22ff-4cc8-b6b8-64580a8e6b38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "356fbdc2-dc14-4986-9d6c-1e8b40cbef85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff6d18fa-c930-4ffc-b04b-72021e7f6f8f",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65ce7569-0a79-4d53-a041-ccde6cebbc27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6807806-7f27-4aae-a546-6b3418a12212"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f4a0130-b99a-4f56-9bbf-e27639ac71d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "380e0914-be53-4de4-974a-bf25180e9f6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7834ba5e-2503-45dc-b1ba-253c53b32162",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8622b069-fc13-4f1b-a3d9-9835c18d9ad4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28df8283-c4cd-4e72-8f7b-e7902919b6bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7041735-9581-4980-820b-c379ad4ac51b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf43198a-5a73-4551-865c-76d82b7db537"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08b1cff3-ecbe-439b-a0e2-8ee230b754b8",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6445e350-2a6c-479c-accb-e8d9c8499ce4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bae00cf-5f3a-4244-9a9d-eb82293730aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07a96f37-655a-4133-aa0e-3f49cfd2b0ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a86a0cc-9277-4c30-bbbc-eaf2f561cdcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3b49dc1-972d-4738-9edb-4d509748b8a3",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1edacef-1ae2-42a5-a369-9e1fe9161642",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7eee2e72-0607-43b7-9c98-a2144d67b2ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc8f12a5-8bac-4730-bab7-ae3749ff1829",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "685cdabc-3284-47f9-9e6a-e76146e8e754"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45c3f83d-6f83-472d-8503-ef0d95c8b322",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e1b51f1-1654-49fb-a441-3c439a41ba67",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a0d34e0-bd46-4886-84c8-90d5b5987e97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "def40974-98c4-42fd-ab11-d7c12bd3d6e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53f82c46-6123-4d9b-9546-65f83310ab2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3c522b2-10b9-4870-a448-e7e2c17e2dcd",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3722695b-ce6a-45aa-96c0-6cb773cb22ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad6f490b-2fc2-4453-8267-973c85fcee2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa9f6488-74ec-45e3-b375-357abe5d7bbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5bf07bb-92cd-49ad-9b45-dae312cc388a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b269cdd-bf1c-4394-8dea-1f5c417b8887",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2296740-8712-4161-8b7c-7b0cf5cd716b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d772d005-8ede-4619-ac2c-992d85b26b12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92b58b64-a56c-4ad2-b2f4-a34fca7e86f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a23428c-274b-4f8a-8220-93b34f2ce690"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0feb23e-ccf1-4101-8803-92c0cb61735c",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6656d09-fe18-418c-9c32-1842006c6f5b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9aadca1-d642-4408-9136-b09fbbd7fb8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ff56a17-3cb3-40d9-af6d-d04a353b3cb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f7ae6c8-eedd-4f07-bcbc-768195958e48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "357babe2-ecf6-4510-8f88-4a1fdf336f8b",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58824e24-1593-4bc2-a311-a7bd66b812f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47dee1d6-06a5-4a5d-8eef-090fce855f6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf70f92d-bfec-4322-afbb-5a653a836394",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19bfe4f9-57a4-44b1-ab00-7c04958be3a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ea15d57-40c0-4bb2-9bfe-773089d8f7b9",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd7472ec-7a79-4aac-b268-4c59c1babf4a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "529d0476-1d01-4cb6-b283-1fbb31e20bc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4801fd4a-6837-4a70-94d0-376a2704291b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01e71bcb-af2c-4b0c-a8e2-3a7d5bad6350"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d822b79d-111c-4d85-bccb-2330684751c0",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acb5cc6b-8dff-4435-b448-abefd66a46e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45710a3c-1586-438c-86b3-5e0666e12a95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74c97df0-9d1d-448a-9b1b-f08c2d2a66d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "865bf973-1780-41fa-9c49-56dfc16c8836"
                        }
                      }
                    ]
                  },
                  {
                    "id": "528f3a1e-06cc-401c-bc9b-ba7f7a5088ac",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca3a8138-d4fb-4a93-9f9f-8e8984bb91ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a94a1543-4a9a-49cf-b2b7-dd5b9e199982"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04d8714e-e572-4ad6-92be-26c7f3f03721",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d885896-859b-412b-9d75-7851167938d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d97e68a-76a5-4bd7-b54b-c5ff1f98b11c",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba796b4c-4ba9-4ddf-8358-a41c72b91ec5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98926562-0df3-4f59-b763-f99a7fa42926"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da7bf6cc-b3ae-4c79-b580-1a4a4121fe09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8935fac5-f74c-4803-906e-fcc8b04ea0ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27e6c585-c045-43e1-b307-a00fa4f65a67",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa0bbc9b-41ec-43f6-8b0d-a572460e0347",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17c4553d-39a8-4773-bb7b-87d73c5ebead"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99b03583-9304-498d-a23a-4aca09f8ccbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "015f5d41-26af-4dc0-a061-3f9c7857ccdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b751e4fb-c59d-4a79-9eba-5353041584a0",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53274f94-a4f9-4856-bb20-a8af76436b69",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e54f40c3-13b5-4ad1-88e9-79cb7213b15c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14802c57-2518-4742-829b-05a69a32c7e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9675ef95-2a25-40a5-b7da-7ad3e31aacc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "049433fe-6e2f-43df-83f4-65442ba3a7c0",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33c72244-34e3-4043-83f0-78da6592b430",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e10551c0-f947-47bf-a255-b9603b221481"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a7c9fc4-83c2-4b1f-ba88-ea2b0c229321",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7917b71a-579e-45ac-8ddd-4f792468c288"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5627d34-6853-4ea5-ad18-da0148f7bc3c",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d6cce58-3fc3-419e-95c7-35a977d98fbc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3777b93a-dd5a-4352-bd69-bd901d70d69a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eba65fd-3cd2-45ea-9c57-16333ca09934",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55beb94f-964d-4f2c-93d1-39d1085741d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "917baf33-cead-4c70-af2c-5bf774a43f63",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca809a3c-f2b1-4977-be99-5420bc307849",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "200f270c-4b8c-41ba-a718-08dfec8d7621"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2f86d8a-fe73-4d21-b175-96de6bd3107c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e99a5acb-4c1b-4238-8ff4-247ef1771228"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09ca8269-0bee-4ee9-aab8-9c9b5d5d864f",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8695c162-8de2-4fd1-827b-274cf7352d6c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11a42e41-9fbb-42d4-bda0-291ea5b3f71c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45ccb01d-c42a-4ca8-80b8-b16b00f7edac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b41b16b-7347-4824-a760-523050da373e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96d1df34-5e20-49d6-802f-6b4a5bd2a1d4",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3040c8ce-804a-4ba8-81e0-de0be1fe9e1a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ccf91cb-87c0-4648-acea-af53867514ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2b8ff44-3e81-4167-b57f-8521d1fa7ff6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c63ad267-5998-432a-a5ad-c0c797fd3e90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35b49ecd-14d7-4ea9-b5e9-1d75e3073619",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be6c20ac-6738-4130-9539-eee6051fe880",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8822c73-cf6c-4136-acb8-ad892e16567d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8e8ea3a-90a3-47e2-88d6-4171fccc3892",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d317ae23-1f9e-4678-b23b-6a02cfc72f49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23103cdf-10d5-47fb-8a7c-c14ac9888a3c",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10855fed-3101-488e-a794-5c9a2329c71b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a06b9c1-16e7-449a-bf48-563a0ec08309"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0471907-61c9-4ff5-aff7-8813b5b09405",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d535b29d-8c4e-46c4-9858-e15803077ead"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d776b10-3b2f-402e-bae9-b8b9d31c4295",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e65b1ff2-c882-4eac-943e-f73f877fc4e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "083d8266-5c9d-4818-8e92-ae03bad8e399"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fc5bbd8-7b8a-4988-8b1d-221986e70386",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f2efea6-dc40-47d7-93d1-94e0f94481ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50a693f2-8d48-4cbf-b04d-b07907cf26bc",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ff2edcd-b53e-4539-ab43-d167ad3692ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ef6af13-5abd-4dc8-b389-9a8af5305801"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c02e5425-63f4-4d97-994f-31c5ee923f82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c7d5660-05fe-498b-931d-f1a99283e54d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b0ea2ed-08a1-4a90-ac7c-5e1116b2b6eb",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90102407-ac9a-41f6-9d2c-49f63500800b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc823aaf-e54d-4e94-af15-f6932c232ab4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96bce89e-b5fc-4a5c-9945-512a4e289e5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fb7ca42-81d4-497f-a3e8-b108812de960"
                        }
                      }
                    ]
                  },
                  {
                    "id": "621dc4be-42ce-49a7-a44d-81bb2dfdf1c0",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "769f1aaf-044f-48cc-b910-b16d43c827f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5efafedf-6d05-4bfb-9ffb-af90dd02ec3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57dbc730-94f0-434b-9da9-b0b95fef24dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a1e76e2-9549-412d-bbfc-ad86aaa5edbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "770f55af-1938-46f6-a00f-a2b4a1aa3bcb",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25330bd3-183f-4820-8373-fbe7dfdb9597",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78d25f62-e55b-4c73-9120-fbc5404dce1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0830efee-ae5b-4a65-9cc6-54ac98aacd72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56d6e526-ac73-4899-8fc1-8d95c811974f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efa85702-4392-4db3-b62c-36c766d41780",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa0efd4a-2ae0-4f70-9d10-b31ebd4ba64a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c4424fb-d801-44d1-8930-e8d05926a245"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d24f8f5b-2232-4fa0-bc27-99c52346950a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "659c3a44-33d4-4e23-941c-970488fd866d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2af62f8e-3a69-424b-b517-d89d97e122ee",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba51fdad-e465-44c3-af49-13c50d1a1f16",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54cd2b80-11fb-40c8-b8f7-b5b73051b77e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00881198-998a-4f95-85b2-c68d4305517c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb7d3f2b-331e-4d62-b85f-26091f623a72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91092a0f-7760-4b1f-9809-95bfd789fcb0",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24b5db07-c3bd-4ca7-8639-b61045972221",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7b07ef0-ea42-4171-9936-9acfaf6dc3e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e777669e-aac5-49b0-b77e-a70a921787fb",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02c2c4f3-13b2-43a1-a48a-c43c3777923b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a216ee8a-0e31-4208-9ceb-ff8492aec590",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aff02a48-c23a-4608-af46-e517037945a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a42d0e71-2429-446d-87bd-acc8b1539f48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bdc66a4-d58b-4139-abe8-377482fa8970",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e02956c8-3a5e-4206-aeeb-800a3049573a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60781b3a-0dfc-4787-b394-2d76519c93b9",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "909e2c80-63e2-43fb-a98b-6433a09a9fd1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64a04a91-2060-40e8-9111-b51c7a29d037"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e2b371f-1c75-42f5-9cb8-6e7fa6e5e600",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fc3952e-1b6f-4a61-97ca-6fe328695e96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ac125fe-6881-4b68-9329-7fbfdd8d000d",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3ed0f0b-7a06-4436-8da8-dd993bbbaed9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "538d9faf-63ae-4e9f-827d-2b7f7f93af6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbc5e937-f9ca-49b6-9450-23dffa3daf0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "054a2ac4-02a7-4623-a820-a507beb8b44a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37573753-29bc-4bb1-8798-11b2c1c03e47",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5b39bd7-9a88-48cb-a947-a0b005dc2ddb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "84756fca-8f6a-4341-93ce-711bd3ea711a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97dc6732-4dec-499d-b82f-fcbb860aa32d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a79e4fa-449f-49ba-a2b5-fa5c9184d00c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c4d9e22-0a41-4dbf-9d27-f79d33b16b6b",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6e00b97-5fb0-49e5-be39-3ba047c6808c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08fb566d-4e00-4807-8837-1ba06683aa00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "304fd6c3-da5e-4eea-80f8-6490a4e17d51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa0e9a00-cbee-4e43-8bb7-46c144dce501"
                        }
                      }
                    ]
                  },
                  {
                    "id": "422d5fa4-2725-428b-8a67-8eb5b4f7c150",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c2351bb-b5af-4190-b956-41c07069eadd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb431043-c81e-40d7-a81b-f3ac5e9525b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67a1ee67-2a27-4f4a-9097-2fa026dfafa5",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dc947ea-eb22-43ef-9861-ebf7186a0ff6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62f500de-9dea-4f68-b89e-977836676f6d",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6412f19-859f-4996-b911-ea21b3c722a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1e5dbd6-2c3d-4278-86b9-7b68f5705492"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39b9fc1e-f34d-4c73-9f14-80f34dd1ef6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0da363d5-bcfb-4852-8398-a7f050ef3916"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0b93a0e4-58fe-4e66-9ccb-30502e73a9e9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7fdcec90-ec94-46c1-90ae-1b8d3f102f34"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7c7c35ae-e2a4-4ce4-995f-176d0a952314",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e646d432-e80d-4c3a-b5c3-8afdb23c238a"
                    }
                  }
                ]
              },
              {
                "id": "a299aedb-1972-4d56-9bd4-40b33b606b77",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "53af8f72-b138-4fac-8d7e-970965c6072d",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0492cc9f-5147-443e-8126-8cfec1c1c308",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "7d001ef5-5fd3-4e0d-8012-324c856e9a4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f53b2db-3b9b-4be9-ab59-71255af9e0b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "34b63777-f288-4451-a408-57703df47699"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5ae5062f-3c9c-4423-9dde-0742d1a50cfc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e70a54ec-40d6-480e-ad95-bff72ccde604"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "860b3a5d-a08f-4d33-a0d9-97dd174948b2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a9010e49-640a-4bd4-92b6-4fdf2de7e9e7"
                    }
                  }
                ]
              },
              {
                "id": "c4451de4-ca5e-4740-97de-4352c4f5e176",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "97ba379e-2499-4231-9e24-3baf6fd26f5e",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4c3e23f-eaec-4486-abe5-2c0458ad0128",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "5d0e4c7f-3478-450f-adee-3eb78803db93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54f2f347-c0ac-41f5-8d5a-8e23ddb84c94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7cd1bed-aecd-4baa-a79c-e6c0e032834b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "e701f4e9-5b33-4b7c-aa22-4699e1c8d860",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9a1bcfbf-8944-4420-ad44-a7176ea82f67",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f3b644ad-07b9-4d22-a097-af6e4d9e1a04",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "e099796f-ce46-4d99-897b-1b8985dda4ac"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ada28410-dbca-4066-aa5d-19ef53abc240",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f5995326-7a57-455c-ae17-cfbc1e65e6ca"
                    }
                  }
                ]
              },
              {
                "id": "0b362214-0342-4aee-887d-51bbe027243d",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6c3e95ba-5e97-4e0b-9944-bac2bea0e643",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "7759fec3-4869-49e1-a22b-6545df302a69"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c31d2cc2-1893-4d43-8e61-5055c2ff74b2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2187bc92-e425-45c0-a7b5-7c6beb212d0e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "32b9a5d8-e53c-46f1-8979-1741c378a5d1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "188c7e90-a2be-45e7-9ed2-fe1624af53cf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4d3c7f6a-1b8d-4f9f-8519-f390763c1431",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "08b728a4-0647-42ac-9919-5ff0ec915f4e"
            }
          }
        ]
      },
      {
        "id": "01d075bc-10c9-4abd-8a42-6e088f72adc6",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "40863697-d1f1-464e-811c-5a05b0cea288",
            "name": "Negative Testing",
            "item": [
              {
                "id": "46d5fa41-c5cc-4507-8166-64dc1d35172a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "108f8903-81e9-4776-987d-49014d6074a2",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6f3986f-9f89-4ce2-be08-90c208ce274b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "1671eb43-01ab-4579-8914-d44d4d96dd18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53bd9552-6d85-4c60-b5d5-20f56b062694",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "02af6016-5e9e-47e1-9201-1b7267e6636b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d07cb558-9040-4688-bdba-41aed7937fac",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6097b9a0-840a-45d2-b767-024ac8e9f94d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f5ead42f-d8bb-47c6-ad82-66d8830845fd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "58d80fb6-e14c-4efb-b1e1-2403ca40b474"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6a325038-5414-4346-b285-cb1875edb01a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "a8108d37-afeb-4f25-8746-48ed421401cc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "efbf4743-d8cc-44a2-97a6-b620892562a8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "14822e61-2432-4aaf-89c0-0f8dc83b2aa2"
            }
          }
        ]
      },
      {
        "id": "5412a052-bba5-44a0-8749-3133aee33341",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "87680ea1-8a0f-431f-8d89-7a7810870d5e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "be843587-7ae9-4137-8c86-540482d16063",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ec2c7fcb-320f-44fd-b39b-3aefc467448b",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e61ba17a-ec61-4156-a5e4-7c6b76880693",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "37596900-7118-4fed-9ff0-ebfaf9c49f3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "433aeaee-5034-4573-9ad8-3c166a5bf760",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8cee748e-7b4a-4b13-9aae-995418532991"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "be54b781-1702-4348-b0a9-56ff3744c729",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e7ad9d1f-ff59-4c98-980f-c6a5bc5a7860"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b9bb2816-6306-4380-afad-fad7c2b07d09",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a1b914a5-de70-4c77-a937-45720163d718"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c68cf7c6-58db-497a-81eb-89dbf2b065f3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f660d09b-81db-4321-8f86-a868b832502e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ab60747e-fc17-4ce9-9913-9aa8595eff4b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2ac9881d-73ff-4991-ad6e-55ef7d80e719"
            }
          }
        ]
      },
      {
        "id": "975c6c12-cfaa-4230-82e1-fdab8d1618ab",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "825ea6dd-9f47-4587-9687-56168037da72",
            "name": "Negative Testing",
            "item": [
              {
                "id": "261c849d-8c91-42ab-9781-75042b8beba3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "75af5440-4eb5-4507-9ddd-0c82b4a774ab",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b19dfd9b-6e0c-41b3-af2b-05a3e890f472",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3680f3cd-41be-4d79-a4b2-385a363e9c2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bec772f3-bbee-4993-98ea-8e8535af3c56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "23f655ae-644e-4cf5-9dde-e2be8008d10c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0a58f2fd-a408-4334-bfb8-3a8d2b53c41e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b41a2b73-8d9f-476b-93dc-e417c4e5f2e6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "35dbdc9c-2b7d-4a1b-9d84-531e70b612d7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1dfbc3d7-3a67-44bb-911c-55651e805cff"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1df2db1f-e355-47fb-83e2-71482280be40",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "46f28902-eb18-436b-8799-9f3577bfb146"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3ee90d9a-c190-4261-b89e-0fd343e56605",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e50e94f5-9cb2-4594-848b-b606ee223781"
            }
          }
        ]
      },
      {
        "id": "85c369b1-cf1e-4f33-9e47-6cc79c96b3e9",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6639c0ba-e392-4b17-b61a-ff1b8b186d98",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "daa9b656-2465-400c-b690-81e5812b6030",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "f68b9737-ef5d-4322-b99b-6b01feb1ac7a",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5dee6714-b4bc-49a0-85a8-16c9fbed6438",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "32897fa1-9808-4017-8215-288158fcf9d0",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 46
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 138.5894736842104,
      "responseMin": 5,
      "responseMax": 5956,
      "responseSd": 502.7553727226369,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1706834074614,
      "completed": 1706834123129
    },
    "executions": [
      {
        "id": "e8e25a5c-e8f7-4351-8ee3-28ab741b8d92",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "fcedd54d-e857-465f-ad31-f2ea300369a3",
          "httpRequestId": "cb4a091c-b365-4776-83ba-2b2271042049"
        },
        "item": {
          "id": "e8e25a5c-e8f7-4351-8ee3-28ab741b8d92",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "3c704492-ba60-4671-b544-250775278f91",
          "status": "OK",
          "code": 200,
          "responseTime": 39,
          "responseSize": 0
        }
      },
      {
        "id": "2d2a99d2-6f39-4d73-8108-4a0612aa7d96",
        "cursor": {
          "ref": "01918b5e-b95a-488a-bc89-d30dc0fd6bcb",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "3566e347-8312-4fd2-8c12-c53ad7a60b49"
        },
        "item": {
          "id": "2d2a99d2-6f39-4d73-8108-4a0612aa7d96",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "85903d30-e001-4fac-a0ef-88a21eb26826",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 0
        }
      },
      {
        "id": "fbc267f2-bc98-4467-8627-5a06f4f67908",
        "cursor": {
          "ref": "6d805a38-0883-4715-bb7a-e5d90c1c30f6",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "fbbefc75-5770-405f-8beb-47a9506f4878"
        },
        "item": {
          "id": "fbc267f2-bc98-4467-8627-5a06f4f67908",
          "name": "did_json"
        },
        "response": {
          "id": "58c5c2d9-35c9-4390-861b-8e2210e0282c",
          "status": "OK",
          "code": 200,
          "responseTime": 360,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de22f115-3871-4380-943f-59a0bd1f7114",
        "cursor": {
          "ref": "299f3bb9-0d6a-47d2-b981-c76fd08a4af7",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "177797c5-c5c6-4dcd-bf4c-fa581dd8a23d"
        },
        "item": {
          "id": "de22f115-3871-4380-943f-59a0bd1f7114",
          "name": "did:invalid"
        },
        "response": {
          "id": "9d17dc07-c0fa-450d-b85f-89c985172860",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2807,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de22f115-3871-4380-943f-59a0bd1f7114",
        "cursor": {
          "ref": "299f3bb9-0d6a-47d2-b981-c76fd08a4af7",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "177797c5-c5c6-4dcd-bf4c-fa581dd8a23d"
        },
        "item": {
          "id": "de22f115-3871-4380-943f-59a0bd1f7114",
          "name": "did:invalid"
        },
        "response": {
          "id": "9d17dc07-c0fa-450d-b85f-89c985172860",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2807,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b5efada-3c43-4077-825c-7c271425b99d",
        "cursor": {
          "ref": "9c50993a-5d9c-4444-8e04-f2aaea48c72a",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "8bdd5055-9798-4843-a280-698ce3e9de3f"
        },
        "item": {
          "id": "5b5efada-3c43-4077-825c-7c271425b99d",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "8ba265f4-a45b-4a9c-a72b-2309f41e1f31",
          "status": "Not Found",
          "code": 404,
          "responseTime": 64,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb5b4bdf-d107-427e-b021-0182f736e7d3",
        "cursor": {
          "ref": "7bc316d2-7870-450b-add6-65dd5760b61d",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "132560a8-cc2a-44a5-9580-bdc06a50bb15"
        },
        "item": {
          "id": "fb5b4bdf-d107-427e-b021-0182f736e7d3",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "06d16822-c936-414c-896c-7c4b2bf2c1d8",
          "status": "Not Found",
          "code": 404,
          "responseTime": 57,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6559a6e-38a6-4dd6-8462-124bc35bed55",
        "cursor": {
          "ref": "f8c1f136-31cb-491e-864b-48bf0299edf3",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "664eb974-4ddf-4571-b57f-6dafdcf86e85"
        },
        "item": {
          "id": "f6559a6e-38a6-4dd6-8462-124bc35bed55",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "76975490-b4a4-4348-9f05-ac43b720c9d2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 60,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fec4c81d-5a50-4491-879f-c91891b14f18",
        "cursor": {
          "ref": "15c085eb-ee5b-4cbf-b6c5-e43a7ddf412a",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "412a8158-aeed-46aa-ad67-8391ff406b8f"
        },
        "item": {
          "id": "fec4c81d-5a50-4491-879f-c91891b14f18",
          "name": "identifiers"
        },
        "response": {
          "id": "aa5b9f5f-0e84-41a0-9793-e20f29d1ea70",
          "status": "OK",
          "code": 200,
          "responseTime": 74,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cad9004-75fc-42d4-b172-562bf24d44b8",
        "cursor": {
          "ref": "8b938fc2-afa4-494d-ba08-1ef4da7b6052",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "0ad99828-a4b0-4305-8dee-495f970153ad"
        },
        "item": {
          "id": "5cad9004-75fc-42d4-b172-562bf24d44b8",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "0b497431-be14-4df6-9317-0e7a5810106b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5e91830-5ea6-49fa-ad01-ea5219e90c06",
        "cursor": {
          "ref": "dc0c5307-6ba4-4d17-a1d6-d3a5b80f2745",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "76306571-e0e1-458e-80f6-21e567e41b23"
        },
        "item": {
          "id": "f5e91830-5ea6-49fa-ad01-ea5219e90c06",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "1bd91004-e956-408f-ab8f-da8e7c71b98f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc59470c-eafd-4c92-97e1-831e253b9477",
        "cursor": {
          "ref": "c2add8dd-532f-488c-ba69-ab4a2377a640",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "8cf74260-78c5-4709-a3a3-37f478cf5a56"
        },
        "item": {
          "id": "dc59470c-eafd-4c92-97e1-831e253b9477",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "6e17cc43-36ac-4e7a-974d-3e2f1ec601f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9956b9e-4ac0-4383-8671-ca4fc4afedb8",
        "cursor": {
          "ref": "0f267518-72c1-46ab-bc8b-9d9e2b7eb722",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "333bec80-24de-4c17-bdf2-b62d2af39ce4"
        },
        "item": {
          "id": "a9956b9e-4ac0-4383-8671-ca4fc4afedb8",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "295d11df-da5e-4907-ba0b-0f534f5553c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 107,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd3a3bc0-2923-4f39-b323-51767c73bfe9",
        "cursor": {
          "ref": "bbff5545-cfa5-4714-9108-82d9b9f491e6",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "d91208c0-8641-4b0c-aff3-10a6fc16d42d"
        },
        "item": {
          "id": "dd3a3bc0-2923-4f39-b323-51767c73bfe9",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "c41dbfce-fea1-4530-bea0-a68b0a4b5a01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74ab9e89-9de2-4262-84e8-6ef26663ea3d",
        "cursor": {
          "ref": "09f26b31-4364-411c-b243-46a71097217f",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "acb541d3-5a22-42ca-86f7-92ef58bc169e"
        },
        "item": {
          "id": "74ab9e89-9de2-4262-84e8-6ef26663ea3d",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "33757054-0830-45d3-8195-f231683e3c37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14041a8f-44f5-435f-a506-420dd54e1702",
        "cursor": {
          "ref": "0ff3532f-6796-4d62-be0b-b1fe15b59ce1",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "bb4bf22e-2ee3-4373-82b1-8c337c9ba614"
        },
        "item": {
          "id": "14041a8f-44f5-435f-a506-420dd54e1702",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "87a9a174-9a49-466f-be39-90e676bdb867",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 132,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c412b1da-3a78-4666-96db-bc27a7197249",
        "cursor": {
          "ref": "3a2307f0-2e11-496b-a335-a0c00e876d1d",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "e8e3c1db-dcd3-4b52-ac5a-c4c575fed259"
        },
        "item": {
          "id": "c412b1da-3a78-4666-96db-bc27a7197249",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "97f646c3-a60d-46bf-9d86-2ce438c3d3be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1338636-999f-43d5-a6d6-805d4ec24054",
        "cursor": {
          "ref": "76ca572f-becf-4b6f-aa5c-fdbc4fed0f7a",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "6a4b60f4-36c5-4684-a1f0-2accc2e7cb48"
        },
        "item": {
          "id": "b1338636-999f-43d5-a6d6-805d4ec24054",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "8ba4a8f1-af2c-4d71-a09b-8e1cc73e5d27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c4c77ce-2777-4014-ac8f-971be7692a2b",
        "cursor": {
          "ref": "c3335ce2-b23f-4a4b-bd97-e2c495127b00",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "a340c43c-b3a9-465e-932c-e84bafb8c94d"
        },
        "item": {
          "id": "9c4c77ce-2777-4014-ac8f-971be7692a2b",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "11b6d7c1-d1eb-4f8f-8541-7de649dfa5c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64d13ba4-a5a7-4f64-89fb-8d8d2e84f548",
        "cursor": {
          "ref": "aa0e7f26-8542-4de6-a8dd-2d7450413b16",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "79f23c77-4757-411b-985c-655c757210dc"
        },
        "item": {
          "id": "64d13ba4-a5a7-4f64-89fb-8d8d2e84f548",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "1d913238-2606-4671-90ae-0ca235f2e0b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ab91f80-02d9-4f89-8cde-e326cdce9fef",
        "cursor": {
          "ref": "43840230-a563-4bd3-a84d-3e3f96c23a48",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "41b1f581-c3c6-4df9-ab85-b05297ce1fa0"
        },
        "item": {
          "id": "9ab91f80-02d9-4f89-8cde-e326cdce9fef",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "bddc15ec-7761-4237-ab01-cba526b13a26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "800cd759-4269-4eff-ae4e-673dad44062a",
        "cursor": {
          "ref": "c599e4d5-8baa-40f0-93f8-807bea0fc003",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "0f7dade4-47e4-4567-a761-ee122cc5d2b7"
        },
        "item": {
          "id": "800cd759-4269-4eff-ae4e-673dad44062a",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "936bc1e8-a7f3-48f0-ad6a-30299c627e1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4423021-b3c6-4dc3-ad40-882d12caef65",
        "cursor": {
          "ref": "a54edf5c-9c41-42f7-8321-466e61a781fa",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "a81f28c7-7de1-493d-86d8-a573c9eb779b"
        },
        "item": {
          "id": "d4423021-b3c6-4dc3-ad40-882d12caef65",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "266cdbba-b0d1-4689-9726-54bb4615d9b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0e67db8-5d3a-41a3-bd34-2fdc67c3a738",
        "cursor": {
          "ref": "e2b9ed5c-1281-403d-ab87-ff172fed2856",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "7faf24bd-b0d0-43a2-baaf-21d61a63d2f0"
        },
        "item": {
          "id": "a0e67db8-5d3a-41a3-bd34-2fdc67c3a738",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "54da8c33-8832-45b2-a432-53d41a8eced8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43e4636f-3381-416a-821c-08de644303c3",
        "cursor": {
          "ref": "aca34b6b-d2da-48f2-86fd-cd02d79e9315",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "3ba9cb70-d4ea-4790-ba7f-b11277138978"
        },
        "item": {
          "id": "43e4636f-3381-416a-821c-08de644303c3",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "e8056ac9-a6ce-4cdf-abf4-09ff6647ab32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c333fe8a-de8c-411f-aad8-400d57d61d19",
        "cursor": {
          "ref": "1dc3b771-1ab2-48f2-b253-b48d8c22cf4f",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "d9f638ee-56f0-41a9-a4bb-b8bca104a5b8"
        },
        "item": {
          "id": "c333fe8a-de8c-411f-aad8-400d57d61d19",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "3b93e826-6a92-4827-9ffb-50b5bcf544d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9f74576-0368-44e3-a93b-77bd7579b4b7",
        "cursor": {
          "ref": "11f4577d-9f13-4e67-a4dd-0b318e043818",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "bca78ea3-d48c-486f-8357-68194a3f5132"
        },
        "item": {
          "id": "e9f74576-0368-44e3-a93b-77bd7579b4b7",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "ce29225f-a5ad-48a1-be67-7e243d1d6716",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14a8dedc-3588-43e4-8794-c9b28d673889",
        "cursor": {
          "ref": "8d182574-a9fe-457a-953a-5ebba7b4f8d2",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "0b429c82-4233-4f2f-b16c-cd3b8cd1769f"
        },
        "item": {
          "id": "14a8dedc-3588-43e4-8794-c9b28d673889",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "6e5bedaf-99cf-4dba-aac9-bd664de273a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 143,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d4fcc1c-bedb-4168-a5c8-89862c867a75",
        "cursor": {
          "ref": "7ca010a3-662b-42c5-8a8f-a22096212616",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "3db3c2c8-5234-4229-8ea8-77894dc4b8f0"
        },
        "item": {
          "id": "8d4fcc1c-bedb-4168-a5c8-89862c867a75",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "71f9f8fd-2296-4616-ba18-8fde40c28fbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 217,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c89463b-0053-4ba0-af28-40bfe655ab39",
        "cursor": {
          "ref": "6c8e87dc-af9b-493f-9f03-7b8620b7e407",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "fc61d270-545f-4ca6-9042-d5b6df9da243"
        },
        "item": {
          "id": "7c89463b-0053-4ba0-af28-40bfe655ab39",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "2d4f0dcd-8b79-47c6-8532-39e1a51aeb14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 121,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cbee8f7-f9eb-4023-8ef5-4e7abc2dab12",
        "cursor": {
          "ref": "5c36f236-220b-42ef-a94f-42115a9409f6",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "b7f0535a-cff5-452a-ade0-cce57cd37865"
        },
        "item": {
          "id": "9cbee8f7-f9eb-4023-8ef5-4e7abc2dab12",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "eeb8d0bb-5bba-493b-a4fe-faa784787aa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 113,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a69e030-49c8-4b78-8086-b1a234ef8ff0",
        "cursor": {
          "ref": "412f1344-1bbc-4336-a1bd-7ac60be764f1",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "7971452b-c146-41c8-af30-e4dfebf0a228"
        },
        "item": {
          "id": "9a69e030-49c8-4b78-8086-b1a234ef8ff0",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "2e348401-49b7-4307-a778-73fa1e5b61d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ac20c94-0e87-42a1-8b87-2e637eea4d53",
        "cursor": {
          "ref": "1460a299-dad7-45e9-bef9-f76366666145",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "81e8c3f3-a592-4b7c-bee4-b29dd04ddf95"
        },
        "item": {
          "id": "3ac20c94-0e87-42a1-8b87-2e637eea4d53",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "7d8f13db-aec8-4dc1-be27-6d666e92b567",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 112,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06e5677b-b1ea-4495-8fed-22d374b0b1b8",
        "cursor": {
          "ref": "2c856d68-c22b-4ca5-a984-065587004c06",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "2fd3e9e4-76d3-46fa-b6c1-1e200759e3ab"
        },
        "item": {
          "id": "06e5677b-b1ea-4495-8fed-22d374b0b1b8",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "688f8702-993c-4a89-8e1d-8b7203a8cb19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daaff08c-652f-4d1c-88cd-f1907bdee401",
        "cursor": {
          "ref": "49ca0e23-d08e-4a15-8fa1-388264ab7236",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "e27f017a-c3b9-425f-97c5-4726faade41a"
        },
        "item": {
          "id": "daaff08c-652f-4d1c-88cd-f1907bdee401",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "b7432aa5-98a9-434a-838c-ad180f1dcee3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e34f7e16-8f98-4867-aee2-7231c130e3bd",
        "cursor": {
          "ref": "28e6eade-4a8c-4b79-9f7c-5617cd09f7d0",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "8eb6688e-b247-450d-8c70-f0b118b14523"
        },
        "item": {
          "id": "e34f7e16-8f98-4867-aee2-7231c130e3bd",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "931cc670-be68-4bdd-97ad-ea032d1fa150",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 106,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a74a8c2-b966-41fd-9faa-50189b725a46",
        "cursor": {
          "ref": "a1d83e2a-dbe7-470e-b100-65790c94be5b",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "71ebf31f-9233-4aa2-a1a0-1f674208b888"
        },
        "item": {
          "id": "3a74a8c2-b966-41fd-9faa-50189b725a46",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "fe175b0f-1f63-4762-b922-78f97d109e63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 99,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fea566e2-d24b-4587-b6c5-1bdf3d833d82",
        "cursor": {
          "ref": "e03db6a6-2f8d-4aaf-8cf9-558ab637b0be",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "bdb0e2fc-930c-4b94-a9c1-34de24f70ed3"
        },
        "item": {
          "id": "fea566e2-d24b-4587-b6c5-1bdf3d833d82",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "0ddb2d2d-4dc6-4e83-9d7f-e76031466610",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 227,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05b3be3d-6462-4e55-beb7-7cc49a44606e",
        "cursor": {
          "ref": "abe07b63-50a8-4892-8599-44b3d895b268",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "47e92e34-c567-48ba-86b7-6e5e21ed7371"
        },
        "item": {
          "id": "05b3be3d-6462-4e55-beb7-7cc49a44606e",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "f17a4bad-33c7-4116-81de-faeacc11707f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45b015aa-3d9f-4890-8596-29b1438208ee",
        "cursor": {
          "ref": "be03cd75-7ff6-4a96-bfd1-c8882475936d",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "f11bb6f2-dcc0-476a-9028-def2176d8c77"
        },
        "item": {
          "id": "45b015aa-3d9f-4890-8596-29b1438208ee",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "4890142a-261d-4541-8e78-3c4fa93052cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 207,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "990ef015-a212-4ff7-bff8-17459aa75297",
        "cursor": {
          "ref": "4d24a6f2-9823-427f-b23e-b18bdfe0bf21",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "d7cf7ec7-357c-4e5c-8ec9-1f679fb8609c"
        },
        "item": {
          "id": "990ef015-a212-4ff7-bff8-17459aa75297",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "e17a8f07-4854-43f0-8442-b77bf9344ebe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c2d3df2-86ac-4a39-a54e-59e37c5db33a",
        "cursor": {
          "ref": "4ddad06b-1eb1-4982-a717-32a8f2431746",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "ded68f33-14d6-4130-b2c9-4bbcd8848aa5"
        },
        "item": {
          "id": "2c2d3df2-86ac-4a39-a54e-59e37c5db33a",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "7c53c482-dc45-4591-9707-8d352e590f70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 138,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7957b4ac-ab30-43c3-8e85-73b40e9ef8a4",
        "cursor": {
          "ref": "8f00152e-34da-4c36-8cc4-82644621cf5f",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "48f41ea5-37fd-49cf-8c7f-5ab1e654a89b"
        },
        "item": {
          "id": "7957b4ac-ab30-43c3-8e85-73b40e9ef8a4",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "1d32c66f-374b-4c16-8461-311cf4143c6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 215,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5276742f-8227-4421-8f51-f75d9159a25a",
        "cursor": {
          "ref": "9b9aeddb-eabb-45d1-aec5-92fb1818aa0d",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "a92c710a-9a98-4e7b-a846-eb9cb429bbc9"
        },
        "item": {
          "id": "5276742f-8227-4421-8f51-f75d9159a25a",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "9632bcad-7df8-48b2-9895-ecd7d82fc2ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd546da9-ae8b-4ae1-9178-9484e3c40296",
        "cursor": {
          "ref": "cd998cfb-9868-4597-8c36-e533b1a7f29b",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "2f91ec84-7f43-45d8-8370-79112db28676"
        },
        "item": {
          "id": "cd546da9-ae8b-4ae1-9178-9484e3c40296",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "95d3b289-bc5c-4b19-884d-0c8578f38804",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "909082f2-15e3-4dc2-9d1b-bd1c713a9ecd",
        "cursor": {
          "ref": "8754568e-8f73-4ce8-b023-b814fabf0324",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "03c2dcfb-b80d-4251-9354-16da7c4dd96c"
        },
        "item": {
          "id": "909082f2-15e3-4dc2-9d1b-bd1c713a9ecd",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "98843454-adde-4170-84b4-8880cc925c3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 109,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1ca98d9-c4a9-4fe8-880e-0b1e783aed76",
        "cursor": {
          "ref": "2a382483-2e88-4d51-8db6-755ff2baec12",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "c993fdda-6aeb-4f86-a991-18144730b67a"
        },
        "item": {
          "id": "a1ca98d9-c4a9-4fe8-880e-0b1e783aed76",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "08c1b7fa-fa14-48b9-bdcd-13666af2c1d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 167,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "675dd6ae-813c-45ac-bbba-56471dc8bf64",
        "cursor": {
          "ref": "e28a2621-f5cd-4a19-ac5b-28240aaff502",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "a494c212-d3c7-4992-b79a-c2c68f1d42b5"
        },
        "item": {
          "id": "675dd6ae-813c-45ac-bbba-56471dc8bf64",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "e957a741-43a7-420d-b6b1-fabadd003795",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 115,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3621de9b-afee-43ef-9beb-30026965e861",
        "cursor": {
          "ref": "11d95591-a2d8-437f-9fae-0c077f277635",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "2d92044e-a912-4655-addf-e61247a47c0e"
        },
        "item": {
          "id": "3621de9b-afee-43ef-9beb-30026965e861",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "7d8df4e3-ebb2-41c3-a066-c08387fc81d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ff42252-1edc-4b88-851d-cade867a20a7",
        "cursor": {
          "ref": "82d029fe-e8ff-4979-b472-76b5c6250927",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "70a886a7-5660-4055-968c-a53972a12872"
        },
        "item": {
          "id": "3ff42252-1edc-4b88-851d-cade867a20a7",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "3962d64f-2a4f-4d9d-9d88-cdbdce2eccb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f21601f-60c9-41b2-87d9-bcb417bb33e9",
        "cursor": {
          "ref": "e6b51114-fa4d-446f-bd33-31b91d5b31c7",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "f0a13a7a-7b6c-46e1-9a91-4c6e35ba8b42"
        },
        "item": {
          "id": "8f21601f-60c9-41b2-87d9-bcb417bb33e9",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "63a1fe88-d8ee-499b-b88e-83d483500383",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35dc785b-6baa-4bce-bade-aef37f9bb516",
        "cursor": {
          "ref": "f111a231-04ca-41fc-b805-951a89345e65",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "98c1ffd0-62c2-4d0c-bf28-4a653979f3d0"
        },
        "item": {
          "id": "35dc785b-6baa-4bce-bade-aef37f9bb516",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "b09f6373-46ef-4953-92fe-024e36e1d00f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dc8fefb-7303-414b-9c74-8b52c1e1c93d",
        "cursor": {
          "ref": "ad734e1b-6b0b-476b-a400-b62aa87f686f",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "3e142af7-9adc-446b-9b80-9383a2ab6444"
        },
        "item": {
          "id": "9dc8fefb-7303-414b-9c74-8b52c1e1c93d",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "0624ab87-8388-4c57-9a5b-4cd8ec9f6b24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 172,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca5f0ceb-a28c-4019-9232-bed9bf7b1ef0",
        "cursor": {
          "ref": "e9dc7c8c-41de-40cc-bbad-5efafb0a4373",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "1f998dee-d21b-4973-9eb8-1ceafd9e281d"
        },
        "item": {
          "id": "ca5f0ceb-a28c-4019-9232-bed9bf7b1ef0",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "e86dc292-98a0-4d1f-8797-99d618305769",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64062943-6f26-4eaf-9d05-ff72a8a5e099",
        "cursor": {
          "ref": "a8eaae1b-5461-4c91-9415-02807665dde4",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "77c7fcca-f4f9-4019-becd-bf8f11cf26d4"
        },
        "item": {
          "id": "64062943-6f26-4eaf-9d05-ff72a8a5e099",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "fb0a3edc-2b6e-4262-8971-1d1b41021e32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f0e401d-7580-4757-986b-84c142e7f1d7",
        "cursor": {
          "ref": "dc9acc35-3fde-4ada-83cd-1eecb111f0be",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "3909ac14-8ee6-417b-b8f8-f0efa27de058"
        },
        "item": {
          "id": "0f0e401d-7580-4757-986b-84c142e7f1d7",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "5b11d926-af36-49e4-b38a-208b360bf601",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9380b1bd-f113-40e6-a974-324103ef2403",
        "cursor": {
          "ref": "28b7c3c0-4ca3-4839-bf53-f45a12729755",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "7a7133f4-451a-419c-ae6c-30aef27ffffa"
        },
        "item": {
          "id": "9380b1bd-f113-40e6-a974-324103ef2403",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "fa734006-4066-4507-a1f2-209d34de8a00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33366d30-9db1-4c27-978a-3b402824d29e",
        "cursor": {
          "ref": "a88303fb-89b4-4174-9d58-7ffb9f23be81",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "3a661439-fa8c-4adb-a8b0-746558ad7f77"
        },
        "item": {
          "id": "33366d30-9db1-4c27-978a-3b402824d29e",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "767faacf-984a-4daf-906f-8a0e1b62e070",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37aa8268-5775-4844-99a8-0a8653017c55",
        "cursor": {
          "ref": "05a4b9b2-7864-4d47-883c-91ee533cd620",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "c10cb817-0c1e-40b9-80dc-520ce9680b18"
        },
        "item": {
          "id": "37aa8268-5775-4844-99a8-0a8653017c55",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "033145a3-9e40-4e1c-8d1b-99c8c154692f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d20ada8a-9370-4788-8853-160739c231f9",
        "cursor": {
          "ref": "9032db82-268c-484e-9b75-36e9e8787d86",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "7606b2c3-ced8-4237-95e0-dc48a0ce72ec"
        },
        "item": {
          "id": "d20ada8a-9370-4788-8853-160739c231f9",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "aa9a8b13-4118-4fda-a0d3-4e27b56333fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "008fe55e-695f-4a68-9ff6-f8275b7b4289",
        "cursor": {
          "ref": "3d39d3fe-12ec-4815-b26d-79d1f1cb7bb7",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "85b37902-509e-43ac-a4ed-58c3675b471b"
        },
        "item": {
          "id": "008fe55e-695f-4a68-9ff6-f8275b7b4289",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "903afe0d-f781-49ed-abe6-f2730fdbf2c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21045037-40ec-4170-8e51-357b260858d3",
        "cursor": {
          "ref": "75ae3944-fbd4-4785-b16d-e1138fcf3c93",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "009c26b8-a03f-4d53-9a5f-d9a7a3a814d3"
        },
        "item": {
          "id": "21045037-40ec-4170-8e51-357b260858d3",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "0e7dfd80-e648-4e9e-82e6-b6ceac7e78c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "330ff03d-28d3-4744-9973-f833928b3db3",
        "cursor": {
          "ref": "abcbeaeb-0f0f-43b9-a64e-5b7f1978b89b",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "ab29126f-dec4-47d6-9cd0-2058b7b10fc9"
        },
        "item": {
          "id": "330ff03d-28d3-4744-9973-f833928b3db3",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "4357d731-a44e-4180-bd7f-c1eacf762c7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bae822c-15c5-4fd8-9a33-5dc58a996912",
        "cursor": {
          "ref": "0012a145-3dc5-4c81-835e-fd10e890cdc0",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "665f5a97-2475-4e5c-a6fd-4b0bd7015513"
        },
        "item": {
          "id": "7bae822c-15c5-4fd8-9a33-5dc58a996912",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "0d8966b8-2346-4732-8581-a23f47d36e86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "807a1898-f140-4820-a644-d88a29ba78b6",
        "cursor": {
          "ref": "8154067c-df1a-42e3-b213-fa1a7eb576dd",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "ef16bdf5-1dde-4d98-9acf-8ef3cdf388b9"
        },
        "item": {
          "id": "807a1898-f140-4820-a644-d88a29ba78b6",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "0ed37729-814f-4025-8d62-4ab4c5d1558d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "603af2be-4fba-4bd7-b03b-8226cbd65c51",
        "cursor": {
          "ref": "e71af76d-d61b-4f04-b1ab-48ca5e2cb04c",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "6d6bfc75-7f54-486d-9783-a1bd1531cbae"
        },
        "item": {
          "id": "603af2be-4fba-4bd7-b03b-8226cbd65c51",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "7310d567-91a4-42e0-88f2-5692ffc7b12f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32421921-0823-4f0a-9b1a-53edba7a7f39",
        "cursor": {
          "ref": "f2284eb0-18a6-47ad-bbe9-19557e85492b",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "ad0eb239-f267-49e7-81c3-5f5607737ae8"
        },
        "item": {
          "id": "32421921-0823-4f0a-9b1a-53edba7a7f39",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "f854734f-14a0-41cc-8b3d-106c434b01df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d29379e4-6124-4619-b6c7-4eb94cedda1d",
        "cursor": {
          "ref": "8091441e-77b9-49bc-b98b-b554ef4a4094",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "e7b2aba6-412f-4059-a1ce-c7d6f164210c"
        },
        "item": {
          "id": "d29379e4-6124-4619-b6c7-4eb94cedda1d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "b316716a-bc19-4bb3-9bb6-e968f6405980",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f43b5cf4-85a7-4054-a828-6625e1d582cf",
        "cursor": {
          "ref": "609fdd0c-84c0-45dd-986c-f5527867dbfd",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "f6d09b92-8d47-47e0-8392-b6ae0bfe256f"
        },
        "item": {
          "id": "f43b5cf4-85a7-4054-a828-6625e1d582cf",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "cefd4711-7834-4315-820f-81c4b5b59d4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e52933c7-66f8-47c3-9933-7b2e0bd86ebc",
        "cursor": {
          "ref": "b3b6bb8b-a0a4-404b-ab8d-bfeee6dec285",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "79ef578f-e22c-4f33-8900-7b59b4d464d1"
        },
        "item": {
          "id": "e52933c7-66f8-47c3-9933-7b2e0bd86ebc",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "3590b88e-1ed8-432d-8f04-cb45e916444f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7cbc563-148e-4043-adb5-205583d91602",
        "cursor": {
          "ref": "cab063f8-2a90-41a5-8400-b93014d9588e",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "b060688f-3db3-4090-9f27-771bad5c955d"
        },
        "item": {
          "id": "c7cbc563-148e-4043-adb5-205583d91602",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "fe56b779-2901-4378-a27b-37252870f89a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb6537a9-739b-404c-98fc-90512092223a",
        "cursor": {
          "ref": "4dfef9a6-9002-4318-872e-ef8070a8c132",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "0503c058-cb53-4422-a08f-2707c6dd00fa"
        },
        "item": {
          "id": "cb6537a9-739b-404c-98fc-90512092223a",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "25fee169-ab22-4612-a2be-576cc702406b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "002b837d-bd8d-41e4-8b45-6d2e2fa1b758",
        "cursor": {
          "ref": "12778506-5826-4e85-b882-aed45d499c80",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "77d403c1-7c59-4633-b3ae-6e733b549095"
        },
        "item": {
          "id": "002b837d-bd8d-41e4-8b45-6d2e2fa1b758",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "3c4104e1-5509-4a58-8737-9dd6875ffba3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "917c4133-8b1a-4ea4-ab73-1a35be13366f",
        "cursor": {
          "ref": "084bc7ca-ce93-417f-b16f-c73dd50ca925",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "8e99191d-17c2-4e48-97b3-c672b370aa25"
        },
        "item": {
          "id": "917c4133-8b1a-4ea4-ab73-1a35be13366f",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "6a215a0c-5a27-4e2f-9d5d-eb8b6be601c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da4bb6ee-8e08-4194-bac5-3789d2a3c892",
        "cursor": {
          "ref": "c04b3f1f-929f-41b5-b3c1-5f2a3f76593a",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "e219b851-c26c-4525-9a22-45565ea91503"
        },
        "item": {
          "id": "da4bb6ee-8e08-4194-bac5-3789d2a3c892",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "189470a6-04cf-480d-b16e-4abf97424746",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07260e36-afde-4876-b09f-3a68f160ee93",
        "cursor": {
          "ref": "d6f58f53-3f14-42c4-8eee-202ed1690a6d",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "ae74b0a4-b70d-4e52-b14b-d259571f30f8"
        },
        "item": {
          "id": "07260e36-afde-4876-b09f-3a68f160ee93",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "296ac371-d977-472b-b9e4-a3d4fb9e456e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52cb2f6d-1a26-4d63-bca3-e79ec2eb2ebf",
        "cursor": {
          "ref": "69d10fc9-33d2-4af0-888a-50b30558de04",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "e82c7222-356f-4346-b8cd-6856549df779"
        },
        "item": {
          "id": "52cb2f6d-1a26-4d63-bca3-e79ec2eb2ebf",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "be438e29-c29e-49a5-9d84-de5fb40fd136",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebcfb9c6-397f-4fca-88ed-2d5acea612ec",
        "cursor": {
          "ref": "01ff2c63-9b22-4afd-8bda-0c58f2c92ae8",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "4e0dcac5-d457-4142-bc87-7d3c0e1b7ec8"
        },
        "item": {
          "id": "ebcfb9c6-397f-4fca-88ed-2d5acea612ec",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "78362af8-6d05-42f3-b8e9-1d554907a735",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1ffd738-d6d3-4847-8887-f0177d2b82a3",
        "cursor": {
          "ref": "cfc51425-d461-427f-931a-ed22da706670",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "c5175777-ef01-4db1-92a4-8b214c0a3856"
        },
        "item": {
          "id": "b1ffd738-d6d3-4847-8887-f0177d2b82a3",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "6166d898-101c-45fb-be61-a3c23592b614",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89b0d3ca-003a-49c2-94b8-3df2682b7f86",
        "cursor": {
          "ref": "9f354fe7-07fe-4076-9990-4e57caa72353",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "b880cffe-ae55-436f-bfeb-5c84fdb5f46d"
        },
        "item": {
          "id": "89b0d3ca-003a-49c2-94b8-3df2682b7f86",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "fe640270-c18e-4e2b-af7c-ceb7aae13513",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c405e69-73d3-4a8e-994c-2ea4017054af",
        "cursor": {
          "ref": "eb474efc-6027-4a6e-890f-9b8ea92b4d7b",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "f4e6a5ec-a95a-4763-bed3-0cffcda54859"
        },
        "item": {
          "id": "6c405e69-73d3-4a8e-994c-2ea4017054af",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "ed755c40-0116-4ffc-aac5-573356cbbd8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "133217c9-910c-4921-8c15-df22a6f956e2",
        "cursor": {
          "ref": "1887b991-68b8-457c-bfcb-f61caa0d2692",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "e23c095f-fad6-4fbd-9775-3e1303b79bbe"
        },
        "item": {
          "id": "133217c9-910c-4921-8c15-df22a6f956e2",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "526c8723-f8a1-4590-9f1f-2f521eaca835",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 103,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44248862-cd55-4f33-810b-959d8352f047",
        "cursor": {
          "ref": "176dd879-eab3-4b76-801b-b893cff101ab",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "4eba8e13-f04c-485d-941d-84c40053d095"
        },
        "item": {
          "id": "44248862-cd55-4f33-810b-959d8352f047",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "4707cb66-9c32-4ebe-8aae-97a3caf9f69d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3a7b656-029e-44c5-b903-24bb68e3998a",
        "cursor": {
          "ref": "d8f1e48a-495f-4eb0-8ee8-a8e0caf1f1a6",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "51c6166c-b623-4c6c-9ba3-60abd57b2cdb"
        },
        "item": {
          "id": "f3a7b656-029e-44c5-b903-24bb68e3998a",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "8c9a4b55-2f58-491c-a07d-ab9e412f1eba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c793cb6-0608-4973-98e7-5722b73d5a9c",
        "cursor": {
          "ref": "ffe4ac15-8fcb-4f60-a7bd-56ab0937aad6",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "35e3c247-43fc-400c-9dc8-b3fd7b6b0175"
        },
        "item": {
          "id": "1c793cb6-0608-4973-98e7-5722b73d5a9c",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "543b0f61-4bb7-4783-af9d-dbcbe1415bac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0f1746d-8f30-4e08-87ac-89a424b04b5b",
        "cursor": {
          "ref": "2256eb27-8ae6-44ea-b539-22b18ede3544",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "5002b8f2-0635-4470-8a64-36f37402f07d"
        },
        "item": {
          "id": "b0f1746d-8f30-4e08-87ac-89a424b04b5b",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "d080a939-9664-4761-9005-2ba6fa7d9fa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2fabd3b-1e1c-4cce-a1f2-e46d29c670b1",
        "cursor": {
          "ref": "e321ce6f-ec23-4226-97f9-afa6d65f0c29",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "4dd4ea78-7be4-434f-932e-c62d32cbb37d"
        },
        "item": {
          "id": "c2fabd3b-1e1c-4cce-a1f2-e46d29c670b1",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "4f1ca62d-7727-4600-ab48-d9244a53ae0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aecf9f55-cee9-44cf-8564-d7f769f33892",
        "cursor": {
          "ref": "95c7c56e-318c-4f19-8297-f3c86f92d9e3",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "6e6cf92b-f819-41c2-8130-c050b023f023"
        },
        "item": {
          "id": "aecf9f55-cee9-44cf-8564-d7f769f33892",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "20cba194-a5c7-43aa-a69d-a072b4ad6bed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed1b6c4c-d150-4a70-a651-575e7efccad6",
        "cursor": {
          "ref": "32c6fde6-cd1b-409b-8d50-e283810ad938",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "31f7876c-c994-4c1d-b19d-2eb58e513b3a"
        },
        "item": {
          "id": "ed1b6c4c-d150-4a70-a651-575e7efccad6",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "8c1be67a-f72a-4cc7-b20c-d9d06d194db8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59657e26-c03f-4d55-ba76-3070d1246357",
        "cursor": {
          "ref": "c3b4ad77-7396-4d9a-acef-a8069fe47390",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "772248d3-b8f5-4efb-9ef6-5794e6aa1b54"
        },
        "item": {
          "id": "59657e26-c03f-4d55-ba76-3070d1246357",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "2e80bfbf-d308-41d9-bab2-2a9b8e1906a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37d19296-77b9-464b-b65f-a982ac505bb9",
        "cursor": {
          "ref": "1ffd31f5-f0c1-4778-8dae-76144249d418",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "c11fa20d-ca4a-448b-9ede-c03d40d62746"
        },
        "item": {
          "id": "37d19296-77b9-464b-b65f-a982ac505bb9",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "d9184f06-d60a-4a72-ad6a-6f516673b36d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1e0c555-7d30-4899-9001-683fe68f4b2e",
        "cursor": {
          "ref": "ada8151d-c40c-4ffd-a1f7-450f8f8f8fb8",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "d4f234bc-933f-421b-bd85-e5f67afb4d63"
        },
        "item": {
          "id": "c1e0c555-7d30-4899-9001-683fe68f4b2e",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "87cfae47-d483-4c05-9581-109d62fadc47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c931afa3-29c7-4e3d-a5a2-89d66b8e9ab9",
        "cursor": {
          "ref": "73072c42-60d1-4e75-a792-1fbf3711e287",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "bb838848-700b-44e2-b5a9-bd04b3c032aa"
        },
        "item": {
          "id": "c931afa3-29c7-4e3d-a5a2-89d66b8e9ab9",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "3b7c0e78-1055-4b1e-81a8-d5ccae4760df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 108,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "484043e5-a44e-4fc4-b2c0-cedc41e2f9c4",
        "cursor": {
          "ref": "02907fb5-8042-4d77-b0e8-f73031bfb513",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "f7b08066-c2e4-42c5-8c86-6eaf90b614c4"
        },
        "item": {
          "id": "484043e5-a44e-4fc4-b2c0-cedc41e2f9c4",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "ea396d17-cb0a-4796-bb0e-2304ea489552",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a530c4e7-571f-41b9-94ba-d01fea9cde2b",
        "cursor": {
          "ref": "63026ce6-09e7-45a3-838e-d17593a9a1f3",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "f7728ba3-0411-44f9-88f2-8d7fa62ee1f2"
        },
        "item": {
          "id": "a530c4e7-571f-41b9-94ba-d01fea9cde2b",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "b1aa5c3b-0159-40b2-8513-c6fe210eeb0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "003b247a-e5d5-4f8a-9022-3a5b344a2ea8",
        "cursor": {
          "ref": "9d20c336-921e-4fcd-80f6-169876368fe2",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "1068f8b9-7ef1-4a58-99b7-9f1dea0c9944"
        },
        "item": {
          "id": "003b247a-e5d5-4f8a-9022-3a5b344a2ea8",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "1e94bf1d-b599-4c30-8ba3-64ffad743013",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "927dc1f5-1826-4471-a7e2-affb4949eabf",
        "cursor": {
          "ref": "fbd3e235-3737-4007-b94c-e9b94c85a5a4",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "b9b42d12-f7c5-458c-9b70-6e254b29c32d"
        },
        "item": {
          "id": "927dc1f5-1826-4471-a7e2-affb4949eabf",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "1065003e-9f55-4942-bf46-8ab6c7b8ee51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a277d023-7d86-4a9e-9e9b-f5f1511509a4",
        "cursor": {
          "ref": "2e159aa2-473b-4491-b94c-635cbc667a91",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "cf544067-b28f-4e16-ba44-ea097f1f7837"
        },
        "item": {
          "id": "a277d023-7d86-4a9e-9e9b-f5f1511509a4",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "9475b540-e794-47e9-921d-a5d276f54d69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3221057a-1171-4e1d-a3ee-6666aad4438a",
        "cursor": {
          "ref": "aef98f46-03dd-42fe-8488-fcdc83f675e1",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "50581b1a-8c75-4b35-9c79-0e97d7c963d4"
        },
        "item": {
          "id": "3221057a-1171-4e1d-a3ee-6666aad4438a",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "052b7972-43ef-485e-9b38-027f78384ce3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caeb895d-d618-491f-ae2a-e19893e85826",
        "cursor": {
          "ref": "aa676db1-1b99-42a4-899a-e6484d49df2c",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "dd9bf550-d9a2-482a-9632-900695bbbe44"
        },
        "item": {
          "id": "caeb895d-d618-491f-ae2a-e19893e85826",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "0cd1e348-f16e-4884-a638-e8ce7689d081",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4860db8c-6b8e-4a03-8d01-bd1786520082",
        "cursor": {
          "ref": "d2418065-2680-4834-988e-5e3549ff073a",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "06b6f219-3324-4a93-8319-379432543266"
        },
        "item": {
          "id": "4860db8c-6b8e-4a03-8d01-bd1786520082",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "4fc0e7a8-44de-4acc-b3c2-285cd620dbf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31130f83-4beb-4a16-b3ed-31c39d067c8b",
        "cursor": {
          "ref": "ceb6d494-5341-4852-9a3d-61f988025a09",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "0dba9295-ce58-4918-b424-5a1f15e1cc3f"
        },
        "item": {
          "id": "31130f83-4beb-4a16-b3ed-31c39d067c8b",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "861d6eb9-9d82-4c53-98e9-5dc40ef99457",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b736d683-cee9-4da3-8567-3dfc5193cb48",
        "cursor": {
          "ref": "4ad04fcf-81bf-47f2-a614-ed0a0f7accce",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "d17bf38f-0b7a-4e11-b2e7-8ca468f23e86"
        },
        "item": {
          "id": "b736d683-cee9-4da3-8567-3dfc5193cb48",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "1e10a8fe-65fc-42a0-8a9c-3756c635a493",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "52167c91-d24a-4fef-85ae-d42ae3a63dde",
        "cursor": {
          "ref": "c488a802-b7df-4277-96d3-1ed1fc18e7dd",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "bccce997-c577-441e-bede-0ee995f066f4"
        },
        "item": {
          "id": "52167c91-d24a-4fef-85ae-d42ae3a63dde",
          "name": "credentials_issue"
        },
        "response": {
          "id": "176bc4da-2049-4c12-85d8-6a49edae9a37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "a5cbca2e-780a-4ad9-9cb3-36e75cf70ffe",
        "cursor": {
          "ref": "2f50954a-c63c-444a-8dd0-2e7ee953b077",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "483ed22c-3404-47c9-95e7-f50b41f80752"
        },
        "item": {
          "id": "a5cbca2e-780a-4ad9-9cb3-36e75cf70ffe",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "7030951f-ed69-4851-b930-74ddb66388fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "4a42b373-d3e1-40d6-8361-d5ae2a029bd6",
        "cursor": {
          "ref": "33b6575f-fc2a-4d5d-895c-38d76974aaf9",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "0d5717d5-b5ce-48a7-86e0-9e35d612edad"
        },
        "item": {
          "id": "4a42b373-d3e1-40d6-8361-d5ae2a029bd6",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "15532495-5e6c-405a-a4f0-4db22458d3ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "1a9cf840-d8c4-447e-8b6f-fef37bf922bd",
        "cursor": {
          "ref": "f4283c92-39a3-4405-ad29-f36516f7a2de",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "8d072cad-7d5f-445c-bed6-a961d15bd6d6"
        },
        "item": {
          "id": "1a9cf840-d8c4-447e-8b6f-fef37bf922bd",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "103ccd1e-9236-4cbf-8dde-f591c966a05d",
          "status": "Created",
          "code": 201,
          "responseTime": 5956,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb5fb288-1264-4c5c-a576-c5b9cddc7c55",
        "cursor": {
          "ref": "8770eea7-b286-4872-8f5a-0c9b038f16aa",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "86409bb6-b113-49c1-8efb-86482a71c413"
        },
        "item": {
          "id": "eb5fb288-1264-4c5c-a576-c5b9cddc7c55",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "592d7391-d1f0-4a42-a3f2-370d3e2128b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 182,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "25287fcf-9848-4689-a49c-24be84ee7413",
        "cursor": {
          "ref": "ba2f4cbf-94c4-4766-bf3f-54be670a481f",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "1e1e3ee2-771a-4584-88cb-c2f926b813ee"
        },
        "item": {
          "id": "25287fcf-9848-4689-a49c-24be84ee7413",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "d3bc519b-611d-44c8-b193-ddeb7e1adc48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "4c437ac9-9084-445c-9fe0-4e4fb120d396",
        "cursor": {
          "ref": "3c4f30c7-36a8-443c-9cc3-78c21c07e8bb",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "98a23122-19a4-4a55-8d45-58eb6e46f0cf"
        },
        "item": {
          "id": "4c437ac9-9084-445c-9fe0-4e4fb120d396",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "c3ffe114-ab02-4178-898a-0032480e7e81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f33182a-edd7-40fc-a9b5-c94015e4b9ee",
        "cursor": {
          "ref": "2f4275cf-f5c1-4b8d-99c7-1b96491c4ae4",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "74b100eb-7b56-44ac-a2ec-444e87f3b224"
        },
        "item": {
          "id": "3f33182a-edd7-40fc-a9b5-c94015e4b9ee",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "d4901430-ffd0-42bc-b0dc-7491ced34b2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f729948a-21d5-4596-98ad-eb8a1de3aff4",
        "cursor": {
          "ref": "adcdedc9-575d-40ae-acf2-8799971b80b1",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "ae64c80d-cc20-4be4-9b47-88d8af6d7a1a"
        },
        "item": {
          "id": "f729948a-21d5-4596-98ad-eb8a1de3aff4",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "936a40cd-b69d-49e4-a632-0f26c2e22597",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3319e273-ec11-4c81-97a0-3fb061ae729c",
        "cursor": {
          "ref": "ef032f32-8923-4f9f-b46f-856e238315cd",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "05ce5f36-8294-4522-a2aa-750f0dbef240"
        },
        "item": {
          "id": "3319e273-ec11-4c81-97a0-3fb061ae729c",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "5baf2d58-a300-4bfe-b220-f5a4a0db601a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9596da4-84c0-4db3-a73a-67fc6de79ae0",
        "cursor": {
          "ref": "667051d4-2301-4c0a-bbe1-fae93b9aa431",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "991b746b-bb53-4eac-93dc-0751eed7c1cf"
        },
        "item": {
          "id": "f9596da4-84c0-4db3-a73a-67fc6de79ae0",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "1e89265e-3dfc-4422-b3bc-413fc5162450",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd4a3c38-faef-4f47-aed0-a528f0d843e9",
        "cursor": {
          "ref": "523f8800-6c8d-4fb2-ad49-2b0658a290e3",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "031df747-394d-4627-b685-d889e9b54508"
        },
        "item": {
          "id": "bd4a3c38-faef-4f47-aed0-a528f0d843e9",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "54e1ee05-6074-4ebe-a60b-19d27184f1e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34687d66-15b6-4eaa-a60f-3cb17535bc8e",
        "cursor": {
          "ref": "afee61a5-1499-416a-8820-b0cbedd7f901",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "4ef66242-1863-4c41-8d7c-841046ff20f7"
        },
        "item": {
          "id": "34687d66-15b6-4eaa-a60f-3cb17535bc8e",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "c7f47a77-f339-4a38-afb8-c69763cc9f39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75228daf-0601-4a15-b826-dbc1bbb3a30b",
        "cursor": {
          "ref": "b69ff2e2-bb32-4dba-8aa2-6ed1cce51581",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "7bf77654-3c25-43b9-b2df-5a364fc9ff91"
        },
        "item": {
          "id": "75228daf-0601-4a15-b826-dbc1bbb3a30b",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "a4114091-f2d0-4487-88b1-04f3a2f63407",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a149b22f-b997-4ee6-9df3-527399ee925b",
        "cursor": {
          "ref": "f3fe7497-fd75-46e5-95c3-387954dc364c",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "2f296d34-0268-44fc-9074-48a25741bfe6"
        },
        "item": {
          "id": "a149b22f-b997-4ee6-9df3-527399ee925b",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "93471552-5d6c-4e87-816a-34a4a4f9c545",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c9304fb-71b3-4e44-ae60-6a2ec27997e4",
        "cursor": {
          "ref": "f65fe47b-7714-4f73-9583-ff8d2fe53717",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "2c9f44bc-96f0-486b-b8f7-b9758bbd99a7"
        },
        "item": {
          "id": "0c9304fb-71b3-4e44-ae60-6a2ec27997e4",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "faab4e49-5b5b-46a4-9ea1-3f81a367e0dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65ba29b3-eac5-4ee9-990f-6f804f3ab2ef",
        "cursor": {
          "ref": "db9efef8-c557-4d96-8152-1176a9736a46",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "7e45ee98-d00e-4110-9106-669016ca4a70"
        },
        "item": {
          "id": "65ba29b3-eac5-4ee9-990f-6f804f3ab2ef",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "22eaefbe-44b6-4b05-8e69-d5f79dedbdbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faf63b92-5f90-4194-82ac-8d06ec24b269",
        "cursor": {
          "ref": "d0133a20-5086-41d1-96af-fe99130cdb42",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "a338e37a-59e2-4606-ad4c-9541eb940325"
        },
        "item": {
          "id": "faf63b92-5f90-4194-82ac-8d06ec24b269",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "65444674-4c3f-4093-9731-8f61cae68fb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1627f58e-14ae-4123-b140-f9c708b99bba",
        "cursor": {
          "ref": "8569d518-d440-4613-a5aa-20e8ac188f54",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "82c90013-906c-4419-9c51-fab8a6f9f967"
        },
        "item": {
          "id": "1627f58e-14ae-4123-b140-f9c708b99bba",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "94f001fc-023d-44b1-92d5-ef5713c32c99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f10f02ee-4831-4f82-927c-d8631715a23c",
        "cursor": {
          "ref": "50d074d8-cc0e-4e05-afe2-b7ed19f5a2fb",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "226873e4-be6e-4215-92c7-db91810aded7"
        },
        "item": {
          "id": "f10f02ee-4831-4f82-927c-d8631715a23c",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "dc90c690-30ea-48a3-b762-c4c21efd607c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 119,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88b3a87b-faef-4775-b570-74ed3df0ffbc",
        "cursor": {
          "ref": "d7ce63a4-56ad-4f3f-a33b-f28457d44c05",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "a5a94d82-3f20-4d46-a07f-d0b8832107d4"
        },
        "item": {
          "id": "88b3a87b-faef-4775-b570-74ed3df0ffbc",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "d9b19593-b836-470f-804a-ab4aaa4568de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 121,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afd729cd-4412-42be-9195-33bb1c9e07c0",
        "cursor": {
          "ref": "7674f1fa-1801-4118-8395-01e28178ecdc",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "bcd09792-972e-42ab-bbaa-18292c1e2148"
        },
        "item": {
          "id": "afd729cd-4412-42be-9195-33bb1c9e07c0",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "7c9f5bf4-ba04-4325-9d03-fc3460518920",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b80db5a-21cf-4230-a23e-401044a2b7c9",
        "cursor": {
          "ref": "b905c8c8-699d-4a1c-8dc0-46a8500b25cb",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "7a10598d-493c-48cc-a9ba-2c9af392a999"
        },
        "item": {
          "id": "6b80db5a-21cf-4230-a23e-401044a2b7c9",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "43e50a00-35e7-4625-ab27-d6aa8437d76a",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 80,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "99de2cd2-b5cb-4240-a96f-765137d55a25",
        "cursor": {
          "ref": "7be5e809-1e0a-427d-9c96-579329f75ec3",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "bf81ba90-459a-47e9-87db-d1441a334770"
        },
        "item": {
          "id": "99de2cd2-b5cb-4240-a96f-765137d55a25",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "250c5232-132c-4a74-be4c-c5cb0605c00f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37f90bcc-92af-4027-8d11-a25f78e3bafa",
        "cursor": {
          "ref": "a2fd9a7a-e392-46ab-abbb-7c7e8ef33129",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "6d979b69-0758-4e05-8e7e-dea64b3861c8"
        },
        "item": {
          "id": "37f90bcc-92af-4027-8d11-a25f78e3bafa",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "4f685d2e-11ce-40b6-8dd0-0e224e4903b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2aa624a-ef5d-43df-84e8-6f18d673698f",
        "cursor": {
          "ref": "18648b63-6df7-4a9c-bf86-462870b989d3",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "75069e42-cb67-45fb-80eb-71e19b586fcd"
        },
        "item": {
          "id": "d2aa624a-ef5d-43df-84e8-6f18d673698f",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "cd8d2cdb-bbfb-4dca-87bb-72cc9f7ae255",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acee0c99-de88-4798-a7d8-32dd74627406",
        "cursor": {
          "ref": "169c9c7d-5996-416d-b49f-d1a36e282674",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "233b0c71-0dd5-478f-ac47-89c5c2fb74a2"
        },
        "item": {
          "id": "acee0c99-de88-4798-a7d8-32dd74627406",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "4bcab199-637c-4cd6-bce8-c5e3c23f1d6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d18b4b27-7688-4670-9ef9-5affcbb65b54",
        "cursor": {
          "ref": "03a0218d-8b34-4b48-90a6-dcce457801ec",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "0d229123-ef20-4e26-9bdd-b9e651d891e1"
        },
        "item": {
          "id": "d18b4b27-7688-4670-9ef9-5affcbb65b54",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "cba2b3b0-53de-4986-b468-df441ec0add9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "358546d3-f86e-4302-984f-cafd3f44e3fe",
        "cursor": {
          "ref": "eb7fe0be-697d-41a1-a20b-13bed0c214d3",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "2505fd09-432c-45a6-a93a-46fc744977b9"
        },
        "item": {
          "id": "358546d3-f86e-4302-984f-cafd3f44e3fe",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "fbf53f06-a230-4e12-bc4f-7dc4bf9c2d7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cda7da5-1095-4d32-b5eb-d4b643cb2334",
        "cursor": {
          "ref": "40e2b85c-5abd-4512-9da6-439bd3750aa1",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "f7ee228e-c8e5-4c63-a6c9-5d31e9b6e56f"
        },
        "item": {
          "id": "9cda7da5-1095-4d32-b5eb-d4b643cb2334",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "a2a60909-0650-4799-b24a-55b19b6a1a3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a759791-6823-4385-9939-1f216dc3e28b",
        "cursor": {
          "ref": "b9e871ed-7caf-4297-820b-99e7c779263c",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "2baf2e78-d564-485a-aff6-181e6651a19b"
        },
        "item": {
          "id": "2a759791-6823-4385-9939-1f216dc3e28b",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "2524f1e1-1cac-44bc-b37b-5cf6aa595045",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 71,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "c668aaf0-17b6-46bf-b5d0-511ad3036d90",
        "cursor": {
          "ref": "d99af9eb-de17-4f32-a15e-a9db24d3eca0",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "46ce7d33-3e18-4c05-b5cd-d895e409c3c8"
        },
        "item": {
          "id": "c668aaf0-17b6-46bf-b5d0-511ad3036d90",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "1e5929e6-eca7-4c39-8352-84c7da4f9fd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 118,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e307d12-282a-4a8a-9d18-c4a7dd8da487",
        "cursor": {
          "ref": "e5b41825-0939-4b14-b592-a8e427b2d1c6",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "30928b1c-c11c-4940-806f-685001621ac5"
        },
        "item": {
          "id": "9e307d12-282a-4a8a-9d18-c4a7dd8da487",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "50976392-73e6-4f81-a1e0-faeecc4f9a88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75fdd165-0ee7-483f-bb78-27da3a61d85c",
        "cursor": {
          "ref": "7b8dd2ea-c04f-4d19-b83d-63912a04a8cc",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "96818e12-f3fb-43fd-b97e-11c53174f69a"
        },
        "item": {
          "id": "75fdd165-0ee7-483f-bb78-27da3a61d85c",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "6d898f21-4877-468e-ad7b-cac903aea7ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "129004be-8d73-48df-a487-29fbd90aa736",
        "cursor": {
          "ref": "eb9885e7-6546-4eb3-b887-5def34e0a551",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "6deae2a0-e99b-40ee-8893-3aba417a7773"
        },
        "item": {
          "id": "129004be-8d73-48df-a487-29fbd90aa736",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "d3bfccdf-9c96-49c1-8189-757d2f087814",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1a3be8a-6d13-4800-8c04-e4bdb446d09f",
        "cursor": {
          "ref": "23a3be56-e1d9-4ba5-922b-db293eccd31f",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "98bb4154-e1f6-410f-b403-f57e53b0d78d"
        },
        "item": {
          "id": "e1a3be8a-6d13-4800-8c04-e4bdb446d09f",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "27a24dea-cb5a-47d2-88dd-28875fda5235",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "635a7eab-9572-484d-a27c-c03489cff6b9",
        "cursor": {
          "ref": "3fbd97a3-2b02-498a-8880-d31494bcbe2d",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "9e5ca56e-e513-4d73-87e0-d21c3c7a90c3"
        },
        "item": {
          "id": "635a7eab-9572-484d-a27c-c03489cff6b9",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "445c3226-b9b1-4870-a1fb-45d9cccaf6a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ee9ef5a-7699-4675-a7b3-0e9546750670",
        "cursor": {
          "ref": "f77e5b38-b713-4f6e-b0cb-c752ecbecce3",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "636f37cb-595b-4408-8b10-4fc1c9a1fae5"
        },
        "item": {
          "id": "8ee9ef5a-7699-4675-a7b3-0e9546750670",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "a4f5bfa2-c393-4748-9a1d-40641a941d8f",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 109,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "037fa30c-e38d-450b-b629-c2e86f2cabdc",
        "cursor": {
          "ref": "ae03e4c4-dd18-42fd-84a5-5526bbc3a7bc",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "4f12dbb8-c62a-4b31-9026-21dfc6a858d5"
        },
        "item": {
          "id": "037fa30c-e38d-450b-b629-c2e86f2cabdc",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "557c99a3-ac3d-4a7f-9cba-e8b7542d1678",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e85346c7-7b36-44b3-b9be-ca39492bdcb3",
        "cursor": {
          "ref": "b04cda23-9f98-4469-a0cd-ad312a058273",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "3e8ece4b-9929-44cf-880a-43f6ea2cbadd"
        },
        "item": {
          "id": "e85346c7-7b36-44b3-b9be-ca39492bdcb3",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "86daed12-00c0-4359-9d48-94523f5259b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f4d474b-314a-433b-a2f9-de4f646459ef",
        "cursor": {
          "ref": "b7525930-1d35-450f-9368-7731dde6e89a",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "cda74269-200c-4d56-b2e5-8ae6903febc4"
        },
        "item": {
          "id": "6f4d474b-314a-433b-a2f9-de4f646459ef",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "acfc0569-d3b8-4e83-b6dc-40021a98d22a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ade6cdb-c739-4c72-afb2-12eabecc71a4",
        "cursor": {
          "ref": "7e188859-e1e4-41b7-8601-21299aa4df39",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "2f85de6f-b262-4a46-81ce-741b97951e09"
        },
        "item": {
          "id": "6ade6cdb-c739-4c72-afb2-12eabecc71a4",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "41d76ddc-7ea7-45ba-a976-8327c8f6f704",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f22c3438-267b-45cc-9ad7-f2d3adddfa4e",
        "cursor": {
          "ref": "1866e506-95ff-418a-9cbe-2c685662fe84",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "201bf440-b360-4832-9009-2af7761aa021"
        },
        "item": {
          "id": "f22c3438-267b-45cc-9ad7-f2d3adddfa4e",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "97cc2457-adfd-482f-8558-64dc27b0f9db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91639c01-87f2-4eb9-a550-247768248ceb",
        "cursor": {
          "ref": "e1601a8c-829b-4eda-bb5e-f2a32aa1d257",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "2efdadaa-aeda-4252-b085-164ba901e5fc"
        },
        "item": {
          "id": "91639c01-87f2-4eb9-a550-247768248ceb",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "6e647ac7-80f8-4966-a8f7-d56d43ea90ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b921497-ad5b-4bcd-a0c9-0cc3ffb3435e",
        "cursor": {
          "ref": "6206ffae-8e89-4990-ae03-7ceb6ea80fe1",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "b648f1e6-a471-41bd-bddd-deca7d6e09c1"
        },
        "item": {
          "id": "3b921497-ad5b-4bcd-a0c9-0cc3ffb3435e",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "b4c653e6-4cce-4473-ad68-f7a3e91ac9c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eacb5160-c3cd-45ea-a277-200a80fd13c2",
        "cursor": {
          "ref": "f7318582-4bf5-4785-ab13-f322b2ba1733",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "784be02c-808e-4ce8-a879-a3a7c2222e6e"
        },
        "item": {
          "id": "eacb5160-c3cd-45ea-a277-200a80fd13c2",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "b1b044ce-3153-40d6-93f4-e3b64a76bab3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "532c5ebd-6f0c-484b-bb6b-b2d5ef8a88d4",
        "cursor": {
          "ref": "67dcc0b3-3d90-47ca-b5c3-2ea3341ee2da",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "f993e543-9e00-4a97-a167-9e09734b9f3e"
        },
        "item": {
          "id": "532c5ebd-6f0c-484b-bb6b-b2d5ef8a88d4",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "a0588fa0-1375-457d-b95d-8f060a30fa66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ca1ee9f-f1c6-40a1-b67f-cdbf8efc9b7e",
        "cursor": {
          "ref": "16ee76b7-d9f6-45d4-87c2-dd92ccfc4856",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "2470bf85-4f68-4eaf-9705-c31771223f56"
        },
        "item": {
          "id": "9ca1ee9f-f1c6-40a1-b67f-cdbf8efc9b7e",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "ac12876e-1413-4d52-ab04-0a09a601f4b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "798adb28-ad18-47dc-9109-60ad7e35e42a",
        "cursor": {
          "ref": "46f59875-f9dd-4641-a552-fedc51ddcfd4",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "306a809c-1be5-4bdc-aabb-fbbacb3a2f10"
        },
        "item": {
          "id": "798adb28-ad18-47dc-9109-60ad7e35e42a",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "0d90ea4e-d8d5-4db3-b68d-e698b4cc0fc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d506187b-8956-447a-bf26-92b2fa0dbb43",
        "cursor": {
          "ref": "66b53bd8-f543-4042-9c55-6fcbb1d09942",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "1db32586-4562-4bbd-a424-63b154c9b096"
        },
        "item": {
          "id": "d506187b-8956-447a-bf26-92b2fa0dbb43",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "d5d33318-d880-40a4-9581-2206f8901b04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d34253b6-bb6b-4c0f-ac7a-381fe641662d",
        "cursor": {
          "ref": "d6263b93-0f67-4bb8-99be-9c45b9df2b78",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "1f0a20b2-a8d4-4498-9f7e-93b3e032e833"
        },
        "item": {
          "id": "d34253b6-bb6b-4c0f-ac7a-381fe641662d",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "4c8ae1f5-4865-4b87-b0b8-2335d1c8f9b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9737347-87c1-4971-b3b1-e7abe0a27e6d",
        "cursor": {
          "ref": "d00f1f32-b0b9-4c65-995d-2097b15ea4a2",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "46b08c2e-30bd-4ae0-980b-5caa49636242"
        },
        "item": {
          "id": "d9737347-87c1-4971-b3b1-e7abe0a27e6d",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "70e68b23-3319-477e-9578-2523ab1e84b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cd8b79f-f6f8-49a5-9d45-68581c3c294e",
        "cursor": {
          "ref": "0a196d1c-a2b6-4fba-adbd-3df691230782",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "d147d85e-6770-4a35-8469-519bb97d3f97"
        },
        "item": {
          "id": "4cd8b79f-f6f8-49a5-9d45-68581c3c294e",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "fb449929-972e-400c-95bb-d139050c83c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "286ea3ef-69e3-4f3d-9219-019971135e85",
        "cursor": {
          "ref": "26df46f8-d2f5-487e-a10b-b1264e81a055",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "190b30d9-e291-4969-88e8-0bf434834a46"
        },
        "item": {
          "id": "286ea3ef-69e3-4f3d-9219-019971135e85",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "12007a9b-3c4c-403e-bb5e-b5c9101f5424",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb2d1ef3-bf03-49b1-923d-19fd5da77a7a",
        "cursor": {
          "ref": "b98c5161-b916-4dd7-ac4f-9bf96d311583",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "fc9bcc92-5c2d-4924-8134-6e165714dddf"
        },
        "item": {
          "id": "cb2d1ef3-bf03-49b1-923d-19fd5da77a7a",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "00f85c30-60dc-4c89-bcd7-d0299a87ec9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "054f75d7-cdf4-4f6b-8587-09109e6124f9",
        "cursor": {
          "ref": "ff7d3ba8-ff7e-4b9a-876d-94f5826d9712",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "d08e747e-9d2b-469a-90f8-33013f01144e"
        },
        "item": {
          "id": "054f75d7-cdf4-4f6b-8587-09109e6124f9",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "ad60f871-973b-4d44-97c6-4fbcf650e227",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 63,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:158)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:158)"
            }
          }
        ]
      },
      {
        "id": "a2a90b0f-9390-4ef0-9a8c-d3404e05ce4e",
        "cursor": {
          "ref": "e0b8a926-da4a-42e1-81e2-06fc855fbde6",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "529229db-3806-4780-916f-6a95ddc78ce1"
        },
        "item": {
          "id": "a2a90b0f-9390-4ef0-9a8c-d3404e05ce4e",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "31cfc5f2-7076-471f-8202-be9d53fe3ca6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "392b4668-26b7-4fc3-b6bb-a75526f6abb2",
        "cursor": {
          "ref": "6277627a-8e0f-4096-ac52-2ac8828e19c2",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "8d4a9373-473c-4acd-b37d-b64a47b4370a"
        },
        "item": {
          "id": "392b4668-26b7-4fc3-b6bb-a75526f6abb2",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "e0032f74-35e0-44af-b885-ba8d57481957",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d7b054e-a9a7-46e3-a31b-84085957c949",
        "cursor": {
          "ref": "f53b19a3-8c15-46e6-a958-79bd93e98550",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "a37adc30-9a5c-40d9-91c9-8b4f6e0ce33e"
        },
        "item": {
          "id": "9d7b054e-a9a7-46e3-a31b-84085957c949",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "2e296cb0-fcf4-4be1-8071-9a1b3061d534",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6726bd24-6695-4ec7-b7e6-3b36aa0cd7a6",
        "cursor": {
          "ref": "07d141c7-eed7-4683-be47-1d9a605c77f1",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "4dfe1d1b-ee27-4e52-941f-7e23c02fa1ae"
        },
        "item": {
          "id": "6726bd24-6695-4ec7-b7e6-3b36aa0cd7a6",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "5a0a010f-09c9-4150-819d-f803633ed2ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab722fe9-34c7-46b5-9708-0b4e55db9a97",
        "cursor": {
          "ref": "f3a4252f-a7b5-4654-acde-e638fc933e35",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "e6fe5210-5ffa-4382-840e-b498f1ebaada"
        },
        "item": {
          "id": "ab722fe9-34c7-46b5-9708-0b4e55db9a97",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "c17061c1-7302-4ed2-bce5-6688d0d5cc84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "047aa1ff-6964-4a79-865d-2b25ed7bbc6e",
        "cursor": {
          "ref": "d59fed1e-7411-4993-aad5-1ad0476825f9",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "d5e95629-7c74-4237-96fe-90c75aebe971"
        },
        "item": {
          "id": "047aa1ff-6964-4a79-865d-2b25ed7bbc6e",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "8e570a5c-72fc-4e41-a11c-c7ba38519d8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fd8d01d-867e-45fa-9a75-1d4f2f508bba",
        "cursor": {
          "ref": "ff6b4359-ae6e-4b5a-8f22-313e4c48c90c",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "0502a061-6b0d-414d-b4c4-8a5b40f59b2a"
        },
        "item": {
          "id": "8fd8d01d-867e-45fa-9a75-1d4f2f508bba",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "c82e2f4c-e36f-43ac-aff5-a72113f32f76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba869ae7-e622-433d-8265-bbfc49bb3f46",
        "cursor": {
          "ref": "a3541159-bed8-4f2c-a15d-98c247feeaca",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "c602bebf-e82e-4edd-8d0b-c0dcaa4f68f7"
        },
        "item": {
          "id": "ba869ae7-e622-433d-8265-bbfc49bb3f46",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "27cb0fe7-4771-48a8-adae-ce977240a961",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 58,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:166)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:166)"
            }
          }
        ]
      },
      {
        "id": "3bd1662b-2524-4ae7-9f2c-d830e18ff4af",
        "cursor": {
          "ref": "b6e9e7a3-1810-4076-b199-c65adeb04058",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "94a66b1b-0a78-424b-80ae-d442f5791568"
        },
        "item": {
          "id": "3bd1662b-2524-4ae7-9f2c-d830e18ff4af",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "2692c3bc-9e49-42ee-93ef-67a77c595803",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12b7b28e-99ac-414d-bd6c-2d2eaa2ff691",
        "cursor": {
          "ref": "daa02173-042d-4330-85c0-7ade1866077c",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "cba4e2e4-77c8-4a37-ba44-46074da631a6"
        },
        "item": {
          "id": "12b7b28e-99ac-414d-bd6c-2d2eaa2ff691",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "39d4fd6a-614b-46b7-9046-30110973ae2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1693d197-6db3-430e-8efb-dd45fcefe95c",
        "cursor": {
          "ref": "c91a5a48-d342-4c65-8e27-9e66945085c2",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "e7dd3f00-5bf8-4390-a88d-62583f33870f"
        },
        "item": {
          "id": "1693d197-6db3-430e-8efb-dd45fcefe95c",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "3e278504-f130-4062-8385-1fdbccfcbac3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc8e3bf8-c2c3-49e5-a543-3a618c79be05",
        "cursor": {
          "ref": "3f6fb45a-8fae-4a01-a52a-6940c71e6726",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "affd1bae-6b2d-4e0c-bb20-bb330b1a0137"
        },
        "item": {
          "id": "dc8e3bf8-c2c3-49e5-a543-3a618c79be05",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "81022ad3-46fd-4a67-918c-d8cdc4e20d39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb3233c7-cad1-4b1a-9c38-9b0adc609346",
        "cursor": {
          "ref": "dc11773b-0cdd-42a7-a57b-019ce662142d",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "6fc201b0-d8f3-4f9c-9642-48bb36797b38"
        },
        "item": {
          "id": "fb3233c7-cad1-4b1a-9c38-9b0adc609346",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "3b6cac12-74bc-49a0-a279-25e2c36b0e19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43d33218-88dc-4450-bd40-529c58303a63",
        "cursor": {
          "ref": "2bb9987d-a658-414a-9b9c-8df56572400c",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "574ce2e9-0bc7-4337-98cc-1911c53fca4b"
        },
        "item": {
          "id": "43d33218-88dc-4450-bd40-529c58303a63",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "83c75f92-f707-4846-9ad6-3542ceecca83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47e3a1c7-b320-4093-9550-aa0657291e13",
        "cursor": {
          "ref": "4197c129-bc86-4cc2-b3c1-7c271d073511",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "9ff1c20d-4760-4804-b25a-c47a98aa769d"
        },
        "item": {
          "id": "47e3a1c7-b320-4093-9550-aa0657291e13",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "7406aaa7-f2fa-4d46-af31-786a5035cbaf",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 64,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:173)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:173)"
            }
          }
        ]
      },
      {
        "id": "ccd9c710-624d-4d19-bac5-94a277bc65f5",
        "cursor": {
          "ref": "35784f58-c2c6-4d17-aac7-980d389f4b57",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "70d4ca0e-5845-47a0-a5a1-5a69fb32a653"
        },
        "item": {
          "id": "ccd9c710-624d-4d19-bac5-94a277bc65f5",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "dac8bebb-a445-40b3-9972-5412e892b476",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 62,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:174)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:174)"
            }
          }
        ]
      },
      {
        "id": "dc84cf72-7816-47ea-b96d-d4554475dbea",
        "cursor": {
          "ref": "573cd831-17d8-4b78-bbcc-e88212aede62",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "b167f016-df3b-4acc-9af5-32927f59c020"
        },
        "item": {
          "id": "dc84cf72-7816-47ea-b96d-d4554475dbea",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "651b6667-d243-4750-9cdb-a47bcd656f8d",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 83,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:175)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:175)"
            }
          }
        ]
      },
      {
        "id": "36eda37c-8e0e-4f21-a449-fef9a7e11a0e",
        "cursor": {
          "ref": "f23d8cdf-3408-4d56-87e9-ed62bc53c37d",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "37038cc3-b503-428d-a887-786b7a886713"
        },
        "item": {
          "id": "36eda37c-8e0e-4f21-a449-fef9a7e11a0e",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "a6865ec7-fbd3-4747-be41-6df0a609f95e",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 87,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:176)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:176)"
            }
          }
        ]
      },
      {
        "id": "d083e0a9-2e97-4763-bae1-8ce541d07a8a",
        "cursor": {
          "ref": "6f49e297-6c4c-4e25-8817-23130017570c",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "4000931f-15ee-424d-90fb-a1867313a9c6"
        },
        "item": {
          "id": "d083e0a9-2e97-4763-bae1-8ce541d07a8a",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "2c148a45-1e5b-4a46-ad2b-7c3c997aa30d",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 74,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:177)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:177)"
            }
          }
        ]
      },
      {
        "id": "dd025019-6b02-4768-9bd9-4894dda19aa3",
        "cursor": {
          "ref": "9b88ed7f-747d-4248-b7b9-58159ba34aaf",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "820a2a9d-1273-482d-9234-03c681364cb9"
        },
        "item": {
          "id": "dd025019-6b02-4768-9bd9-4894dda19aa3",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "8531b424-d58d-4e76-9fbc-6d4f24350336",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 57,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:178)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:178)"
            }
          }
        ]
      },
      {
        "id": "d80a8a2b-9fa2-46fd-a3e1-0fd52fb93988",
        "cursor": {
          "ref": "29d414df-a823-4b0b-abff-7e801d739493",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "860f6010-2c49-41e4-9b41-e6a862ce0fdd"
        },
        "item": {
          "id": "d80a8a2b-9fa2-46fd-a3e1-0fd52fb93988",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "8212a9ae-c2e9-45c9-a45b-ccf35f7fee0b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9e97b3e-df9a-406d-bd06-61d7d0ee2daf",
        "cursor": {
          "ref": "352aa852-6a14-4941-805c-c8ccbbc12eeb",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "3bf596a5-4a50-4985-b584-d4e9c7e442f3"
        },
        "item": {
          "id": "e9e97b3e-df9a-406d-bd06-61d7d0ee2daf",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "4b0f7ca3-dbd0-4d3e-b094-9b132375ac8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3e4254d-8629-47f9-a422-57482808bb56",
        "cursor": {
          "ref": "e004347d-629f-44e3-9533-d77f8ae17d97",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "e30bb5ce-c0fc-4791-9ef1-d6e357fcfcbe"
        },
        "item": {
          "id": "c3e4254d-8629-47f9-a422-57482808bb56",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "765b2a10-e441-4418-b830-73a7bfc3766c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d20eae9-1020-44b9-b0e9-7cfc5936d9ec",
        "cursor": {
          "ref": "af1c85e0-a42b-4434-8c41-7f8a01a483f4",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "53d0126a-a80b-42f4-a5dd-b0c3bf628284"
        },
        "item": {
          "id": "7d20eae9-1020-44b9-b0e9-7cfc5936d9ec",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "5b974807-12c9-4958-8826-b72e544f8cd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ea7a21f-77d0-4f62-9b1c-27bca3748c04",
        "cursor": {
          "ref": "7b597d28-f984-470b-94fb-5682a4585984",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "2311c13f-3366-4afd-bafd-16fb2f0480da"
        },
        "item": {
          "id": "5ea7a21f-77d0-4f62-9b1c-27bca3748c04",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "eebedfab-ee84-4e32-a664-fec5fe7d5665",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59aeb99e-4375-4461-8cf2-54eee6a4576c",
        "cursor": {
          "ref": "65f0a856-7ac3-46cd-a453-2b293a539ee1",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "73609859-e284-4ce7-a26e-9689e90a1286"
        },
        "item": {
          "id": "59aeb99e-4375-4461-8cf2-54eee6a4576c",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "13898d87-fb0d-49b6-ab89-ec96121bf193",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf321a38-57b5-4350-9891-43f2506c9e7b",
        "cursor": {
          "ref": "1966587b-6198-42d2-8d21-85cf6f1634c7",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "e33e7832-24db-4a70-b7e5-adb9174cf7eb"
        },
        "item": {
          "id": "cf321a38-57b5-4350-9891-43f2506c9e7b",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "b676d510-8d3b-4507-91b8-409a630d4d9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 109,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfd6de9d-1df6-4cac-aa1c-18eaf1fc5fa2",
        "cursor": {
          "ref": "37916606-0bf0-4a80-b794-238e7da89777",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "2fca1694-2740-4a92-bde3-f758c538ce31"
        },
        "item": {
          "id": "bfd6de9d-1df6-4cac-aa1c-18eaf1fc5fa2",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "01e90387-8261-4dee-944a-e52aced2051f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "763bf556-6f29-4649-b8e0-6c3941efe011",
        "cursor": {
          "ref": "2f1aa04d-401b-47aa-84bd-a48031fa5d2e",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "12d5bdd9-4c6b-4e51-a6a1-59a356be14d6"
        },
        "item": {
          "id": "763bf556-6f29-4649-b8e0-6c3941efe011",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "2df894e7-f8bc-4bc7-9d1c-31570287a582",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63e21633-ce16-48e1-b4b2-80d6fdd535d9",
        "cursor": {
          "ref": "b82cae56-1edc-47e3-b446-dfc300daa0bb",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "2b3b0715-23cf-4c2e-b40f-fd5b03fdf549"
        },
        "item": {
          "id": "63e21633-ce16-48e1-b4b2-80d6fdd535d9",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "7cdd4c04-8fb4-45b2-b2cf-b7abcb5f7d88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "736a53aa-86a0-409b-926e-8d0667c8b75a",
        "cursor": {
          "ref": "932383f2-4e4a-4515-a2a4-da0315bc7491",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "a3bf887b-da93-4610-ae02-329f2c762c59"
        },
        "item": {
          "id": "736a53aa-86a0-409b-926e-8d0667c8b75a",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "8539e1c5-85ef-4042-80bf-078080011ad8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8047e0bf-96cd-44bd-a432-8fb8d7351188",
        "cursor": {
          "ref": "e2d81b92-11e7-4554-8646-2d75d0ce24a4",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "3fdb8c66-53ea-4456-83ff-915f14ba91cc"
        },
        "item": {
          "id": "8047e0bf-96cd-44bd-a432-8fb8d7351188",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "5910f058-bccd-4164-82c4-5f880e3ac57c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b98693a-9a24-445c-9073-7fbca27783b4",
        "cursor": {
          "ref": "8443438d-57ba-43be-89c6-edbc008fb8ea",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "be8688e8-7fb7-4028-976b-cb86b3fb05b4"
        },
        "item": {
          "id": "8b98693a-9a24-445c-9073-7fbca27783b4",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "2afbbaaa-60a6-4f62-b770-3545a52b2c77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa31f1e5-2f6a-43cc-b4ed-82ad6775490b",
        "cursor": {
          "ref": "10ea74ad-2eda-4151-8b1a-720c0f18a9ec",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "2dc84ed5-2735-4f93-a2d1-b5172f2ab96f"
        },
        "item": {
          "id": "aa31f1e5-2f6a-43cc-b4ed-82ad6775490b",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "83e639db-b3ed-4f3b-85c1-893d664fd746",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92da5cc1-5c97-4364-a079-6b47a4e782bd",
        "cursor": {
          "ref": "b1022ea5-7398-4653-a1b7-e79a8a10a013",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "8156aca8-f3ba-4df1-8bb5-ddeca57e31dd"
        },
        "item": {
          "id": "92da5cc1-5c97-4364-a079-6b47a4e782bd",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "c3aa15d8-d791-49c9-a73d-c6e33abd576f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e66cbc6b-ff47-4f4c-9072-bc46f760fa05",
        "cursor": {
          "ref": "4eaa6b79-4bd9-48c9-9ef3-aa934bdbef8d",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "3d7378fa-7b5f-4e2b-b11d-375132e38b76"
        },
        "item": {
          "id": "e66cbc6b-ff47-4f4c-9072-bc46f760fa05",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "b7d46bd5-9f79-49c8-85a6-8260b6b153d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e64f1a9-6fc9-4965-ab0b-c1583612ba2e",
        "cursor": {
          "ref": "375b700b-9784-4e25-aeb9-0bb7aa1c72f7",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "33bc03cd-851f-463e-a591-0ccb77bf76ff"
        },
        "item": {
          "id": "0e64f1a9-6fc9-4965-ab0b-c1583612ba2e",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "2dd00f67-9fb1-4172-9852-34785b5a8cea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e3ee726-75f9-4bf8-9f86-a0b4e0418b47",
        "cursor": {
          "ref": "03fe289c-59f6-40cd-a825-baf5bb0c2c3b",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "1f96fb66-b4d3-4033-ade9-1ecfcbd0a077"
        },
        "item": {
          "id": "8e3ee726-75f9-4bf8-9f86-a0b4e0418b47",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "bf2fb97f-b410-4897-a0f1-b155451f1362",
          "status": "OK",
          "code": 200,
          "responseTime": 96,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "bf840f01-b5ea-458b-b1d3-7cbb97f3b5dc",
        "cursor": {
          "ref": "9f2233a7-a590-47e4-9bcc-b46fb6ee17f3",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "059fd397-895d-4b94-800f-ff7901224f73"
        },
        "item": {
          "id": "bf840f01-b5ea-458b-b1d3-7cbb97f3b5dc",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "9c4ea4a5-e6e4-4dc4-9818-29f6665e6619",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c95d4955-b10f-4891-8a02-8a48566b8efd",
        "cursor": {
          "ref": "d2ed7ad0-b6ac-45ff-bf50-2305b9b18b64",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "d39d6e79-54f6-414b-8f08-67c31c2aac5c"
        },
        "item": {
          "id": "c95d4955-b10f-4891-8a02-8a48566b8efd",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "e7678951-18be-4ad9-a30d-4d08e60a5b53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9bbf6e2-d583-48ff-b023-0803a1e2539c",
        "cursor": {
          "ref": "b17fc843-451d-4e4a-b689-87eb94dbb6bb",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "0c73f3dd-42c3-4eea-8606-9534c33b52fb"
        },
        "item": {
          "id": "e9bbf6e2-d583-48ff-b023-0803a1e2539c",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "68c31950-e7eb-4ffb-8ccd-1322d63e6341",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bcb03fb-8a18-4bdb-a89c-5644fda76055",
        "cursor": {
          "ref": "8720f954-3393-46a7-bda8-d4b86ba3166a",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "7bcd5d4c-7798-4ffa-9431-c8e435af9d47"
        },
        "item": {
          "id": "2bcb03fb-8a18-4bdb-a89c-5644fda76055",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "bb1f13bc-00ab-426e-bbf5-bb301c2aea6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86ff2710-c5a2-424a-9d20-37203aa1448b",
        "cursor": {
          "ref": "80221fce-6ecc-44df-b867-d5f745766291",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "31971f35-ea9f-455d-aa18-2a46e2fa25e1"
        },
        "item": {
          "id": "86ff2710-c5a2-424a-9d20-37203aa1448b",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "2ff9bacb-ba9e-4add-91a8-2bff139f5858",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3695e5b-a2b5-4ad9-b532-bad91840255a",
        "cursor": {
          "ref": "90687b00-d0e1-4240-9381-7f7eb0b63794",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "852d6a88-8fbc-4ce9-9403-7f6bfffcf368"
        },
        "item": {
          "id": "f3695e5b-a2b5-4ad9-b532-bad91840255a",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "bc805169-d203-47a9-b077-c182dfc66b7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "744ea85e-5bf3-44e6-a03a-7a7ca7d977b1",
        "cursor": {
          "ref": "c05e1d6f-634b-4d28-ac79-a49be15e91c1",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "5b22a672-81dd-4e16-a032-227debc175a1"
        },
        "item": {
          "id": "744ea85e-5bf3-44e6-a03a-7a7ca7d977b1",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "02f1fbe5-7175-4bc6-ae91-2ca210bbdc84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b97ac31-d504-4e64-ba01-615dcae6668e",
        "cursor": {
          "ref": "7c1fc454-1718-4b16-a4bf-2afdf6f1ca86",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "6d4038b4-7584-42f4-b875-9d9feb8cdc3d"
        },
        "item": {
          "id": "0b97ac31-d504-4e64-ba01-615dcae6668e",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "333163eb-b147-45d9-82a7-7147d2dd962b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24385e15-a8fc-4f6e-b6d2-99d9d9062edc",
        "cursor": {
          "ref": "a393d756-7035-42f1-a921-87c589e771d3",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "aa8ba59e-abc4-42af-a743-4379cb84bdc3"
        },
        "item": {
          "id": "24385e15-a8fc-4f6e-b6d2-99d9d9062edc",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "761644ef-e96f-4bc8-90c2-f97cae041769",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b908701-8c3b-4a5d-9aee-e6c6ef5b4394",
        "cursor": {
          "ref": "cde9d99c-6482-4e58-ad99-fe50f984b802",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "629bab56-dc9a-4d35-8756-c6d0925f4d3b"
        },
        "item": {
          "id": "5b908701-8c3b-4a5d-9aee-e6c6ef5b4394",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "bc00db16-ed16-4320-b747-79c49f9f7294",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb8e4377-7641-493a-862a-ef9029fa8462",
        "cursor": {
          "ref": "e81ecb17-dff9-437c-8041-a62534f0467a",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "0f5f7140-8852-49a7-8f4a-ee53361100e4"
        },
        "item": {
          "id": "bb8e4377-7641-493a-862a-ef9029fa8462",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "0b12f20a-cd1b-45a4-b20a-7cf09422c10b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "deceb0fd-3acc-4229-850e-3b777c3d2adb",
        "cursor": {
          "ref": "84d9982e-00d4-4671-b865-1ecb747aa301",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "9bff5a22-642c-49e9-af4f-a3c17d0be424"
        },
        "item": {
          "id": "deceb0fd-3acc-4229-850e-3b777c3d2adb",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "370cc5e0-1f46-433f-a7d5-e37af9a489be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8654be95-d5d7-4cf3-803d-b6c24d8c985f",
        "cursor": {
          "ref": "2eace024-75c0-48a1-bd29-e1f220d4be46",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "0d3e7263-a040-46dc-ad76-a9199f3896d0"
        },
        "item": {
          "id": "8654be95-d5d7-4cf3-803d-b6c24d8c985f",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "9544df9c-c389-4ee9-9185-d428939ded46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f72b8206-3e70-4aaa-8313-f5c4b56c660f",
        "cursor": {
          "ref": "1f6569d6-9dfd-4907-8e83-4775825262ac",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "a7e8d50a-327a-4226-8a51-8e3201d3950c"
        },
        "item": {
          "id": "f72b8206-3e70-4aaa-8313-f5c4b56c660f",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "9efd133c-2307-468b-b8e3-b8e8cbd87346",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf116997-c8d0-46dc-9cb7-af29ee3132b4",
        "cursor": {
          "ref": "d43713b9-449d-47e1-8dc0-e40ba0d5f7bd",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "96bdbf8f-2cf8-4e53-8d60-ea7d7084b79c"
        },
        "item": {
          "id": "cf116997-c8d0-46dc-9cb7-af29ee3132b4",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "e1e72b9f-494d-43c7-926b-f014538ebaed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c695abf-5d4b-49b3-a6dc-febff25195cb",
        "cursor": {
          "ref": "adfbac96-c475-4ebe-a5d7-e6cc2310384b",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "36221d8f-70de-4141-8afc-bcfcc63ae291"
        },
        "item": {
          "id": "2c695abf-5d4b-49b3-a6dc-febff25195cb",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "0a00d241-05c7-444c-a6bb-096d3fc6b397",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82ff5bc4-cd35-45c5-a44a-5908399fd286",
        "cursor": {
          "ref": "7d714a3c-5f1f-4a66-af67-188fa5f964e1",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "2dc8fd29-d8b5-48e7-af1e-daa2d7bed404"
        },
        "item": {
          "id": "82ff5bc4-cd35-45c5-a44a-5908399fd286",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "97a038ab-b128-44df-8f9d-f5754fe6495f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "627ca1ad-c80a-4545-908d-1acbd1280600",
        "cursor": {
          "ref": "067d688d-5c2c-4c60-acf6-f088d1211b39",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "980ff2cf-d2b8-4343-8f9c-2fb7c5608f5c"
        },
        "item": {
          "id": "627ca1ad-c80a-4545-908d-1acbd1280600",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "7b2325b8-0389-4268-aeec-e2792fda6aac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83d5743a-b942-4c68-903f-4cee5a9b5ddc",
        "cursor": {
          "ref": "cc491109-eb1a-4b22-8420-6c778ea4e0ea",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "a9667b95-8989-44cb-92bb-7137e65500fa"
        },
        "item": {
          "id": "83d5743a-b942-4c68-903f-4cee5a9b5ddc",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "69ebb3b1-e8d9-4766-b12c-4ddd09f06340",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92d84076-9e9f-4c41-9dbd-f0c07bdb0638",
        "cursor": {
          "ref": "5f6af631-8e4a-48ab-be80-c8d67d7e131e",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "024bda01-bba3-4f00-99f8-670b93712a64"
        },
        "item": {
          "id": "92d84076-9e9f-4c41-9dbd-f0c07bdb0638",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "2074daff-af96-4b92-8a3d-3b4b01fad497",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eb92741-09fd-45c4-ad83-60810c27b88e",
        "cursor": {
          "ref": "6af9e57e-04df-4c9f-9ef1-c1378251e65f",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "4d1ccb4b-3e6b-4fb8-bf0d-1617bf7e129f"
        },
        "item": {
          "id": "2eb92741-09fd-45c4-ad83-60810c27b88e",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "c0b3860a-e3fc-431a-baaa-ac3ccf6c9ee1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c60cf3c1-be57-4811-8c57-fc2e9263cbd1",
        "cursor": {
          "ref": "abdd243a-2ebd-4946-9b3d-dedb36cd140c",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "3ece6992-e339-4956-909f-32319743a541"
        },
        "item": {
          "id": "c60cf3c1-be57-4811-8c57-fc2e9263cbd1",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "8bb00f87-dcba-4090-9cda-09b1ccf85531",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ac370b4-ffc2-4029-9a5a-52410a858cc2",
        "cursor": {
          "ref": "17372022-a245-4fa8-8592-4dca79d35b0f",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "f40470c3-7afc-4ed1-917b-4310839ecc89"
        },
        "item": {
          "id": "2ac370b4-ffc2-4029-9a5a-52410a858cc2",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "1eee541d-34ed-4cd9-a2aa-a097c255ea41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9f801e0-7d0b-4fec-a8b3-686ddf9d5615",
        "cursor": {
          "ref": "fa987bfd-84ac-4ec3-8f1c-0b205a120f88",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "68fe9621-8a89-462f-890d-61f98397e949"
        },
        "item": {
          "id": "f9f801e0-7d0b-4fec-a8b3-686ddf9d5615",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "44eed2e3-9db0-4d6e-812d-fd6d413925de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf6de571-84a7-490f-bf59-0e62ed5b68d1",
        "cursor": {
          "ref": "df1f8cb9-dc1a-4dc1-9b22-867390c5d98e",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "143d4810-6a6d-4529-ba62-020a1575071d"
        },
        "item": {
          "id": "cf6de571-84a7-490f-bf59-0e62ed5b68d1",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "4db187e3-4fa7-4034-b7f3-5f05e7bc24da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce5a2806-1912-4dc5-b16f-5366a852221a",
        "cursor": {
          "ref": "2a5bc9b1-f2ca-407b-9222-97fbd1b51634",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "77303409-1e27-47c7-bd90-7a2292e42c83"
        },
        "item": {
          "id": "ce5a2806-1912-4dc5-b16f-5366a852221a",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "0e27edc3-f9f4-47f4-97e1-e764f742334c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6309b8c-1a95-4f5b-8285-0ed148599636",
        "cursor": {
          "ref": "b0a890e4-7bb7-4d90-b49d-cce06ccb41b0",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "c0e8e7ac-a296-42bb-ac47-a92ac0fc7000"
        },
        "item": {
          "id": "d6309b8c-1a95-4f5b-8285-0ed148599636",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "53aef06c-11ef-41e4-9a29-ff21b4ed8077",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26cf5ee5-ee55-4141-88b7-7818f7b5c2f3",
        "cursor": {
          "ref": "d67bde87-13c7-476d-9427-e42c95b242e7",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "7d041bdb-e3ca-42f7-bd61-039f998109df"
        },
        "item": {
          "id": "26cf5ee5-ee55-4141-88b7-7818f7b5c2f3",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "9ccc1baa-64a3-4337-9d3d-5137ddc0b2d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56052290-51ee-4509-99a6-b5fc40e9fe55",
        "cursor": {
          "ref": "d54adc26-7161-4f46-8ddd-ef274b9b019b",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "9b98264d-92da-4f56-a741-bf60e5e0e863"
        },
        "item": {
          "id": "56052290-51ee-4509-99a6-b5fc40e9fe55",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "a1890e73-63ad-49a8-9284-cc7e6825d94d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1708c514-262e-4cfb-8543-612fa4503bd0",
        "cursor": {
          "ref": "1f4944ce-7c95-4670-b83e-5ea1580c99bb",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "fd5b3b58-5649-4ef0-9f61-07f94055e6e1"
        },
        "item": {
          "id": "1708c514-262e-4cfb-8543-612fa4503bd0",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "9dceaf6d-dfbf-4523-af53-6946b62d018d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30f6e7c8-8da8-4616-b45a-2055bf073f84",
        "cursor": {
          "ref": "4a87679d-f90b-4c82-9d3f-c2cc43225515",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "28278023-616e-484e-ac8c-b765349f83f7"
        },
        "item": {
          "id": "30f6e7c8-8da8-4616-b45a-2055bf073f84",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "04da3338-04a6-4053-bc17-177ff3db43be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ac25700-34a7-40a2-8528-654206a27c15",
        "cursor": {
          "ref": "c6ecb331-d60b-4067-b4e3-99e09e037826",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "cfc96a8a-67d1-4ec1-9f57-da4fc408b65b"
        },
        "item": {
          "id": "3ac25700-34a7-40a2-8528-654206a27c15",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "9667c304-b682-4365-8f19-d9a4bbf7f51a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c1b0121-2ff8-4fe9-a862-b20915d59708",
        "cursor": {
          "ref": "c2e3e0f9-2473-45d8-8832-b813c8e9ba5f",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "f1331bb7-e681-42e2-8f8e-dcb3cfcbef61"
        },
        "item": {
          "id": "1c1b0121-2ff8-4fe9-a862-b20915d59708",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "61d2c5f3-2bf9-4b5b-a01d-b4c5ef717deb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfbb9f4e-4eb4-41d2-ae65-8d55a90af4ba",
        "cursor": {
          "ref": "ba86fdb9-d266-474a-9447-59f253372997",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "2e57f680-c818-4289-b41a-5b21951e63fd"
        },
        "item": {
          "id": "dfbb9f4e-4eb4-41d2-ae65-8d55a90af4ba",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "806d47e0-bf5a-4e72-95eb-0cb9aa952c2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "821e4d20-fb2b-4d2c-bc38-a193879d41a1",
        "cursor": {
          "ref": "3bd94a19-7344-4c02-879b-05005fab267b",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "28c29fd1-baee-4fb2-a44e-8e3c258810fd"
        },
        "item": {
          "id": "821e4d20-fb2b-4d2c-bc38-a193879d41a1",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "3f014222-bc1e-4c70-9705-3af4abf48a02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "942f6740-f482-46ba-bbf2-fb0ac9f9581a",
        "cursor": {
          "ref": "4887a8fd-2106-4e3d-b081-26d4fabdd526",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "1dce6346-8999-43b8-8f09-5eeb251840ef"
        },
        "item": {
          "id": "942f6740-f482-46ba-bbf2-fb0ac9f9581a",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "0d19d514-bf94-4b4e-8dad-08b1813f929e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "626f3f67-8cf3-499e-9800-daf23cd76496",
        "cursor": {
          "ref": "2ea02f2e-2049-4a3a-b0a5-ddbd9a9179ca",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "991ac9f2-0e42-4982-b96c-c44fdf8f4f7c"
        },
        "item": {
          "id": "626f3f67-8cf3-499e-9800-daf23cd76496",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "b22bc35f-283d-4871-9204-cb4f50adcec2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c403c64-0185-4daf-b584-d705305e03d4",
        "cursor": {
          "ref": "6c1d6f9e-0c6e-44fc-9844-1efcb16e2c44",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "043790b5-21a7-4553-8aad-fd6144de4cd6"
        },
        "item": {
          "id": "8c403c64-0185-4daf-b584-d705305e03d4",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "e9bc928b-5fe9-4d2e-b17f-5cce038af70d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f0ffabb-0274-4a3b-a27f-6a7430d7d9f2",
        "cursor": {
          "ref": "83210f4c-dcc8-442e-a881-373afdb7b0a4",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "86494cf2-da25-440a-9eb3-a50dd3f0e26f"
        },
        "item": {
          "id": "1f0ffabb-0274-4a3b-a27f-6a7430d7d9f2",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "6ea67a5e-1994-4aed-86ff-d581b42a73b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e52e3f3e-6b67-4ae4-b839-8c2c647729e0",
        "cursor": {
          "ref": "26d107f3-e547-462a-8826-f658d0ecbbde",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "825cfe02-61ac-4874-90e9-c6da8b47e652"
        },
        "item": {
          "id": "e52e3f3e-6b67-4ae4-b839-8c2c647729e0",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "9f578066-3519-4177-884e-b880343d6bf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a0e0bcf-d4f6-4594-9c09-2eaa995d373a",
        "cursor": {
          "ref": "df13cc37-4c27-49cc-b5d3-ae7d5ecdbf79",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "00944862-b06d-4081-b298-0367526dfc92"
        },
        "item": {
          "id": "7a0e0bcf-d4f6-4594-9c09-2eaa995d373a",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "cc1628b3-29e9-46ec-a6b7-ab4fd66f4b95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1b40e4b-a543-4e69-93f2-030c2ea7f197",
        "cursor": {
          "ref": "fa6bf984-179a-49f8-88ee-0f2b1528daa8",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "938a8808-d58f-409e-94a0-c2a590749d5f"
        },
        "item": {
          "id": "c1b40e4b-a543-4e69-93f2-030c2ea7f197",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "edf27b2a-6aff-4bcf-8276-cbab2022cbae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a6af1fa-c9ed-454d-8fc0-9b6e7867e6d1",
        "cursor": {
          "ref": "7ea023b5-a6b5-440c-b6c4-7c9e510be16e",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "ef9fc406-7128-4d1a-90ab-1e087766341c"
        },
        "item": {
          "id": "3a6af1fa-c9ed-454d-8fc0-9b6e7867e6d1",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "72ac5d73-f4e0-4eee-a632-6f13a3c1f734",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff6d18fa-c930-4ffc-b04b-72021e7f6f8f",
        "cursor": {
          "ref": "4166d30f-fd41-4816-af1f-5f99f00f97e3",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "0c895c3b-99c4-4e5d-bdff-76265023da28"
        },
        "item": {
          "id": "ff6d18fa-c930-4ffc-b04b-72021e7f6f8f",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "b55e7e6d-d554-41da-80ca-da9d7356f628",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7834ba5e-2503-45dc-b1ba-253c53b32162",
        "cursor": {
          "ref": "1ba2cd9f-2862-4f1e-81a2-023456040cc3",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "de72707e-ad44-4042-8eb3-4bdd46645096"
        },
        "item": {
          "id": "7834ba5e-2503-45dc-b1ba-253c53b32162",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "6f886237-e8b0-4e95-b9f6-1a4cbe34d2f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08b1cff3-ecbe-439b-a0e2-8ee230b754b8",
        "cursor": {
          "ref": "be136bdf-da73-440f-bc15-a0b7a3ebd039",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "14f628c8-c1b3-40f0-95db-4a95ff069d8d"
        },
        "item": {
          "id": "08b1cff3-ecbe-439b-a0e2-8ee230b754b8",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "15fd1c30-e508-443e-afd4-ce6915358dac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3b49dc1-972d-4738-9edb-4d509748b8a3",
        "cursor": {
          "ref": "d4c403b8-26bd-439c-ae05-6e5cf9a62252",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "ca13b56e-54b9-4870-952a-55d39af298aa"
        },
        "item": {
          "id": "e3b49dc1-972d-4738-9edb-4d509748b8a3",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "4f2b2d6f-556a-4b0f-8e74-ea84325fd53e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45c3f83d-6f83-472d-8503-ef0d95c8b322",
        "cursor": {
          "ref": "47a64a64-1048-4d30-b538-9c4b6d8f2258",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "5b9f6dbc-7963-4e82-9533-86ef8bf1fe83"
        },
        "item": {
          "id": "45c3f83d-6f83-472d-8503-ef0d95c8b322",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "64308345-4fa3-4e74-ba4d-89aed73828bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3c522b2-10b9-4870-a448-e7e2c17e2dcd",
        "cursor": {
          "ref": "b7c9d2ec-6a80-46a5-bc47-a127355672f2",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "d1299328-f1d4-4dae-9327-e9028967d7f4"
        },
        "item": {
          "id": "f3c522b2-10b9-4870-a448-e7e2c17e2dcd",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "ec5e39b2-9108-46d0-9939-d5ab693b86a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b269cdd-bf1c-4394-8dea-1f5c417b8887",
        "cursor": {
          "ref": "bd180e88-a226-4541-85ac-71663cf3ce37",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "bd0c12bb-0a25-4091-9191-f3bb22ff4768"
        },
        "item": {
          "id": "3b269cdd-bf1c-4394-8dea-1f5c417b8887",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "0c6d63cd-7237-4622-9f2b-5bde0206839b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0feb23e-ccf1-4101-8803-92c0cb61735c",
        "cursor": {
          "ref": "a6cc8e0d-38e0-42ff-9dff-54be9398af36",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "d98cc5ef-2cfe-4b44-9b48-be34e95f261d"
        },
        "item": {
          "id": "a0feb23e-ccf1-4101-8803-92c0cb61735c",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "2b6a62d0-e848-464f-9e28-9ba15a997682",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "357babe2-ecf6-4510-8f88-4a1fdf336f8b",
        "cursor": {
          "ref": "a1adcdf9-9017-4e12-a7c6-78cc63ef9dc6",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "e00e4b3d-dcf8-4c6f-a548-9b5ac62fd394"
        },
        "item": {
          "id": "357babe2-ecf6-4510-8f88-4a1fdf336f8b",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "9ad0d655-f35e-4849-8662-1fcd9081307d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ea15d57-40c0-4bb2-9bfe-773089d8f7b9",
        "cursor": {
          "ref": "2241765d-2813-404a-800d-9fa8dddbf741",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "25cc2983-ed27-498d-8df8-a78f31183a89"
        },
        "item": {
          "id": "8ea15d57-40c0-4bb2-9bfe-773089d8f7b9",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "942bfe93-8390-43a0-9c32-d8b1df437edf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d822b79d-111c-4d85-bccb-2330684751c0",
        "cursor": {
          "ref": "f952424f-123f-46ac-812e-8c259a71815b",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "511831d4-a065-4112-9533-8028625d3281"
        },
        "item": {
          "id": "d822b79d-111c-4d85-bccb-2330684751c0",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "81c93d02-03d1-4d09-ba5e-b1bf8aa26a1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "528f3a1e-06cc-401c-bc9b-ba7f7a5088ac",
        "cursor": {
          "ref": "b353ee42-e723-459d-a9c1-26bbf869b5ef",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "0e1faa36-f099-4866-9ad2-26fd1237125f"
        },
        "item": {
          "id": "528f3a1e-06cc-401c-bc9b-ba7f7a5088ac",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "9282973b-7c3d-4fe8-9b68-ec98f617ba5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d97e68a-76a5-4bd7-b54b-c5ff1f98b11c",
        "cursor": {
          "ref": "4b33bb79-fd10-43b2-8f56-baf0390cd0dd",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "50997b5f-6e62-4e4c-b432-6c2259cec13d"
        },
        "item": {
          "id": "1d97e68a-76a5-4bd7-b54b-c5ff1f98b11c",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "a67af878-7e9b-4586-a831-2f72d72f4a28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27e6c585-c045-43e1-b307-a00fa4f65a67",
        "cursor": {
          "ref": "8d90871a-4c96-41d1-babf-7b6cdd42878e",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "e0536c79-28ef-491e-be2c-9f108766f696"
        },
        "item": {
          "id": "27e6c585-c045-43e1-b307-a00fa4f65a67",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "c60552e6-82ff-48f9-b19f-0eb10fdd46e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b751e4fb-c59d-4a79-9eba-5353041584a0",
        "cursor": {
          "ref": "4958fe06-e39b-4796-9604-fd6c3be053ad",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "93d0c594-1d0d-418f-9869-d0a95ad5a939"
        },
        "item": {
          "id": "b751e4fb-c59d-4a79-9eba-5353041584a0",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "1bb19515-af1b-4d84-bbfb-cb787edc97fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "049433fe-6e2f-43df-83f4-65442ba3a7c0",
        "cursor": {
          "ref": "64c39dce-42af-47f6-9ea8-d3c138d0f239",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "016e7342-e743-447c-bfc1-858b84c692ec"
        },
        "item": {
          "id": "049433fe-6e2f-43df-83f4-65442ba3a7c0",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "4aabad82-f231-4fc3-a60d-b992dafedb4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5627d34-6853-4ea5-ad18-da0148f7bc3c",
        "cursor": {
          "ref": "9e8eb87f-8c7f-4d09-a17c-2936f8910792",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "e8085b91-753e-42ea-bb4b-31be5014c52f"
        },
        "item": {
          "id": "d5627d34-6853-4ea5-ad18-da0148f7bc3c",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "9d7c5d99-af40-487e-9372-677ff3786922",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "917baf33-cead-4c70-af2c-5bf774a43f63",
        "cursor": {
          "ref": "a0dd2075-6fd1-4349-b9ab-d93f35da1831",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "db52734e-365d-412d-aa14-19c4eec91e88"
        },
        "item": {
          "id": "917baf33-cead-4c70-af2c-5bf774a43f63",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "5206b4fc-1010-4f34-969e-010d9103b1fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09ca8269-0bee-4ee9-aab8-9c9b5d5d864f",
        "cursor": {
          "ref": "8e171a15-90ea-4987-a733-450c7fc1e045",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "008778e4-f18f-4415-8469-87ac7db30bc2"
        },
        "item": {
          "id": "09ca8269-0bee-4ee9-aab8-9c9b5d5d864f",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "b90b4d5b-13a1-482f-a327-456e7ad1369e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96d1df34-5e20-49d6-802f-6b4a5bd2a1d4",
        "cursor": {
          "ref": "41279982-a4b8-4b96-8377-a06a64e9b8bd",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "e7833abc-75fc-416d-a4a2-fac179a2ca24"
        },
        "item": {
          "id": "96d1df34-5e20-49d6-802f-6b4a5bd2a1d4",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "3be06433-66d1-404c-9a85-7639e12c920b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35b49ecd-14d7-4ea9-b5e9-1d75e3073619",
        "cursor": {
          "ref": "404585a2-3b8c-4954-8401-a3554931e5c0",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "64a3834c-d436-4312-8f05-6007209c5f5a"
        },
        "item": {
          "id": "35b49ecd-14d7-4ea9-b5e9-1d75e3073619",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "5694a852-0ec1-4f40-872d-0ef8eb4f91f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23103cdf-10d5-47fb-8a7c-c14ac9888a3c",
        "cursor": {
          "ref": "c757139e-c5ca-48f9-bdf4-7573457ba581",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "c55b4484-c006-4644-b428-c38dd291587d"
        },
        "item": {
          "id": "23103cdf-10d5-47fb-8a7c-c14ac9888a3c",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "a1790428-f352-4669-acfe-b018818d839f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d776b10-3b2f-402e-bae9-b8b9d31c4295",
        "cursor": {
          "ref": "0190c6e7-f1b8-4c1a-af09-63df5f41f03c",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "acf3d997-3a4e-4159-9bb4-e50f7402f2ff"
        },
        "item": {
          "id": "1d776b10-3b2f-402e-bae9-b8b9d31c4295",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "552e487c-1e6f-4507-8cf1-021cce27a9b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50a693f2-8d48-4cbf-b04d-b07907cf26bc",
        "cursor": {
          "ref": "b9a6f1fe-dc7a-4f08-97d4-ed856cece96c",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "69bba82a-3234-4573-9e81-eaa38887b7d0"
        },
        "item": {
          "id": "50a693f2-8d48-4cbf-b04d-b07907cf26bc",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "4a120656-82e3-42ab-8a53-406f1f522ae8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b0ea2ed-08a1-4a90-ac7c-5e1116b2b6eb",
        "cursor": {
          "ref": "fab66aba-cd55-4249-9a2c-a5ed6bb531a2",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "418d9fbe-9f4b-4f36-9a32-7a641d94df6c"
        },
        "item": {
          "id": "1b0ea2ed-08a1-4a90-ac7c-5e1116b2b6eb",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "a95cf50d-2eb2-4617-943a-431e52ed3ea2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "621dc4be-42ce-49a7-a44d-81bb2dfdf1c0",
        "cursor": {
          "ref": "8068c8c9-1fbf-4041-9db8-9cbbb809425c",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "0098a430-df1d-4bff-81cd-94b84f6331bf"
        },
        "item": {
          "id": "621dc4be-42ce-49a7-a44d-81bb2dfdf1c0",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "dbb10ca1-c630-4cf5-895a-60d62f9726ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "770f55af-1938-46f6-a00f-a2b4a1aa3bcb",
        "cursor": {
          "ref": "17c57845-ab13-47df-a48f-3cb7920119a7",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "62b38ce3-5e21-4700-b19c-67930bd9025b"
        },
        "item": {
          "id": "770f55af-1938-46f6-a00f-a2b4a1aa3bcb",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "4b3baf61-411b-4bec-a097-af4ea294a262",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efa85702-4392-4db3-b62c-36c766d41780",
        "cursor": {
          "ref": "8f3ec65a-f6a4-4fec-b4f1-2757899fcdcd",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "82dcfa81-4660-4c67-b707-7c8251bd5e22"
        },
        "item": {
          "id": "efa85702-4392-4db3-b62c-36c766d41780",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "fc46515b-092a-48ea-9fcd-d55c7aefe0dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2af62f8e-3a69-424b-b517-d89d97e122ee",
        "cursor": {
          "ref": "7a01c1b1-9ae8-4376-969d-311033c33539",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "788d4955-e256-4216-9245-7fd8cb53a478"
        },
        "item": {
          "id": "2af62f8e-3a69-424b-b517-d89d97e122ee",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "5dabff3d-c784-4414-a347-78a957f237a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91092a0f-7760-4b1f-9809-95bfd789fcb0",
        "cursor": {
          "ref": "cc599001-8ffb-4ebd-98a5-0c21ec45fba5",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "2961fe66-3116-478e-a328-5ba9809f8f93"
        },
        "item": {
          "id": "91092a0f-7760-4b1f-9809-95bfd789fcb0",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "a396b3cb-308e-4078-b1b9-839bf9ac7a9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a216ee8a-0e31-4208-9ceb-ff8492aec590",
        "cursor": {
          "ref": "b20137ba-80ea-408c-b9bd-9b88d8f5c2a8",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "6ec97d48-2102-4fee-9c9e-18c1b5531c6c"
        },
        "item": {
          "id": "a216ee8a-0e31-4208-9ceb-ff8492aec590",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "19a329dd-079c-406b-8740-16f561a0f00c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60781b3a-0dfc-4787-b394-2d76519c93b9",
        "cursor": {
          "ref": "5b165265-d414-4863-8d69-91b9dd2044b8",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "59c274b9-5834-41f6-9323-9532bca02527"
        },
        "item": {
          "id": "60781b3a-0dfc-4787-b394-2d76519c93b9",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "073b799b-f961-45ad-aa3d-fcb1b751868c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ac125fe-6881-4b68-9329-7fbfdd8d000d",
        "cursor": {
          "ref": "4c3a146c-6fbb-4fed-b126-1474bf2106c2",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "63006ca8-1f16-4e54-8da4-caac554a322b"
        },
        "item": {
          "id": "2ac125fe-6881-4b68-9329-7fbfdd8d000d",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "d758f227-36df-4684-809a-5c8c70eeac11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37573753-29bc-4bb1-8798-11b2c1c03e47",
        "cursor": {
          "ref": "392d63e2-e6fe-49d0-ab4e-024efb4affa1",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "1984d747-3872-4ccb-906c-32d27a615f0c"
        },
        "item": {
          "id": "37573753-29bc-4bb1-8798-11b2c1c03e47",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "a47bccfa-bca6-47f7-8d65-854fbfd9d59e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c4d9e22-0a41-4dbf-9d27-f79d33b16b6b",
        "cursor": {
          "ref": "553bb972-3503-4531-8508-a0fb85a648d3",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "60b302bc-14a1-44fb-86f0-893ebf877c88"
        },
        "item": {
          "id": "7c4d9e22-0a41-4dbf-9d27-f79d33b16b6b",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "cbe85088-4c16-4ced-a5aa-ac23f40be8f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "422d5fa4-2725-428b-8a67-8eb5b4f7c150",
        "cursor": {
          "ref": "b881c9cf-54ae-4e17-9854-392184ff3b17",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "fe1111fe-4ba4-4106-802c-b4f58c6a5c38"
        },
        "item": {
          "id": "422d5fa4-2725-428b-8a67-8eb5b4f7c150",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "7dc074e1-7b4e-418c-a850-1131c89bb855",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62f500de-9dea-4f68-b89e-977836676f6d",
        "cursor": {
          "ref": "f334ec4c-2250-4c0c-90f0-2562cc791f0a",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "659b451f-4a68-4019-90c2-7afdb43b0b8b"
        },
        "item": {
          "id": "62f500de-9dea-4f68-b89e-977836676f6d",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "894a7b1e-60ad-439e-a199-0e93e5a7c47c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53af8f72-b138-4fac-8d7e-970965c6072d",
        "cursor": {
          "ref": "e47e5731-e75f-4a67-b2c8-2a11fd5a5795",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "051ff215-b8b6-44f0-8667-6dad30173b8b"
        },
        "item": {
          "id": "53af8f72-b138-4fac-8d7e-970965c6072d",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "2295db9f-baba-4ed0-a68f-974779d8df7e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97ba379e-2499-4231-9e24-3baf6fd26f5e",
        "cursor": {
          "ref": "ecfc0aa8-2f83-4b5a-bee6-28bfa378e3fc",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "012e7357-9fe0-44c7-84af-e3aaaf6fa3f9"
        },
        "item": {
          "id": "97ba379e-2499-4231-9e24-3baf6fd26f5e",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "f7b2e831-021e-4e93-a9dc-65bef4d49e9c",
          "status": "OK",
          "code": 200,
          "responseTime": 82,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a1bcfbf-8944-4420-ad44-a7176ea82f67",
        "cursor": {
          "ref": "2a6430ff-7d9f-4a13-9e03-41ab371aee3b",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "b3a86c72-e463-4906-ae9c-5922c320124a"
        },
        "item": {
          "id": "9a1bcfbf-8944-4420-ad44-a7176ea82f67",
          "name": "credentials_verify"
        },
        "response": {
          "id": "b84fb745-4d0d-4171-aadc-54cc8f33eef0",
          "status": "OK",
          "code": 200,
          "responseTime": 3084,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b362214-0342-4aee-887d-51bbe027243d",
        "cursor": {
          "ref": "38d28309-c992-4584-bbbe-63735d539d84",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "3e72979e-e849-4d04-be72-f0d8669635d3"
        },
        "item": {
          "id": "0b362214-0342-4aee-887d-51bbe027243d",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "c7aa65d0-a35b-48c0-9ffe-c2a60f6fd82f",
          "status": "OK",
          "code": 200,
          "responseTime": 3222,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "108f8903-81e9-4776-987d-49014d6074a2",
        "cursor": {
          "ref": "69beeb14-d815-41e9-9b5b-2a8c4c064ee2",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "54957cd2-62c8-42ca-8927-9c6c4e7985fb"
        },
        "item": {
          "id": "108f8903-81e9-4776-987d-49014d6074a2",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ba3cd06f-cf9f-422e-aed6-47c90b7a6604",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "108f8903-81e9-4776-987d-49014d6074a2",
        "cursor": {
          "ref": "69beeb14-d815-41e9-9b5b-2a8c4c064ee2",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "54957cd2-62c8-42ca-8927-9c6c4e7985fb"
        },
        "item": {
          "id": "108f8903-81e9-4776-987d-49014d6074a2",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ba3cd06f-cf9f-422e-aed6-47c90b7a6604",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec2c7fcb-320f-44fd-b39b-3aefc467448b",
        "cursor": {
          "ref": "ca4c39e4-edd7-4c5a-b38b-19494d51ae78",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "39b71a42-26ca-4f97-bb62-8359b0a2c556"
        },
        "item": {
          "id": "ec2c7fcb-320f-44fd-b39b-3aefc467448b",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "d1b41fe1-a628-41ef-9303-66d3ca5ac952",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75af5440-4eb5-4507-9ddd-0c82b4a774ab",
        "cursor": {
          "ref": "aa102231-2dcf-4fdc-9551-37ebcdda9c61",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "e166ee70-1a2c-4ac5-a85f-84e9146f210c"
        },
        "item": {
          "id": "75af5440-4eb5-4507-9ddd-0c82b4a774ab",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "2037fd61-aaf8-4612-be83-1501f742550a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}