{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "2cbe01ca-3749-4f11-ab75-7d565e2355bb",
        "name": "Clear Cache",
        "item": [
          {
            "id": "bba81c17-b357-4ed6-bae9-9cb5304ec9de",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0a42e00e-16b5-4893-ada1-3157436983d0",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "578f3fc1-a423-4e47-ac85-4c30a602de30"
                }
              }
            ]
          },
          {
            "id": "55969d01-a7ff-4f25-beb5-582f9b422541",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "dacd2743-5244-446d-ac56-674f66bc3316",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "63dd74aa-041f-4ce2-ae0f-597e11aa1995"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "2d5495ec-0dbf-4495-b828-31f0c4e1a3d2",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "1c3035aa-671a-428d-aea3-9e26b911be1a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "bce5191e-272e-4db3-ae5a-eb39efb72f6e",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cb281e99-d096-4190-bf9d-9d65ec3030de",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c16b584d-a971-4a73-8adc-72eb1c849de1"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3bd27622-06e2-4906-83ff-d0f452a4885d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5a3533d7-21b3-43ce-b267-b2bb3a5f62c0"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "379be4d3-5b93-436e-8c91-ad7a7038e20f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "060e775e-65c3-4f56-ae38-3c11b96ea941"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b46b21bd-dc05-4e84-b90c-1e8affee9321",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "2a9b3109-a70b-4047-8ebe-7e93c8fe7706"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ef213d25-28c7-43e3-be40-46eb5ca4dace",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1619c1a3-6e1c-4189-b640-e713fb9bea65"
            }
          }
        ]
      },
      {
        "id": "fe10f2de-ee33-405e-8a4b-50b8f684356e",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "319e7d1b-b08c-459d-9745-2c328786dc95",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0e1dddf6-a290-4895-9b01-2b0b220206f5",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e8d81e9d-d05d-4395-8684-548096ab8aa4",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68a169bd-1372-4246-be9e-f9648c7f2d67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d7069e6c-5dd3-447c-a46e-b74e0f581f52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "505210af-190c-43b7-92bb-5d4ed5329fcc",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca2abf90-57ef-4711-8b31-bf0665f449fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b4467fc5-dedf-4c89-8213-188a95200efc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b04ec3dc-b349-4253-a377-653963981868",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a678df84-f9f0-4188-83bb-a0eb7973216c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2a131116-dd9d-43d9-a368-77e1cbe59c32"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "23901f18-560e-4a10-b04c-8fa8c5ef2597",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2b848749-476b-46ec-b7b1-5e25dbbdb518",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e663d159-5f09-4c52-9e62-d527a76d134f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b26e526b-ea6b-492b-be24-42fcd549cdc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbd3292b-465f-4161-99db-023da73f205f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e80b1ff3-44ff-47d9-a9b0-d9e84ef1d4b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cd8930c-fd10-4612-966d-cd330ca591be",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e485c0d1-a3d1-4920-82f2-f4cbedb7461d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "66b9cc4d-31b3-45d7-b4c2-e54061d45971"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35c24acc-cb95-446b-8890-364352070bf7",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "d92c1994-efc1-49ea-9aae-b85897089c9f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "0ff6a930-ec9f-4747-9ff8-a7986ee0d475",
            "name": "Positive Testing",
            "item": [
              {
                "id": "35cf3519-72d2-40c9-8375-19cce5071467",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8c280f67-76c2-416e-a25e-6a9fce2331a2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "de2c8789-1406-465a-aec2-ae68c22cc2a9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "01f28696-0b3c-4a79-bfc7-becc4d0443eb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "ae0c2d04-4acf-48c0-bb3e-0ebe7b00ec53"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0070f60e-a6d3-4fbe-a282-544acdd5dec9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "473ee0f4-2c52-4145-a4b3-4eec845126fc"
            }
          }
        ]
      },
      {
        "id": "639598ad-171a-4c34-aa78-04365e1f1935",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "824a4226-26e3-4997-b48c-b363ca127240",
            "name": "Negative Testing",
            "item": [
              {
                "id": "eb6909c0-4395-456d-a75e-cceb4b5b0a4b",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "4dd7e615-ab7c-4348-a11d-b91320177a57",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1086206-6fa0-43ba-9b55-429f049b8f83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1930dc19-c22c-47d1-b682-75e0959bcb15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42e5c68d-c436-45e0-94b3-8280b5bc518a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "afa496fe-29ad-4320-9baf-e78c827be85e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc8dab00-5b87-44d1-94aa-47cd0b83e677",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67e71066-e6fa-45ee-b3f5-911e786e931e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd2f1ac9-9c2a-46b0-97c3-5202bf3f790c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdcb1584-0560-48e3-b359-560f4099cb86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "987d2dcb-166d-4dad-b91f-d0859254c176"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c72db586-e1fa-4153-adf6-9ef194d61e73",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45816173-6b96-492d-bcf2-c673e0edef97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb786a23-8f84-4b12-961f-3e9fe01944d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdc70d59-ba21-468f-b456-917d1753137d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e759adfe-68b0-49d2-8aa6-56f58a1141b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "204cea59-ac93-4560-8a7e-f000181c6b60",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d4a15ea-9615-49e4-ad49-1edf3f44d2f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee0cb442-46f9-4f92-98a0-3d77ab54b510"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fe97cd5-10c6-4e1e-ab61-b6e8f81f2972",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ef006e08-8dc9-41ee-83ee-e82da8369fe3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c71b55bc-b342-49cc-b6a2-820e445bab0f",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7082124e-fff7-4e63-a25b-b47cade7803c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f3f9113-ae9b-456f-b1c9-db027a8f0ab7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6aa2de1-8a19-4fe3-8784-c0ead460d7c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8e36ec9d-1198-48c5-bafa-faff1c068dcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2cf59e8-9fb3-4195-91e2-0693f32f43a0",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f65f36d-a95e-4893-b63d-5fb4dc8609c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c09afb9-ff84-451e-93da-ba3f12a082e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ab7bc39-7a20-4140-8f8a-379c8199e649",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c77bd712-9263-47ee-94ef-c29b78dc1157"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83199308-74ea-4c79-8dfb-7b7e1a21e0a0",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dbbbc6f-14c5-4a1b-b40a-5c38b44f9065",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "381aa3a3-898f-4629-a2d6-46184499062b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cbc5154-c904-4e83-8395-8601e5698c83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7c31387b-b5f4-4fe3-9e21-d9d0637512da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7dc57e1-5d70-4f86-818d-7b4b82d40b75",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6fda243-3bf8-478f-ad25-b410fd90a22b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65c031ec-654d-4a6d-b2ba-a2d54899f049"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "924e4470-1c42-4784-acae-c9d95f978700",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "41c62cf0-ed6d-457d-bb85-288166c26b87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e0e209f-022c-49c8-a0aa-e28c8dfcab1b",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5e00c84-80eb-4fb1-a1e8-d79e3c06c0a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a2d7b1c-04cd-4072-aca6-8dbdc16310db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6efe149-6cea-4c29-afa2-9174b604f58e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6547cc6e-8a97-47ee-99b2-7f43b7860073"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99848e28-135b-46bd-a639-81add38793bf",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f1dd09d-ada3-4f8a-85f1-aa12f80c3e42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab92c18e-e12b-4f5b-963f-ad034bc1457e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "011c0e0f-0234-47ab-a380-229646b10aaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f0029b1c-c49c-4868-b06f-678b49ee4f20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e85c02c8-9e04-4bf7-87fc-b1c7580df59a",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a2c9b0d-cb6f-4572-891b-3a1c20ae8562",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6847ba5-6a03-44b6-99e7-bdad344b468b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35e50135-1755-4fed-b263-429e462fe84c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ee781c55-43fa-4676-9dcc-03f130ae51de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa637c80-40bd-417b-9180-83d3fc9803fc",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6119dbb-8ced-4921-bc1a-e158428ea5f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d02a229-3211-4976-9d26-e55cb40219d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "268ae2f3-8ff4-4be1-bcfe-0429609ed167",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4a3e51aa-04a0-4237-b110-124441ac5234"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28e72067-5f94-4d38-9634-696147917622",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ce358bc-c64d-4bfb-82b5-db4450455e77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9b11a41-098f-4756-a4d3-621540644695"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99287d78-fcfd-401f-af85-7c66226f823d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eaa46d56-2cc0-42e5-af70-f0bc3747543f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ba6b6e7-e620-4516-baa2-7f1efd1c4ea4",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b452eca-70b9-4557-bf9f-ca82b510d071",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6152b6b-ebc5-4cab-a0c5-0f0aff115460"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c9205db-56ee-4938-9471-9cebcd883e3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "74e71963-6c68-463f-adf7-864aca923711"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf486c59-ac9c-4fc4-be7f-59b0aea8b1fd",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9a7536d-c8b9-4cf1-a1cf-2bd756a088b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ada2c5c-d250-4527-a5f7-a2471515854b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71077cc9-dfae-4211-a9e5-3264b3fdc11c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "287eb1d9-9219-4134-8849-61cd1026dfbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "def055e0-8e0c-46f5-82a4-afb5937ac00a",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4177da97-2a03-4f18-80ac-b1d0455cc0f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fbb4313-5028-4658-825c-f8450e09e140"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9452bdbc-8358-48af-9c92-81bfafd40538",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "10c1295e-b7ed-47f3-b743-531a72639ea6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ac877e9-d808-4b2c-b7a5-2578f27551b3",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e080230a-8238-4c6c-917c-12a695ee49e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0991e94-7d77-48c6-9e9f-6508f7804f24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfca14f4-1bf1-4f5c-9b11-4a67be6841a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6c330415-7fad-4868-b809-7825a6ddfa5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19b2178e-28ba-438e-aa6a-df8d0352a780",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0601df3d-7d52-4acc-940c-00e2671e0752",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c3ba402-9cb1-459e-b5f9-4f61fb548cba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f19a36e1-90e0-4372-a5f2-783e4227f4a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a52de31-d1d2-454c-8985-74fc92e699d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "661969ae-acd7-42cd-8fd1-87ae88025f6a",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7b7dd23-93ad-428c-91ca-4443d0bf993f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c0feb22-4b56-41ee-a6d5-0098151efbe9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03b0084c-55eb-4e18-b103-f0e34e0c566d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba688774-0435-4afc-a10e-1a3d34e2d75e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b89c9b8-5bbd-4579-a907-aa7fe4328066",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e69dee8-4092-4a02-9421-7b23ee9f615b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2823733-6f0c-4625-9ea9-49f8fab751d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da9d1a2b-c8ab-426a-835b-06e9c5594e70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "28705b2c-85d9-4de0-914b-544754d2498b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "710a87a0-42cd-4dbb-b6eb-4f4d4e699c4e",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43e15678-6024-4a90-8000-58f3c9a40106",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2e0a0c4-47f4-486d-ac41-6d9a93c0fe48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddc50d49-c725-41e4-91f4-af746d7db5d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "67ce798e-9a73-4ec4-b100-fdc9c5843cdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b97c54a3-2000-47ad-8bf3-1bb5c8a08832",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27ffee33-dfb2-4c61-ae82-8d9376c7f32f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47484232-a995-4692-839c-1b2aefb0132f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ec0c032-5706-458b-8796-22fb500a2834",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "46cf6f25-d328-41e8-9640-ef777d242105"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad04b1e4-ec83-43df-a000-1922b8b44eb0",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a5c937d-0a57-483b-b5ff-d4b334152893",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "668c865c-2ba2-4184-a509-88a539f90454"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1a03853-4ef2-4a2c-bdce-8718cfc173a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "67a8ced9-83ce-4850-ae0c-b99abb9fcf1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4611bc53-7b88-40c7-94f6-61fdfd437545",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a19cfa29-3f6e-4529-bc41-c68e5cf5952d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9bdc96f-d7cf-485b-87ad-2943007410db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1378f70d-a23d-4402-8f04-225d1fbdbab4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "5eb70e7c-91bb-495e-b0fd-ac61a1a156b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e8dae50-1967-43f5-a054-a2ba1c11cca3",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "457ae543-3922-4725-a0fe-109f5e3a404e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c3f3800-b134-470b-8787-3cecfea772ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fad7f5b-4471-4dc7-9871-6992a3f1f884",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "41fbfad7-858d-4580-a925-18298f4775fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac4a7156-0678-4afa-87fe-d1190101cadb",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb9acf1b-9fe6-40b7-8e3e-1f3156d84a75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9799e98-a2ca-44ec-bd8c-61e5de08ceae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "394b8318-9f36-43f8-b353-77d370056211",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c127c16-d6a5-41cf-8caf-95aabb0f21f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a5fb508-8d92-437f-a20e-d825007d916d",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e9ba11f-1ec2-4965-9f6a-7767147d3be5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39c74f33-a82a-407c-81fc-45f1425c4718"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37328bdf-7325-4e6d-b63e-876315610ea7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e509296-11b4-432f-9193-16ca62669938"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15df0dbc-d141-4610-840d-34aff2f4ef47",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84ffdd9c-32aa-4b37-b73a-ce34471f89db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b638f197-7597-4802-a542-1dfd54fd1039"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba75ef9b-f3de-4b97-8fd3-a3b67c5588a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4e8ee46-40a0-4626-af56-02afa1c9cd7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6797be4-8d9f-46d5-8d94-c30c5544e8cc",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0ae4fc5-2022-4efe-8f11-c617ff6ff54a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eda1e848-e5e1-4a41-9841-4d9349320563"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc0f689d-6bce-4582-80d6-49aa79b59d31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d27073c3-762f-4050-a014-17176fa090ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0fa250e-032e-4d2c-9da5-ce2efb1414a7",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c996e15-269e-4caa-a9ef-1683f89e15df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7aa6c438-4f60-43e6-b150-fb5f31276c29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f53f99cc-1664-4ed8-a788-4601786fbd9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "5d113ae7-eef2-45bd-9992-c61644d7b8c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a39c4cfc-9278-4fe0-bc03-5c64fa457edc",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "085a61a3-dcd3-4e8d-acf1-3e03141de7b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d580107-f059-4f2d-a027-a6d2f225fb38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "667f53f5-9c17-479e-b859-892a3885587d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3ec0657-28d5-4f78-90b3-b26f3552044d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ab769aa-068e-4523-b16d-283b87125eb2",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "762832fd-0d4d-413d-b28a-1ab2f6966ba7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bb19773-a3a8-4988-ab18-e77b18eb7bae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28880b6a-aa46-4bc2-8b8a-39c9e0295176",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "854b1017-8741-4cfa-ab25-fe2148822948"
                        }
                      }
                    ]
                  },
                  {
                    "id": "547c99a0-ebf1-4e46-9dc7-056f6386504e",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07e41107-1797-47d7-ab46-0b8e0b29f8f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "264866b7-6900-43fb-8733-81361a6d08d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4614dee3-a200-40eb-9352-fa5cf8384993",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d633665d-d7ea-4d39-979d-d3d2a6316272"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e65361b6-d8b8-4c54-a4a9-a0044e209103",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "697d7f30-8014-4683-8457-cf02b5c822f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47898355-5472-4af8-a777-ca8d35baf8bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73e2298e-cbe4-4778-99aa-17320758ce01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4836b1d4-b1b6-43b5-8448-28ed5ec41e7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8f80879-c28f-488b-90a8-ceeb8116d9cd",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c58e9b6d-5752-4759-9511-11c217f77d5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de63767f-2b04-46c5-a122-ca8f16960e41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd1e80f7-b81c-4d99-b92f-5acbf059d726",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "dadf0b06-c7b9-4178-8f77-d6242d347490"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e73e4c6-42d6-466c-bdda-3ed494d0d37c",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6abb3187-2ffa-4e5d-8d24-7e8b9a5d2e69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ad55b064-9e45-47ed-97f0-7fd6daef5e2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d024b56-6472-43e7-b42f-b5856fc04344",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "394d8202-1fac-47cc-acad-835871b97648"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5737186-f7ac-4c6f-927a-ef8d9ae6a6b8",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72d21ee6-fca0-466c-9ac9-be8a828724de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c9bd143-e760-4ae3-b0bd-79a0ba1a6937"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cb9b020-7558-4f6c-ba49-7d8a7266d55e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e9367377-5625-4695-ad76-d5f25392bb1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6275f3cb-9464-468e-99e5-d29720346778",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca4491be-284c-4661-a871-9b35b4be9d21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0237ae1b-1678-4f5a-9c15-808a323c227d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b585770a-cc93-447f-bfbf-53b227e9923d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "72a841e9-e0a6-4ed4-9485-33aea932c030"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53f76787-3f70-4d5a-8e49-109f4f812aad",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a03653a-f2b5-44e6-8152-9aa70f2f2958",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07e9cd85-a68e-4fe0-b3ec-79bca5dfd210"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b6bfeda-c1f0-4dfb-8668-e1926da535c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d23c72cc-4d0b-4676-b7c3-cf39ee762879"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdba5e9c-61f8-421f-a5a4-201b132e1a3f",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d13564c9-c272-4c14-a276-a8e3f1939eb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5861eb84-f745-47bb-8c64-e57520708d0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7efb5b52-f37e-43e8-a992-a3a3d22cf202",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9a00e3ab-a23e-44d0-aa41-2caa33b4c6d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48150b70-b7a8-4f3b-8956-306c9e295fc3",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "645b06ef-2f64-41b0-ab14-2a8eb37b2b3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc4b3e0f-4a25-4bd3-a3d6-8504c6d59206"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98354a25-7e92-428f-a7a6-485a0346c086",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "24a809ff-4dba-4a29-957f-70588604a837"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ae44e42-95e3-4476-ab41-8535ffe1c380",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eef68957-4059-4dbb-ba97-f0cfcbe8677d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "daa882f9-2c0d-4a5b-81b5-079072367ce5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d67e184e-1a72-4882-9599-f58a6e46d37c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "091ed812-4705-430c-adaf-2d194bc8a654"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c909514b-eb86-44e3-a76c-edf3066ae6a0",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5292fc21-885e-4422-af9f-5e730d5db775",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4645cec1-a260-4176-8028-8eab62cd5298"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73a9a7fa-6c26-4b50-8e0e-e2ff1ae84a5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "dab7ac64-8296-43a8-90a5-6e724775cd1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b535ffcf-b322-45c3-b46b-1305cdf93f23",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "968ead37-e7d6-4d55-8a2c-6545669bdd04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f90d4f87-a359-4e2e-a9f3-09f096c3188f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7079a360-5ab3-4027-8c08-89826945581b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a7fc270-8c09-4f33-9a96-ecbd20ae885d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12f98b8e-8ec4-40e3-b3a5-875f120d7d73",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "faa025c1-5f69-44e5-89bf-01cc8281c81d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b380779f-a5a1-442c-8ae3-47e315f005c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "947a693a-3d18-4b0e-96c2-b7a546d3c57b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0dc84b99-6a22-40f4-be1f-0e71c7d34b11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a902a16-0ba3-4c18-bc47-3dfcf896edc8",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8971a474-6051-4dc4-bd99-60373b3e3929",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "341d14ee-c528-4cd7-be6c-8682dca69e48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fbc61db-0e46-4bdb-85d6-f19af8c46559",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "313a77fe-fb84-4818-93ce-e55aa040cccf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5d6dc80-61c5-46d0-bef9-4dffb6101eaf",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8f7b6af-ad17-4d5a-94f5-ccfbbcb15151",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bbe39db-bb8a-4bf2-af0d-f015591442b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ed3d213-937a-4ed1-a8cc-42d91876eeb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab4e0c47-5cd1-4df1-9357-2f52c5be04da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7cebc83-a5f5-4398-87b0-44d94244f1fd",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "494b204f-1d46-4b39-af96-67a16d490bef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a9feadd-9d55-458e-9437-76d279d95c77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a54b4ae-d07e-4792-adeb-7dfc0e11a89a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2644ca25-5c7e-400b-bae9-6ad3f65a043e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5010429d-82e9-4762-ba15-9adb26fa9869",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98527d8d-86f1-41f0-8b2b-6b3f731254d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f811c12-33c0-47b3-8119-9ada1187c391"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68272d75-0279-4bc4-bd83-3820785293cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9f51a76b-4920-4d99-895b-de98680e1e44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e5a6584-4108-47a2-9a8b-a106237c9d8f",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cc22940-a538-4cc0-99d6-dbe53f5b04c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8423c4e-ce3b-4856-a7b1-1c492d4d2614"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0160706e-9e48-4abe-aadf-35dfbddcf997",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f29b0264-ad41-430c-b86d-75b9bf66747a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f1c9df8-fd25-4498-84d0-213f7fbc4b08",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a887d93-2b11-4d24-92cb-fbf2c66a6850",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60fe2505-5f0c-4176-a616-d453d0f7a20d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58b986b8-528d-4eb5-994b-e11bc89ec3ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "57e89d9f-d736-4481-aaeb-e099a563fe58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78680570-012a-47cf-ae7d-af3a741b7d38",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3cedc4d-c842-4031-b4ab-d05097686218",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "431da134-3432-48ce-a714-e0513ce9e2f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4b5f495-83a6-4071-ae31-8d2b34f42988",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "09b1f87c-bd8e-4c48-a8ed-3abaf26f9727"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab4f504b-a4a4-4b17-a75e-c63ef74ff76a",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85042a19-95c9-4108-8321-4d303b44cff6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "678bb8cc-db2c-4a7d-af20-b66071f849a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f492bdd-b5db-4389-ae9d-eda64186a555",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "02cbd794-1d86-46fb-b3dc-18f34a0a4314"
                        }
                      }
                    ]
                  },
                  {
                    "id": "093bc27a-4ddc-418f-8593-a86d898e8d20",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad672d36-2f93-4187-b9b0-f18fe5717392",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03fcf173-9271-4705-8bd2-c4e4946b2f0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db69a295-0149-4498-8a54-203fa48903e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a5b100c-22d7-4e51-8aa8-c7421a8377a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e92f438-4cd0-4168-9376-b72bb79b3321",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6dcb6c6-803a-4bfe-80a1-f932f3ea7e9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b59861ab-cab4-405f-9172-816e45d1ad53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05d95dd2-2a67-4185-ba26-c4805b9f76ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8193069a-430a-4808-b346-eae2f8a9f2c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "517d0518-a342-44d5-9ba7-c2a5d6ea055f",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a6cfc29-b9d3-4c4e-9fe7-00d1c6babf26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcc4557d-f5d3-46e5-9180-2e56b49161e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec86394f-56df-40a2-80b2-96b9d5f07d0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "7210b124-a61a-4330-9c9a-268e7cb0aba2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b19df18a-f77a-4a76-8be4-84cc989d943d",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65a07189-4a39-4f3a-96ad-67b1415f4ae0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3bb22c6-8535-4dde-8a69-97e264142f51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2654f6bb-63bd-4825-b6cd-231569261582",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c0a58eda-cb6d-45d6-a725-f37e8a85a8fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a8b185d-b917-4962-90fc-90e64f8d8056",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f88fe085-92e6-4d6e-aa3b-15c4289d579c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55516872-d8c1-41cb-8aa2-10c0e374dde5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a63ab89-2047-4c77-a358-7f310f5c60bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7f63a93a-776e-49dc-a1b5-f84b5d0b2765"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac5c28f2-3b28-4715-b354-4dd6c94c644a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "922b728f-b1a0-4d62-b3b4-071bd2b3f5ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bfd979b-b3c0-4e86-899f-39b05c68373f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ffa70de-01ab-46a1-ab1f-869ba3d44c8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "bcc46fc7-8185-44dc-89ce-763e17adc8b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5998ed3-1c0f-4d3e-a126-ef712bb266ff",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a64c1e3-76ab-4135-8e3a-353b17918a4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb1439c3-1919-469f-8c76-b5f7e5244560"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3226935-6a60-4bc0-a679-675142965ab6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "58b738c9-107b-426b-8087-b1935b850089"
                        }
                      }
                    ]
                  },
                  {
                    "id": "427f0ee2-1f4d-43a0-acab-8afcbf001275",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "098d7df8-d287-4c37-99ec-ebc0c54b5d80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78fce2bc-8c03-4f76-acea-5a712b875b16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "515c6bbe-c005-49cd-b373-a2bd586b83d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b7714a78-4735-480e-9398-1d94c4c972c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97626a75-8c4d-4908-bb66-51ba95a82ff1",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ffdabb3-292e-4d73-bf40-a8b52ed4bd75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "318a004a-6106-425a-8049-570d9d0fc2ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3561ed47-f334-434b-a37b-84a4cb9b5c59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "0adda5b3-1944-48cd-ab30-7c2f42e00042"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af9d82e9-e576-4694-b9fe-bc419af9c559",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "635159db-d570-43c6-8c14-6da896add1d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3a8a636-2011-4df0-a752-52eb8faf367c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9f3dbad-f216-4893-b2fe-b9da6775efbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5c3570c-c6ff-40b2-9c3a-2e155eb309f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd16aa41-f9ba-4466-9550-61c9cf29f9db",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9c64743-6b6f-4f14-99b2-ffddfd11823e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78f0942e-4350-4642-b1a7-be3bc3b055fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2bd4a67-91a5-45b7-8eaa-347bdad3de51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fcad0e81-6f8c-45dc-b204-089ca2c2d432"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e06cc71f-ee62-44d0-907b-a1ad5e24374e",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ecf0fba-deab-4fcf-a7a4-40248386ec62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bac308c-0cfd-482e-9682-1eb1f23b7194"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91446df1-4b84-4162-bb97-07655d43ad43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "eeabd8cd-d909-4188-94b6-3eae58a33ad7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41934471-1193-446e-bb54-d334a1bc4757",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3b31293-41e0-4cba-9a73-a2838d6d0e3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a04e4239-674b-4b11-818e-d71848728546"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "953f8d10-84c7-4889-aba0-ff71213bc016",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2bec52c6-8d33-4149-96b7-33c440f3bbb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44c23401-50b5-4b66-bfab-55a2c3143fd6",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d83e3335-dffb-42d5-ae78-eeb25d843e78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c07c10e-a5f8-40cb-b508-f106ddf8e0ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a6411f8-07a2-49f3-892f-c91be82480c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ce3fa60a-7d29-4bf1-bab7-081d9e646038"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64cd2021-e8cb-47ba-a80e-edfcf36e1aac",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df36c74b-1405-4bd9-b04a-71e02a1dd150",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39c4c368-a3af-4b11-9d66-9b8b367dfa76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "886f262f-ab6a-4dd9-8555-3da7b4b7c864",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ec79724-f36e-40ce-898e-43d83caae3f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ddfde50-515d-49d9-944e-3d01f7723836",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63cd86eb-ab5a-4f9c-bff8-e2e033ab45c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0e1c104-3595-440b-9370-8ba5af327a6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96418c07-e89e-409c-be16-f0054ed7f09b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f661829-d44e-4a49-9cff-0727e877fb48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39202928-1df7-4748-8bf3-58d7186c1208",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "404ee9b9-3f69-4b25-be51-68cd200b1b07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5636c66e-9991-4f16-bbfc-56c84b455ba7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a45821ac-d584-47a2-848e-d155adb8b3ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a7ab80fa-3807-4270-8b83-cfed5fe38429"
                        }
                      }
                    ]
                  },
                  {
                    "id": "122f1a38-a255-4072-9971-c9f2a35ee157",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e16b48a2-5bf3-4375-bfc5-1289b5882016",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2182941-2126-4e90-98c3-fe07e94a9a98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38374715-0052-43fa-ac11-0243fa56beac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a0a2785-f78e-410d-bd31-900a44c173e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "330a82e8-8f75-4b3a-879b-36d7882ac942",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94359d96-0082-4cb9-b886-d122bf6944d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "978462ed-10ad-41c3-bcd1-e89088e04344"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50b5ac71-a0a5-4395-a0a8-bcd8aad1df10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "34d9f6dc-3b0e-4031-9998-35dda8dfb97e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43eb76e5-e5e3-4854-b6b1-f04e72254e07",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f506997-40df-45c6-8137-9f5eb55cc316",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8bee005-82ea-4a2d-a11a-a4a6bfd76d18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "787a1d4e-ea0f-4a1b-a0f4-e4fdad2a10eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "53b09e53-d607-40ed-8e3e-96a8c52df253"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb80e68d-e03f-426e-a292-cb281b6f151f",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7e7e56f-2f8d-403f-9e22-79876571f286",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba7d93f1-d749-4ec4-9b18-0665dcd3f554"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e908a23-22aa-406b-aad1-31e21a53355c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "32c21d64-f218-4daa-9dea-c9c6a5007cb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "796df434-2390-4c8f-be5f-f3294ba11752",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09ca9752-748e-4b2c-bdbb-7f3a4ee8b3b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f6fa7ec-a29d-4d5d-a97d-02fe6ada0ef3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b581b1b-bca5-49d5-8762-da29e34a22ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "30e8440c-e6e4-40bf-b2f4-6b24b354e2b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b88d0439-d68c-4ff2-ba60-7704fff7d6db",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cf7bc43-1af3-467a-b51f-30399dcbcee4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b41746e3-ed5c-4a2b-9972-4ff297a039e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ef9aa9b-653f-4225-8965-34a4bb7e142a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dec3b28f-fbc7-447a-bed2-ebcae66fd111"
                        }
                      }
                    ]
                  },
                  {
                    "id": "375b0126-3f0f-4a81-926f-ba2178d62aa5",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9db7555a-936d-4f0b-b9e7-9de61ff3edcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7826e26-07ed-4ba7-be54-8e0da797aa51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54a345aa-621c-4b80-b241-74b3b9bb525b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "134902ce-3a61-4b3c-8860-72f869e2eee0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbe51ff7-d819-4719-9b2b-d515036e1edf",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f777d041-0fb3-46bc-a41e-427bb79e15f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96568527-610f-4059-bba1-53056e07f305"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "562ad35d-4a5e-4f2c-b2e5-06cebd1b61ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f68b291a-2873-447c-a073-64bb56d5b173"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6e38304-4406-4a49-a13b-4d84d7db1449",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee9368f5-d421-48af-bafd-550d1f7b2153",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2029031b-cb7d-4a6b-96eb-9dd25d0b79ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f86c1f2d-ca6d-4658-b673-5d733d6911cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6ca608f8-e36f-4673-9a79-b3db0b2d1ba1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "259bbb75-93c4-4b1a-a599-3160f8065503",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45209863-4295-4cff-b511-16b1e063dac3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b92a812-d16b-4cf1-b551-466271e8d8df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dbbcc1f-c8e8-406d-969f-84f89188a875",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d1bc5a6d-1782-4295-95b9-cbefa338e90b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69d3004f-7123-4937-b712-7664892c6549",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8325da26-30d0-4d1e-9e28-5e8e13d2b85a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f52530c6-48b1-4d7f-addd-c562e8d53c31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1184d02d-f560-4fba-ae6d-67b9940da943",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b97bcc62-f008-4d25-875a-e41887c959e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f54718f-2b36-4f93-acc4-ba2d9b39ec73",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f5d51d0-6d05-4252-97a7-4695032508c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "733b24c6-f1c2-479d-af61-4dec9d7661b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8eda4e6-6b28-46c5-9f73-ab3af76d76df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a5d6cc25-072d-4560-a5df-d0b2d633e28a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ae429ff-8989-423a-8b36-0ddacc322da1",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4e1b001-b5dc-4819-8b2d-d4b2f4d0617c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec4e6977-d0ad-4dda-8217-f1b79cd1b28a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5697f530-56de-44ef-b2d8-e538fffe4f51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4050d687-5b0f-4ce0-8a55-f760be57f689"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e84e0115-38ac-4de5-b315-14544cb1c0cd",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b056dc4-b8e1-456e-97bb-5b0ba789b4f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "276c3f52-eb95-4a22-91c8-bdc8b6e36752"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "241f43da-d983-4a59-b956-d14d22b89bc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb061292-b5e5-4767-9508-922e74e74e3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c40e46b-8f10-4057-bdf7-dc2fbe216cf2",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2376d82d-d34a-4026-9d0e-b3b5cda2e614",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da3ef08b-d870-41b2-b157-a7cdf4e406d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c99ce810-1675-4501-bc08-b633ced9b69a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b5c51b25-aac2-4248-bc8d-ba9a21b0dd1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0745de39-c615-4eb2-9274-dbed445a45a7",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6b01792-c2a6-4018-ba58-30c749685da6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f253b15-1869-44a5-95e2-56d83062c646"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a48c1fa5-5fe4-41cb-b50d-819a7e830ac1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "27a3b9d8-b22c-4bf3-944b-bd7970ccaeb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34a316dc-0a58-4016-be71-ffaeb578675f",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1d74ccd-e8da-41ab-abd3-d37a75382087",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d994836b-41dc-486c-a70b-18e28c10ef48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be28e887-23b3-4e66-94b2-06cac071d3a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3b0e71a3-9166-4c97-8c6d-b0a0e7ff3c5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "896f3bab-8bac-4514-8bd0-da2a1e312f31",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc689050-0da8-46fd-a525-ed4a5d5aec22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08286abd-d4f9-4aed-a49a-28428a892b96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8c89751-7b29-4fb9-8a3f-b6bc5efb1626",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0626761f-770a-46b9-810c-e6d164cfc9be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69720485-5583-48fe-97d9-dbd674d62e31",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e65954a-4821-4dbe-aad5-c6c21e7f99a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcfde1c8-85a3-4677-997f-def2b914a1e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c0f4737-198b-4fd7-9fac-2842cb9f44df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2efff437-fad9-4ec2-b767-a305422e08b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2162c719-6f63-4dff-9b3a-7f296bcb8f0f",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "109ba77f-a916-4708-aaae-c10fbc3b2626",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4d1ce26-a0f0-4aec-b714-d8ac6af4c234"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "018b4ee5-96ca-4d58-be44-b6894d026c15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f7f830de-07a6-4afa-b9a8-220abc5b0dfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f78036a9-f6ff-41a1-9a45-8570e96347f5",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83780d37-0b91-4651-a146-e4a30c9bed7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3fff22c-4e9f-40ff-b1d3-f012ec56acb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22b41cff-a341-4c03-be82-0476914964a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "ea723f53-fe3c-4429-b917-c3fd0f3da153"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff9a27b2-541b-4e80-92c6-1240a09616a2",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e29615e1-05e7-41a8-943c-53143e53cbfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "b53b0994-e41a-4aca-8f12-d022b9c42858"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "388c25a8-b98f-4526-8de4-38ff8fc30279",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "de486254-09d3-412f-8aa7-ff23d63490bf"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "89b11882-8aa3-4f5e-baff-108c4c5605c9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2acd0509-4cdb-4c17-af27-5d399c141d47",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40949f05-d15e-4e96-baae-2b4503293eb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "77f360e5-4603-4674-9a0d-a9d91f54ec6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec57d107-be95-4148-8c67-4a3d06dbd27f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "814fe7b8-1523-4685-9e18-4649677277c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f36ff0d5-b729-4fdd-a43b-d21d9b3b31b8",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64071bfc-9d37-4b7e-9665-d2cb11fc17f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6fa8d623-204f-48e4-a409-575f660aa91b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e67f3006-4731-41ba-8652-49ce6d67d27b",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e78b4ea0-663a-4f92-80f5-0414ee08d036"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9a57d685-9787-473b-9012-807729334ee5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9c847ba9-8261-49b3-8f91-8d2cc072cf98"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b7aa7ef2-5996-40c4-a165-f8564a188e8f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1973ea12-3010-4c49-9311-13950351474c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9b3ccc8b-438a-4519-9751-f216384afcea",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "aa35d9e6-7127-442b-b447-bd79e76c56bb"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "86ca0662-f3c6-4a52-98cd-8faa1660c5a0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0f95b516-c45e-46a0-9c48-206ae2822345"
                }
              }
            ]
          },
          {
            "id": "a122136d-31b0-4f24-a202-ab8edf5e43d6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "daab3534-e9db-4ad0-9870-71b181fc0eed",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "855c94ce-14ea-4901-8e0e-9c316c03c840",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c086ef8e-ca47-4646-aa2a-a948a045f375"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "59f298bd-19b8-46b0-9064-1be74d78058d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e75798e7-e6db-484a-b840-ddde01dfd494"
                    }
                  }
                ]
              },
              {
                "id": "4948b62f-06fd-470d-adb9-8f341b7c93ed",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7837dd9a-e85e-4de7-b8d9-3f29d09fb716",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a317131a-c752-4419-863b-1fcd6635cead"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b99cfd3d-b440-44ad-8b1d-209bdc318138",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7784c1f8-4038-4621-bbb2-5938baa5b8a1"
                    }
                  }
                ]
              },
              {
                "id": "79c3473d-c4dd-45be-8c25-9551f347d194",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "10cb21cf-2bbc-4255-bbcd-16709b0640be",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0f656d8a-d732-4585-82d9-0bc6b4ead6c7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "07fdd14c-58dc-4165-9884-4b8a73ed3638",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a61b328e-45df-485e-bb6a-5e931287957b"
                    }
                  }
                ]
              },
              {
                "id": "389982a9-6910-4396-9df4-4b41efb66076",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c8cbb6bf-6f19-4a54-8911-51fe52da2cc0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "836d04f1-8c6b-403b-9b12-661386995e75"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "acc32603-5b72-4785-abce-7deb30e1cd5e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "2a16e914-ea49-4f7d-b6c3-4fe62f9832df"
                    }
                  }
                ]
              },
              {
                "id": "f15fce0c-f338-44eb-9b25-ea78de7fed43",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6fcc4e8d-44e7-4db1-8d60-a1a80d899b14",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "23aff149-c906-47b9-89eb-9edfa00387c4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "353602ad-c729-48aa-a8d6-fdf765fee0e6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "f360e282-da14-41bb-b8f4-a9071119d927"
                    }
                  }
                ]
              },
              {
                "id": "79522f3a-e4cd-4690-89e1-61542d059c71",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "939c0223-c978-4163-8f0e-b43db9fed6ad",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5adc6fe6-13c2-4d38-9482-b0fe6c134d84"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "56717b3f-b0e1-4f50-8d6a-f98b62188324",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d8beb3fb-18ea-46b3-978c-aa0d08ee5549"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1f603d17-a04a-4933-82c1-f897c61408cf",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7e29b5e0-784b-4e4e-b9e1-6a206e36c7f6"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "69c1cb17-f255-429e-aa29-025c6cc2ff2f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "613bd63c-b7bd-4177-ae0c-8940639a7995"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "186554cf-e767-4aa4-893c-72fd3dc489c0",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "4d9af625-7234-4b3e-a916-5fe56738736e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "603a869a-a522-4f80-9168-43af9489cf41",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8ecc6409-4692-4cba-a75f-c7524b78366c"
            }
          }
        ]
      },
      {
        "id": "7a81e31a-884c-494b-be8b-43a4c3796202",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "0d20284d-f455-4545-9b04-be1a4a4369e7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ac18ed6e-3ece-4f9a-b030-d382efb51b83",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8c8c2c20-6f71-4599-bd55-26dba1482a00",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca09a72a-6b80-41f2-95bf-e2d6b681bbbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72f8c5ef-478e-48ef-88cc-07f2d1eb39a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7489767b-e96b-410b-bbf6-c60e70c9ecfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "a5b0fe1b-8274-43ad-b617-84718f9558a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba5efd88-80ed-4def-963a-a50c177a850d",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2323ed4-f9ff-4804-856b-afd11f1d4464",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7237a6b-8b3b-412c-8f38-d9d96b9b5ac4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "207d0ec4-653c-44f0-8a3e-84350a49614e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "af2718b3-bd6b-4abd-b330-9116dfbc993f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "147f0f0c-08dd-4912-9bfb-ae6b3181851b",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2540312b-864e-408b-babe-8e4b61cb3d4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de404a9f-e283-4ebf-9315-2c5c3606506b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ce8dded-a2cd-4887-a875-a19b52ffa307",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "119d23f3-5e72-4149-b138-eef8625ae1f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d732ae78-62df-4767-9e4c-3f4c5a8dc567",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9329d114-26ec-462d-98a8-0787e612b1c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccf3d617-65f1-4c48-9f67-5f229d850ac9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aca83260-bb6b-4ae4-abed-311f1cd98f70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ab68ce8-18af-4789-b53b-c1e10632928b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50ca5fbc-6331-4305-8f6e-b8dbb39a38c3",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61d5eabd-cd05-4a73-b8d2-3a83607a73f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bc2b291-606b-420b-ab33-1aea5cdfd927"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e9af493-d38c-4f8a-896e-82a6b4fa440e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fda57b97-986b-46dd-8540-ffd92825df75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d4864dd-d2dc-4891-959e-bbfdbe875a95",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da546a07-a1f7-426d-9723-eaeae2b294e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d6a5c08-e28d-4d64-bb61-cd968c111d3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "400600bb-0682-4e5d-87bf-9e3e5cb5e9f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "66c52eef-2a9a-4b11-8eeb-91771acc56a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3b5ce30-602f-4aa7-9f34-95d7d10a47b7",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "889f8dd5-c8f6-4cf2-9dc6-ef2a5bf19e4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1ecddd2-28b4-49b7-82f5-1509de7d1dbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b0978af-885b-435f-ada4-06c2b842ed8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c0efd00-d99c-4d83-b373-e5a22ffce981"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c544c97f-487c-43ac-a454-9d5bd91f2841",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42c28bf3-e059-4696-8d37-277c75eb4f66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3dfeb348-258e-44d4-b19a-3aaf0c126f14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1cc2dda-4ee2-43cd-a971-6cc5a8bf159d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea75d29a-7543-4822-af0e-be754563811d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bddd7f61-8c77-42c3-be9a-8a2c9e5046d0",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bec8cb37-5e56-4756-99b4-b1ae735f1bf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e786de7-1023-4d47-9fa9-51e27d30238c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5461c5bc-40d0-4fa6-9a26-3dcf8a26c52e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e4f65b39-2462-453b-a60a-4742427eacdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f1bf77e-4098-4c33-ba29-9eaa87c195cb",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7eeb8fe-da9e-4a0f-bac3-818f3d6814c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "446d9c81-b53b-4b7f-af17-ee31601df283"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "768dd02a-89f3-4d59-9d80-fc56a8c592cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ad76df9-e99a-4938-85f9-ffba3d4be829"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45473c36-9189-447a-8b7d-f39ba325fce6",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38a8a350-c610-4e69-b913-1525ad8ade31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af8ca2ca-0e82-476e-9326-292036aaaa76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ca99517-3130-4679-98d3-2c2238ff12b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "739a95cb-4dca-4ab2-ade1-dbac24cbe476"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8da9454e-5af7-4505-bdf4-4c5113e8c5b6",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7f2148a-480b-4321-b5af-96c13f8c9ae7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbda061d-6e05-4688-80e3-9db7710140c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48569170-5ef2-42bf-90ba-3b272d6a7d51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fe4f3e48-f549-42b1-b006-3628fa6dab2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "074f430f-5378-4ffa-9b2f-851cac494e0e",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68a4af14-1ab1-413b-a801-4fe8211150be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7660340a-467d-4b68-85f4-9bba6b4c4f43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ede7d07a-a86e-4f96-9354-a00015527db4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b82c4fee-e5bd-4a64-8504-e67222ed9582"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dc7403f-ac99-4899-86f1-e9fa0240d953",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a621197-2060-4e70-90e6-662b1a7eee12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b9e6a53-733c-4e4b-9dc7-10d806e0c6b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "788bf10f-470e-4960-a1de-01770ca82870",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "95cd0c27-8b6d-4442-92bb-4067ff64dc72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d8d7d96-71e8-46a1-b0ad-e1cefc7c9c44",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "341b6253-f699-49d0-aab3-4e0d34b764ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbe35a90-6ec9-403c-9d9a-893b41395a47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd573e28-932c-4b76-ac2d-5d1806aaa1a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "741c2527-7aaa-43de-aa73-09251a33a28d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99c00c8f-8823-4cf1-a19e-cf30ab35def0",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d60e6cf1-d703-401f-a4c2-39b79f2dc9a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0df179c0-b2be-4b79-8974-290b9b6cad24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfab051a-0dd0-4c47-a54e-ba130ff0bcea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "831abd7e-5569-455c-acbb-ddfb3ebb8e3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ac340e2-eff9-447b-b731-69e6ba80aaf4",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0dd9025-a23b-44c3-b261-66b2892618b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e687ab7-d9a4-475e-af07-8254d4e93c78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9c552ca-97c8-43ce-a168-96f4b3079b7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "78fc2bb2-cd4f-4fad-9d3f-5ede2b79eeb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69b62d59-be21-4683-ae9e-849b39044608",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b550839-994f-4e6a-b4e0-08099619497c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cd0af09-5e8d-4413-9e44-36e592f2d02c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01e9694c-0ab7-4df0-bc17-0fe25e3a4a97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "578d7749-0a8c-4cb8-8b56-663c42ecf4f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dc50840-2212-4a6e-8b1a-efa863a6924e",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e0a97cf-248e-4fef-93f8-62b9c4ca2e95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02d0c940-eee4-4137-9159-f9ba14f5ebbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2710a91b-5465-4a2e-a6dc-a3c4bb133560",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b24dd6a-2b47-4e44-8d69-f0a96741a928"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bca6bf68-3f81-4b41-998c-a3cec0c7f6e6",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fd3656a-48e7-43c0-bc3f-4fe3b82ed4d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68a01aef-657c-4c28-ba56-7e47c653c0ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c3cea91-7705-4338-81dc-3fe855c2c3de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ed65d94-ff72-4415-9866-c38a46d035e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5bd088c-1987-4ae9-831b-815322ee2ff1",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf567996-3932-42e7-bf54-f4cb37d144d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d3c1853-5992-4f4d-98b1-d7712e516e7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4c3e457-f3c4-452e-badd-db69926cf990",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "50cb0d4e-5517-4adb-a2d5-605eb194048c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "857e56c0-2a3f-4e8e-82df-e3a67c2ca592",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6d040a7-08e7-4c87-8287-34f49c644e66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2f46761-b9f7-4b6c-9b1d-200b7302ca9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec36c96e-7700-4a6f-a802-48570eecf859",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b704f061-585c-4da7-911f-a6bab1c8fdd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "853cc074-13a8-4f6d-a7c6-97e0b90ec923",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe3e4d9d-6ca4-4abf-85d4-ded223fb83cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70572165-a687-4221-8e06-aa6b75a2ce87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dafe8ba6-d962-4ce8-a74f-d141027de30e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa9937a6-35e0-420f-828d-4ad162c9a52a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f6b3d80-fcfd-4d75-bfb1-aa4401b35776",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c7f7e54-99e1-442a-8442-ec1dbbff3c13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83ca9df4-2aae-4978-876a-0e24c6b57162"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd6d4c18-8db3-473b-a843-bf8f7ffad1b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cfb261a8-575b-4066-8aad-5ac06b22af0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8df4246f-8a32-4498-bdcb-de850636364c",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb2d5e4c-1a2f-4c33-9ce1-75218d3f3891",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9545c781-a860-4a48-a80b-b66356ce21c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a8b27c2-ab58-4416-8c58-a423a7b801af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe8a0aa9-a603-4563-b5bc-43676c6a913b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee5f4cc5-7f31-4fe2-a5b6-6193fe1d287e",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c890e42a-daf1-4d64-9577-b47e065ba7ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d55c0d1-37ee-44f1-a5b1-3b68dfe5d512"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "768e4b40-ec57-4c05-9bf2-dcb928e4b2f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f4016e8-638a-421b-a388-0a6951c51e45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "036e3164-c526-4707-b5af-3f0727b67a5c",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa622910-2670-4f87-9cc2-897981fc9afd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efbd7e06-c81d-44f4-a0ff-46d3ce2ab4cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dab771e-1d3e-4f0a-92fb-1f02988113b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "46d1b679-1a50-437e-8a02-0f919e1aa4d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1be00797-467e-463d-8f46-6e08451c9f67",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6c8bb3b-21ba-4181-be4d-2dca57506ed5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18cf1b84-a009-40b3-af05-0e7252d9b25c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7cec89a-4398-403a-9dcf-3552e20082fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c7fa3b9-aafb-4c9c-b4b6-1858f5594302"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e0bd475-49b4-4b61-b132-dd7347023d73",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2eb0edb-ba88-4fdd-9954-f5835ddd9321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6cc3194-4548-49e4-8351-d85f793e6a7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2946438-e710-4bd6-9b8f-799e22f200f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a5885ec-75b2-42d6-9888-99e3e9148387"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88baa683-d636-47d5-83ef-a126b6600caa",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fcae721-5875-46a9-b8af-04722a747601",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dec59fa3-9c50-4852-b1f6-0087e91ec24a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d33ef88-5733-4970-94a2-072a71d9b921",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3abe3ad5-4da4-4043-83fd-455a192dcca4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c16042ff-5a4d-4d1a-bf14-836fe10cfb2b",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b554be2d-0dfe-45db-87cd-f3e39ce3df8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf34446b-586f-46e5-b0f1-2e26479f716b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b903322-1808-4531-9e61-e60ddf74fec5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cdf9dc3c-f15a-4adb-a4af-241258086dcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9ecdabf-2e0d-463c-acfd-8c2b2d3b4372",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62f35727-37f9-4c04-8e4b-e4b2ea19cede",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5e04273-deb8-40e2-98b1-3eb08fd34c37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "412036db-6443-41fe-9fd5-e2a92e874285",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3cbf709-1311-465a-97b8-9f5b4a075355"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "57e00e79-cd1a-4260-b013-ca9441a4c872",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "32223092-0c85-4232-9fa3-a43c8efedd30",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04c23881-44e4-4e78-9562-b3d39afdd472",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "cd27bed2-a7b9-4a57-88c9-7183506caf3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27f2ac8d-93cb-40b1-811d-08dcfc767e73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bf3d8578-f07c-40be-868b-27c65698513f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7edebd1c-dab6-4663-a59e-c461eee1ab73",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5fd2e62-9747-4718-9462-f7bd074ad740",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "74bde4b9-9143-447d-a5de-065b6f27e2ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bff362c-c0b9-404d-88f4-d9ef17078dc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ab8701d5-2ee1-4631-8042-716a2cd307c1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2d5d17b8-9780-4708-9e01-81aae57270bf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f0a803b4-9f10-4b59-a065-dfe17ff6a727"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "03b18d72-16eb-4b39-b925-92f3461bef87",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2f7b3486-684e-4541-b854-3f567ed4fabe"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1323e311-fc6b-4dfb-8f71-a2a681f92763",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "69b25737-591f-433e-928a-8b0e299a3652"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "972e2035-71f2-4e8f-97a9-472ca5c8e5f9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f7135b90-ec5d-4043-9fda-fbddff6469ae"
            }
          }
        ]
      },
      {
        "id": "094c2b25-8e4e-4054-802a-30c44a8b108f",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "752ff56e-8ea8-4603-8b65-2870e83a462f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ac2524c3-882c-4b2d-ab9f-3fb90e712a5a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0a32d532-e8a7-4866-905d-89107896f4b1",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0bc723b-c4f3-48e7-8640-c56cea55e887",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7683bcd-5887-4a89-a47c-c20c4410870a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e19f7f24-a75c-4a69-b4ce-99b30ba8d0b3",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "385c28e8-c461-40d5-9c32-f665da5724f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0eb6f2dd-929f-4584-9fc4-830a7f31d7c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74473412-bcd9-4eeb-bea6-c39eccd556b1",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aece4d18-f0dd-4921-ada5-abe6a8e179dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adf25bb9-3b92-4b2a-b56e-67e1b8fbf0a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6028c1b9-5455-48a9-b1e6-b51d61df5347",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4d6bcf4-8d82-4233-8915-4550f393ab87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d3c04ba-7c86-42b8-bea9-b304dbd7a5da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37036f31-7a4c-4c96-8b48-0c275d9a8542",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e229bfb-7d52-4ca8-b287-3f76a0d36d01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5731ffbc-7e1c-40f2-8bd1-f84512f1c164"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17d1f419-2c87-46c3-855c-975706d04684",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb92f0e7-5828-4450-89aa-af39e7c4d7e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18ed0414-88e4-4569-94ae-15c24fd7ab1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2bc51d1-dc82-4488-b910-c2794aeb4c2f",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff1b43a9-c18e-4815-aacd-cd12b76e8c52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84949611-70d8-45b1-888e-bb0c366fc2fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e49d0611-2ae7-4fa8-aafd-3ed7a0004e0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40ab53db-5e3d-412d-a8a2-446ae9001b50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69d5ef0b-bfa7-48f4-a11b-0336f9bb34e4",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "529f1a72-0b7c-4921-808d-91718d041a86",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7960c892-a0ce-4e8c-ae71-02a03280bd52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a757c94b-61e3-45d6-9bcd-c7adac1f64a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "032ea335-6ebf-43a2-8722-c19047fd08e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9da88e31-61c5-4323-b597-98a2d5c1cd6d",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e210c53c-c589-49e4-b9c0-d6613600f267",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0e95010-966b-41db-a54e-ec2434b375a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "313ec6ce-9942-4f20-af8e-1270be0e31d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6994936d-26a3-444a-830a-73c09736dee5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "254e2bb3-a770-443b-9f01-d351c9b6f6d4",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f75b1697-db59-4594-a1ab-ee1743a85c18",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "794da05e-b377-40c5-aed4-9cb2b0f80086"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f868803d-788e-4f59-b584-ee374f294993",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf3b051d-5326-4723-bc3d-efa92ae19ff9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d2ae4da-ff58-4a43-a894-f91f19fe770e",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d20085d-229c-473d-875e-fef2b3e7a92b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc40e1cb-5704-4897-830f-a68df36a238d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e46dbba-0cc8-4f2f-95cc-6ee5554a5abf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1ae1f47-dee4-4a74-a93d-bb9146287fb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d10f4aa5-91c2-448d-b926-7ab1603b5714",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6928b4f-7af4-4976-9823-aeaa1f37a2a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc150dc6-1b74-4b31-bf7e-f9c8533cc59e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba2cd8ea-a647-46a5-a9eb-4cb0f6e3b410",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a14b65e-9e27-41a1-92f8-193e3477e57c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82d91b8c-445f-459b-9fdb-58f3974d92fd",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "936d27ec-7564-4bfe-8d80-18d3534dab91",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "baf634a7-7818-4b9e-aeb7-01f5479a6289"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "749d9f64-68d8-4bc3-8f33-039da01513e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4e165c8-410a-4974-b9bf-68eb8fef3c92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab44a1e3-401d-4319-ac95-e6c92cd76092",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bff8f6a7-820b-4b6c-9767-683e5ec16e78",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e30ceb8f-e996-48ae-bcb9-0e29e7832245"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "937d31dd-dd46-487c-aa72-063d46688b1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8775d81-a31d-45c5-9ebe-abddfaf14bbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01a10965-d5c9-4ee2-b39f-fd44b17ffc32",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1c995f8-18f8-4488-bfb3-eb9d99611587",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cffced0f-417b-442f-a333-67b2b52ad7d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de0ebb81-05e3-4b21-bde1-4e9e4c9e7aaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "428ecdd2-7f1e-4e37-be05-b719451264cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2709488-429c-4ec3-9626-10f83643b11d",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44e821a1-f35d-4b26-bbaa-ca7782df23f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a6880940-c575-454e-a886-a160c14e887f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe2dde00-05e5-49cb-8a33-9ac7abdf3722",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "380b7dc3-c2ae-4fec-9ada-45c67346bb3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e9db4f8-65dd-4aa4-9363-7faf1d953538",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "989ae1ab-9f19-4d93-8874-ca15f18decff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bc61aaf-5e3b-4b56-a11f-e48db2fbc97e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cb53834-d55d-41ab-92d1-d900e27a0705",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a20d1f6d-4895-4357-a4c8-78377fac6d87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f361f9b-b7fa-443e-91d8-a943f2ae0371",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "815b9170-d9da-4b1f-b59f-2bfafb31edbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0d18662-9be0-4563-8ab7-dba921cca847"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1db44370-75f4-48e5-acf9-7d01f60c9d84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be95e4f9-2346-442e-affb-3a9455308be9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e508ddc4-8fd0-405e-a04c-1b4bc9b03c3b",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dde9530-ea94-404a-b3a5-957c990e34b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5c0fd5b-3c6b-47e2-838e-6d5b8eddbb14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0368961-cf74-4b40-8a7f-4db4b0e1f805",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1a2960c-4413-44d9-89a1-ba92978bf926"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ed4d40a-5282-4887-ad56-febed30ea563",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "216bfde7-8282-4a5d-92f4-a3791943392f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38e16a34-72e1-45d9-9464-d9764c14ad86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13b7f619-763c-4218-989b-79f6ca59c6d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "928b22fa-2583-4a8e-9c85-c698773ea8ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77ae8a86-4129-43b8-ab70-4269607bdc28",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c424406-757b-4236-b1c6-cc8546c4cfa3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fdfc565-a450-46c5-9f69-62ecfaa35b21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c108aa5f-aace-466f-a068-13012f9e5b29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6a18a87-8f81-4e9b-8109-bc4739de4bb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "611db1f9-1a47-40b5-899f-fa758796c771",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38fcb38a-966a-4852-be19-66d7f84dcc54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f8c4592-3058-4731-886d-03ee53b7f7bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "821fe008-2fbd-40d5-8bef-0f874730044c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ad95cab-4aa3-49da-aa2e-78a89be07d23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "658b78f7-41a5-4777-aa65-9d62e97a8764",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c921216-c521-46df-bc32-ecf6968f0d99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34ef874a-ffeb-47a9-aeb1-757174f0bb7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f6046fb-6bdf-4fb3-8fe7-ce693f2ca332",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4955bde-bfe0-43a3-af55-133babb34c3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5742aed-771c-4ee5-937c-73f15033da01",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7e29cb5-5513-4ae6-9ba9-31d1e1f07614",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6bd1f356-29c8-43fb-8122-c06a56ee4918"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0750ff29-0293-4143-b678-8937acee4abf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10214328-ebc5-49cd-90b7-392ff6eac62e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "907cde4d-e945-43b9-9afb-65d1a3d68bb5",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6107495e-334f-47c2-a895-faaaf4b10f29",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "087a7df9-a65a-4c7d-bc0c-db0b179b0994"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "144d810f-7697-44d6-b8fd-29788ff5385c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d568435-b9c9-4140-8d89-d0948a8f1e0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd2e06cf-3865-4293-942f-8aeb4734bed5",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "083de522-c2db-4292-b96b-fd8fc1eeec5c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5289a840-a1a8-4f78-9664-be2b5815b2a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcf2c399-2cff-418f-b349-e06d89226bb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0a77127-5fe3-4735-b50f-2c6269311427"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b9cabea-b832-4444-ba66-00d6cb891afd",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a439048e-3b2c-4f52-b61a-4c852da19508",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d37f9ae-98c9-4b48-a331-3308552ded4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc727afe-cd15-4faa-9e50-7a6f35e024ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ceeb9f04-52d6-4921-89c5-48389e5758f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2e5819e-0407-4d25-83ff-f0ac150293ff",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bceb894-30e2-48c3-9f69-86dc75f82280",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee989ed2-d7ed-4cf5-a6e1-733ed920d47d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0028311-d939-471b-8db4-85fd5ea15e6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a12bbaf-06dc-43a9-b086-e7302d25e434"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ef95954-fd34-4001-8b9d-2f585ff6bb4e",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06d9e376-4867-4563-a5dc-f6f573bfddf8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "baba6ae4-8eea-4054-95e6-6edbfd2d5cce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8946f9e9-4294-4845-8306-c62dc8aa4bab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d9e434e-84a2-490a-9411-e46fb6e45bc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "139469fc-d66c-40be-9d8e-29694d8b0415",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b13efd5-e88c-4b1b-862f-d197445cf3b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d736115-ba67-40a7-81a6-c094bf68a640"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bad0242f-9061-473c-840e-c767a7f9ff33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be4b8747-f6e0-47c2-b006-b1f432fe9e91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b8d10ff-e820-41eb-ad22-a124cf09e628",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e32c52e-b317-4975-bc24-bd8969ce2437",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19c1f106-a8e2-48d2-9e06-df08276bc065"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b7adeb3-35ac-45f6-9309-b6d47d797481",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55867695-4f49-4a66-aea8-9781dc927d82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daa44563-9d8a-4dd3-b883-69a32d10bb7f",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "809edec8-6372-4567-ada2-a839c39c9a10",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b55cae22-597d-44d0-bc07-d48b1423df3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38d599e1-4a95-4fad-ba25-869d62097234",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68a14534-85ac-42e8-9953-2c3a5784926e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a195f494-9a7c-4226-a72b-be7ca32f836f",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b2bc68a-b34a-4c62-8cfc-ae6f567512ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aecb6bb1-9d0f-4ecd-9398-aa8d89e5bc97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a35869c-200b-4907-84bd-2a34ed3de7f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4220b08-88e3-49e8-9fdc-f34683efd714"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03739f8c-54a8-41c2-8293-dd828cc3346a",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0ac3386-ebee-489c-86d8-7e6f49a1d9ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ff31055-3022-4f39-87f3-539d12128dbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a627b15-7e06-4cc2-972e-0c6111d6a356",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "391e35cb-e77e-4b4f-ad2a-106a59805d9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54943650-3d6b-475c-b410-94482d52629a",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9728742d-f0da-444e-8ac5-ab4952ed1937",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f623513-fa19-41a0-9080-2a97c605a101"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "116463b4-6ab8-426e-b2ab-11df577b95b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6170567b-d51f-4ab9-93da-7f7861a72ea9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c64c960f-2ff4-43a8-aff9-224178dfc514",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9b8767a-2a57-4ab5-ac21-ac7707ccc817",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3f10de5-0975-4a71-9a86-8170ba9ad4b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06cff84f-b407-4d67-9399-27813155674c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "130dfb01-d988-4b8e-8953-2a696b5166f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10915bf5-f27b-426b-98b2-c6cc6733524c",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5d27fad-9492-40a1-8b31-ef4946a2adeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99601920-a7f1-4420-a3ca-86a742b299cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1adc9887-5408-4400-b523-32be516870ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "005a0179-60c9-4e9b-b5e4-81d559020839"
                        }
                      }
                    ]
                  },
                  {
                    "id": "560de314-3ed5-41ca-859b-e0d1897ab22a",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09c5a3f3-a0e0-444a-b27c-b87669707a1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85d11032-ea21-4531-becf-6b5371631fb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9ce611e-19b8-4cbd-8096-5cd750ff9571",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a699e0f2-e75e-4c6b-b94d-150fe955d61c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9602295-3b02-4250-a9f5-c1e3683bd048",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ac373f8-7e60-490c-98fc-3ed787296c6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b711e7b-d28f-4b43-b946-8d4405792314"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4f7dc62-b183-4132-8393-fd8442a0819b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec87cbd0-3c33-4b71-a2a8-b412b69124f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4509f15-9859-43c1-a8e9-0c5e540c4b10",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9189ace-60fb-4d92-baa5-2da5f21c6f20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "430e5202-19b4-43ee-ba67-5600f511d519"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78607b3a-c14d-435c-aa51-1a1a6327c384",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1494c56f-e83b-4bd9-aa6d-79427dbfc93b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "452743ea-edaa-495a-86a5-cfddedf4f9b3",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfbc65f5-1ae8-4a0b-b1a5-a5096c1fdc7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12aa8f4c-45d0-4b6f-8bc1-cddf6de149db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f266de5f-10cc-41e8-b47b-020dcc594fff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd7bbf5f-2f7c-426f-9252-7ffd2482fe1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70ec4523-a086-4c3a-a628-e20ade30ca12",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7dab11e-85d5-4373-bca9-ad2c949f1800",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9615ba47-4fb9-450b-9db4-60511ce85c9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7f14d38-cc4e-4086-9b97-7604be6eb06a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1cd9d7c-73a3-4457-b42a-44e91f5dfa88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16a080c2-6839-4794-b233-d245d60a399e",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7d48a74-774d-49ea-bcd1-c6da7993d6f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f879eca-e64f-4cd7-a2de-12b674842643"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ac735fd-d508-465b-8f77-68ae1ad8799f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cc000ff-b22f-4540-baa0-1a79c068dae8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7da8ae1-ae29-4c77-9a70-03ccbc8e3eb2",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84e0f42e-cc45-4e6b-a646-203687ba51b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a634392-d724-4d13-9543-736aacf72fb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a93121ae-ccc2-4b35-b921-ee3b657f4e9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97ce2a71-a555-40fd-8119-284d2d432624"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fa7683b-be62-40f0-b95c-e1d78967d7dc",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbe157bd-a700-4346-a37e-90f9706ec2bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f92927f8-ac0a-456d-b5bf-9e6036c167a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d12dec20-d793-4dbd-92dc-370c3a836425",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "578aee4e-b14a-4c31-944e-140e2cf516db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "878ebba3-7cb4-427f-8700-afd862b2a15f",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a02b805-1510-462a-a0f9-e5fcb4eed6a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "326d9688-3b0f-4489-9b08-78202dceeea7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2ea282e-0cbb-4cc2-bcd1-dcdcfb8d87e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41a25691-2924-406d-9aba-b3c8b2fc8728"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b922d7e5-67d3-4896-bdf8-ecc9b0814d41",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1c01633-5ed4-4d40-b029-8e774903c7a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e769c60b-8bcf-473d-bf3b-8a5cec6a73fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2a07d1d-1551-4838-a6c9-ae96f0cfa476",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca1d31cc-caf8-449e-a999-a367e1fc1940"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c391e7eb-1c47-46e4-a2f4-83633d1e60ed",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9558300c-61fa-4849-83a0-571c58956a36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cecd55f3-c6d1-4cde-8f9d-a346ebfe0f1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbc8fc5e-3894-43e7-ad4c-96578f7f395b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86a1c752-2362-4189-846f-600999d341d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4979a5e-0191-4578-a21b-eda5cbd98d9d",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "064169ce-b81c-4279-9d83-3e4d967b6485",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffbdbc54-0da5-4449-a1f4-242098584f19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5af86bfb-dc76-4533-b462-bfda5a4ee78a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbe217c6-f605-4f4b-a758-6c5aa391bc4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b55cd4de-849c-42b3-859b-c6f8fc2a6c0d",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fca7b83-fba8-4850-8f72-668078ccd257",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c284c9d9-38e7-4c66-92df-cdfbe22cc3da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "399f5414-2756-489c-b4f1-54fdf8e13780",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8beb9803-66ac-4c98-b52c-caf0e1de9849"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c19f7325-b59f-42e5-a35e-8b521a0bab47",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34b999aa-c36c-435c-a2a7-0cebf102db04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "889b2c0e-ad27-4cf0-83ac-23dff2bd593b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "441a3057-b6ce-446b-b776-e062c1cb9427",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "787d16b3-a1e9-46cc-80eb-1feb61fbd763"
                        }
                      }
                    ]
                  },
                  {
                    "id": "271cad4a-423e-432b-9d9b-31e5975df82d",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d59517d-e1ca-4874-9557-4c8dff786525",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e99ef350-2840-4c29-bedc-2f82da432edc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "527ec19f-76c9-4c4c-a16c-1fea3ea82f9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e3d7467-c9ed-4196-94e0-25acb83843e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d106a63-fcc8-4e50-a783-059cd7381b74",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9a9c670-f173-452c-a0ce-904ac8fce048",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11853034-0fb6-4f44-9290-60e924c45114"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63ecefb1-b7f9-4a8c-b5f1-277cc5c87311",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76b4bd54-b3aa-463b-9745-62e182196e67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e961816-373a-4150-ae5e-55981879126e",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deccf718-e243-47d0-8409-b01f79f00132",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b5ed830-3774-4911-8da0-30d71321632f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8a51046-e18a-478e-bb1b-ada08d094682",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "980c7a8a-69cb-43c0-b317-6c5fc8ef074b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f0a64b9-3692-4068-ace7-7dcd25ffa6a9",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b2bdb60-5196-4f13-b5db-cfffc03942e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7daf33c-802d-43e6-92dd-698d496b70e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f87dff0b-f56a-4da2-a6e0-baceb699a563",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52135af8-e8a6-440b-84eb-12a76db9a2a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2aa369ba-c63b-4da0-b786-009e6f0620e7",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39bf3f88-d47a-4e16-bb7d-003d523ad733",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f7e1a1e-a8c2-4bd4-894a-182ac23efad5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c459632-4264-481a-b4da-2d28b518e9d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9960120f-097f-484f-a20d-98062f451020"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2b8f6e2-e4e4-4b79-bac7-d42cf7c344f9",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4273fa35-639a-4fc4-aa2c-65e2fc7fa380",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91cf761d-4683-4be3-b407-b7d1618b922c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bef8e98f-c636-4b61-abfd-03a805baaf9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36d2ca0f-40ba-4975-ac07-f044b8baad6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e3c3bba-fc2d-4303-bf7f-c40b324a6990",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "943a3c41-b4df-4f42-99a9-fdb4b4bdad0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a5ec819-51b2-43f4-80be-296284210d36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e90376b-dae6-49bf-99ae-3672b930c9ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23b158ff-ea14-4207-a070-8c1f961016e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "869c0523-5a90-4073-9316-297851ea751a",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b084487-da6c-44b3-98da-27aa5ca093b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aff729cf-edb1-4ad9-8ba2-81d94e2b5354"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f13bf8cc-a868-4a11-b718-6bfb312a6867",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04a564b4-39ff-48d9-a403-7dbd96fbb150"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fff94b50-ae45-429b-91e8-622da23a457c",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0649a10a-bf3f-46ac-982c-33103b6c7cdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c88beec8-966c-4493-8569-1f9bbb48b594"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df63247a-a35a-427b-99a4-52fff3f6cff2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4653ebb-38bc-4f94-ac68-f346d8b0f2c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07c6f489-01be-476c-8434-ba430ff417f5",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3194a82-0816-4cde-bfee-bf791181b75c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02a9995a-2ba3-459b-b9e6-19d5ae564681"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8835ea7b-82df-4af2-b5cc-5c5ada9a3e99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ca0caa1-a132-4ee8-bf29-c2d34b8add33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "391a0ddf-78ea-44a8-90be-b3435251b4af",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9488e501-05e7-42c3-8069-2d0004365ce0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18c5dd8f-da82-4e4e-82f9-e09c3771b3f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81d45e48-fbfa-439a-aa62-da250136deed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5de74a8-8d98-4905-b0d6-c70911ed285a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2487bcd-88bc-4c0b-b30f-bc9b5fc0db52",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a4bd42c-d9f8-487b-8abb-43774b2db39f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbaa71c6-b2e0-49f5-a7eb-dcc86503bdc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "848fc2c8-0db9-4312-85c3-c2e56bca845c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b84b5455-33f7-480c-b61c-4758cd32cf4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55c43c1d-3023-4885-9d79-9ef4f897ebbe",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b021b70f-ce0e-4eba-9785-a6e584f80a7e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7722afdc-fe2e-4cb2-812c-86a5ec7401de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "475f9d6b-ee80-45ed-937f-a75a9de8eefa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fcc622e-7cac-4add-9107-5586d4a2b454"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e73ede42-d50e-4fdd-b702-493a5397b87b",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0756d905-bca0-446d-93e1-9d0c8535852d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24d76473-2386-49d7-b7bd-bbd7c24f535b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dacc5e76-1c53-4eca-a166-9c8e654bdae4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a75caf26-b46c-4aae-aa8c-51aecd1e6e81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04e95f1b-d96a-439b-a230-393eb061e170",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5d2fe7e-e4b5-44ff-bfa6-e99eb611ac12",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1681d22d-b752-479d-bc74-74e51ef33891"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54fc4438-790d-4964-a704-fc293b428221",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9969e8bf-9b8f-44da-a321-d4174eeb2c48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "145e4d2b-8877-4745-bb99-342081e6316e",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4315c96-70a2-4755-a37b-1342fcb8c544",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a30fb154-106f-4a52-a014-ce8141f615f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d0c6dd5-014e-4fb4-b7b9-96ac15d002e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09c783d0-9d68-42a4-b33f-fead1b5960c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d4e5ffa-31e8-4350-9cd7-5cf78d031aa4",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35ddbaf5-1431-4dbc-b66e-b243d292a479",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79f37a28-a3e8-48bc-b693-b2aba372f0f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20a8ed81-b2ce-4111-baad-7c15fb9f7d4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59bb6743-0231-4164-b41d-dac968845f2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b98fdc79-bf82-48b8-a40d-df9a59cdfc25",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0299f106-df99-457e-8e1f-c928ab411d7b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0899f2d5-0f3a-4d16-82d3-e4a8ff24d929"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bd72256-5281-438b-842a-fd54a36d4341",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b7b6815-be19-4f54-996d-bd9470f45aac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19d8279d-6b43-4f3b-bfc2-e48942affa19",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed5c006a-01b0-444d-9054-c0b3d216401e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce2ac7c6-b01a-4402-81ec-321b621dfe9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d4dfed9-343c-4cf6-b95b-8d566b7e1bab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2d927b9-b5f4-4d72-a8f2-861f2878e5ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78d0d40b-f05c-4088-aa05-dc49e1f2bc90",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efd785d0-9610-496a-948b-6bfcb434b091",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2095206-3cd8-49c1-88b8-8e3901db3b4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64d43cd4-cd62-42d6-8458-2b7f1a6a7b9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e92b61cb-15d1-481e-97e0-f70953f1078f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e03c39b9-56ce-473e-aa22-9a0eb961de0e",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b75c60ac-8d20-428a-985e-c3c0110a18d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f263aa5-354a-4894-b3fd-55f4582d35cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47f3eb38-394a-4959-aada-94d624c2ccc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4406f1c9-944b-472b-b52b-59200b92e3c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d676e99a-a6eb-4e9c-8c21-7fd802e5761f",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57bd3914-5c9d-4286-bf92-509d93574317",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c153fa56-59b0-42d1-a43f-052e930a9ab0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ade65815-a1b6-405c-8f81-bc513f02d9e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f77f1ba-f70a-40c7-89ed-41e9054d1047"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6fee9dc-2d41-4f2d-9c61-24371b734cb0",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65ec00a0-675e-4b00-96e4-05dbd6e9b716",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "131f15bd-1af6-421d-9b48-eeb699b51bba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d635b9c-03ec-4b5c-8cbe-ff8b33410f18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4c50ac2-c991-42c8-a679-f50fcac0ba99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bd747d1-f65f-4b66-8861-c0152b079011",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "356f4935-c21f-40a1-a30b-ea280e5b0c52",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "904d9782-4248-4a2c-a5cf-a10030ee4afa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17985590-e5b2-4215-8faa-ddc2db6f363b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d28d2d1d-8a99-4ede-9043-7db95a2b1cbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7e70fc1-5f6b-497f-a4c8-8e543a41992c",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90ca856e-34a7-40da-ab73-d41fb91b1edd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d5f098e-6d30-4516-93bb-20875f5ab82b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a76f3876-23e7-4338-bee2-59d5a79339ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04b72c78-e5e5-4132-bc05-719e9cc27c24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dedbe528-559d-47fd-8801-44c08a63dd2e",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb7109a6-8511-4406-b354-16003a7c6d20",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56962340-eac8-4279-8034-43174144b9fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16645597-660e-451e-9d21-8d72d71404ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ac6ae09-b7aa-46c1-bc1b-fc6d2a72138e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da035973-9d1f-49e3-88c1-8b835dcd4aea",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b87cddf6-a239-43d4-8932-dbe4b6bc5122",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0fe66902-66a7-4a3f-9cdd-880066314852"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ccefdc1-5bae-43a4-b6ed-c21975c16de7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3316cbca-e72b-46a0-ba2c-81280410db14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "125359b5-c882-4c83-88d3-4f48960545f4",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81a691bd-0c7e-4d5d-aea2-80130a916c5e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02f65f15-4c3c-49b6-875e-7b953aa5d7da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71b563f5-0bd6-42f2-9e95-fe0622c2a418",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c48f3891-f4ff-4876-b24f-dd390b39eb58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6895e506-f8ed-4975-8e8a-9648322bcafa",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e574067-0283-4661-8dda-a880a9abf473",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fbd43c2d-9641-4dcb-a846-7b7fca1bfd52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64efec65-6278-4e92-b395-44014cc9f2ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65ecbb9d-2eec-48f9-8e98-50860aecb087"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbf80050-3726-415a-9483-4da238a06e3e",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fb56ee3-81ac-4eab-a5cd-662fedb27bd0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4daef890-1f6b-46f7-8a6d-8557572be1fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e6b8ca2-b1a2-4da9-9d65-4f4bd56955bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e5ea8bf-0311-4766-8df0-f6f4d63f1622"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebdc370d-932a-44e2-b8d6-c7a4db0a0976",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5839e23-96a0-4ac5-8f99-7bd03e082761",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0450fc16-594e-472e-9a77-0190201c69a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b29d883-0d1b-4584-9c94-6e2914346218",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e051e20-17df-4e67-a856-1230f197f1b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae95c0cc-5c32-42be-b7b5-5d0cad52c5fe",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36ffe828-2acf-4843-8a98-ccddb5bbc0ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a69df156-25eb-49e0-b487-9f753439dc24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf77a056-8a53-4500-8dce-795bf546b72e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58b90ad5-6f2f-44e1-9f84-e7a7c319619d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88dee38f-0a89-4e2f-adc1-0afbb4485875",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "386f79b9-0c3f-4fd4-98eb-ab97001dbbdb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c640c415-b3b4-41a5-8d9f-b85e1a88f256"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ec67664-68cb-4c6b-a84a-60b53f880431",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bca1b306-65ea-4388-bc98-2e53bbd2f0ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dff5a834-bbd7-46e4-b429-de780b7fa519",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83d31ce0-1405-44f4-bbef-91a43bed9e30",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e898e40-814f-44fa-a193-8287b56d0faa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1daec60c-8148-4601-8e07-a0a37fd7875a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "000f8dd9-654a-4131-9cb2-b523b5222df1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcec6274-dc7f-4b3a-b75d-d6a7e544259c",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdb808ec-7c18-4d45-896e-9fc478117a4d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1bb1dab4-81dd-467a-a6fc-fff07d8cb2ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c690924b-f816-41b2-ab7d-07f2c7b7e0db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c0d1154-abdc-4032-b8bd-f171b737f5c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4057c5e9-3aa7-4e71-a4b3-17b3180a65a7",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18e08ace-1fa0-4836-8e87-e0f53922a807",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3c7eda6-bf97-4dd4-bd39-68330a1149ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45ef7c7a-fd0b-41d0-a52d-71b0acb2dc03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c53ca9b-cf3e-4f0b-a295-491ba1553a89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6f468c5-df72-4c3f-86a8-6f53a6e87317",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50f7b465-5f79-4459-8711-ae8759fda263",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3e99970-093f-43da-88f8-d7d3d69b6a1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da3ce1dd-0c1e-4499-bba7-2b08b5cfe8bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe12af9e-7136-4c28-b57d-0d78fc5de685"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fda8fe2-4708-4dbc-b0cb-03c24240331a",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5823552f-bdc2-4842-ace1-9207045e16ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5fb45b85-0596-4640-a6f4-a319c78136b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d942bdb6-9958-4e8d-8a10-4ff121281c36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3273406-9dcd-4d61-804f-9c360b5d4aa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "300334fa-fa5d-4d03-8556-707826d75cdf",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87d2839f-3473-414d-a183-a286ff36cc73",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c72402d9-7e69-47f6-900b-4aa9724971fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "487f871f-96fb-4c5e-aced-7edc0aab99cd",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "228a005f-bad9-4ba9-9762-0b1ac42a86a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b020f4c-4108-440c-bac7-c0361a611e14",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5d7b39a-a88b-47e7-966d-323a7131490e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a6fc688-15a1-4fa9-8ed3-df314abb6c41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fb59b33-ecc5-4e70-ab1f-df01b19e936a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e74efcb4-9981-441a-862f-39c88b85f61a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "195bf5a1-a709-4245-9a71-f1825544465d",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15ca1e2b-1341-45f2-9e41-ba45947704e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45efa77b-9a38-4f70-b721-6e8a2b6c3e37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff27d8ac-f385-4787-9c76-82063793b92e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0a19e91-50b8-433b-88d7-2f3b3f3d7d49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cba2feaa-0736-40c5-b300-91020b125e14",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7b85351-d08b-4f9d-9c9a-ccca23a66e9a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74ce9129-e18e-4f88-8f26-63c5e7855925"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1c39577-9189-4a3f-b06e-f5629696b4f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cc9a1f6-30d2-4f7c-bef2-9babe24ad607"
                        }
                      }
                    ]
                  },
                  {
                    "id": "363e69ac-d2fa-49c4-93b7-ab5cc7425011",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4fbaf1e-1edc-4401-83b4-ba15201109d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75b560b3-20a9-4765-9c30-d7d9a6cff00d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e61bde24-1ce5-4d51-ab7b-76355a1b985e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f6fe9c0-8ec3-4166-957c-01ea54185af9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eba4e958-30a4-4187-b6d4-cb7198535855",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "605c9d99-cc54-49a6-bb93-66025d2d9c3a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12fa091a-830a-4492-8eb0-6b3a976d793e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0526f33-3c22-4e70-b76c-f9061c8ccb73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "150aa502-0f47-45de-bf37-96a4bb6ea86d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b946f93-feae-476d-8e79-164f5f876356",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c916ebd0-bbb9-40a9-9b3d-85fbc5563cd7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "025d2311-c023-4b07-9943-654f895eb634"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32693e99-f810-4870-a11c-687faf55d59d",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e75635cc-5378-453d-b00f-60a455178657"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf054b52-39ce-40d8-b34a-9f613570dc0b",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dc58d10-b44e-4f26-89fd-36aa251c7c2d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e191b40-27af-468c-a9d5-49c9944f1fdb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "487e82d4-4b92-4838-b447-249d947181f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5cfa2cd-231f-4607-8295-1b4c754e4c06"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "970e22ad-a76c-4fdb-9eab-4b9d168e14b3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0a5fb771-7350-43b4-82db-38d878a77775"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7d73ba31-aecc-4768-9466-7d3e9d78e5d2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "68ef39e1-c201-4797-af3d-f152f8d898b7"
                    }
                  }
                ]
              },
              {
                "id": "9310c8da-ad99-4894-88a9-e1cfd33a1bcc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8d845b10-3524-4459-928b-e1306f5c5a65",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5fd1e11-1a5d-47db-98b2-7dfd8f58c221",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "c0b16d12-e2b7-4108-8522-e6f033fa6b9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "123a866b-3b17-42d4-a4f1-c03afa5dca4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fb8402fd-a168-4c58-9ea2-7780cecfd575"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd49c23e-bbc9-40f8-816f-28f06b1fb237",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20b62487-1f60-4a2e-96ce-2bd2c8eca706",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "6a395513-b8ca-47ca-9a99-4fcb69f82025"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31978908-5b3a-44c5-a1c1-b9f8470b0644",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "32d46c09-3531-49a1-a98e-49b7a58cbef2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5754d94e-d621-4ef6-a695-65da7dc62b55",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dd19e8ba-d653-4804-9121-d22d01e40fc4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fe2951f7-4d1f-4e2b-b5b2-76cd54fbc357",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "444375c7-0094-45a5-83eb-5fa3c1ea50e7"
                    }
                  }
                ]
              },
              {
                "id": "4558278b-9f3d-4f09-a7e6-78c00b520295",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "b7dcd3ef-4ccc-4023-af32-a25ed2bc58d2",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f59857a-d1ef-4c37-81b2-367f10973653",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "9d6db9c0-d1b5-4915-a193-135f7415bfe2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29e0bb44-77a8-43e0-80fc-9288c8c33938",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53e27406-7574-4ec3-a05a-d5ee65bcc401"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "92b04fc8-245e-4328-a37a-583dc08e2b56",
            "name": "Positive Testing",
            "item": [
              {
                "id": "dc1f8ce4-b316-4fab-bb73-ab751857f34b",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9443e1ce-edfa-401b-a697-cdc5f429ac18",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "4bf02cf7-cc5e-4a99-88ee-2cbc9971def0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0329a726-6e54-4cee-b2af-02ed90eae07e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6f2dfde8-dccd-44ce-994b-7d1afcea92d8"
                    }
                  }
                ]
              },
              {
                "id": "5329babc-e86d-4d45-a0c7-4ba1471624ac",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4d9a9d9a-6cec-4a73-947c-905a65d5290f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "2e77d10b-9964-40fc-855b-6206629de2bc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c4833461-2603-44d1-863d-54e37f4683dc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "93a94968-705e-4f76-a994-baa665a7aae0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7334a8de-4d58-4f85-adde-a3f44d1425a3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "7b8ad0c8-7779-48a0-8ace-d170626d0be1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e3505b57-b372-4071-b124-cd812ba86d50",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b0759e66-bba1-4819-a5a9-c9b60c2e2e86"
            }
          }
        ]
      },
      {
        "id": "3107399a-e760-41d9-b373-157d7190daa7",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "a71f05ee-b428-4af3-9369-108160324abe",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c3a38fb9-6da0-4a16-a243-2b29b8c230bd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "840b5a01-7973-4e36-ab47-32175b17ff6d",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19bc2447-fb2e-4115-a076-53d720e6f70c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "4b2aea4a-fa8c-450f-8888-4162d0866f6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b2ee676-e6fa-424b-94c6-0b239508ef90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a4a54561-8aa5-464d-886d-546dc1c8f022"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bdd7de0-9995-439f-837b-5a48fd15e1df",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a346f6d2-fe70-45dd-bd52-522a3e8d7a86",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "e18c331c-6e2b-4752-85a7-a9e0f753f068"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "287633a9-2e86-4d5f-a780-efcc0df17dd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "58884d44-0700-410c-8f44-22a6cc91bc78"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "86ec2788-80e8-4849-9851-7c59c8821cbd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ef3672ee-2ac3-499f-9ea5-f4b9e93ff362"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d77b85b2-4c57-4e70-8cd2-b02fef149da4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "40d7ed57-0199-4310-b504-3c63f15ca556"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d48c54a0-b1d4-465a-b974-67476b1c0c00",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "ea7717eb-5263-4bd6-a959-6923123babe5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "84180413-4be8-43c9-a886-82de50427242",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c1466d9c-79db-4dbf-b6fa-9103ca4110a2"
            }
          }
        ]
      },
      {
        "id": "484bb2c3-2e61-4f0d-8486-5d0a0b18816f",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "7951b094-0b8d-49ee-80a0-71ea8e2482f0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fef63a97-4308-4681-a378-1daecdc24cac",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8ae3a5c7-2d20-4e32-adb3-249db05e865b",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59a60456-739b-4427-b1f4-04ec3e62e028",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bf5f717a-8213-4c4e-988e-7d7f4560b063"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ffaca2a-b470-4a25-977c-7687a66226de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a5787370-1a9f-448e-8e0c-d331fcb10e24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1defb6dc-b669-44dd-b418-4ed91301858b",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbf54e1a-66ea-4c88-90fe-d081e5ce4f0f",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "d3257ceb-7ed9-43e6-8e86-9f947528d186"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a014c90e-85a1-42a4-9947-1b804deb7890",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3fab391b-2b22-4a8c-a487-6d20cf124912"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3928d166-5c63-4c55-8af5-c8a879c06c2e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "324f0d43-28b7-41e9-a493-77fe8e60d5cc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "018be5be-3125-4ddc-9110-45ec18eec597",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d00ff1a6-a438-40f8-b2b9-ba1214e9fce2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "01fa5b72-0b9b-4f49-a907-1e272b96ac45",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ce58de4c-1b36-4c70-b427-5cd8262bb5d7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c5796286-101f-486e-baa8-f7a00434bd52",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7761992b-e142-455a-a679-d4fdee6b00f0"
            }
          }
        ]
      },
      {
        "id": "e0d5b8f2-53b0-4481-9bfb-7bb1a0beab67",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "4edf9c72-5024-4c4e-b633-947035416a54",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7e7a67cd-9c79-4fd7-92b5-1a0d5f0331b8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8fbde559-5323-4dda-97ce-7c77ced7323c",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b9eebaa-ab81-4422-87be-f9528ad12687",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5205aa46-c92d-4a4a-97f3-e59b7c122998"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32a6c375-0f84-44be-bff3-cff805906f2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5fc77761-3e8b-47b2-9cfd-2a946bfd5769"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ff054fb-5e9b-4c1e-968c-dd940e596f4e",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6147f1eb-8f38-4eee-85c0-ecd840a6fe91",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "7f6c7d79-f9b9-4d5a-8978-29a79770e253"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06f70c1d-b56c-49e0-89b5-cc709e3cf246",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d081fe89-6b52-44e9-b2ce-22222865888a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0089a43c-7a03-4593-8652-11fc827f4d80",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4fc42eee-6cb5-4204-ad95-66018c9b5c46"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b682438b-3414-4cd4-a956-b8ca1baff13b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "385bde70-0a17-46ba-aefb-4bdee0a2cfe8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "08d960d7-afc8-492a-ad77-eb072fc870fa",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b034af0d-fe31-42c6-ad59-05b3ee1d9b9d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "50635d29-a843-43a8-853c-f0f950a2c18c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "95b6e61a-3cd4-4a57-8041-9bda5b456721"
            }
          }
        ]
      },
      {
        "id": "0f07bd3a-2e06-4f25-86f7-a5ec596ffdf8",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7f0b335f-3064-4be2-85ba-bd9fac434db6",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "65ad1bea-56ab-4a00-a953-5fa6a70e6a0d",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "15539d72-86d5-4539-9414-8e9286d09f8e",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e3f054d6-fda7-4e2c-bbd3-a402ed2fbd2f",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "08dbdf9d-fb05-4e89-b9c3-ebbd717e6aed",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 719.1423076923077,
      "responseMin": 7,
      "responseMax": 9052,
      "responseSd": 875.6725321686604,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1679618257900,
      "completed": 1679618455720
    },
    "executions": [
      {
        "id": "bba81c17-b357-4ed6-bae9-9cb5304ec9de",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "938f8dc9-3e1e-4fd2-b223-2bf3a58d18c8",
          "httpRequestId": "fc841ea2-69fd-4f9d-8788-88e5f9fbc790"
        },
        "item": {
          "id": "bba81c17-b357-4ed6-bae9-9cb5304ec9de",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "b21f2841-36b0-4de6-a948-7c02f8e76f4b",
          "status": "OK",
          "code": 200,
          "responseTime": 52,
          "responseSize": 0
        }
      },
      {
        "id": "55969d01-a7ff-4f25-beb5-582f9b422541",
        "cursor": {
          "ref": "a0748824-3cd0-4d06-9b0b-78d65f065c88",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "f583c34c-a78c-459f-94b9-ac019378b86a"
        },
        "item": {
          "id": "55969d01-a7ff-4f25-beb5-582f9b422541",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "000e688f-8af3-4b91-80a1-4998e63ce2c9",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "bce5191e-272e-4db3-ae5a-eb39efb72f6e",
        "cursor": {
          "ref": "956da1ab-1e38-43a5-b9fc-f851f61556a5",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "dcf8207a-8bad-4b90-a311-da283585ece5"
        },
        "item": {
          "id": "bce5191e-272e-4db3-ae5a-eb39efb72f6e",
          "name": "did_json"
        },
        "response": {
          "id": "9de6bb3e-5f88-4995-87ea-66182ef4506c",
          "status": "OK",
          "code": 200,
          "responseTime": 735,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8d81e9d-d05d-4395-8684-548096ab8aa4",
        "cursor": {
          "ref": "4b5f46e4-9312-4269-91d7-f1ed9b9fd376",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "8b835f2f-21a0-4afd-9605-a13fa039fd4b"
        },
        "item": {
          "id": "e8d81e9d-d05d-4395-8684-548096ab8aa4",
          "name": "did:invalid"
        },
        "response": {
          "id": "3d895374-cfe1-4cd5-86e1-0e4410e2a54b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 727,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8d81e9d-d05d-4395-8684-548096ab8aa4",
        "cursor": {
          "ref": "4b5f46e4-9312-4269-91d7-f1ed9b9fd376",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "8b835f2f-21a0-4afd-9605-a13fa039fd4b"
        },
        "item": {
          "id": "e8d81e9d-d05d-4395-8684-548096ab8aa4",
          "name": "did:invalid"
        },
        "response": {
          "id": "3d895374-cfe1-4cd5-86e1-0e4410e2a54b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 727,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "505210af-190c-43b7-92bb-5d4ed5329fcc",
        "cursor": {
          "ref": "18181199-a547-45c9-be70-a0bef51815b3",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "970c7388-c6d0-47c4-bbc1-5b23d1e89909"
        },
        "item": {
          "id": "505210af-190c-43b7-92bb-5d4ed5329fcc",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "7cc763c5-9a11-4445-9028-4e6ebcd95e51",
          "status": "Not Found",
          "code": 404,
          "responseTime": 673,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b04ec3dc-b349-4253-a377-653963981868",
        "cursor": {
          "ref": "2207d132-03db-48e0-b1f2-b54630afee18",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "9e59d0b0-6322-4bcd-9e7a-5801696838dc"
        },
        "item": {
          "id": "b04ec3dc-b349-4253-a377-653963981868",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "754e9396-b943-450e-88f6-31361fdc9162",
          "status": "Not Found",
          "code": 404,
          "responseTime": 608,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b848749-476b-46ec-b7b1-5e25dbbdb518",
        "cursor": {
          "ref": "d7ff70fd-8687-4c16-944d-09163776b677",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "517269fc-f864-497e-bed6-ff226c1c1a0b"
        },
        "item": {
          "id": "2b848749-476b-46ec-b7b1-5e25dbbdb518",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "63309dd4-6277-4901-b3af-759bcffd3be1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cd8930c-fd10-4612-966d-cd330ca591be",
        "cursor": {
          "ref": "41a20836-5ae2-43d9-b6ef-2c3083f8d76d",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "e6456996-6777-4af4-89de-4c63e82cf103"
        },
        "item": {
          "id": "9cd8930c-fd10-4612-966d-cd330ca591be",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "5e5762dd-2dae-4b06-8799-f364bb1112f5",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 675,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cd8930c-fd10-4612-966d-cd330ca591be",
        "cursor": {
          "ref": "41a20836-5ae2-43d9-b6ef-2c3083f8d76d",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "e6456996-6777-4af4-89de-4c63e82cf103"
        },
        "item": {
          "id": "9cd8930c-fd10-4612-966d-cd330ca591be",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "5e5762dd-2dae-4b06-8799-f364bb1112f5",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 675,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35cf3519-72d2-40c9-8375-19cce5071467",
        "cursor": {
          "ref": "469738c7-4f77-437c-88da-017b4c222bff",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "111bf868-fb39-4f59-95cb-7eb815d915d6"
        },
        "item": {
          "id": "35cf3519-72d2-40c9-8375-19cce5071467",
          "name": "identifiers"
        },
        "response": {
          "id": "a462326c-2012-4265-9629-d2fd8b56a854",
          "status": "OK",
          "code": 200,
          "responseTime": 1621,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dd7e615-ab7c-4348-a11d-b91320177a57",
        "cursor": {
          "ref": "2c89a0cb-fa3e-4d3f-9233-b2da8c1024ae",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "2d608ce6-b741-41a8-9df0-3d8196f5c0c5"
        },
        "item": {
          "id": "4dd7e615-ab7c-4348-a11d-b91320177a57",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "b94d56be-4fa0-4e5d-9cc9-2dd87c24a653",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 970,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dd7e615-ab7c-4348-a11d-b91320177a57",
        "cursor": {
          "ref": "2c89a0cb-fa3e-4d3f-9233-b2da8c1024ae",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "2d608ce6-b741-41a8-9df0-3d8196f5c0c5"
        },
        "item": {
          "id": "4dd7e615-ab7c-4348-a11d-b91320177a57",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "b94d56be-4fa0-4e5d-9cc9-2dd87c24a653",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 970,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc8dab00-5b87-44d1-94aa-47cd0b83e677",
        "cursor": {
          "ref": "b3e78dd9-d3a5-44dd-96a3-e92307d7946f",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "bb727182-f256-4741-b44e-c7681f1ef38d"
        },
        "item": {
          "id": "dc8dab00-5b87-44d1-94aa-47cd0b83e677",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "e6cb47c5-f15c-4d65-b214-7603c7fad17c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 915,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c72db586-e1fa-4153-adf6-9ef194d61e73",
        "cursor": {
          "ref": "fb6dff0f-c9cd-40be-b8bf-cb79d6be27c9",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "9320fbd1-63ed-4921-91c1-277ad5ac9628"
        },
        "item": {
          "id": "c72db586-e1fa-4153-adf6-9ef194d61e73",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "ac46fc84-eaae-4296-8b21-e549fe8c2e71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 796,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "204cea59-ac93-4560-8a7e-f000181c6b60",
        "cursor": {
          "ref": "ea0f0196-0072-44dc-8f89-fc0f5e4b1102",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "846df7d2-4a8d-45fa-a10b-e2f86b3774ad"
        },
        "item": {
          "id": "204cea59-ac93-4560-8a7e-f000181c6b60",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "fed26b3b-ba3f-41d2-a3af-cc538d8be030",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 550
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c71b55bc-b342-49cc-b6a2-820e445bab0f",
        "cursor": {
          "ref": "6015e6b3-7803-42e5-ad3f-47b5b1a8908c",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "8769f363-9f2e-436e-bc1e-03b6c6147f66"
        },
        "item": {
          "id": "c71b55bc-b342-49cc-b6a2-820e445bab0f",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "cbab1ec6-241f-4826-8d65-69e9d2e4bcef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2cf59e8-9fb3-4195-91e2-0693f32f43a0",
        "cursor": {
          "ref": "1d0f3f31-b512-42cd-b299-7c463dbd581c",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "d5f2afce-50a8-447c-8ecd-3bfad4050652"
        },
        "item": {
          "id": "a2cf59e8-9fb3-4195-91e2-0693f32f43a0",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "fd4b5b33-0a21-4514-81c9-d5b4517f1165",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 577,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83199308-74ea-4c79-8dfb-7b7e1a21e0a0",
        "cursor": {
          "ref": "abae2d02-7488-4815-8fc4-cd95cd5443d0",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "2360f8a8-bec2-4aeb-9d49-5a224f9a2757"
        },
        "item": {
          "id": "83199308-74ea-4c79-8dfb-7b7e1a21e0a0",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "008ae957-6b22-4fa8-827e-9e4e31f65a17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 617,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7dc57e1-5d70-4f86-818d-7b4b82d40b75",
        "cursor": {
          "ref": "e5c49f20-e928-47bc-ad8e-ddc65c5e8d1c",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "19869b76-f549-4855-8d98-9d5aa1dd64ad"
        },
        "item": {
          "id": "d7dc57e1-5d70-4f86-818d-7b4b82d40b75",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "2ad04396-2a54-4c35-bab0-6a2015467e20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 600,
          "responseSize": 637
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e0e209f-022c-49c8-a0aa-e28c8dfcab1b",
        "cursor": {
          "ref": "df20e7bc-a83a-47e6-9f05-a911df04bcae",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "9e5f6880-79a3-4b43-b23f-999a39d34d7c"
        },
        "item": {
          "id": "6e0e209f-022c-49c8-a0aa-e28c8dfcab1b",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "5b41f1d1-d28d-4182-8d66-22086f3ba014",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 664,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99848e28-135b-46bd-a639-81add38793bf",
        "cursor": {
          "ref": "c8502f8c-cc49-4bcb-98cc-f26cd68490be",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "7e599c6c-d12e-4791-a94f-c878e2b1a2fe"
        },
        "item": {
          "id": "99848e28-135b-46bd-a639-81add38793bf",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "fce1ec80-ec1c-4aef-88a6-382352ce4913",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 848,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e85c02c8-9e04-4bf7-87fc-b1c7580df59a",
        "cursor": {
          "ref": "8b8b3f2d-5717-402c-be6c-0bab41608c46",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "9063f7f0-62e4-49c9-adef-6325337e1a67"
        },
        "item": {
          "id": "e85c02c8-9e04-4bf7-87fc-b1c7580df59a",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "1a099525-cb6f-42a6-a69c-6793dca52f1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1015,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa637c80-40bd-417b-9180-83d3fc9803fc",
        "cursor": {
          "ref": "2d227b6a-4f9e-420d-a498-40f2fd9b4d0e",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "51cf2f60-f1f7-4b0b-a34a-7a41f80324fe"
        },
        "item": {
          "id": "aa637c80-40bd-417b-9180-83d3fc9803fc",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "ca416407-a735-4de9-80c6-5db607796ec5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 817,
          "responseSize": 646
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28e72067-5f94-4d38-9634-696147917622",
        "cursor": {
          "ref": "668c5914-cc43-460f-a35b-97dd40b91f11",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "f17f383a-a31b-4a40-8b83-56068efe83ea"
        },
        "item": {
          "id": "28e72067-5f94-4d38-9634-696147917622",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "9bb1458b-0ffe-4607-9c6d-dc67a8102aa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 804,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ba6b6e7-e620-4516-baa2-7f1efd1c4ea4",
        "cursor": {
          "ref": "5ae4645e-9ff0-4f9a-a518-54a7cc02559e",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "abbc4be9-c105-4ed3-8565-e05788720571"
        },
        "item": {
          "id": "3ba6b6e7-e620-4516-baa2-7f1efd1c4ea4",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "89fe86e7-0f69-4f22-8698-bd9a232a9a35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 917,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf486c59-ac9c-4fc4-be7f-59b0aea8b1fd",
        "cursor": {
          "ref": "73dd5499-80d0-41ee-9d0a-aefb060a30a6",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "98c75ee0-60e5-49bc-87a9-9aaf3d2de1eb"
        },
        "item": {
          "id": "bf486c59-ac9c-4fc4-be7f-59b0aea8b1fd",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "ac0b60a1-ac8a-4b8b-8274-264015984dee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 577,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "def055e0-8e0c-46f5-82a4-afb5937ac00a",
        "cursor": {
          "ref": "c60184d1-bde7-4607-bccb-df52640cb9d9",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "2a58793f-d031-4590-b04f-772076727645"
        },
        "item": {
          "id": "def055e0-8e0c-46f5-82a4-afb5937ac00a",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "4d19278c-c97d-421a-b8b9-9655fb825ffb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 627,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ac877e9-d808-4b2c-b7a5-2578f27551b3",
        "cursor": {
          "ref": "cebd0215-c638-479b-865a-bdfc31237723",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "9ca0011f-3a87-4941-9926-19c9f99d90d6"
        },
        "item": {
          "id": "1ac877e9-d808-4b2c-b7a5-2578f27551b3",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "fed7c2bb-c50a-4688-b33e-006aad8f3adc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 666
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19b2178e-28ba-438e-aa6a-df8d0352a780",
        "cursor": {
          "ref": "0714b3fa-edd6-4441-b28c-f21f17a064cc",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "dff14de0-219f-467e-879c-51a759318789"
        },
        "item": {
          "id": "19b2178e-28ba-438e-aa6a-df8d0352a780",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "9920227a-5d86-4146-89d9-c11af7c87e94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 682,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "661969ae-acd7-42cd-8fd1-87ae88025f6a",
        "cursor": {
          "ref": "4e982ece-a094-426a-99e0-74609bd58814",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "e5a3a318-ebfb-4c0b-9e98-b8316db34925"
        },
        "item": {
          "id": "661969ae-acd7-42cd-8fd1-87ae88025f6a",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "94a9095f-29d0-4765-98a4-7580de2512e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b89c9b8-5bbd-4579-a907-aa7fe4328066",
        "cursor": {
          "ref": "bd0e3a88-a8b5-4fc6-bce0-a59ef58f6791",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "f28f251a-7239-4013-9f00-6fe1abd397d7"
        },
        "item": {
          "id": "9b89c9b8-5bbd-4579-a907-aa7fe4328066",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "5c984149-e913-467e-ba63-e57272fd61aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "710a87a0-42cd-4dbb-b6eb-4f4d4e699c4e",
        "cursor": {
          "ref": "558a7f80-c348-45bb-be10-ba57a9e5a5d8",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "d0a3d06a-fd55-41d1-b2d3-76873942d92a"
        },
        "item": {
          "id": "710a87a0-42cd-4dbb-b6eb-4f4d4e699c4e",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "f1903ec1-0835-4d02-8991-d57815f84e6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 627,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b97c54a3-2000-47ad-8bf3-1bb5c8a08832",
        "cursor": {
          "ref": "5994e76b-aede-4e96-88b6-c593ffc3e96e",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "0c76230a-179b-4a74-9783-df1eb5d96c1e"
        },
        "item": {
          "id": "b97c54a3-2000-47ad-8bf3-1bb5c8a08832",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "565aa1e0-525b-4ccc-9ee2-2db5782af37f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 947,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad04b1e4-ec83-43df-a000-1922b8b44eb0",
        "cursor": {
          "ref": "80ff2bc9-d3c9-4f8e-b500-5ca326840cb9",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "26329f64-1b2a-449d-9336-90749fb745ff"
        },
        "item": {
          "id": "ad04b1e4-ec83-43df-a000-1922b8b44eb0",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "fe90381a-627a-4b36-9d22-88d347992f0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 847,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4611bc53-7b88-40c7-94f6-61fdfd437545",
        "cursor": {
          "ref": "cf430f45-d4b4-4d00-bf59-2e5a3539a3a7",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "563eda01-0014-4996-8f5b-d67078c0d026"
        },
        "item": {
          "id": "4611bc53-7b88-40c7-94f6-61fdfd437545",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "f60237e1-3b50-4947-824e-c6fa263457e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 802,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e8dae50-1967-43f5-a054-a2ba1c11cca3",
        "cursor": {
          "ref": "7a1bfadd-6e6b-4981-8ba2-03d411820fcc",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "760ee04e-5b17-4f29-aba8-88851c4f87bf"
        },
        "item": {
          "id": "2e8dae50-1967-43f5-a054-a2ba1c11cca3",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "28edc11b-bcd8-4139-aed8-f71986b1328c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1056,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac4a7156-0678-4afa-87fe-d1190101cadb",
        "cursor": {
          "ref": "56fdb380-1d0e-4f89-aba4-0b5f626ef824",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "b0e0105c-aac6-45a8-8a26-659ad33aa570"
        },
        "item": {
          "id": "ac4a7156-0678-4afa-87fe-d1190101cadb",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "a2713b82-7401-441c-aa9a-32421b89ede3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 948,
          "responseSize": 624
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a5fb508-8d92-437f-a20e-d825007d916d",
        "cursor": {
          "ref": "2763a483-a2ec-48fa-90a0-ad8dfec4ffdd",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "c576abdc-0d77-40a3-af01-84a47bd1bb21"
        },
        "item": {
          "id": "4a5fb508-8d92-437f-a20e-d825007d916d",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "89c3d8e1-55a8-492b-8f43-ac81e0777698",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 806,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15df0dbc-d141-4610-840d-34aff2f4ef47",
        "cursor": {
          "ref": "3f29e8cd-f1c8-4be5-bed4-11a2d383e596",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "849563af-d32d-414b-99b4-33db843b1253"
        },
        "item": {
          "id": "15df0dbc-d141-4610-840d-34aff2f4ef47",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "c0c823b9-40ed-48e8-8fe3-ca0d6871cba2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 901,
          "responseSize": 623
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6797be4-8d9f-46d5-8d94-c30c5544e8cc",
        "cursor": {
          "ref": "216ce730-4811-4916-b9a3-b7e37afff5ca",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "24faef5d-bf1b-428d-a2ea-48727becbb55"
        },
        "item": {
          "id": "b6797be4-8d9f-46d5-8d94-c30c5544e8cc",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "2da425be-0350-4e38-aeaf-ddb06bbd749b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 894,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0fa250e-032e-4d2c-9da5-ce2efb1414a7",
        "cursor": {
          "ref": "0c45d138-67d7-4976-99eb-9e7f8e185a3d",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "0bccdf50-4104-4e75-b134-7f81f45c4d21"
        },
        "item": {
          "id": "a0fa250e-032e-4d2c-9da5-ce2efb1414a7",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "f0beba3b-30b5-4904-b875-201c2e452b4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1031,
          "responseSize": 546
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a39c4cfc-9278-4fe0-bc03-5c64fa457edc",
        "cursor": {
          "ref": "2a300f3e-3b6a-4771-891d-a52fa292dc05",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "5d576ed0-1738-42a3-8817-6ecfd3b9814e"
        },
        "item": {
          "id": "a39c4cfc-9278-4fe0-bc03-5c64fa457edc",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "3ff19c85-67f9-4ab7-a5d4-f2ce92498102",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 1046
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ab769aa-068e-4523-b16d-283b87125eb2",
        "cursor": {
          "ref": "424a2747-5c9e-48dc-ba8b-32475f484bad",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "9d54e635-8c76-4361-b955-1a209dd5a9aa"
        },
        "item": {
          "id": "0ab769aa-068e-4523-b16d-283b87125eb2",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "df580aee-c35d-4b5c-b44f-dce1ecb6401f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 658,
          "responseSize": 975
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "547c99a0-ebf1-4e46-9dc7-056f6386504e",
        "cursor": {
          "ref": "758c8159-fd83-417b-82ee-48d2ec2765fe",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "0b542801-1d26-4444-a235-922587e24ea1"
        },
        "item": {
          "id": "547c99a0-ebf1-4e46-9dc7-056f6386504e",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "59800847-8425-4f1b-ba38-8cb6b3e7df1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 616,
          "responseSize": 972
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e65361b6-d8b8-4c54-a4a9-a0044e209103",
        "cursor": {
          "ref": "633561db-c258-4103-8717-c2d9f3e0ecf4",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "30a94f4e-2591-4cae-bac2-9b69a3fc53a7"
        },
        "item": {
          "id": "e65361b6-d8b8-4c54-a4a9-a0044e209103",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "64fe6c7d-b2b6-4d36-8682-cc2dd5f28b63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 974
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8f80879-c28f-488b-90a8-ceeb8116d9cd",
        "cursor": {
          "ref": "b235999e-554e-460c-b105-1164213e10f0",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "58ce6b9c-5ba0-41f2-80b7-3d706d81094a"
        },
        "item": {
          "id": "c8f80879-c28f-488b-90a8-ceeb8116d9cd",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "6b47eb20-6c47-4195-8ea5-30ed074709bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 1377
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e73e4c6-42d6-466c-bdda-3ed494d0d37c",
        "cursor": {
          "ref": "d1950060-6af2-46a4-97cf-ac65e74484ac",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "d6cc7688-557e-437b-af0c-ddacb3949df5"
        },
        "item": {
          "id": "4e73e4c6-42d6-466c-bdda-3ed494d0d37c",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "5bdca1cf-2010-4ecb-be36-d31ea4958ae8",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 1167,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5737186-f7ac-4c6f-927a-ef8d9ae6a6b8",
        "cursor": {
          "ref": "586e3dfa-32d6-47dd-be19-6d90141d885b",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "ea5ba251-a3e8-4c66-bf82-bf334636a171"
        },
        "item": {
          "id": "e5737186-f7ac-4c6f-927a-ef8d9ae6a6b8",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "8e1b1044-845d-4524-9372-34ee9f617835",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1139,
          "responseSize": 1005
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6275f3cb-9464-468e-99e5-d29720346778",
        "cursor": {
          "ref": "9da64a3e-14b0-4fbc-b374-754b411c504d",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "1afe1cce-9da8-430d-b5a2-4f4fa55e43a4"
        },
        "item": {
          "id": "6275f3cb-9464-468e-99e5-d29720346778",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "1163d548-e093-405f-8805-d3f96d74cc43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1073,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53f76787-3f70-4d5a-8e49-109f4f812aad",
        "cursor": {
          "ref": "5a9ad903-7282-4e5c-ba87-045bedb0c585",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "3b910688-bca8-4d3e-98e6-15973284c298"
        },
        "item": {
          "id": "53f76787-3f70-4d5a-8e49-109f4f812aad",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "8d592934-a111-4be1-8e56-53e162b86308",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 969,
          "responseSize": 1314
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdba5e9c-61f8-421f-a5a4-201b132e1a3f",
        "cursor": {
          "ref": "16626734-e4d8-4af6-ab76-d93b99362c80",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "ac21d976-87f5-42a6-8bdc-a7fcde288599"
        },
        "item": {
          "id": "fdba5e9c-61f8-421f-a5a4-201b132e1a3f",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "f2b5ceb0-dca3-4082-a5ce-3a8344c1ff2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 613,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48150b70-b7a8-4f3b-8956-306c9e295fc3",
        "cursor": {
          "ref": "9cc9b104-be1c-46a3-b4de-42fe39dd78ec",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "39c9878c-d408-4403-92e2-f7b6998007b3"
        },
        "item": {
          "id": "48150b70-b7a8-4f3b-8956-306c9e295fc3",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "be51058f-f2af-495c-a699-e9994a0dbc6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 630,
          "responseSize": 1313
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ae44e42-95e3-4476-ab41-8535ffe1c380",
        "cursor": {
          "ref": "bf67852f-0d0d-4bf7-9aa2-b1cc50b1dd52",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "ea39bff6-be25-45d9-aa66-914d48f04441"
        },
        "item": {
          "id": "3ae44e42-95e3-4476-ab41-8535ffe1c380",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "8067e739-dc33-4379-b662-01b65e14582a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 600,
          "responseSize": 1716
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c909514b-eb86-44e3-a76c-edf3066ae6a0",
        "cursor": {
          "ref": "ece6cbd4-bd1c-489e-aa28-9aca238f4e04",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "845c43a9-30d9-4163-a3d2-4e168bca6a4a"
        },
        "item": {
          "id": "c909514b-eb86-44e3-a76c-edf3066ae6a0",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "264f0903-6acb-4cdd-90c4-243b1e37f175",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 729,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b535ffcf-b322-45c3-b46b-1305cdf93f23",
        "cursor": {
          "ref": "66f63db1-23c4-4ced-96f5-d80c9d09d976",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "8388ce17-a0dc-424e-9ba1-665ba7146235"
        },
        "item": {
          "id": "b535ffcf-b322-45c3-b46b-1305cdf93f23",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "ce685b47-3a03-40e2-b172-af86636284dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 598,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12f98b8e-8ec4-40e3-b3a5-875f120d7d73",
        "cursor": {
          "ref": "05ee4cba-8146-496d-848f-a9d47481ef8d",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "ff54cfdc-21ca-4328-bd24-575fdf7259c5"
        },
        "item": {
          "id": "12f98b8e-8ec4-40e3-b3a5-875f120d7d73",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "22787840-3bbf-45c4-ae0c-2bf25ed47991",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 643,
          "responseSize": 628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a902a16-0ba3-4c18-bc47-3dfcf896edc8",
        "cursor": {
          "ref": "b34f49b2-acd7-42b8-a800-4d01084209f7",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "8f5b7f51-33d8-4cf8-81ab-cfb8840221e4"
        },
        "item": {
          "id": "8a902a16-0ba3-4c18-bc47-3dfcf896edc8",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "4eddbbad-9acc-4200-9aec-a776a7fbdec9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5d6dc80-61c5-46d0-bef9-4dffb6101eaf",
        "cursor": {
          "ref": "cdedb0b0-cdc1-45b7-b594-5c4bb38c253b",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "0d9cfe17-2c96-44a8-a9b7-608748ea2adb"
        },
        "item": {
          "id": "f5d6dc80-61c5-46d0-bef9-4dffb6101eaf",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "9586410a-7056-48d4-9bba-686337c5a84b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 609,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7cebc83-a5f5-4398-87b0-44d94244f1fd",
        "cursor": {
          "ref": "668d15ee-1f3b-4414-9930-732a35c84c94",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "bab181b4-9a94-4784-9b76-006424a8da13"
        },
        "item": {
          "id": "e7cebc83-a5f5-4398-87b0-44d94244f1fd",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "59aacf44-16c3-46a7-bf39-93aa455de141",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 619,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5010429d-82e9-4762-ba15-9adb26fa9869",
        "cursor": {
          "ref": "87b6cfbf-29b5-4c4d-af8a-ab8a824a8078",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "b1a01007-ff21-433b-97a9-d8c5975efa5b"
        },
        "item": {
          "id": "5010429d-82e9-4762-ba15-9adb26fa9869",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "3f6973e6-2729-4dc4-91d3-00df06d6e3bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e5a6584-4108-47a2-9a8b-a106237c9d8f",
        "cursor": {
          "ref": "d5d912bc-7251-4a46-8b2d-d61e9c0080ca",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "71ee63cf-671d-4935-be17-e83c02e479f7"
        },
        "item": {
          "id": "3e5a6584-4108-47a2-9a8b-a106237c9d8f",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "8e0c871d-46ce-460a-9ffc-ba62d7287222",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f1c9df8-fd25-4498-84d0-213f7fbc4b08",
        "cursor": {
          "ref": "4947e3a8-fad7-42d4-a7f0-e3f839a64dc8",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "6a0b3338-1f4a-4af5-ab72-7aeded587eb8"
        },
        "item": {
          "id": "6f1c9df8-fd25-4498-84d0-213f7fbc4b08",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "caeadab9-967d-43e4-9bcd-ab6d6364c6cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 588,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78680570-012a-47cf-ae7d-af3a741b7d38",
        "cursor": {
          "ref": "2c8d6bff-bff4-45fa-8821-b035188ba365",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "2a2632b5-672c-4ce2-9fb7-4d354a9bcee2"
        },
        "item": {
          "id": "78680570-012a-47cf-ae7d-af3a741b7d38",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "7e326ec3-59ef-48f4-9473-5649ee0bcaf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 1100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab4f504b-a4a4-4b17-a75e-c63ef74ff76a",
        "cursor": {
          "ref": "3e188ff5-6b0b-44b2-ada5-5581cd20fb9c",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "9ce00202-43d2-4c40-b755-8250c822ecd3"
        },
        "item": {
          "id": "ab4f504b-a4a4-4b17-a75e-c63ef74ff76a",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "368bfd81-e62a-4b02-9114-29a2a1d4900b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 591,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "093bc27a-4ddc-418f-8593-a86d898e8d20",
        "cursor": {
          "ref": "1d5f5ba2-871f-4cbd-82d2-69643452d492",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "799654dd-b29b-4761-affe-327d7c474fc7"
        },
        "item": {
          "id": "093bc27a-4ddc-418f-8593-a86d898e8d20",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "78eb304d-420b-4a96-a8af-00045e8ca6d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 611,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e92f438-4cd0-4168-9376-b72bb79b3321",
        "cursor": {
          "ref": "55deeabe-4b19-4e9e-a638-0d6583da5788",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "96a038a0-731a-4241-ac58-0ecd1313b4bb"
        },
        "item": {
          "id": "2e92f438-4cd0-4168-9376-b72bb79b3321",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "39ea9877-aa14-4acf-a712-427a21366c0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 616,
          "responseSize": 908
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "517d0518-a342-44d5-9ba7-c2a5d6ea055f",
        "cursor": {
          "ref": "7de22741-9d6a-4df0-bace-3c5fd54d5490",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "299ac137-d99a-4ec9-b99c-6179a7bfae00"
        },
        "item": {
          "id": "517d0518-a342-44d5-9ba7-c2a5d6ea055f",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "8f067876-a43f-43e9-a0dd-25189ae7b6ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 601,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b19df18a-f77a-4a76-8be4-84cc989d943d",
        "cursor": {
          "ref": "0cae7969-0212-4234-a480-9f395f262b76",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "94f46a4e-f825-41e2-9fcf-37e06ee3bad0"
        },
        "item": {
          "id": "b19df18a-f77a-4a76-8be4-84cc989d943d",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "a89033e6-497d-448a-9d45-25a74a0781bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 577,
          "responseSize": 1415
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a8b185d-b917-4962-90fc-90e64f8d8056",
        "cursor": {
          "ref": "085ec8fb-c73e-4378-988a-79760949ada2",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "d3ef7d26-a367-4bae-9d73-af2bd8b44caa"
        },
        "item": {
          "id": "9a8b185d-b917-4962-90fc-90e64f8d8056",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "17fc4386-98b5-4f4a-a7e7-35a2e79ea13e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 632,
          "responseSize": 1401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac5c28f2-3b28-4715-b354-4dd6c94c644a",
        "cursor": {
          "ref": "02aa3a9c-3ca8-498a-92b5-33422ad590f9",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "99aee0c6-3555-455e-be5d-244b7806543c"
        },
        "item": {
          "id": "ac5c28f2-3b28-4715-b354-4dd6c94c644a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "c4b28ead-7af7-445d-8f35-000edebf9994",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5998ed3-1c0f-4d3e-a126-ef712bb266ff",
        "cursor": {
          "ref": "f70cfe84-6ef9-4a6a-b840-3ba189c15009",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "54582d33-10f2-4841-a16e-f195d155e9ba"
        },
        "item": {
          "id": "d5998ed3-1c0f-4d3e-a126-ef712bb266ff",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "d5bb4d71-f19d-42a3-b8c5-70a58af16b5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 622,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "427f0ee2-1f4d-43a0-acab-8afcbf001275",
        "cursor": {
          "ref": "4f91bbfb-3207-451f-bef8-8968368ab046",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "993fda45-f405-4100-8e68-c627d158c14d"
        },
        "item": {
          "id": "427f0ee2-1f4d-43a0-acab-8afcbf001275",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "67d70619-9fdc-467b-a42e-380555dd5f14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 610,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97626a75-8c4d-4908-bb66-51ba95a82ff1",
        "cursor": {
          "ref": "b27ac303-1399-4f1f-9bba-055c0e343b38",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "ca089f92-8186-4e26-aecd-81193a9cc376"
        },
        "item": {
          "id": "97626a75-8c4d-4908-bb66-51ba95a82ff1",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "1df17d0a-55e2-4010-8d4d-18f3f1cb0045",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af9d82e9-e576-4694-b9fe-bc419af9c559",
        "cursor": {
          "ref": "144a58f5-05c7-47c1-a5a0-e5b3e27a9354",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "b91af68a-a76f-4e49-b79f-04d83c4c3b1b"
        },
        "item": {
          "id": "af9d82e9-e576-4694-b9fe-bc419af9c559",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "74aa3f40-3356-4415-8f78-d7166e63fe7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd16aa41-f9ba-4466-9550-61c9cf29f9db",
        "cursor": {
          "ref": "c28f1d74-9a4b-4cc9-b0d1-7d0ea8c0911a",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "4e6bbf61-9800-440a-b2d2-b18aaa1371ba"
        },
        "item": {
          "id": "dd16aa41-f9ba-4466-9550-61c9cf29f9db",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "a5eef0a8-1418-47e5-ad8d-1b5c0934a7b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e06cc71f-ee62-44d0-907b-a1ad5e24374e",
        "cursor": {
          "ref": "984a00ca-6545-457e-8176-c1795785b562",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "e4531222-5ee5-45a0-8330-0d320639181b"
        },
        "item": {
          "id": "e06cc71f-ee62-44d0-907b-a1ad5e24374e",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "cf32c718-3eb4-4dd9-ab61-40c8921e192b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41934471-1193-446e-bb54-d334a1bc4757",
        "cursor": {
          "ref": "fc11b567-5925-4afc-9d81-ee0322b92b87",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "182eee09-a630-4bd3-b323-97bad33e1baa"
        },
        "item": {
          "id": "41934471-1193-446e-bb54-d334a1bc4757",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "358bdac4-33d3-45b7-a08e-b9d8d06a484d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 559
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44c23401-50b5-4b66-bfab-55a2c3143fd6",
        "cursor": {
          "ref": "a1b27e39-1629-4985-a5ca-90ac1149b3f6",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "5f015595-f7f2-47ec-88ae-dd5a1716594e"
        },
        "item": {
          "id": "44c23401-50b5-4b66-bfab-55a2c3143fd6",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "ad1292ef-1bb4-450f-8185-21fde133f171",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64cd2021-e8cb-47ba-a80e-edfcf36e1aac",
        "cursor": {
          "ref": "2631e1c9-2408-4a6a-9237-60bc78cdb7be",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "940c7e2e-142e-4c96-960c-6013e0a940c5"
        },
        "item": {
          "id": "64cd2021-e8cb-47ba-a80e-edfcf36e1aac",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "f728424b-0601-4fe5-9d26-df5c788f97f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 601,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ddfde50-515d-49d9-944e-3d01f7723836",
        "cursor": {
          "ref": "afb265de-ff88-443e-bc14-794166f482b5",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "4cef33f8-0f32-4eb2-b32a-9ad555e621e2"
        },
        "item": {
          "id": "7ddfde50-515d-49d9-944e-3d01f7723836",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "5306923d-c407-4779-82cd-8c1bff28a0e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 704,
          "responseSize": 836
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39202928-1df7-4748-8bf3-58d7186c1208",
        "cursor": {
          "ref": "0bf0c242-0c93-4b0c-9ed6-0fd177286c7c",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "e448ad12-2332-4ba1-8127-237546b423bf"
        },
        "item": {
          "id": "39202928-1df7-4748-8bf3-58d7186c1208",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "7e21f8eb-162c-47be-aa32-050927648752",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 621,
          "responseSize": 817
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "122f1a38-a255-4072-9971-c9f2a35ee157",
        "cursor": {
          "ref": "8b1fed90-a858-4958-ba63-bd1259e7f7b6",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "e4ea2fda-7ba5-4435-8988-6a3837e11413"
        },
        "item": {
          "id": "122f1a38-a255-4072-9971-c9f2a35ee157",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "9c4a3c98-dade-4361-a7cc-d1c1b3571013",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 814
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "330a82e8-8f75-4b3a-879b-36d7882ac942",
        "cursor": {
          "ref": "5c9faa22-d418-42b5-9428-64fc73b66965",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "c003a425-7c88-4b13-93b6-1b63fee08706"
        },
        "item": {
          "id": "330a82e8-8f75-4b3a-879b-36d7882ac942",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "0fb7a62b-dff3-4ff4-870f-2a316b976adb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 816
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43eb76e5-e5e3-4854-b6b1-f04e72254e07",
        "cursor": {
          "ref": "df0bbbe5-b910-45a9-ac5c-5390b8135221",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "39dc8a00-7ee8-4a31-9a42-b6ed74b4bfc0"
        },
        "item": {
          "id": "43eb76e5-e5e3-4854-b6b1-f04e72254e07",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "6572d733-b4f5-427a-9dad-7cf8a55933eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 579,
          "responseSize": 814
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb80e68d-e03f-426e-a292-cb281b6f151f",
        "cursor": {
          "ref": "b33b0e62-dd31-4bcd-9fa7-adc86d27015e",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "4140cc5d-1f37-44ef-a3f5-cfc90975685e"
        },
        "item": {
          "id": "bb80e68d-e03f-426e-a292-cb281b6f151f",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "f8491a89-d936-4e5c-bebf-b3f3cdb96e89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "796df434-2390-4c8f-be5f-f3294ba11752",
        "cursor": {
          "ref": "99ac7ec6-ed93-41fb-a0ca-eb7a7fb1fe05",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "e6d6fae8-d3f1-4725-8656-3897d9f7c617"
        },
        "item": {
          "id": "796df434-2390-4c8f-be5f-f3294ba11752",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "c41e918c-fa73-4475-93e5-0e6315503f2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 577,
          "responseSize": 653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b88d0439-d68c-4ff2-ba60-7704fff7d6db",
        "cursor": {
          "ref": "4250f167-c54c-4efb-a0fe-9beac5852a95",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "a1a537b2-7fa5-4123-9b6a-d36f8fc8964f"
        },
        "item": {
          "id": "b88d0439-d68c-4ff2-ba60-7704fff7d6db",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "93788137-6ca2-4c18-bd98-2b75831cf237",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "375b0126-3f0f-4a81-926f-ba2178d62aa5",
        "cursor": {
          "ref": "4e5ad391-ceb6-4e49-9a29-c798db91ca74",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "e5e4b987-46ad-45b8-be96-5e964617d8a0"
        },
        "item": {
          "id": "375b0126-3f0f-4a81-926f-ba2178d62aa5",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "9b6c7541-8a50-4023-9676-4a197bd7e280",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbe51ff7-d819-4719-9b2b-d515036e1edf",
        "cursor": {
          "ref": "ff5d237f-db81-450e-a8b3-e6d22f69def9",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "eb270632-a959-4e95-8f55-b74f9d007da9"
        },
        "item": {
          "id": "bbe51ff7-d819-4719-9b2b-d515036e1edf",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "147d481c-56a0-43f4-ba12-974ea312c7b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 582,
          "responseSize": 633
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6e38304-4406-4a49-a13b-4d84d7db1449",
        "cursor": {
          "ref": "c8565c4c-dcbe-4b4e-982f-ba74602b2d45",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "763ea7f3-4e51-423b-93ef-2cc2cce94580"
        },
        "item": {
          "id": "d6e38304-4406-4a49-a13b-4d84d7db1449",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "8d2930e1-b842-49ec-aad4-76bdb7c6be85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "259bbb75-93c4-4b1a-a599-3160f8065503",
        "cursor": {
          "ref": "0d80bfd6-fcc7-47da-9f3d-cb1d9e26820c",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "271353d8-326b-4625-ba07-10692495ec74"
        },
        "item": {
          "id": "259bbb75-93c4-4b1a-a599-3160f8065503",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "f075ac34-3ab0-4fa1-8a21-2b3925d9da8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 579,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69d3004f-7123-4937-b712-7664892c6549",
        "cursor": {
          "ref": "ae501c1a-b730-49c3-99f4-ff0c4ffa90e7",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "37bec288-03a3-4081-b3a9-a0564c349a6d"
        },
        "item": {
          "id": "69d3004f-7123-4937-b712-7664892c6549",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "f4213d48-d72e-4456-8cbd-303f3277755a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 628,
          "responseSize": 679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f54718f-2b36-4f93-acc4-ba2d9b39ec73",
        "cursor": {
          "ref": "c10fe950-e2bd-41d3-87f7-bccda24e4c9a",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "39950478-feef-4d96-9e4a-2edca83d3092"
        },
        "item": {
          "id": "1f54718f-2b36-4f93-acc4-ba2d9b39ec73",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "9c70f582-7b2d-4d3c-b190-0650abc6463b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ae429ff-8989-423a-8b36-0ddacc322da1",
        "cursor": {
          "ref": "67194c61-39c3-47b3-be24-a0173ec63ffa",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "ee51fb83-f930-4048-a721-6a98d8526a7d"
        },
        "item": {
          "id": "1ae429ff-8989-423a-8b36-0ddacc322da1",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "44dabf4f-01cb-4ac6-985c-1c0e46adec78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e84e0115-38ac-4de5-b315-14544cb1c0cd",
        "cursor": {
          "ref": "80f518f4-5c90-4cc0-842d-ede4b00a72b7",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "a575a81f-fc10-4b40-be77-8ffcad315c27"
        },
        "item": {
          "id": "e84e0115-38ac-4de5-b315-14544cb1c0cd",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "ee776b76-1e9a-4c1b-a8b1-0d947c1371ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 655
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c40e46b-8f10-4057-bdf7-dc2fbe216cf2",
        "cursor": {
          "ref": "5198e5fa-809d-4578-82eb-7e07b989fc07",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "ac73a365-12c0-4b18-9af8-ae52d260078a"
        },
        "item": {
          "id": "7c40e46b-8f10-4057-bdf7-dc2fbe216cf2",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "ba3dea52-7a4e-493e-8452-72776b963069",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 677
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0745de39-c615-4eb2-9274-dbed445a45a7",
        "cursor": {
          "ref": "c00c7763-1185-4cad-9c3e-8811efe59f08",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "4dc77b86-68a8-4bf0-8208-159b0f2e7606"
        },
        "item": {
          "id": "0745de39-c615-4eb2-9274-dbed445a45a7",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "9653de35-ccc4-453f-a048-4aef6865232e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 690
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34a316dc-0a58-4016-be71-ffaeb578675f",
        "cursor": {
          "ref": "ffe0d256-6ca0-4968-9918-49d2751e0a6c",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "ab13c5d6-4c9b-4d13-91c2-5e195a430f58"
        },
        "item": {
          "id": "34a316dc-0a58-4016-be71-ffaeb578675f",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "c4c637c7-5b83-4275-afb0-9495363e074e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 953
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "896f3bab-8bac-4514-8bd0-da2a1e312f31",
        "cursor": {
          "ref": "b2200bb2-c228-4155-8f54-bb01818f5225",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "3bc5c708-4623-430d-9138-7a74585cc4bc"
        },
        "item": {
          "id": "896f3bab-8bac-4514-8bd0-da2a1e312f31",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "101c8f68-b700-40c2-9080-2facfbad8032",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69720485-5583-48fe-97d9-dbd674d62e31",
        "cursor": {
          "ref": "331b2b97-c2f0-4dea-bcb5-fc94dcf17a1d",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "b33d9bce-566a-4803-93eb-0578e42d434c"
        },
        "item": {
          "id": "69720485-5583-48fe-97d9-dbd674d62e31",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "e3933389-dc72-4e90-a351-25d7d70d40da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2162c719-6f63-4dff-9b3a-7f296bcb8f0f",
        "cursor": {
          "ref": "61bdc7fb-5a21-452a-adca-5fbde6b3750e",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "5c7e9636-ebf9-4089-98dd-30c3cc93d6b4"
        },
        "item": {
          "id": "2162c719-6f63-4dff-9b3a-7f296bcb8f0f",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "14e6753a-4e59-49c2-9b96-7b3179780b00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f78036a9-f6ff-41a1-9a45-8570e96347f5",
        "cursor": {
          "ref": "5bb15e6e-1e63-45ba-867b-b1c5c6bc327c",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "7600282e-5203-47c4-86cb-34df192eb623"
        },
        "item": {
          "id": "f78036a9-f6ff-41a1-9a45-8570e96347f5",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "5a181953-dac3-4605-97e0-e2a3088fefe3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff9a27b2-541b-4e80-92c6-1240a09616a2",
        "cursor": {
          "ref": "fb54d1ff-bcf7-4ae7-9277-87d739394ddf",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "0c3a05a5-7d37-449e-84c9-5e78734a9cc9"
        },
        "item": {
          "id": "ff9a27b2-541b-4e80-92c6-1240a09616a2",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "c5d34cc2-545b-4b75-87b5-7a4ee6a97571",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 614,
          "responseSize": 753
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2acd0509-4cdb-4c17-af27-5d399c141d47",
        "cursor": {
          "ref": "c1485741-33c3-4192-9e08-cd365bd13444",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "7ec943a4-7c59-41b2-9ddf-4cd608330635"
        },
        "item": {
          "id": "2acd0509-4cdb-4c17-af27-5d399c141d47",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "fd772722-1eba-416f-87eb-d19f99076940",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f36ff0d5-b729-4fdd-a43b-d21d9b3b31b8",
        "cursor": {
          "ref": "abe73690-8a60-41fe-a182-d8690955fccc",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "e41a4269-f307-4aaf-b569-0b3a167053dd"
        },
        "item": {
          "id": "f36ff0d5-b729-4fdd-a43b-d21d9b3b31b8",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "c4a6e850-c752-4c2f-bc92-3e103efcbce0",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 592,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daab3534-e9db-4ad0-9870-71b181fc0eed",
        "cursor": {
          "ref": "9da1e3c7-cc80-4ace-a7da-9ef2290e44bf",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "e77f7dbd-67e2-45ab-abfd-5448017407a8"
        },
        "item": {
          "id": "daab3534-e9db-4ad0-9870-71b181fc0eed",
          "name": "credentials_issue"
        },
        "response": {
          "id": "7a685d54-4e29-4f99-9eb9-18b304292324",
          "status": "Created",
          "code": 201,
          "responseTime": 5639,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "4948b62f-06fd-470d-adb9-8f341b7c93ed",
        "cursor": {
          "ref": "9554420b-1320-4722-9147-e54202f0ba24",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "e48a4ab0-4579-4339-871c-9b492b3602e4"
        },
        "item": {
          "id": "4948b62f-06fd-470d-adb9-8f341b7c93ed",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "87cefa63-ed83-4eb4-a58a-070f451e4670",
          "status": "Created",
          "code": 201,
          "responseTime": 5792,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "79c3473d-c4dd-45be-8c25-9551f347d194",
        "cursor": {
          "ref": "f8759b34-259f-4922-a8bc-0d6afe16136d",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "d24ffcd5-ee11-493c-aeec-e4965737e8a2"
        },
        "item": {
          "id": "79c3473d-c4dd-45be-8c25-9551f347d194",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "e178fa4a-3471-469d-be37-a8f3a9c17b02",
          "status": "Created",
          "code": 201,
          "responseTime": 9052,
          "responseSize": 703
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "389982a9-6910-4396-9df4-4b41efb66076",
        "cursor": {
          "ref": "20100500-d228-4af0-85f5-a07f31782a85",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "e2d8742d-5e40-42bc-a89e-9bb29a36b017"
        },
        "item": {
          "id": "389982a9-6910-4396-9df4-4b41efb66076",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "cc6caae4-78e0-4a2d-b484-35c88d001656",
          "status": "Created",
          "code": 201,
          "responseTime": 4554,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "f15fce0c-f338-44eb-9b25-ea78de7fed43",
        "cursor": {
          "ref": "ea0771cc-6188-4c73-b655-e345db4ed37b",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "406e3890-5768-44eb-aa54-e241b3ae1704"
        },
        "item": {
          "id": "f15fce0c-f338-44eb-9b25-ea78de7fed43",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "8342f0dc-8247-42d3-8dd8-a198ea567e42",
          "status": "Created",
          "code": 201,
          "responseTime": 4671,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "79522f3a-e4cd-4690-89e1-61542d059c71",
        "cursor": {
          "ref": "b08807c2-83d8-4b0c-bac2-1bd6d65d6222",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "4ba219d0-304c-4fa0-9c92-fd83527de7e1"
        },
        "item": {
          "id": "79522f3a-e4cd-4690-89e1-61542d059c71",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "a657b7fd-53e7-4625-94de-f10191657f6d",
          "status": "Created",
          "code": 201,
          "responseTime": 5861,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c8c2c20-6f71-4599-bd55-26dba1482a00",
        "cursor": {
          "ref": "3f20e4d0-9178-4807-9f98-f15af05587cb",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "8a58801a-e85a-4be6-bc9e-6b2ad07544cb"
        },
        "item": {
          "id": "8c8c2c20-6f71-4599-bd55-26dba1482a00",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "550e600d-59c0-4477-b950-b9d0c9598067",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 761,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c8c2c20-6f71-4599-bd55-26dba1482a00",
        "cursor": {
          "ref": "3f20e4d0-9178-4807-9f98-f15af05587cb",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "8a58801a-e85a-4be6-bc9e-6b2ad07544cb"
        },
        "item": {
          "id": "8c8c2c20-6f71-4599-bd55-26dba1482a00",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "550e600d-59c0-4477-b950-b9d0c9598067",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 761,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba5efd88-80ed-4def-963a-a50c177a850d",
        "cursor": {
          "ref": "f70629e3-8e80-4b19-bced-17788617ed28",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "6b2e8c58-3cc1-4830-a99b-6496d2fd60e2"
        },
        "item": {
          "id": "ba5efd88-80ed-4def-963a-a50c177a850d",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "ae250354-c503-4dab-b100-c86eb456973c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 817,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "147f0f0c-08dd-4912-9bfb-ae6b3181851b",
        "cursor": {
          "ref": "90c5365f-0a17-492d-84a4-3f8de2ec2992",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "24dc3aa6-1e2d-4b7c-a770-faf452a5e99e"
        },
        "item": {
          "id": "147f0f0c-08dd-4912-9bfb-ae6b3181851b",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "b2bfda14-73a4-405f-8a34-46d6c22f084a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 625,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d732ae78-62df-4767-9e4c-3f4c5a8dc567",
        "cursor": {
          "ref": "4bfe99a8-2d07-4d35-8951-23dd88cdf25c",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "a1bab67d-2dfd-4ddf-bb8c-68fb05e10080"
        },
        "item": {
          "id": "d732ae78-62df-4767-9e4c-3f4c5a8dc567",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "77fc7922-0e66-460c-86cd-60f8b5957adb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 762,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50ca5fbc-6331-4305-8f6e-b8dbb39a38c3",
        "cursor": {
          "ref": "d51e3199-206e-475a-8c52-7adf1ce804c9",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "1ba3731e-3128-49d2-8074-63bfee8ed343"
        },
        "item": {
          "id": "50ca5fbc-6331-4305-8f6e-b8dbb39a38c3",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "692f030b-06b5-45fd-9dcb-8d03c097d011",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 763,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d4864dd-d2dc-4891-959e-bbfdbe875a95",
        "cursor": {
          "ref": "82cec62b-3337-4355-906d-c2a77565a8c5",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "358e743d-a5a8-475b-9134-2999cdebb0c0"
        },
        "item": {
          "id": "1d4864dd-d2dc-4891-959e-bbfdbe875a95",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "9be165c8-fd1e-41e4-b653-bc559782ee02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 715,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3b5ce30-602f-4aa7-9f34-95d7d10a47b7",
        "cursor": {
          "ref": "a095c6c6-f19d-4309-8d74-07d62f9bede5",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "173fe911-5014-4032-bd32-47dbeb4600da"
        },
        "item": {
          "id": "d3b5ce30-602f-4aa7-9f34-95d7d10a47b7",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "8abe0474-85df-43ff-ad76-5fdb3afe9e77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 693,
          "responseSize": 431
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c544c97f-487c-43ac-a454-9d5bd91f2841",
        "cursor": {
          "ref": "e158f3ab-3874-43e5-9bfd-187b2cb748f2",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "45d9f971-701e-496c-b82f-d06df080ac59"
        },
        "item": {
          "id": "c544c97f-487c-43ac-a454-9d5bd91f2841",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "d267b63b-7ab2-48d6-adba-1613240a7bec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 800,
          "responseSize": 482
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bddd7f61-8c77-42c3-be9a-8a2c9e5046d0",
        "cursor": {
          "ref": "77166841-762f-48b5-879e-0d0892470810",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "6e82d487-cb96-4bee-a8b6-d7b8bfa58107"
        },
        "item": {
          "id": "bddd7f61-8c77-42c3-be9a-8a2c9e5046d0",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "c4b60b91-16be-4552-ae48-225b976b684b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 951,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f1bf77e-4098-4c33-ba29-9eaa87c195cb",
        "cursor": {
          "ref": "539363ce-484e-49c6-9299-4597c92efb12",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "85e6c01f-0625-4c1d-87f9-72d151060caa"
        },
        "item": {
          "id": "6f1bf77e-4098-4c33-ba29-9eaa87c195cb",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "11b44dcd-a333-433a-abd9-33265ad3dec4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 676,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45473c36-9189-447a-8b7d-f39ba325fce6",
        "cursor": {
          "ref": "289b5873-1559-4768-8e55-65ad9897bf62",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "250f7ed9-ecd5-45a2-b956-b79f819b0713"
        },
        "item": {
          "id": "45473c36-9189-447a-8b7d-f39ba325fce6",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "bfdb3b2e-5b40-4700-9cfa-ae5e3c3933f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 775,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8da9454e-5af7-4505-bdf4-4c5113e8c5b6",
        "cursor": {
          "ref": "6ae3bdd9-b7fa-496e-ac8c-0345626e87c3",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "90c154c5-9812-4862-a17a-5027b18ccebe"
        },
        "item": {
          "id": "8da9454e-5af7-4505-bdf4-4c5113e8c5b6",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "3f87ca78-9b83-4468-a80e-81cfb3e8f0ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 745,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "074f430f-5378-4ffa-9b2f-851cac494e0e",
        "cursor": {
          "ref": "a14b3e81-4b1b-4cec-834f-48da62af5e63",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "1ae5995b-26f5-450b-97cb-6b4f238b4eb2"
        },
        "item": {
          "id": "074f430f-5378-4ffa-9b2f-851cac494e0e",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "9993755a-8a16-4bdc-81a3-40d72699e741",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 790,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dc7403f-ac99-4899-86f1-e9fa0240d953",
        "cursor": {
          "ref": "104324ea-fbc7-457d-97ee-34e0d1b7bca5",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "406b1413-2217-4b87-9276-124cf770c483"
        },
        "item": {
          "id": "5dc7403f-ac99-4899-86f1-e9fa0240d953",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "0916aac3-9331-437f-b809-b60b2441299a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 770,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d8d7d96-71e8-46a1-b0ad-e1cefc7c9c44",
        "cursor": {
          "ref": "cb923b69-238a-4516-93cc-454f1cb70388",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "2e5b577d-33bd-4217-9c84-5a5fbfdd5c6c"
        },
        "item": {
          "id": "9d8d7d96-71e8-46a1-b0ad-e1cefc7c9c44",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "0d0f8362-eabf-4b5c-91bd-2206be336f99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 701,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99c00c8f-8823-4cf1-a19e-cf30ab35def0",
        "cursor": {
          "ref": "bbef3bbc-c238-4d27-b5c2-10fa9bb5e5e3",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "1ca1859a-0453-460b-b3f6-dbb3a281a1a4"
        },
        "item": {
          "id": "99c00c8f-8823-4cf1-a19e-cf30ab35def0",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "3edde61c-1515-4f64-ac27-a2f21cc14e86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 714,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ac340e2-eff9-447b-b731-69e6ba80aaf4",
        "cursor": {
          "ref": "dc45ba0d-2e3a-4205-9754-fbf15959435b",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "dee31f1f-dca4-4ebd-a31c-767f114a1d6a"
        },
        "item": {
          "id": "6ac340e2-eff9-447b-b731-69e6ba80aaf4",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "3946f145-dbf0-4020-99fc-e93fdf509488",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 720,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69b62d59-be21-4683-ae9e-849b39044608",
        "cursor": {
          "ref": "606e4563-cd48-4b61-91f6-d2eb3cc378b1",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "a3b2afe6-ba34-485e-ba5b-4863ebd19e7f"
        },
        "item": {
          "id": "69b62d59-be21-4683-ae9e-849b39044608",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "b205168c-fda9-4128-923d-40258373e49b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 725,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dc50840-2212-4a6e-8b1a-efa863a6924e",
        "cursor": {
          "ref": "b1dc5744-ba27-4b90-aa68-8603ba3ab487",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "4428fecc-3f5d-457d-b634-c6b086911f7d"
        },
        "item": {
          "id": "6dc50840-2212-4a6e-8b1a-efa863a6924e",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "5b29ac61-d762-4b69-be1b-5ca102251ac4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 703,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bca6bf68-3f81-4b41-998c-a3cec0c7f6e6",
        "cursor": {
          "ref": "5f32c84f-e03c-413e-802b-b12c3e78b54e",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "f4c251c0-51a0-4d72-85d3-286ba73f1b2a"
        },
        "item": {
          "id": "bca6bf68-3f81-4b41-998c-a3cec0c7f6e6",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "92a44dbf-8aec-4b8d-895b-b6cd7ffa8dca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 681,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5bd088c-1987-4ae9-831b-815322ee2ff1",
        "cursor": {
          "ref": "790db600-2dd3-488b-9d73-6dfd2fa6326f",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "fb29e0e0-5ecf-46b0-89da-c2a6da1d35ea"
        },
        "item": {
          "id": "d5bd088c-1987-4ae9-831b-815322ee2ff1",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "b21e707d-023e-4e85-aabc-f524ea646b65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 740,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "857e56c0-2a3f-4e8e-82df-e3a67c2ca592",
        "cursor": {
          "ref": "06b4486b-7243-4421-8e18-05cb4d803322",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "10ff6c38-2e61-44c3-a234-4c7fa9b85355"
        },
        "item": {
          "id": "857e56c0-2a3f-4e8e-82df-e3a67c2ca592",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "dcfa7e69-819a-4a4c-b75e-6cb889d08bbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 880,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "853cc074-13a8-4f6d-a7c6-97e0b90ec923",
        "cursor": {
          "ref": "4c1b1747-193b-4085-8ff7-e90a8e32081d",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "232326ef-268e-4567-b617-d324010c9bb2"
        },
        "item": {
          "id": "853cc074-13a8-4f6d-a7c6-97e0b90ec923",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "8e9481fa-3ee6-4dd2-995b-41736b878237",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 977,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f6b3d80-fcfd-4d75-bfb1-aa4401b35776",
        "cursor": {
          "ref": "b0b1b300-35b4-49f6-b9c6-b5454f4d6e24",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "81fbadc8-ccf9-41bf-9c56-18a7eff2b394"
        },
        "item": {
          "id": "1f6b3d80-fcfd-4d75-bfb1-aa4401b35776",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "59cec62d-ca65-429e-83ab-3401a596a375",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 730,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8df4246f-8a32-4498-bdcb-de850636364c",
        "cursor": {
          "ref": "0deb7b74-075c-42b8-ae33-d31198e9bd62",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "e145fd5b-4c89-4a6d-80a6-0bdeaca219c2"
        },
        "item": {
          "id": "8df4246f-8a32-4498-bdcb-de850636364c",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "a61f9ac0-fadc-4d80-98ee-63a5071c8fb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 734,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee5f4cc5-7f31-4fe2-a5b6-6193fe1d287e",
        "cursor": {
          "ref": "676d5550-aa99-42b0-968a-6fb2138bf632",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "dbfdef71-267a-4399-b727-e903d78b6a2e"
        },
        "item": {
          "id": "ee5f4cc5-7f31-4fe2-a5b6-6193fe1d287e",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "c920fc0a-b31b-410d-9acf-7058ff8ea751",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 722,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "036e3164-c526-4707-b5af-3f0727b67a5c",
        "cursor": {
          "ref": "444e78a8-c598-4509-8ca2-404b845a4cf5",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "dc797628-1572-47a5-9077-091af71fb436"
        },
        "item": {
          "id": "036e3164-c526-4707-b5af-3f0727b67a5c",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "a9a9031e-3c30-4aaf-8f15-2bf71bd027b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 814,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1be00797-467e-463d-8f46-6e08451c9f67",
        "cursor": {
          "ref": "d57952d9-f98a-4ba3-9985-15b5d4ad2e04",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "2ee69e96-1cec-4a01-84d5-221f833e6d31"
        },
        "item": {
          "id": "1be00797-467e-463d-8f46-6e08451c9f67",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "ee36dc05-2002-4f76-9ff8-662dc24c8e7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 713,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e0bd475-49b4-4b61-b132-dd7347023d73",
        "cursor": {
          "ref": "3a3d8f7b-d83e-4186-b027-62fe343ab9cb",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "ccb75aa4-933f-48dc-b964-115b383e3131"
        },
        "item": {
          "id": "8e0bd475-49b4-4b61-b132-dd7347023d73",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "aa9b3a0c-cfb7-4331-b98e-7a83a3430b42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 916,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88baa683-d636-47d5-83ef-a126b6600caa",
        "cursor": {
          "ref": "4c2467ec-4d57-463d-b8ad-7ded12937df8",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "3b5143ec-a67a-40b9-81ec-0f5e091f347b"
        },
        "item": {
          "id": "88baa683-d636-47d5-83ef-a126b6600caa",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "c9005bae-b0da-4da5-98be-922d6e7490d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1037,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c16042ff-5a4d-4d1a-bf14-836fe10cfb2b",
        "cursor": {
          "ref": "581ed682-4a4b-46aa-b167-528ba631d044",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "d8b46d4b-7cc6-4213-9c42-54d3684f7838"
        },
        "item": {
          "id": "c16042ff-5a4d-4d1a-bf14-836fe10cfb2b",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "6e8991af-b99f-4321-9b03-f092dcecef4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 918,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9ecdabf-2e0d-463c-acfd-8c2b2d3b4372",
        "cursor": {
          "ref": "cd7ca2bf-4b92-4094-b97a-f131129a80d2",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "28402349-4283-45f7-9111-067bbfee8bfb"
        },
        "item": {
          "id": "b9ecdabf-2e0d-463c-acfd-8c2b2d3b4372",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "982c7bc3-1a5e-4913-8c09-b0955e010a48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1216,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32223092-0c85-4232-9fa3-a43c8efedd30",
        "cursor": {
          "ref": "dc87476b-2a8f-4810-9393-75480c1e4d59",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "d6546d3a-b544-4807-a19c-7e5dcf8df12f"
        },
        "item": {
          "id": "32223092-0c85-4232-9fa3-a43c8efedd30",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "e8beca77-b82d-4a9f-b510-9b37ff78578f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7edebd1c-dab6-4663-a59e-c461eee1ab73",
        "cursor": {
          "ref": "0128a1db-6617-40c3-9cee-f063fddffd25",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "47b16f34-7518-44f3-bfb7-81197334bf97"
        },
        "item": {
          "id": "7edebd1c-dab6-4663-a59e-c461eee1ab73",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "6e7208a2-2d1d-44d2-bcf6-36cdeb12dc59",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 575,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a32d532-e8a7-4866-905d-89107896f4b1",
        "cursor": {
          "ref": "c7ba7347-ca8c-4dff-835c-d032eaa503a2",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "5f08428c-ad12-4954-89bb-12412151fbd4"
        },
        "item": {
          "id": "0a32d532-e8a7-4866-905d-89107896f4b1",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "4d714040-a6b9-4d03-916f-816310c07ea5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 384,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a32d532-e8a7-4866-905d-89107896f4b1",
        "cursor": {
          "ref": "c7ba7347-ca8c-4dff-835c-d032eaa503a2",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "5f08428c-ad12-4954-89bb-12412151fbd4"
        },
        "item": {
          "id": "0a32d532-e8a7-4866-905d-89107896f4b1",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "4d714040-a6b9-4d03-916f-816310c07ea5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 384,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e19f7f24-a75c-4a69-b4ce-99b30ba8d0b3",
        "cursor": {
          "ref": "d949263a-7470-4ca1-acd1-278df050f4b3",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "bcc98eca-d263-475c-9b75-92c4a568a01d"
        },
        "item": {
          "id": "e19f7f24-a75c-4a69-b4ce-99b30ba8d0b3",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "1b216fb1-f61e-4db6-a63d-2d49df95a5d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 404,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74473412-bcd9-4eeb-bea6-c39eccd556b1",
        "cursor": {
          "ref": "41e9a9c9-1a3c-4b1a-8419-d9303fa5103f",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "a6d28310-0e8d-48a3-a8f9-c0b53fbcb82d"
        },
        "item": {
          "id": "74473412-bcd9-4eeb-bea6-c39eccd556b1",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "d411f706-f51f-4974-a6d2-39250ab5fb1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 383,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6028c1b9-5455-48a9-b1e6-b51d61df5347",
        "cursor": {
          "ref": "d661ed47-ae1c-4768-8df6-4868c241d28a",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "f92b8ec3-14c1-4d51-9a27-4d45a972ced5"
        },
        "item": {
          "id": "6028c1b9-5455-48a9-b1e6-b51d61df5347",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "41d11975-42bd-42ef-b282-bae80e524105",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 377,
          "responseSize": 644
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37036f31-7a4c-4c96-8b48-0c275d9a8542",
        "cursor": {
          "ref": "e8025e73-957f-4cbe-94bb-f841e9aa04f0",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "18c29813-56f8-4edc-8d60-06ecb8174e01"
        },
        "item": {
          "id": "37036f31-7a4c-4c96-8b48-0c275d9a8542",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "c475b7c8-1959-4ac9-a107-9c6155f1830f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 377,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17d1f419-2c87-46c3-855c-975706d04684",
        "cursor": {
          "ref": "bb106a61-da58-46d6-a15e-945d23618b12",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "c368ecc1-38e5-4e63-b84f-cc72da01bd91"
        },
        "item": {
          "id": "17d1f419-2c87-46c3-855c-975706d04684",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "56ab308b-2036-4e9a-bd48-f85aa67f8b01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 406,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2bc51d1-dc82-4488-b910-c2794aeb4c2f",
        "cursor": {
          "ref": "e0f545e3-991e-4fb8-aebb-a3d815a35a93",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "38419c93-63b0-47e5-8b08-f08c4e1580fe"
        },
        "item": {
          "id": "c2bc51d1-dc82-4488-b910-c2794aeb4c2f",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "702108da-93e6-4184-81b7-5e6845369ba2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 370,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69d5ef0b-bfa7-48f4-a11b-0336f9bb34e4",
        "cursor": {
          "ref": "372951f0-c0b5-433b-8dcf-31af795b6ec9",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "f0bb8fc4-7cd7-4654-a4ca-7e3f7ec1fcf5"
        },
        "item": {
          "id": "69d5ef0b-bfa7-48f4-a11b-0336f9bb34e4",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "15d5566e-4cb3-4295-8f6b-8f6d11ce5d5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 377,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9da88e31-61c5-4323-b597-98a2d5c1cd6d",
        "cursor": {
          "ref": "e8aad797-6228-4ddc-8ffd-ccc58b1f11ab",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "a4195ede-9a48-4814-8add-9baa6a5cdb5b"
        },
        "item": {
          "id": "9da88e31-61c5-4323-b597-98a2d5c1cd6d",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "7900f881-9e13-4cfd-87c2-f47e0653d1f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 368,
          "responseSize": 1468
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "254e2bb3-a770-443b-9f01-d351c9b6f6d4",
        "cursor": {
          "ref": "b8aded90-e118-449f-a1a1-74e8c1483e40",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "96959573-f262-4c7d-b447-7ae643f58894"
        },
        "item": {
          "id": "254e2bb3-a770-443b-9f01-d351c9b6f6d4",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "6067ce19-f21f-4ac7-beb2-f84d1863d5c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 449,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d2ae4da-ff58-4a43-a894-f91f19fe770e",
        "cursor": {
          "ref": "3eb68fe6-8991-4cb1-a335-42de24dff968",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "2e93fb53-77b2-4372-b238-0393b3b6af32"
        },
        "item": {
          "id": "9d2ae4da-ff58-4a43-a894-f91f19fe770e",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "554ea926-a42d-446f-96fa-a9b1931cea06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 403,
          "responseSize": 1367
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d10f4aa5-91c2-448d-b926-7ab1603b5714",
        "cursor": {
          "ref": "b89936f8-0485-439c-a64a-ba5e19b2df08",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "a28e2133-58d2-446f-a046-fd35f2886082"
        },
        "item": {
          "id": "d10f4aa5-91c2-448d-b926-7ab1603b5714",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "ab00cbd1-7f65-4d58-9de9-718472fca3a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 397,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82d91b8c-445f-459b-9fdb-58f3974d92fd",
        "cursor": {
          "ref": "4257c871-eacb-481f-a2f2-7bc5492db91a",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "020d06b1-2588-4fd5-8487-c6af32f1a269"
        },
        "item": {
          "id": "82d91b8c-445f-459b-9fdb-58f3974d92fd",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "071b4225-7cfa-4021-af9b-5d9cdb2fd456",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 380,
          "responseSize": 1532
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab44a1e3-401d-4319-ac95-e6c92cd76092",
        "cursor": {
          "ref": "b18e8203-fcf9-4874-a9c1-71f054fb871a",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "e4c0e861-3caa-4469-a9ef-f810d7e563ad"
        },
        "item": {
          "id": "ab44a1e3-401d-4319-ac95-e6c92cd76092",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "499ba885-b5ae-4b69-b3f6-699f1422d6ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 465,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01a10965-d5c9-4ee2-b39f-fd44b17ffc32",
        "cursor": {
          "ref": "87777682-86cd-4e1b-b8e2-e2c05f109706",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "996cd8e1-b357-400e-903e-3c6d19d98716"
        },
        "item": {
          "id": "01a10965-d5c9-4ee2-b39f-fd44b17ffc32",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "46983416-70ce-497c-903b-21e0f3a145bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 374,
          "responseSize": 1521
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2709488-429c-4ec3-9626-10f83643b11d",
        "cursor": {
          "ref": "26ab6b27-aff8-447c-92fd-bf34aa880aed",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "550e29e5-d859-4c1b-b9a2-aff718f721ef"
        },
        "item": {
          "id": "e2709488-429c-4ec3-9626-10f83643b11d",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "28c428dc-482b-4918-986b-1d5bcf6374e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 620,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e9db4f8-65dd-4aa4-9363-7faf1d953538",
        "cursor": {
          "ref": "c02cf6f0-19d5-43b6-81ec-4a475ed6147c",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "fff38872-0056-4a72-b9d3-91b61557a50d"
        },
        "item": {
          "id": "9e9db4f8-65dd-4aa4-9363-7faf1d953538",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "e942882b-9f47-47cb-b91d-149985dd6a3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 753,
          "responseSize": 1420
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f361f9b-b7fa-443e-91d8-a943f2ae0371",
        "cursor": {
          "ref": "d1e2cb30-73d2-4207-a163-e0a05129fd00",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "46ed31aa-7f2e-4804-81fd-ecf1078cdca9"
        },
        "item": {
          "id": "6f361f9b-b7fa-443e-91d8-a943f2ae0371",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "64e411f2-3d88-4cd6-bb09-6643c81ea107",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 671,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e508ddc4-8fd0-405e-a04c-1b4bc9b03c3b",
        "cursor": {
          "ref": "a0b55b70-7138-42be-88b2-3dd95003d7b9",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "a80c41d1-abeb-4e6f-b259-5aa928b6a61f"
        },
        "item": {
          "id": "e508ddc4-8fd0-405e-a04c-1b4bc9b03c3b",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "fa1e3192-f6dd-4e6b-854d-8d9791a6ba74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 760,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ed4d40a-5282-4887-ad56-febed30ea563",
        "cursor": {
          "ref": "47c9c3bb-047c-4d9a-bdbd-d9e6dbe591fa",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "edc9e92a-3ef5-4636-a55a-a39d11fb9469"
        },
        "item": {
          "id": "5ed4d40a-5282-4887-ad56-febed30ea563",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "c8ef439e-7a77-46ad-86e1-ad480258e96b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1091,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77ae8a86-4129-43b8-ab70-4269607bdc28",
        "cursor": {
          "ref": "f597080a-e830-4488-952f-9446247cb9de",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "bb2baadf-2758-4ef6-b083-f008142e883a"
        },
        "item": {
          "id": "77ae8a86-4129-43b8-ab70-4269607bdc28",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "ff57b97c-5551-4c8c-9abe-c4c0ad8501a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 809,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "611db1f9-1a47-40b5-899f-fa758796c771",
        "cursor": {
          "ref": "1ba17d32-ae44-4c09-a9f6-e64129a747ab",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "0f3ff5a4-a7f4-4835-bf14-ed97e266f04f"
        },
        "item": {
          "id": "611db1f9-1a47-40b5-899f-fa758796c771",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "5b6ec611-c580-44c8-95c3-d6a29e865860",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2089,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "658b78f7-41a5-4777-aa65-9d62e97a8764",
        "cursor": {
          "ref": "ecd2bf2c-c90a-4c57-bebc-935b3fe9dbbc",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "a49ecfd7-12fc-453d-ac2e-7d863273d9e5"
        },
        "item": {
          "id": "658b78f7-41a5-4777-aa65-9d62e97a8764",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "c278a271-5ee0-4e29-8100-01495e212bd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1174,
          "responseSize": 1360
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5742aed-771c-4ee5-937c-73f15033da01",
        "cursor": {
          "ref": "b13d2a14-2276-4fca-9b20-3a5375aa2b91",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "45972117-d10b-4efc-8eb2-d957bfc655bd"
        },
        "item": {
          "id": "c5742aed-771c-4ee5-937c-73f15033da01",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "87f206a9-ae40-44a0-a9b4-0f365638531e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1108,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "907cde4d-e945-43b9-9afb-65d1a3d68bb5",
        "cursor": {
          "ref": "3467d8da-bf59-45f5-9d3f-43f10e91c1f7",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "9433cd53-5b4c-4ae0-a725-5492490258ef"
        },
        "item": {
          "id": "907cde4d-e945-43b9-9afb-65d1a3d68bb5",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "603adb40-5502-4750-b1e5-c862397250fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1242,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd2e06cf-3865-4293-942f-8aeb4734bed5",
        "cursor": {
          "ref": "1d75ac77-cb05-4fc3-828e-73d3b3b581cd",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "82673108-0634-4850-b683-3cafada295fd"
        },
        "item": {
          "id": "dd2e06cf-3865-4293-942f-8aeb4734bed5",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "6aacf6f0-4671-4033-b6d5-acb3b9020bb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 776,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b9cabea-b832-4444-ba66-00d6cb891afd",
        "cursor": {
          "ref": "46547457-9795-45c7-b33d-6f789ef657c3",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "7e6fcbfa-7caf-42a0-81e2-4bdb03e4ab90"
        },
        "item": {
          "id": "5b9cabea-b832-4444-ba66-00d6cb891afd",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "2f4f8b70-8607-4904-adad-937b9e49832c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2e5819e-0407-4d25-83ff-f0ac150293ff",
        "cursor": {
          "ref": "f358614f-4fc1-4e6d-a7dc-48e03e245f57",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "4eedd2a1-89f0-4cc7-92d2-e08d0c63e94b"
        },
        "item": {
          "id": "f2e5819e-0407-4d25-83ff-f0ac150293ff",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "bb57e96d-e821-4bec-9a54-4258ef392ca9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 430,
          "responseSize": 1372
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ef95954-fd34-4001-8b9d-2f585ff6bb4e",
        "cursor": {
          "ref": "34ea1733-78e2-4eaa-b629-f33f6075b0c8",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "d5c9bab7-ce70-476c-b9fc-1358660e3174"
        },
        "item": {
          "id": "6ef95954-fd34-4001-8b9d-2f585ff6bb4e",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "5d60de4c-4ca4-4a48-8b0f-49bb565ae4ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 433,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "139469fc-d66c-40be-9d8e-29694d8b0415",
        "cursor": {
          "ref": "0bbfca4d-707f-45e3-b3ce-6e34c6b6bb0b",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "103a9c13-e2e3-4a3e-b883-5028e305d64d"
        },
        "item": {
          "id": "139469fc-d66c-40be-9d8e-29694d8b0415",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "0f8953ae-746a-4e34-83fa-acc56cfe0a68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 385,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b8d10ff-e820-41eb-ad22-a124cf09e628",
        "cursor": {
          "ref": "33363911-52c8-4bef-ab91-807e42a7557e",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "60bc5308-5b05-4db4-b0cb-7a2afa8fb5d0"
        },
        "item": {
          "id": "8b8d10ff-e820-41eb-ad22-a124cf09e628",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "ab1e30ca-e3b7-43d3-8524-f64244fdf755",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 392,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daa44563-9d8a-4dd3-b883-69a32d10bb7f",
        "cursor": {
          "ref": "7c29fa5a-3364-4a14-92e7-e35240ad681e",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "fdb7cbba-32e6-4d39-9f6a-3654eeb25b43"
        },
        "item": {
          "id": "daa44563-9d8a-4dd3-b883-69a32d10bb7f",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "f388ba11-5eb5-4fa8-a468-a938e4c9c6a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 417,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a195f494-9a7c-4226-a72b-be7ca32f836f",
        "cursor": {
          "ref": "2ecadf53-ce85-4efe-8c90-5a92a08263f9",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "a1acda1e-38fc-4cc5-84c8-0a3101f91c2a"
        },
        "item": {
          "id": "a195f494-9a7c-4226-a72b-be7ca32f836f",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "1ea88939-c72b-47de-a28d-2e6fd18b1851",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 427,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03739f8c-54a8-41c2-8293-dd828cc3346a",
        "cursor": {
          "ref": "ac765eb6-0025-4d2c-b0d5-cbe3ec9bd4ca",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "b09cd68c-c75e-4c64-a2b0-d35782adfdc7"
        },
        "item": {
          "id": "03739f8c-54a8-41c2-8293-dd828cc3346a",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "0d271505-5696-4da1-90f7-15fd32c20ccf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 766,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54943650-3d6b-475c-b410-94482d52629a",
        "cursor": {
          "ref": "9b677e0a-a8ba-4ff8-8d1a-3789790dadde",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "b6cc484e-e903-4092-94b2-5af8c6d63cc0"
        },
        "item": {
          "id": "54943650-3d6b-475c-b410-94482d52629a",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "07dd938e-4621-48e1-b66e-036ae5bc3b56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 610,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c64c960f-2ff4-43a8-aff9-224178dfc514",
        "cursor": {
          "ref": "1a43b0d8-6058-4016-be4b-cea855f4ed26",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "f3d85d5c-910f-4423-bd15-70ffc22db7b9"
        },
        "item": {
          "id": "c64c960f-2ff4-43a8-aff9-224178dfc514",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "7f216e12-e334-4928-b76a-824556f5521d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 705,
          "responseSize": 1801
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10915bf5-f27b-426b-98b2-c6cc6733524c",
        "cursor": {
          "ref": "4bbff526-091b-4a30-8577-2d2f4173105b",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "283554a3-5952-4f7a-a082-84cd624f58f3"
        },
        "item": {
          "id": "10915bf5-f27b-426b-98b2-c6cc6733524c",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "40afc00c-b681-487c-99f9-8d11fb38a252",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 720,
          "responseSize": 1787
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "560de314-3ed5-41ca-859b-e0d1897ab22a",
        "cursor": {
          "ref": "bbaf3bce-8eef-4841-939f-6ce7905add4c",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "83bc6a0a-54f1-4e4b-9a55-04654acf950c"
        },
        "item": {
          "id": "560de314-3ed5-41ca-859b-e0d1897ab22a",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "aadd208b-6136-41d5-a93e-e1c5e80530f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 782,
          "responseSize": 1785
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9602295-3b02-4250-a9f5-c1e3683bd048",
        "cursor": {
          "ref": "fa4f67c9-e4ec-42e5-bd16-29917c153287",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "eee39573-28e3-4ad3-bc8f-9c04356c195a"
        },
        "item": {
          "id": "f9602295-3b02-4250-a9f5-c1e3683bd048",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "f427feb1-81ff-4d1a-989c-770abe23bd32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 910,
          "responseSize": 1786
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4509f15-9859-43c1-a8e9-0c5e540c4b10",
        "cursor": {
          "ref": "e4e14f22-f78d-4a7c-8e8e-d90b89d0461e",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "c8f0b3dc-7f9b-432a-a0ef-89a8a94092fd"
        },
        "item": {
          "id": "e4509f15-9859-43c1-a8e9-0c5e540c4b10",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "1b2fdd7e-ce3d-4724-a66a-6c0eb21c9509",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 460,
          "responseSize": 1817
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "452743ea-edaa-495a-86a5-cfddedf4f9b3",
        "cursor": {
          "ref": "b97f4288-aa16-4777-a55e-ffeb379e4aad",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "5b8018e4-b452-4b8a-8d75-2e5ed4de9ece"
        },
        "item": {
          "id": "452743ea-edaa-495a-86a5-cfddedf4f9b3",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "acd9e6b5-aac2-475a-8c2f-6d2b5e2fd6ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 384,
          "responseSize": 2160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70ec4523-a086-4c3a-a628-e20ade30ca12",
        "cursor": {
          "ref": "1378938d-2a71-4860-906d-e0f37e96f4e1",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "ed326570-cdfc-4775-916d-18d031e89e4e"
        },
        "item": {
          "id": "70ec4523-a086-4c3a-a628-e20ade30ca12",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "f6fdbfb3-9cad-48b3-a7ad-26f3f2b4abbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 437,
          "responseSize": 2146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16a080c2-6839-4794-b233-d245d60a399e",
        "cursor": {
          "ref": "dc56083b-2705-43d1-916d-f254abd4b609",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "15accf0f-0775-434c-ab24-73839ba4f5d2"
        },
        "item": {
          "id": "16a080c2-6839-4794-b233-d245d60a399e",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "4f60efab-9d68-4554-b79e-9c4beb07a617",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 388,
          "responseSize": 2144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7da8ae1-ae29-4c77-9a70-03ccbc8e3eb2",
        "cursor": {
          "ref": "40e4d4d7-700a-4a75-b1cb-2cbe8ecede2a",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "62b4093c-66bd-47c2-9739-1d5e19090a7c"
        },
        "item": {
          "id": "d7da8ae1-ae29-4c77-9a70-03ccbc8e3eb2",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "1bbd0f7e-92ee-43cc-a5e3-81ddbf0a40c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 418,
          "responseSize": 2145
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fa7683b-be62-40f0-b95c-e1d78967d7dc",
        "cursor": {
          "ref": "efd7b524-81c8-46fc-86d1-f3018a29aba6",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "24dba901-0a79-4882-9d24-83942ed1ab19"
        },
        "item": {
          "id": "3fa7683b-be62-40f0-b95c-e1d78967d7dc",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "6a000a1d-8a9d-44ee-8392-ee8da35f78d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 382,
          "responseSize": 2166
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "878ebba3-7cb4-427f-8700-afd862b2a15f",
        "cursor": {
          "ref": "be0f1538-ac42-4c74-b1ae-36e2be656912",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "6cd9235a-f54c-46ea-bd96-ab29af54fbc6"
        },
        "item": {
          "id": "878ebba3-7cb4-427f-8700-afd862b2a15f",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "fd2b0441-0864-498a-9aa2-38880cff5fa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 415,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b922d7e5-67d3-4896-bdf8-ecc9b0814d41",
        "cursor": {
          "ref": "836a134a-5767-4039-ab8b-30281b7520e9",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "643f04c0-845b-4738-b067-732821ade5d1"
        },
        "item": {
          "id": "b922d7e5-67d3-4896-bdf8-ecc9b0814d41",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "3f9a31e0-e530-4733-b901-f2da19b697a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 371,
          "responseSize": 1394
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c391e7eb-1c47-46e4-a2f4-83633d1e60ed",
        "cursor": {
          "ref": "ddb65058-a6df-4dcb-b89e-26e820e64f4e",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "b6bcf43c-d052-4337-85f3-7e2274affb1e"
        },
        "item": {
          "id": "c391e7eb-1c47-46e4-a2f4-83633d1e60ed",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "1f04e2cf-3547-496f-acb9-e2253d602cd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 441,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4979a5e-0191-4578-a21b-eda5cbd98d9d",
        "cursor": {
          "ref": "12358bdf-1179-41be-8058-503bfca014d5",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "9c2cdc0c-78d6-40f0-860d-d00a5ccdf366"
        },
        "item": {
          "id": "e4979a5e-0191-4578-a21b-eda5cbd98d9d",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "da8468ee-d880-4bb2-a31d-f4ca55e26c5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 386,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b55cd4de-849c-42b3-859b-c6f8fc2a6c0d",
        "cursor": {
          "ref": "fccd7fd4-152c-4afd-85d1-563311cdf915",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "2c9ff467-828a-4818-a4e3-6233fd34c1eb"
        },
        "item": {
          "id": "b55cd4de-849c-42b3-859b-c6f8fc2a6c0d",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "bbef398b-4e59-4d12-b332-10cf5bd021a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 374,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c19f7325-b59f-42e5-a35e-8b521a0bab47",
        "cursor": {
          "ref": "bf12a6a8-a371-41ca-9e1c-5433e34f8856",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "4fd2b6db-ac76-4875-b151-4a1c19d6aeb0"
        },
        "item": {
          "id": "c19f7325-b59f-42e5-a35e-8b521a0bab47",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "1486a6bc-75a0-40bf-91ee-781ba3934e51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 377,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "271cad4a-423e-432b-9d9b-31e5975df82d",
        "cursor": {
          "ref": "67a245b0-b9e1-4ad9-a895-f4cef45af441",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "25115194-00bc-4461-bec2-cf10c75bc826"
        },
        "item": {
          "id": "271cad4a-423e-432b-9d9b-31e5975df82d",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "97198915-f303-4ece-a1f9-aecb442eab16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 371,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d106a63-fcc8-4e50-a783-059cd7381b74",
        "cursor": {
          "ref": "1d6e2694-bdff-4f6a-8c65-07f2d34c519b",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "5dbec178-2366-4eb9-a7c1-d28916267892"
        },
        "item": {
          "id": "8d106a63-fcc8-4e50-a783-059cd7381b74",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "83aca340-62be-4813-bfab-7a63d7bec5af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 382,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e961816-373a-4150-ae5e-55981879126e",
        "cursor": {
          "ref": "18edc34a-19de-4cc6-b8cc-576355e844c5",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "ac0233ef-aaa0-4ea7-b234-d71b8d9319de"
        },
        "item": {
          "id": "5e961816-373a-4150-ae5e-55981879126e",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "0a548ddb-6d93-47bd-8b1a-8b64cd773558",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 367,
          "responseSize": 1874
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f0a64b9-3692-4068-ace7-7dcd25ffa6a9",
        "cursor": {
          "ref": "e5998155-c409-4afe-8b7a-b69809f5b784",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "e3f559e9-bb2a-4f58-a20d-e18db5d60f29"
        },
        "item": {
          "id": "9f0a64b9-3692-4068-ace7-7dcd25ffa6a9",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "e99a0ec2-db57-437d-9dae-6dcb0fcbe93b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 380,
          "responseSize": 1673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aa369ba-c63b-4da0-b786-009e6f0620e7",
        "cursor": {
          "ref": "b316fc5b-cb21-4929-a3db-9a995ca67969",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "7a7b5f11-045c-41bb-ab9a-f4dc1b1fb3fd"
        },
        "item": {
          "id": "2aa369ba-c63b-4da0-b786-009e6f0620e7",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "85c1d287-0f7a-4a14-9259-1a2a59c5b8a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 403,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2b8f6e2-e4e4-4b79-bac7-d42cf7c344f9",
        "cursor": {
          "ref": "32ce31f1-1206-4675-8075-8c0878531871",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "cac8dbab-19f2-4ab5-9f67-76a703e66473"
        },
        "item": {
          "id": "c2b8f6e2-e4e4-4b79-bac7-d42cf7c344f9",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "04e712d0-cc07-4596-a3e0-68328c67ff6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 393,
          "responseSize": 1672
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e3c3bba-fc2d-4303-bf7f-c40b324a6990",
        "cursor": {
          "ref": "74056ef3-aa25-43af-9ddb-753cfb2d9863",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "a48e1bf0-221c-4658-b8ff-adb7030e2521"
        },
        "item": {
          "id": "5e3c3bba-fc2d-4303-bf7f-c40b324a6990",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "889c1491-c81e-4828-8c1c-53c81f216162",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 405,
          "responseSize": 1685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "869c0523-5a90-4073-9316-297851ea751a",
        "cursor": {
          "ref": "ef449590-7858-4533-9266-6d20550552b4",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "6b0ad70a-448b-492e-ab9c-e4eedb974271"
        },
        "item": {
          "id": "869c0523-5a90-4073-9316-297851ea751a",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "ea21bc0e-0d32-4ccb-89c8-0dd58894804e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 371,
          "responseSize": 2209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fff94b50-ae45-429b-91e8-622da23a457c",
        "cursor": {
          "ref": "560355cd-a527-4bf3-8e26-8e0fae0c552b",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "b6286aa1-16f0-4ec4-abe8-e10eb92ec7ca"
        },
        "item": {
          "id": "fff94b50-ae45-429b-91e8-622da23a457c",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "8581e378-105b-46d6-b059-7f5dc4ffc644",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 403,
          "responseSize": 2195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07c6f489-01be-476c-8434-ba430ff417f5",
        "cursor": {
          "ref": "dfe81cc1-8a8d-45f5-b19f-194c639fb02c",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "27b95c39-9608-426e-aa6f-e0b97b19edff"
        },
        "item": {
          "id": "07c6f489-01be-476c-8434-ba430ff417f5",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "a35c0f3a-1cfa-42f0-830a-e76a86e3cee4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 445,
          "responseSize": 2193
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "391a0ddf-78ea-44a8-90be-b3435251b4af",
        "cursor": {
          "ref": "565eeb52-a9f6-42b3-8aa6-970552a8c690",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "8793ba74-00f2-4f42-b27a-3335e72049d9"
        },
        "item": {
          "id": "391a0ddf-78ea-44a8-90be-b3435251b4af",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "f19899bb-d699-4c4c-833b-7aae58679494",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 410,
          "responseSize": 2194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2487bcd-88bc-4c0b-b30f-bc9b5fc0db52",
        "cursor": {
          "ref": "cff592a5-8dc0-4be8-853d-a919bce566cf",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "5c14f0ce-3d58-4774-a769-c2058016bd6c"
        },
        "item": {
          "id": "e2487bcd-88bc-4c0b-b30f-bc9b5fc0db52",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "93c199be-7a1d-4e1a-84cb-6968ca460e23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 387,
          "responseSize": 2215
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55c43c1d-3023-4885-9d79-9ef4f897ebbe",
        "cursor": {
          "ref": "051748f3-6c30-46f4-8ecb-93b1e21aba66",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "0979c4c5-d449-41e2-97e9-7882c4ee65b6"
        },
        "item": {
          "id": "55c43c1d-3023-4885-9d79-9ef4f897ebbe",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "ca56dbca-d39c-4841-8bf7-4255fcc33dcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 396,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e73ede42-d50e-4fdd-b702-493a5397b87b",
        "cursor": {
          "ref": "49bb1d4f-acba-4cba-a04d-86ce0055d1a6",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "09a752bd-6647-465e-9b0f-6744ffcd2895"
        },
        "item": {
          "id": "e73ede42-d50e-4fdd-b702-493a5397b87b",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "3f6906c8-a301-4ab8-8641-4f1ee78147d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 383,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04e95f1b-d96a-439b-a230-393eb061e170",
        "cursor": {
          "ref": "eefed2fe-52f0-4a4f-b6ab-3a70a57b57f1",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "ad21a58c-6130-49a5-b014-4b8a4abb170b"
        },
        "item": {
          "id": "04e95f1b-d96a-439b-a230-393eb061e170",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "7e800a43-607b-41be-81cf-0f1e9403a3c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 365,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "145e4d2b-8877-4745-bb99-342081e6316e",
        "cursor": {
          "ref": "7dad22f1-3cae-4282-b2e1-547f6bc88410",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "c01929c9-d0b1-4fc4-8781-e20dcf653940"
        },
        "item": {
          "id": "145e4d2b-8877-4745-bb99-342081e6316e",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "215b7e54-b5aa-403e-a2dc-291035f35db7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 406,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d4e5ffa-31e8-4350-9cd7-5cf78d031aa4",
        "cursor": {
          "ref": "7f9b0e2b-939a-4cf5-bb15-3773ea16b2b9",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "7b95f6db-1a8c-4824-a238-ed1635b9318a"
        },
        "item": {
          "id": "7d4e5ffa-31e8-4350-9cd7-5cf78d031aa4",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "4d68d6a3-483e-4f88-bee9-7cb05a31bf89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 407,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b98fdc79-bf82-48b8-a40d-df9a59cdfc25",
        "cursor": {
          "ref": "27ca2153-3a7e-46ea-96b8-697c77bb9ee1",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "533b7085-a8ba-4a10-b077-e065da63cd11"
        },
        "item": {
          "id": "b98fdc79-bf82-48b8-a40d-df9a59cdfc25",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "6f939f0a-e084-4da3-a366-f0e93623fb84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 373,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19d8279d-6b43-4f3b-bfc2-e48942affa19",
        "cursor": {
          "ref": "1f29d556-3079-4501-9778-84312399ea49",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "5f2edcc6-4982-4cbe-8a0b-7ab9a9768777"
        },
        "item": {
          "id": "19d8279d-6b43-4f3b-bfc2-e48942affa19",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "8e1263c8-6089-4e10-a363-3882915fa067",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 370,
          "responseSize": 1307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78d0d40b-f05c-4088-aa05-dc49e1f2bc90",
        "cursor": {
          "ref": "81605452-49cb-4c49-a3c2-61351420063d",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "b6da94a6-6411-4d71-93b3-16cd40a350ea"
        },
        "item": {
          "id": "78d0d40b-f05c-4088-aa05-dc49e1f2bc90",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "112d0bb7-34eb-49ff-9f70-6af1dcc87f56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 389,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e03c39b9-56ce-473e-aa22-9a0eb961de0e",
        "cursor": {
          "ref": "fe5a9e55-90eb-4a3f-8fc7-323f03e173dc",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "be44a76b-11b0-4873-bebb-9346ce85a8ea"
        },
        "item": {
          "id": "e03c39b9-56ce-473e-aa22-9a0eb961de0e",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "bd3c4bc6-1e26-4fea-919f-d5e5d4256f86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 404,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d676e99a-a6eb-4e9c-8c21-7fd802e5761f",
        "cursor": {
          "ref": "a1699bd2-0c45-4368-9130-3136f81f9160",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "16dece85-e90c-4021-b0e9-49285d9c7c61"
        },
        "item": {
          "id": "d676e99a-a6eb-4e9c-8c21-7fd802e5761f",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "c3ed82a0-f632-4f91-a2ad-8fed900676d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 383,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6fee9dc-2d41-4f2d-9c61-24371b734cb0",
        "cursor": {
          "ref": "a38bc0af-1df2-4ac1-89e8-8138caf8a0bc",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "eaec747d-a719-4677-8008-cb73541fefc8"
        },
        "item": {
          "id": "f6fee9dc-2d41-4f2d-9c61-24371b734cb0",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "afb4cf4a-1d81-4519-ab29-7549f83c6bbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 402,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bd747d1-f65f-4b66-8861-c0152b079011",
        "cursor": {
          "ref": "0ccfd68a-a8c1-4e8c-968b-9de0d65eba2f",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "7cfc23f3-a09d-4869-8e13-5db31c63b6dd"
        },
        "item": {
          "id": "7bd747d1-f65f-4b66-8861-c0152b079011",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "43e910bd-590c-4dab-a6e8-95dd9a9d6a67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 382,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7e70fc1-5f6b-497f-a4c8-8e543a41992c",
        "cursor": {
          "ref": "b67c3f26-bb30-447e-8f68-0a2d61a88a82",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "832befe4-ce57-4ee6-88b8-abee4fe00048"
        },
        "item": {
          "id": "f7e70fc1-5f6b-497f-a4c8-8e543a41992c",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "453dea8e-ce78-46ef-a854-33e2805c13d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 383,
          "responseSize": 1344
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dedbe528-559d-47fd-8801-44c08a63dd2e",
        "cursor": {
          "ref": "0620c4bd-9d0d-47d0-8e2a-a3237eff7f5f",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "675e74a0-d60b-4815-96c8-778e95f0a4db"
        },
        "item": {
          "id": "dedbe528-559d-47fd-8801-44c08a63dd2e",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "1cdd6102-4795-4c60-9275-567deb540e74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 387,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da035973-9d1f-49e3-88c1-8b835dcd4aea",
        "cursor": {
          "ref": "dfac4933-42db-4b24-9f40-56aa623a0a59",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "84676372-a454-4be4-a30c-ad064e1ee579"
        },
        "item": {
          "id": "da035973-9d1f-49e3-88c1-8b835dcd4aea",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "f78bd104-aff1-4e94-b977-0abe1c53b946",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 372,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "125359b5-c882-4c83-88d3-4f48960545f4",
        "cursor": {
          "ref": "c1e397e6-44e0-44f9-8454-c3a385afa63f",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "5fdb35bc-44ca-4ba3-9228-0e3014a374a5"
        },
        "item": {
          "id": "125359b5-c882-4c83-88d3-4f48960545f4",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "09f5ef08-dce2-447d-ad7d-3e6dc95adfe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 416,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6895e506-f8ed-4975-8e8a-9648322bcafa",
        "cursor": {
          "ref": "0c365a54-9252-49f3-9605-ac6d2762a153",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "d8ecd70e-d7cc-4dc3-95e4-aec3d50bedfa"
        },
        "item": {
          "id": "6895e506-f8ed-4975-8e8a-9648322bcafa",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "850d2f1e-c873-4701-8dd0-6b56922e9f06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 379,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbf80050-3726-415a-9483-4da238a06e3e",
        "cursor": {
          "ref": "2e2daba7-c7fe-44d3-b085-42fb20d28206",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "e28ebffd-6ea7-4a82-b222-ecc4bc115a76"
        },
        "item": {
          "id": "dbf80050-3726-415a-9483-4da238a06e3e",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "20bf06ff-3755-43a5-91d5-199e1492ba00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 379,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebdc370d-932a-44e2-b8d6-c7a4db0a0976",
        "cursor": {
          "ref": "0cbe4aa2-06b0-41e6-9e72-7555c493dd2f",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "9ab1f1a6-4cb1-4cf1-b36f-587abd0dda3d"
        },
        "item": {
          "id": "ebdc370d-932a-44e2-b8d6-c7a4db0a0976",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "91801015-fe95-47db-8329-2572b2b2af7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 380,
          "responseSize": 1298
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae95c0cc-5c32-42be-b7b5-5d0cad52c5fe",
        "cursor": {
          "ref": "d325e9a4-5cbc-4ba8-abf5-51bfe51e5bff",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "bf66edaf-d554-4a48-a463-579c7b4507cc"
        },
        "item": {
          "id": "ae95c0cc-5c32-42be-b7b5-5d0cad52c5fe",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "b156ef13-6293-4ca6-9b10-cbbd59333a39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 370,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88dee38f-0a89-4e2f-adc1-0afbb4485875",
        "cursor": {
          "ref": "47c77a6d-c8c6-4407-b267-9fb0b797727d",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "76c5542f-f0e4-4b52-b292-8bfda1a8e64f"
        },
        "item": {
          "id": "88dee38f-0a89-4e2f-adc1-0afbb4485875",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "6f3d2bc6-2e51-47f8-8928-9952645f959e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 375,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dff5a834-bbd7-46e4-b429-de780b7fa519",
        "cursor": {
          "ref": "3116438a-0ffa-4739-a764-d5339a7d9be7",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "ea7ceb80-0160-41fa-99b4-2806ecc7bcc4"
        },
        "item": {
          "id": "dff5a834-bbd7-46e4-b429-de780b7fa519",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "eac1ccac-b722-48a6-bc22-87da8ef89612",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 416,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcec6274-dc7f-4b3a-b75d-d6a7e544259c",
        "cursor": {
          "ref": "db1a03e4-5679-46b6-afb1-d0deed73aa6b",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "dfd39a7b-9d62-4111-8eac-f1e0dc356e0a"
        },
        "item": {
          "id": "bcec6274-dc7f-4b3a-b75d-d6a7e544259c",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "8a58c097-724d-4d91-8641-f5676a16787d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 379,
          "responseSize": 1304
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4057c5e9-3aa7-4e71-a4b3-17b3180a65a7",
        "cursor": {
          "ref": "dec213c3-2725-48c4-ad63-61925d7f1652",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "e2e2bb51-7343-4c95-9700-3192d770b963"
        },
        "item": {
          "id": "4057c5e9-3aa7-4e71-a4b3-17b3180a65a7",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "99798d3b-030e-44cf-9cf6-5dc5dc05c16d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 368,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6f468c5-df72-4c3f-86a8-6f53a6e87317",
        "cursor": {
          "ref": "fd7452a1-a5ce-4127-8015-b3ead42f6d91",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "05845469-d26b-49c2-8c91-6d1ba8798ec8"
        },
        "item": {
          "id": "d6f468c5-df72-4c3f-86a8-6f53a6e87317",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "6f8d0eef-84b4-48ee-88fd-feeac0b870b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 357,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fda8fe2-4708-4dbc-b0cb-03c24240331a",
        "cursor": {
          "ref": "23a54038-69ba-4f4c-943e-0a43ce596827",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "a6418842-8acc-4b7a-a651-1d46219e9445"
        },
        "item": {
          "id": "2fda8fe2-4708-4dbc-b0cb-03c24240331a",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "0faf2fb4-bde6-4ac2-8382-dfde7c3bf197",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 380,
          "responseSize": 1194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "300334fa-fa5d-4d03-8556-707826d75cdf",
        "cursor": {
          "ref": "dfdfdc68-bd6e-4d61-aeed-6d1727437f18",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "7043d733-195d-4246-b0b8-36c353459359"
        },
        "item": {
          "id": "300334fa-fa5d-4d03-8556-707826d75cdf",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "f6c0224f-9551-4fc8-8197-5616de2e70ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 389,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b020f4c-4108-440c-bac7-c0361a611e14",
        "cursor": {
          "ref": "64712392-b7a6-4ffe-bc7c-ae69156058ed",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "6cc6f493-7ff3-42d8-81bc-dde2513ed5d0"
        },
        "item": {
          "id": "0b020f4c-4108-440c-bac7-c0361a611e14",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "ab954da6-e90b-4271-bacb-893c59b58e76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 383,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "195bf5a1-a709-4245-9a71-f1825544465d",
        "cursor": {
          "ref": "17f9155c-d478-4a1f-aeb7-e132faaea4a5",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "8e2c5214-cc8a-4cc7-aa13-8329e820903d"
        },
        "item": {
          "id": "195bf5a1-a709-4245-9a71-f1825544465d",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "e9e5a370-fc0a-40b6-a59a-3945a261b2aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 373,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cba2feaa-0736-40c5-b300-91020b125e14",
        "cursor": {
          "ref": "a1d259b4-ab68-487c-ab1d-d91fc8f3678d",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "da31c05d-8572-4101-ac1c-98baad72266a"
        },
        "item": {
          "id": "cba2feaa-0736-40c5-b300-91020b125e14",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "bb5e438a-5b21-4f98-841d-db3159828096",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 365,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "363e69ac-d2fa-49c4-93b7-ab5cc7425011",
        "cursor": {
          "ref": "8dfb67a3-63c2-4ae7-b26d-dc1197270a38",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "64282481-90df-44ac-b88b-4ef907177a11"
        },
        "item": {
          "id": "363e69ac-d2fa-49c4-93b7-ab5cc7425011",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "68515523-61bd-40e3-84e5-d52be90d4986",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 371,
          "responseSize": 1323
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eba4e958-30a4-4187-b6d4-cb7198535855",
        "cursor": {
          "ref": "e620482f-1bca-495c-9e2e-52363effe390",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "290de602-aa97-4420-b76e-f8a182d0db21"
        },
        "item": {
          "id": "eba4e958-30a4-4187-b6d4-cb7198535855",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "b76a0a3d-e82f-49d7-b5cb-78580bf4867c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 365,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b946f93-feae-476d-8e79-164f5f876356",
        "cursor": {
          "ref": "44b44a04-e0a1-4dc2-a9f8-faa713cd4a6b",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "22899bc1-ad18-4d9b-bf27-ff17b681f555"
        },
        "item": {
          "id": "4b946f93-feae-476d-8e79-164f5f876356",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "ed501255-38d1-4868-aa3f-9e35c0676b8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 380,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf054b52-39ce-40d8-b34a-9f613570dc0b",
        "cursor": {
          "ref": "eb39b945-d43a-4a2a-b874-a3e75fe92bc2",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "7f8539e2-0e6d-498c-9c15-7fd24e006aa3"
        },
        "item": {
          "id": "cf054b52-39ce-40d8-b34a-9f613570dc0b",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "1efe7a6f-d70d-45af-811d-a5074173b8b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 374,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d845b10-3524-4459-928b-e1306f5c5a65",
        "cursor": {
          "ref": "cb5fa673-f8ca-40a7-9ece-a67aa109ec77",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "c2cade6a-0163-4b73-be31-f089596a1e0a"
        },
        "item": {
          "id": "8d845b10-3524-4459-928b-e1306f5c5a65",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "9a3df923-d966-4200-957f-f265638ed606",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd49c23e-bbc9-40f8-816f-28f06b1fb237",
        "cursor": {
          "ref": "9c7fc0e3-7adf-44b6-97d9-b92f44960b1a",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "16ca52c8-7436-4efe-a5a3-5706db2a24ff"
        },
        "item": {
          "id": "bd49c23e-bbc9-40f8-816f-28f06b1fb237",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "02d9ec45-33d9-4c89-a998-59d70ca3374a",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 387,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7dcd3ef-4ccc-4023-af32-a25ed2bc58d2",
        "cursor": {
          "ref": "d80908bc-9118-4227-b417-a8ad50ce35bf",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "b4b21d9c-61c0-4d38-b547-0cac85345534"
        },
        "item": {
          "id": "b7dcd3ef-4ccc-4023-af32-a25ed2bc58d2",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "bb8ed14e-4107-4d80-8b76-27e0ab3e2e9e",
          "status": "OK",
          "code": 200,
          "responseTime": 430,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc1f8ce4-b316-4fab-bb73-ab751857f34b",
        "cursor": {
          "ref": "69956338-3d44-4f9c-974a-455d57ae3dfb",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "7500de16-5788-40e7-9984-fcdcfe0affa7"
        },
        "item": {
          "id": "dc1f8ce4-b316-4fab-bb73-ab751857f34b",
          "name": "credentials_verify"
        },
        "response": {
          "id": "eb37850d-4ed3-45a8-b0e7-7acbfab1c0a6",
          "status": "OK",
          "code": 200,
          "responseTime": 1955,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "5329babc-e86d-4d45-a0c7-4ba1471624ac",
        "cursor": {
          "ref": "7b035ca6-b500-463b-997f-3bee4c49ee70",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "39ae7179-98a8-48d7-a774-17421e7213e0"
        },
        "item": {
          "id": "5329babc-e86d-4d45-a0c7-4ba1471624ac",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "6e118266-ff04-4827-aaf0-afb9a1b1a5aa",
          "status": "OK",
          "code": 200,
          "responseTime": 1883,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "840b5a01-7973-4e36-ab47-32175b17ff6d",
        "cursor": {
          "ref": "3da2cd3d-4826-4ed6-a719-e431391a0a98",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "e6c4df44-63d3-4ab7-b5ca-2b351e50405b"
        },
        "item": {
          "id": "840b5a01-7973-4e36-ab47-32175b17ff6d",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "c8a5d1a9-9a63-4d62-949d-44e0d208c327",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "840b5a01-7973-4e36-ab47-32175b17ff6d",
        "cursor": {
          "ref": "3da2cd3d-4826-4ed6-a719-e431391a0a98",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "e6c4df44-63d3-4ab7-b5ca-2b351e50405b"
        },
        "item": {
          "id": "840b5a01-7973-4e36-ab47-32175b17ff6d",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "c8a5d1a9-9a63-4d62-949d-44e0d208c327",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "840b5a01-7973-4e36-ab47-32175b17ff6d",
        "cursor": {
          "ref": "3da2cd3d-4826-4ed6-a719-e431391a0a98",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "e6c4df44-63d3-4ab7-b5ca-2b351e50405b"
        },
        "item": {
          "id": "840b5a01-7973-4e36-ab47-32175b17ff6d",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "c8a5d1a9-9a63-4d62-949d-44e0d208c327",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bdd7de0-9995-439f-837b-5a48fd15e1df",
        "cursor": {
          "ref": "cb993a27-487f-479a-9302-b36bfd41a44e",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "ab23246b-efe8-401c-bee3-4e2819526ccf"
        },
        "item": {
          "id": "2bdd7de0-9995-439f-837b-5a48fd15e1df",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "89df87b4-35f2-45ea-89f0-08b640e2c657",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 384,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ae3a5c7-2d20-4e32-adb3-249db05e865b",
        "cursor": {
          "ref": "296ce067-ff3d-4ac6-ad5c-7c1d4f6781aa",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "bd17deb5-2bb8-429d-8450-e30ea4444d4f"
        },
        "item": {
          "id": "8ae3a5c7-2d20-4e32-adb3-249db05e865b",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "383d724b-30ba-4c5e-afb5-141147c7a698",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ae3a5c7-2d20-4e32-adb3-249db05e865b",
        "cursor": {
          "ref": "296ce067-ff3d-4ac6-ad5c-7c1d4f6781aa",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "bd17deb5-2bb8-429d-8450-e30ea4444d4f"
        },
        "item": {
          "id": "8ae3a5c7-2d20-4e32-adb3-249db05e865b",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "383d724b-30ba-4c5e-afb5-141147c7a698",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1defb6dc-b669-44dd-b418-4ed91301858b",
        "cursor": {
          "ref": "2d06e1a0-8818-4c10-8603-84b1523bd7e6",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "ec8226ac-5a66-44bd-9b3d-958b71c44628"
        },
        "item": {
          "id": "1defb6dc-b669-44dd-b418-4ed91301858b",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "78406d99-85c0-4ed8-96e6-baae97701fff",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 607,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fbde559-5323-4dda-97ce-7c77ced7323c",
        "cursor": {
          "ref": "892727c3-7423-4c4f-b142-c4e64d5ff553",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "eef3807c-334c-4516-93c0-82054c0231af"
        },
        "item": {
          "id": "8fbde559-5323-4dda-97ce-7c77ced7323c",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "8baa9be3-cdc9-4d7a-90fd-7f84ea92818d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fbde559-5323-4dda-97ce-7c77ced7323c",
        "cursor": {
          "ref": "892727c3-7423-4c4f-b142-c4e64d5ff553",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "eef3807c-334c-4516-93c0-82054c0231af"
        },
        "item": {
          "id": "8fbde559-5323-4dda-97ce-7c77ced7323c",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "8baa9be3-cdc9-4d7a-90fd-7f84ea92818d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ff054fb-5e9b-4c1e-968c-dd940e596f4e",
        "cursor": {
          "ref": "47343c91-3ef3-4b4c-a800-94cfb05f8bba",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "b87db420-398f-4d39-9c10-aa9208adfffd"
        },
        "item": {
          "id": "2ff054fb-5e9b-4c1e-968c-dd940e596f4e",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "22bbcff1-0844-4ae5-971b-3dd3228cfe5f",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 566,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}