{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "8abff07b-aedf-49e0-aff4-36a869a84346",
        "name": "Clear Cache",
        "item": [
          {
            "id": "2832e74b-4208-4e78-b280-883ee57b0a4f",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "231b564b-27ac-4409-b1bb-768d5d17d735",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "01899511-5884-4651-b520-3516210ae234"
                }
              }
            ]
          },
          {
            "id": "1ca6337c-3504-4571-8c49-3624b2b73525",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9dd26181-afa2-41a1-aeff-e9903aef9ea8",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "9a814f70-43f5-4079-8daf-2419a80479b3"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "e92e0939-d923-46a8-b193-db77b193c34a",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "a15b381d-c786-4c56-920b-1f9def350d9a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6f97a6c9-6364-4c50-88e1-a1a15a408743",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e11da274-5984-4b37-bbf5-15023a0f6f5f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3237467b-4244-40c8-89b9-072b87450d5e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0e2a8970-050f-4388-9643-6c2d11aec2ba",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3648d712-c360-4f31-91a3-b0e58c9ab971"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d9efeb7a-e26e-461e-b518-09a9499cd7ea",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "551e3415-f577-47ab-aab5-a0fcd76828cf"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fae617c0-49dc-47c9-9180-c4f7f672e791",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "9649fd51-9b85-4eb0-8d00-8ba7a5e297c1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0d72e12f-360d-46fe-977d-76dbbb73510e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8e48bfd5-6173-4f0c-8645-a067a39f8cf4"
            }
          }
        ]
      },
      {
        "id": "9a714131-555b-425a-b980-d0590508ab6b",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "85cc8164-ded4-4f59-bd61-5634978465f9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "385718f5-5f03-43e6-bbbb-14531b996486",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4c9e4a64-f91c-4d94-b490-297344c65aed",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18e3c313-7157-4256-81b3-6992c9b21347",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2db5537e-2eb8-4cc2-a50c-610f4b38169c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "962fe6c3-d30a-439d-b7f7-91d85e031ed7",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e25cfda0-d7f4-41e0-a73b-d99d78d275e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5512c264-f131-4eae-9bca-9273cda47652"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5344d3fb-a168-479c-b71d-7be50e4d205f",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33da0d68-7b5d-4891-8ea5-18243233ce66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "95e03efe-a81f-48a5-9731-07a6fe762ace"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "29930c61-fa42-45df-a500-464f83f951ca",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b0c3a76d-00fb-4d69-946a-0c01c5ce55fb",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4854818c-3d4a-44cf-811b-2b156cc23828",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d06a5066-10b1-42a7-b89c-6ff856736c0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4711495-22dd-496b-b864-cec21f5387bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1da20e4-3f56-46f0-8828-80fc8f45bc13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1c64777-f67c-4ad7-9513-2b923cb5fcb6",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "448bf6c0-ddfd-4d6f-92d5-0a6f54187781",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "955c9620-4050-4542-ac6e-1a421dcc0ba7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6b685db-7f58-4921-80b4-f56f7ac63952",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "7869372a-4121-43c1-80bd-9731ff6c8f40"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "b0038517-46c0-41df-b2c5-a31eb3ef13d5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "243aabdf-6eec-4f94-8e0f-c17e61f7994d",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1af2a41e-1de4-4ceb-a6a4-831864c1abbf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "80a1e518-f309-416e-8d79-919e5f131ace"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6fc1d0d2-69bd-48eb-940e-4257ea67af8f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "333a4a8d-9873-4815-bcf5-0ebe61f3ad2c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "40d5d1b0-1dc1-4f1b-96a6-1ff634a5c6d3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ee5d13af-317c-44f8-8afc-62fe6ea54763"
            }
          }
        ]
      },
      {
        "id": "57fa819d-45ec-4737-9e6c-8e232cdeedcb",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "7e4404a2-dd3b-4043-8151-1b1539e77e19",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8adf2cdc-64e7-47cc-81a1-8ddddb250e97",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "10f59e39-be7f-474a-a81a-6904b2969aa2",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3a4747c-a5f8-4120-8b80-e891ad304266",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "932b1ec0-cd77-4762-a316-1504a6d930f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f88e7aab-f846-42f7-8b50-5d9d2c7158e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ce3ac63b-3648-4e4c-bb79-fcefd3998b7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b04a2a8-d8c3-4fa3-9846-24f316f7da82",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2811176-04cf-40d5-8061-023486f6fbb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c000d88-78bc-4ac9-a2a6-d5a2af9c1aed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fad98c61-4762-40ea-b880-74ab6143012c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9dee3ab9-1b3a-42e6-be8d-00882e3808a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ffeff57-029e-4fb8-bdca-a58a49235634",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b21ce92-2de5-4514-a6d7-4fa8cc746193",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e1cf7e4-97b3-4374-85df-f3c53bc05a4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78ece636-ee51-4d3b-8487-c256be9a18d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a75be8a5-ab87-4d62-84bd-1133b03cb443"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc58a1f4-730c-4b2f-b27a-45d54f57880b",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76dc4930-293c-415c-978c-b103a73270ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cff5806-a113-446a-9e2a-956abe2c1283"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "530ceea1-3d49-4b41-af55-881d31dcd82e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "10d74ccc-ff4a-41d6-8ab9-1a499534c26c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4534c3f5-2864-4df4-85de-58c48ed82714",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3585fde-c924-4c51-b0cc-032c1d6cdd80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "535ec854-0614-4754-8853-c5d14dd7ae3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31ce15e4-e6be-4c3b-8a3f-acc9895ac529",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "38408e1b-6937-4cdb-919d-361d56524583"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5feebfc-b156-4790-823a-1fb8f5be1691",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e025aea8-5bbd-47d8-857f-d09519b9a026",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e62d44b6-39d2-4332-bd73-d5e0c9abcd95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3bb3e61-279e-4fdb-8ebc-a0a71a1fd3c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5e0be5e0-a91a-4729-a164-ac1b25fd7aac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1862cce-9008-4d8a-9706-294a678347e5",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8ac137e-f941-4071-997c-14f020fe81e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d5357da-9157-4975-ae34-4a7d9a455b50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e72f908-c029-4412-b2f9-9838d4c9277f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cb477cbe-16be-4fd5-be19-b7f7c0582eb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b398f928-ef84-4ea2-b4cc-fe4b9d768e1f",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd0c4c75-14dd-4113-b831-0beb0a0f6fe7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb030acc-4506-43f3-b77f-3931f7b4eb8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c3db1b6-c9f6-400e-a8af-24e2e6b98c18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f646342f-22c2-46b2-84f2-bcf8efcff317"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb5f5be0-88ce-4b90-b86b-15179a20a35b",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "383d9a50-312f-4186-a82b-ec67451633a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "482fa341-fce3-4e6b-a9e1-21bfacf5aea1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19e32d57-bd11-4ee7-acb6-62a8a5694e7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "72e53197-baf9-4691-9ee7-05b4baa37f3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b04a3123-cfb8-41f6-b051-3200afc0ecc2",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c08fb505-a626-41bd-87e0-45fa162413f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8688dd8-52f1-4449-b1ae-b0daf439252c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb89df69-862c-40ec-9cab-127189ce4a20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "291bb1cc-87eb-45fc-83c7-d3ddca4f3d6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad62f7b4-fe2f-458e-b9d5-512395bd9a59",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0a3841f-ffc1-4606-9493-42c48b7b78b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "089b886b-337a-45b8-8cc1-ae3b70dad097"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f741a89-51ef-4e37-8cc4-881546987687",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e3aefd02-ee31-4e08-96a4-a6f2011955b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e675ce3c-1dd1-41de-9696-b95ccd1fadca",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12b3fbac-718c-478e-9873-17830ba2775b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c5df151-2420-4805-873e-2f9c9864aebd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39914a7c-ce9c-4b22-9dfb-a805c0248c06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9212e658-bc85-4a25-b3ca-25792458ebf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6901896d-2e56-4798-8f7c-1f1403ed4eb0",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d67911cb-4c3c-4990-a99a-6bd7d92e02aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9cbf326-f638-40c7-a465-fcdae6f160d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3c2fcac-361a-47b7-9c9e-ce5d92762da8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7425fc94-21be-4a37-ab72-4128928f9a83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1da0cbc5-bb61-423b-a1cb-d5fc846fc3d8",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae8d8e92-78d7-4344-82db-0d997c324430",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9570ca7-a7c5-45f9-a965-fceab48ed4a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6132fec-63f0-448a-b0e1-1056214eb754",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e68a654c-b794-4282-bed0-02e49837477e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4af7192f-f9ca-4b99-96da-aab6937e5022",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48a2afcf-e116-4265-b4ec-e6c00bf1d1c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44f76acf-0823-4693-bb50-4636a907b339"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c730d02-9344-45c2-a00e-70367e0c0364",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9e388d72-e24d-4d4c-9c2a-9a1575ee7064"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e63eaff0-05bd-4baf-88ba-0a8b548df355",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b84909b-6f59-4074-8b91-d4e3ab404029",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0ae7183-35f8-4ed0-883f-ef0929385fca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb288be6-31b4-4e1f-bb23-6ff12e129381",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "feb82dfd-f144-4481-bb1f-8abfeaed27a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45b0e48d-59f1-4187-9726-6e864ab0d979",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51491594-61b9-4f23-be7d-08fafdca2fbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20c3ccbf-b44a-40c5-b7ab-75d16c821e4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab3cc1b2-c0f0-4f8c-9ec0-73195c61e140",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "015d0fda-62ea-41e8-968c-de22b5b305d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2df17d33-b869-4ad6-89ca-ae3795d90e66",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e281ff22-6a71-4d6b-b605-fb1eb58ca4c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c963616-8a62-4cd3-845c-259009c27b48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "204e6bdf-bc46-4303-8031-8454b65df8f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ecd3127-40b6-444b-9f25-9b20a533aa14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c0d9c98-ef96-4fe3-94b4-508eceab541a",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44a6e168-b71b-45f1-9c33-b0662f50a540",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d638006c-3a04-4a67-b737-b54c0b7ae13c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3d3d59b-664a-4361-a572-c958f5a1777e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "95c745de-6513-4714-8902-a7e83f391e06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "569ca746-b6cc-4845-846d-032f5f183395",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aa2fa6a-fa99-486d-b12e-ba81ecb5ecb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70df31b0-a878-4900-907f-1c61e392a499"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5248993d-e489-43f3-a97a-2dea681252a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee9d451a-2546-4186-8f27-3e3a6d9081ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6a0e738-5c49-4d5a-8df8-06d6ca97f93a",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0dd0f89-dd5d-4e41-bbe3-1d618c8f8286",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07eb5bd1-af48-44d6-9143-9265586a0d1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de6db697-2c9c-4787-a726-a8b8e8cb3394",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef6f960b-949c-421d-b23a-144873150cdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2253e4c-2733-44f0-bd0b-a4cfcfa650cf",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b96cc2b-7e55-4e10-8aea-767d67bd658a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b745373-05d6-4b6c-96a8-444873858e7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c2ff98b-a1a8-4d2e-a606-3cb4a3fa4ba6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cabf5369-da03-43bd-93c9-065e559ff35a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7985ae86-8d7c-4e4d-9276-1f11a87bdb3b",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5f03d15-8444-46d0-9596-ae38b1d89cfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "011adae3-ec0b-4c8a-bbc6-a24cf2fc8e41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f1bf6eb-8dcb-4b5c-9e8b-48f9e16df0e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "af08de6e-a9e1-4694-9e93-ac40a16b961e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "906c73ab-1aa8-4e6c-baf7-f6d1e19b30ff",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ade4b1af-48a1-423f-9acb-28c87211d369",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47bb6616-5f9c-465b-accf-8f667f4a892b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32a3785a-7946-4dee-8dc3-439a78d2d938",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff778e18-ddc6-459c-8a08-2b415d4fb9ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b803d49-8b72-4a4a-9e01-45bb031f46e1",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90b0b9a8-fc58-481d-9dda-2a4ba29d92a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8508a21-92fb-4202-a476-9e69f0b4617b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6684177-0b8f-47a6-8605-91cf5e716191",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e79bd11-ba35-4eb1-93eb-8b03efdcbdc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3bf5098-0d30-4cb5-9081-79946a533625",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "613fde64-b9f2-40d3-9077-609bd7c0f33d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e4f57a9-6dd5-4d35-8891-89e594ac0bfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65c4056a-3f9a-412a-b771-8164495acf3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "54eab1ff-e0aa-45ba-87b8-25f452e8d25c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02f181c2-df64-450f-a126-6f593c84f560",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1723903-a72b-489c-b601-f53b27889d65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f1fabfe-03df-4c05-b218-4cc886d1c30a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae8ac7e2-6b06-4567-b0cb-0005d5d17f80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f532d67d-a956-4320-bc33-98ecc98b6522"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3a62052-c394-4ae6-b709-c13132e88073",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd7f571d-a95b-4f1c-b84e-e5f6eed3d061",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f95f28bc-c56a-4357-91e6-a3e450269c52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "469612d5-b685-4aa9-9b61-d10238361e9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b0193e3-56bc-49b0-9799-9716a0f6bedc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6511ef2-f6c1-44ac-bcaa-056ccd7fc058",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1042463-1f6f-4063-856f-a9cb73ccb49b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09dc78af-3559-4889-b072-c48a1e76b930"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "565959cf-8d03-45bb-8efe-50ba4d344bee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6aed9f9c-7ef1-4343-80af-cd091847b183"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6425e419-db4b-4982-bf57-db65481238cc",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7455d3fd-35a0-4a0b-be0f-949e3ea1a40d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4034a9b0-c086-403e-95c0-8a9680800404"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcc75542-6dcc-451a-bed3-34040b8ca496",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa06b8a1-7ab8-44ea-ac8a-cc463c40e4fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "742ae0d2-cbfe-46ff-b985-d9cb54136ced",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df28c458-542b-4e1b-8b7b-b86220bdd604",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e47c2522-4527-472d-8fc6-28cc6239135d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5366c80-52b6-413f-a353-bb93743696a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "30ccd3b6-b61a-4b08-896b-5aa82c197c0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de70b83e-df78-446a-a80b-52ef29a23315",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "322deb5a-80bd-4b52-99e0-46a6b6001e53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fc97bc7-19a7-494b-a35b-91ba8bf91107"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7d4e388-9a70-4639-b91d-7f2dcdbf3da6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d0ca3d3-455e-4b77-9c74-0801ee2356c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4b9dc02-852d-4a03-8ac3-5cfa0d6de784",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "835ccd41-d618-41de-9860-6c7ee79377fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c324527c-d644-4df2-8e6c-7d20716e29d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ec79272-758b-4044-80fe-f684689f7bdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "779514c8-c69c-47da-b019-32b49933e331"
                        }
                      }
                    ]
                  },
                  {
                    "id": "182ccf9f-0044-40e2-b4af-0afb73a9ae3f",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eedbc744-0d37-4fa9-9047-afe91667bf16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b6cdc55-5cd6-4e6a-95a3-ce040f16652a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f38b041-5352-4b1b-a7d9-d689457a8635",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9cc700f-df40-4e9f-8de5-77b4dad44c6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d16de0ea-1cef-4822-87cc-1dc01d7b679e",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15d2f296-cf1f-442b-b8fb-f31fc649c33f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f205fd2e-4b05-4183-9926-d548cfe6ae8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80b2cda1-9117-47bc-bd99-7ef6c99bb7cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "a92d87ad-6a30-4b14-897a-00bdb1874299"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94f4f8dc-63cd-4582-96f1-d46a7e8efa40",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efcc0c52-053b-4c07-996b-614de1759fa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0b98790d-c046-4db5-99d2-dcb93cbc5f98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e66a297-8266-4457-9173-425620dff253",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "12e68529-fc0d-418e-ae28-3870165b64d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4ee036c-e8fa-4661-8a94-80c977b1db31",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47e56750-bcde-47b3-851e-a4a00155d80b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8bc70fb-6180-41f9-9d62-a145bd8d40aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b0142d2-d0c1-4c69-8ea8-cf2ce513c4a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "56872650-b0a0-45b0-804d-fa1e03d52eae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d131b187-da8d-43f8-bb10-d87126320c26",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81bd06e4-b2d9-4c8a-9d19-74bd890bb44b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "168fd825-d9b9-4fb7-ba35-53a8077cb4db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba505db0-3e7b-4306-b6bb-88bcb98f443c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "48f17883-303d-4264-8b45-63b3917bc2e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7056bd21-c3f1-437e-b63b-d31e42931f04",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec7044d0-60bf-49e7-b4a9-940781c7ed87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6d17599-aff0-43a8-a02f-de74a27ee744"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa087fb4-caa1-4303-b8cf-b99b883dbe91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "cba84c3f-5a04-4a2c-884b-8330ef8c4ed0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4fcbf1c-efa2-4186-a10f-2d49bb478a17",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f39e1da1-c0ff-4a26-99dc-5180031c3861",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da30758c-3d9b-4e28-8544-f513643b89ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "326b2a75-2666-4f0e-8f2f-137f5c309c9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ebd73111-a053-49bc-94fb-0c90b4f5dc66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21a074f9-d705-4783-96fa-9aa2bad7c25c",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef1586f5-7560-4747-8909-25700daa63d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7ce0f77-cb80-474f-9911-45aa6dd1e57b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d2ab7c1-252b-4897-a668-81dca9989b01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5dc7f1a0-8a13-4f2f-8818-866d3be6dd5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3890d266-d45f-4105-a0fd-a86569c02b02",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dff165f1-b18e-455c-9954-3b2892abd546",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4091754d-ee26-4312-baaf-2128e2e6a498"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11725199-a9c8-4359-a444-bc90ea7522a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "6a1ad028-3e31-4774-877b-083b6d044938"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf4b4b6e-15dd-4ed5-97e1-139be8eb05a7",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f3885fb-4900-474e-ba86-b1b766c29e1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3acc6800-c2e6-482e-bbf7-c7d59cf4c25c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bae0dbe2-405a-4f5c-9265-fb0084e01612",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "05dc8fe8-4962-4574-bcf1-41d54d9420d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "866478ee-d929-49ac-a070-b857a88986c4",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59da6b23-7433-4a2e-bd1d-2fa11ea00f21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23ad3c02-f39d-481d-94d5-5021ceb0fbb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d78bfd9-aa25-4b0a-a046-0d91747b90d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "df6424fd-5aab-4320-8449-c14429849262"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cb00cd7-0178-4a29-b51c-09ade826a53f",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "061a93da-d03d-46f6-a0c6-6f0c8543a15d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e896c44-c43f-4be2-91b2-bc408cc0a064"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf6c39c9-9ba6-4e2e-b693-523dfbd8fc70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "13dcb6af-e01d-4288-9471-8d4280b6d26d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c144e676-2a5a-4f31-9c54-3956f7368196",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd30ead1-55f8-447f-a3ce-2b29f23faa31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f36dbbe6-378a-4a82-ac5d-bfd0d03b0e5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e9d6c5b-9059-483c-acad-bb3b9e3e62ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d64463f-2f08-4e05-9722-7fcf81967a20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c04300d8-eac2-40de-abfa-38ac4469bc78",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e5b6ddd-2a62-4800-bcfa-304dea3c7022",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f25a9f91-8574-4e86-b259-65040a409d0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad3d5ecf-339b-46d6-a7fe-8a43e6bcd53f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "82a2be4b-177f-4e8a-9b74-7d330990fe26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b973ac89-c153-4cb8-b4fb-5f7d20c1f97d",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c411a49-e9f6-45d5-bdc0-96eac41d0dad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "961d4ccd-329d-45ea-9483-5a57d59c5d91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14a002d4-55d7-4b64-9805-0729a60bd10a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee6c00f4-e8ea-4559-9521-48eaee9ec994"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7806b735-1409-4593-97f9-f604891e50ba",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1396cf4-75df-4bb7-a073-74302a6c0704",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a99e0bc-0472-4e6f-9e60-aed7098f9362"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deaeb567-10be-4aa8-aa0e-88f0910f0f18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5069eb00-726a-4db0-9598-79cc38043b23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a78edb68-1615-43ad-8add-9a175aadcbc7",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6a07eaa-539a-4ed9-9474-8a9d3a6e6f28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4659cdc-6679-4846-b484-8e715cb69fad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aedb0516-b377-4e11-90a3-4e0370296b00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7d3c5619-77cb-469a-bcfd-f41177f327c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9db1abd0-715c-4a38-8767-477dc5586382",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e77ec027-3d45-4258-b519-0f478c50fd94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2296e5ef-f474-4192-845d-f6d0e72502f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e64621c-68a6-47bd-b77d-0cb2f4161381",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "c698f37f-05a0-40fd-bc13-1bc4ba3303f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfb2874c-35b0-43a1-91bf-2d1a872d6503",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e44b7067-72bd-46fb-8806-ca8c242a471f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10febcd5-a5f4-4b0c-a57b-7fe40cfb1d44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01952f19-564f-488c-ae03-29f19df5e2bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ee47a4e-d117-4a81-b23b-ba110a7dc268"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ae32250-ff68-4362-98b7-a3c9d4c600ba",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc3416aa-dabe-409e-952d-d27b3286f7e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57178d7b-e928-4c30-ab67-d7a5f0ee1918"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01c46c88-800c-4573-bbd5-ce1d33aeab80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c646acc-f520-418c-8ad3-13f9e8fa9641"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daedc16d-a40c-4588-a877-9b3b7a3224d3",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "736f15ea-e879-4024-8550-b672345cbdb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74b31e75-df9b-4eca-a345-1f2283f3abf9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2c3cbf0-ea5b-451b-97b9-2c921d360873",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8729f034-6a1d-4b37-b037-31b3c4d22d63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17c7400d-3ee4-4518-b9cc-706a282ef502",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c8b50d5-2f96-46c2-affb-047bbefaeccd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7203cb4-e81c-4106-b20d-6c560a39ad92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10ed6c49-59e3-4bc9-852e-b42f445647e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "98fcd9ce-482c-4ea3-81ec-94f6a5aa46d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79cc3841-35ec-4584-adc5-f7c1c4dda90f",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bde3f61-f582-4c5c-b69d-93d9835e713a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "172025c2-0b97-4512-b43a-b8306d160dbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43659a78-6f07-463d-b64b-ddaf207e616a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "e0e59037-7379-4f6b-bc7b-c3bcbfaf3fbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00872492-8a5c-458c-b157-59673d5ddd49",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8c2381e-17fb-4fba-a9b3-76a431982c67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5e90c5f-c74b-46e8-8316-b537337e91b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89af344c-268d-41ed-9ccd-5a7368fc83a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f51a433b-922e-4d14-9f94-f3d155bba7a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f4dcf3b-eb78-4eef-92dd-8f29cdf502ca",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2e14199-30af-41d1-8c8d-63e88998852a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b23645aa-b241-4b9f-bf19-44cfb218fd28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84392e6f-417b-468d-8193-e2b09010df82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "11acb0b4-6382-469e-8c95-f0f35e30ad6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc20aa92-8b4d-41b8-970b-0c01fcc4bfe2",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "003cad99-3b89-4c1a-8ddf-9fc63081161e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa3bd499-4303-4aa0-9638-49def02ae843"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f5cea94-ab6a-4e91-b7c5-66bfa3602bb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "5aba7b38-effc-42a4-9cdb-afafb1c8a2fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81dd7f31-f654-4ecc-ad41-6a1a9a7a5cff",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d6a548a-b35d-43be-b3e8-390aa46b1177",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de9d9e8b-9c9a-4ffa-934e-0a14d1529f6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "732125ce-6e7c-4fce-bb35-75c94b9ed6eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2bad033e-4c13-41e0-9a3e-1aa48c80f864"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95b891c0-2b66-440a-9a6d-d9db8e5e6724",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e63d13ee-e02b-49a1-9c66-ecd5a59eed83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42d63830-e38d-4b75-8d19-0562d6c92702"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e99c3ce-f002-4305-92fb-70206456c8c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "7e9ac215-c05b-4246-9ef0-67199f8fe901"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8462714f-e4b6-4c26-a693-ae96f292be9c",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "433c362e-7dcd-4d8c-9495-b351eb441f7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de536996-5eb2-4a27-a90c-6d735a8b8401"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71ac186c-fa34-4f70-b657-24ad23391691",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "1bf6acec-228d-46b9-b09b-853bc8c2733e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5f55c68-c20a-4963-a1af-4c29c5aa322d",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49bd4e6f-0532-427b-b0bd-22f85ae42528",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2ebde06-3ab7-464a-8b67-dcb57027ff97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72e86b62-d7eb-441d-a6b3-faf15b6d2612",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6301ae8-ba26-4243-afa5-4c982b3c0097"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efa08ebc-332d-44a7-96b8-c95e22a74db2",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b1f162c-c015-4741-bc99-86ca75470676",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbd35bb3-ed69-4512-9969-c50673f41663"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bd762eb-e86a-443d-974e-270d1da20fd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "399b9387-d5b2-44a4-81bd-ca6b9f41db83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "736d7b85-d894-4840-9d9d-e69be2cfd255",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2aaed3c-fe62-426b-a132-14ef70254c69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf0dde7c-d574-445c-b2eb-c3d04c076aa4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2bc2688-d902-4c27-b092-53b00b5fcb84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd976160-92e6-407c-9ab4-076e1cf90875"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73194191-1924-49ef-a6f2-830efe2be9a1",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa207060-2d5f-44f8-9eb8-fa61564402c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6201110-0056-4511-9b81-8d57d6196732"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9118876-7b88-486b-a6f0-5a70f5790a25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a2f685cb-1228-4d70-922e-be1caaeba7e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a9a5454-e706-43a4-ba5e-50062f18fcf0",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e79f914a-7d25-44b1-9232-580b3165b4b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b9319f2-c400-4dab-a4c9-16d734d23094"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9284428-38df-4a7c-b8d6-1d6a97f62b07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "eac61a45-b125-4bf6-85d1-5e382dd37aa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5534caa3-aefa-4b3b-820c-0df8338c3daa",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67024ac1-d579-4c7a-bdc5-da1df1d367df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17760023-50bd-414c-80dc-3c847bedec87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0926f9c-c791-4b02-b159-5d7f279dead5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a551098-b7a1-416e-99b8-ff0eb0c1eb3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc38e34e-3911-4fd5-8252-99d8286c9a8b",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a4da409-6d52-4ac5-96d3-754d788606ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b35e4049-ebe1-4a8b-b5c1-0923fcc473dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17922802-fc81-4e26-a3ab-17d88cdafe49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6824b6b0-f489-453e-9e0e-1ba52628a1b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c73f339-365c-45ea-95b2-686f7464ddc4",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8682d08c-4b83-4a1e-ab54-37e1e2679229",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3010313b-c55e-440e-a2d9-4797dd6ed6b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "effab487-99fc-4043-9e65-9fe07f023220",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "705edda4-967b-4d9c-b178-a87c369bd946"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4f75df4-299f-4210-8d65-cf79fa28efd7",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12e49bc5-eecb-422c-bfa2-5e39ba9ede6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d21e283f-7596-4113-88ed-02b92636a7cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70de1b69-2dce-4ec3-a27d-d0796927a7bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d553fada-f6ae-432f-8ae7-c0ac0992bf9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf05d50a-361b-4409-ad4f-1170498a7622",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c6916fc-4898-4b7c-82fb-bb8b21390b0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10f742cf-ec6b-4a47-9254-3a090d9ad8df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84e4d38b-1a82-4006-958d-5ce766866e61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b30ea0e-fe6f-4563-9913-c5469984012c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1430e2d7-54f6-43f1-8006-51e4a9beaaaa",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1c4824f-23a6-47f9-a971-5e29fe601d17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09941a5a-fd0c-4e75-80c0-dc31231d4b3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ac8d8c9-a6e7-421c-8737-195f42311308",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b40b42e0-61a1-4451-98c2-4d724f94505b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3c766ed-1191-48c3-8c81-d5661cd64bff",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4043169f-d119-489a-a893-38c6960f59c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81ffe580-79ce-4b8c-acee-f4b7c90c13d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb5262f2-8b25-439f-ab7f-7cf167e133b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a6402b31-3ae6-4411-8858-e739f15023c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f49f572d-fc7c-4681-a23b-559018776755",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f85d4b00-9167-4fa1-8dac-e57c7f4bb628",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d43df531-8028-4e9a-a7d8-efa83e8175e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2dd2362-b04c-484c-911a-86c940c67300",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a14d31c-a1b9-48d5-bffe-2d9cbc06e0b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68ad2416-b858-49ed-8db0-5516bb0d1560",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be982d4e-c11d-4735-b288-5d762bb07984",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "762d3066-f01e-482d-ba4e-cf10b85c6adf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bfbf3c0-1454-425f-849e-49ca2cd7fede",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a18d8da-6e42-466b-9d5f-f4f7465680d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72b9b755-70d3-4377-b91d-9e9d057c5878",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e878bacf-6edc-4579-8cf9-6dc3f791c21c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42da6cdc-1af9-42e3-9fbb-a8aae3620625"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9cdd119-2f1f-46c2-a3ff-8661e01c9b33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "934510ab-3008-40b2-8b79-7bfc45a395e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f98aa0a-51f5-40e3-bd7b-447d8ee76166",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "612670b9-eabb-4054-8611-5efeacee5b57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02d74951-96bd-4911-98a8-06b372a99217"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3466acd5-462e-4b8e-baec-f7fdb0033cdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a5a32ba4-9a01-45c8-bf33-23cb2dbf65eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e03843b9-74e5-4599-812d-bd7e4faac8ba",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "210927c7-9e47-4928-a53c-0b6305941102",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2bd055e-ae87-4444-ae5b-a55464271b9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07d40853-580d-4f2c-8078-389ca1e01dc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1682b957-98c8-4176-9df4-c17510a6d0b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03ce622c-2330-49b5-9460-6c199f547206",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25724d76-dad4-4472-a0d7-a6b2951b7865",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67521c58-bc6c-4da5-abe4-df222fab0c02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e19dfb9-ca4d-459f-839f-ddaefa6debda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3435815a-2b6c-4db2-a762-28a8e56e38d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b10c1dd4-5b82-4751-b3a6-515e789bdaea",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dc61bcb-18ad-4fe9-b870-8f3c789ba111",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03f9fd0c-8949-46e9-bc4d-9639632e4800"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f9aae4c-4298-4625-8a99-dd5c033ace1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e20776f8-740e-40b1-af5b-92efe13580c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d888ef5f-34ee-4f4f-bc7a-a931d1f03029",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60872053-14f9-4e6f-bf32-e8ec3fd5e5a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26a710cd-23d2-41d9-871a-b882baf7ed5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "912f3b03-dc2f-42cf-89a7-e702297a0a77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "049fd583-00eb-40bd-9915-83ca64f2de6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b80bf5d3-ca3e-4808-a120-109132868724",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42dd0ceb-c501-4e6a-a73e-8caa9081a7f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5f2e449-56fd-470b-a80d-4d65fce9984b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0a88144-8ad0-40c4-9386-c7a058173c29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f47917b0-9e64-48c3-a1b6-e3273098bdee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8f45b0d-6db5-4e06-bf70-0d8f49e51f64",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e46a86a7-a441-4747-a7fb-c141377ebc9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc5e5f36-475e-40b1-8b72-0e3f7ee65abb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "197fa98d-29a2-43d0-8439-971681675e34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "51462319-f3e4-400e-b980-f0f641abbf0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f00c1ed2-184d-49ca-b374-e2be34e3ecc6",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb54ab3f-a345-45f0-b350-2476b83cd0c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a23135c1-90d1-4adf-b9d3-0d1698888e69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9689c7f2-e978-4b24-b4bb-1f177592b8dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4928664f-77e0-4f41-85b9-f5e9736c51aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6dc85bd-6fab-4278-9cf5-18903e91f7c0",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3d15ad1-cd44-419b-94c3-95eb5a2371c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43e90bf8-fbcf-4118-81e6-d0f34da2c633"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c400a5a-b924-4087-891f-37988b4d6090",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9a1b92e8-bc5d-4af9-a1f5-7f6bdc42c5f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2611b477-e18c-4642-ab49-8d33e1729481",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69c39cd6-11bf-49c3-be11-3318aefb946a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b1ea3ac-f10e-4c06-8e56-227d69c75b46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e48d4cfe-a9f0-4c5c-86ef-8f9a5de58344",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d063d2bd-3dd2-4afc-86f2-055d95e5f92a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb6d28df-b823-4053-8827-da94d03b5cc0",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd296354-5e26-4a20-8ad2-2788f4d6b5f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66d57a74-a9d7-4aa1-b59a-8b8fc5d87fc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e7a1ff7-97cf-4bf2-9edc-91f8c31b5898",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3ba3cc7a-8ce0-4965-9051-9a2e0966129b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ca7b4c2-2956-4da4-a6dd-d6a899bdacd2",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bc51dc7-1258-43ea-a86d-3d79681cdd2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a394ca9c-e567-40db-8d30-0c6b2a1c01aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7622d836-d32c-4553-b359-d3869cce7721",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "3be18bd8-6e56-4676-95f7-7625f42f4b43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "751764e2-f5f0-4e8c-a62c-bcc0b54a3377",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41efcdcb-8d74-4a6e-b659-8da8098503ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a637583-a6de-445a-979b-85e4e19835dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6fef6c9-3d98-429e-a54d-356da5cadcaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "14f876ae-a16e-4ef7-a91d-e71fc257f98f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd23b21a-0a97-4575-ae0f-2b0bfed18057",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce25c78f-f91a-465a-bfc8-ecb6468c900c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89bd98be-baf3-43bb-bf6b-a4bb55848b3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94212ae2-e256-4e3b-b853-1a35f38d768d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "c69a0e9e-5228-4ff5-94d1-4cdfb3560247"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f29fe7c-4b14-41c0-8268-985e02bb6e6c",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72049f10-af21-4d65-a47b-b93312186331",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "ae98730e-b9bc-44ca-bfef-e426aacfef0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d166298e-8f2f-45e4-a758-773eea877722",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "ff8e8727-9b03-4c7c-9781-8093a75db5bc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e9b77699-d138-4942-ac22-1c86b0973922",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "20cd21f0-e7bb-4701-a967-f0c78fa3176e",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb6d0a9c-9fa9-43c4-83a0-e18583f2a147",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2a35aa9d-db42-4d25-b91f-397894ea3b4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ef6ff96-5cdc-444f-9e3d-4c7d906536c1",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5517794f-889d-4406-95e2-513820fd06ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4281668-de93-4ab8-a8a8-6cbf74338093",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8464246-b795-4f20-b683-717e3eabf00e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6db3f26d-191a-438c-8de3-994e92cc05e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c09fc9ca-cdef-4f67-8af1-b12fc5afc2f0",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "66e18e68-de62-43b7-850f-038260791b71"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f96db14b-2efd-4cc6-b1a7-6540db00d51d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "19a6aa6e-dc86-4f94-b57a-f9f8538e9b29"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "dbcf3516-9b4d-4b0b-9834-d9a206d22542",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "94669354-b93f-4ad7-aef0-1b2d4a889d93"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "bda87169-9e14-43b2-a909-4b96cfb79e02",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a3ea656d-f82b-4d77-a2b3-8a25dce93ec8"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8934ec2b-94b3-44b4-ac70-b1924adeff7f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "686c7fe2-135a-412f-846d-ce3d9085b167"
                }
              }
            ]
          },
          {
            "id": "c630fc12-360c-489e-8045-1c80fd008ad3",
            "name": "Positive Testing",
            "item": [
              {
                "id": "213123f0-498e-4a8e-a926-b4d223c66d5f",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "319f7530-a401-4f64-b21c-24ba2f740493",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "554c7325-b94c-4d9b-b9bd-de39d7ada6cb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a5ec30c0-5622-493b-ab34-2e520c958678",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "de159e73-1125-45db-957a-812b48df7c64"
                    }
                  }
                ]
              },
              {
                "id": "8fc333a3-7e79-40ef-a44a-68867e3d1888",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2552e7bc-573c-45bc-8dd6-0a9e775c9508",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "412c2d3f-d7d4-459a-8971-bc8dd370b26f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cfe55af7-b337-4063-a7f3-a856bf5d47fe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f33db65c-6090-4814-9d29-8ea73d7b1eab"
                    }
                  }
                ]
              },
              {
                "id": "c1ed4904-4467-4dec-a42a-d998fa5fe933",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "82a6b23c-8dc8-40e2-838f-9f5915963e0c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8d407394-f50a-4cda-9b47-4c059ac94c93"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bfb16a71-ff5f-4e2f-a893-7f16710008ee",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "477ec18f-9dc0-4ef6-a91a-2b07680ed970"
                    }
                  }
                ]
              },
              {
                "id": "6bedfc04-2e93-4c50-a41d-f8c14c550463",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "39106f5b-3079-4fb1-9f86-508d264d9e00",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "84e20456-9025-4bbb-9da3-1c56c269feb3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a8a19cc4-b018-4af1-ac00-0824029b094e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "2c08e287-45a5-4013-a497-2386a0c89129"
                    }
                  }
                ]
              },
              {
                "id": "69bb0e8d-36c0-4b9a-81ab-111a32710536",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "739bf0b8-3be1-4de2-b99d-6c35d84562d1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4232c367-d2bc-489d-924e-1bc8b443ec91"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4f649717-0f76-4269-aa83-7d4e1c863e8d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "5f1c5e47-5b6c-4c97-9068-2e304ac442f6"
                    }
                  }
                ]
              },
              {
                "id": "e4c045da-3c22-43bf-9f79-ca20c84699e1",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9ed5a934-209b-45ba-9b71-f6e082ecc2da",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "15d696aa-9a31-4670-ad5e-068d06c1057b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e34630a4-82eb-4914-a546-a38e649ffcc9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ae4dd45c-d474-4310-8f3a-a42466437886"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "67302d17-4684-4446-9bdb-9877c51e5d49",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ce05ba08-7776-4f91-a9b7-66d729e827db"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a0c1eff6-d82f-4dce-827c-aad5418653af",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "02574c7f-dc6b-4139-abd8-08eab3bf3cc5"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8796fac1-8a57-4f08-b97a-6692be41bd27",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "7e8fe8ae-15df-48ed-b89d-aa2e8c2cfb90"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "58e4585c-124f-42e6-8ee8-2c0686904278",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ba68b729-0de2-46a6-a80c-0d11bdccd2e6"
            }
          }
        ]
      },
      {
        "id": "e5cb7680-cc57-40a4-964a-59d58e66d71a",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "bbb8f521-234f-4591-a19b-ff66d4e06e34",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9c4bd96c-88a1-4928-920d-ec2c81401370",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3504d5d0-2003-4e4c-b5ea-87100b6d85be",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46346546-be08-4e05-acae-14bd041d3dfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f7a6f4a-fd6b-437d-adae-e069f1b51689"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a27fbe6-f775-483f-b17f-7d54dada6efd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "b31b8849-36f6-4981-9d2c-ed8a8f33e14d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b225cd92-9f77-4914-9abe-3f1eb9db7036",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5eb35c4-02eb-4ec8-8103-b4b9c3f5b5c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7c508b2-8ff0-451b-a3e5-c19678f29da0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f9fb0ec-df80-46f6-9cde-185e326e9247",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ccd983a-f700-40e8-a4fb-649094bc26a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea7329f7-b7eb-4b96-827f-07faddbbe7e3",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb6d3cc6-57fa-4d7d-876b-2ea270340e0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd9f1e62-8617-4a37-80e7-be910fde0815"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7506bbde-b27b-4555-a126-47074bb31f93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "66420fbd-3250-492c-a0f9-5dd163942813"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84fe9fb6-efb3-430d-af7e-c231e33a7f89",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac33f801-18fc-4e2f-aac6-34d5865f62b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbc83c96-47d8-46b1-9134-85638bec4b02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "345a4cd4-c40f-4375-ad78-b3110bc3929d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d1d7e32c-e7a5-437d-95fa-15011572d7fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8616383-c659-44c7-9fc0-554ca2ac67fa",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f70fb33b-9190-47b2-9c51-eaffd35095b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61e4ec42-1c12-4a35-927d-10b8cacb4e00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ec69e3a-1efc-4478-b090-a319a80dfd6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "533eef58-4f4a-43b5-91bf-7a99aa78c665"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa54c698-7c4a-40bf-8c39-607be008df66",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "330289e0-acfb-42b1-b7b1-8504e581f04a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d62ba78d-8f57-4a1d-8fd8-cca10e7be42f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0796506-3b83-423a-9628-f994729431fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ab7ea07e-c60b-4d54-8a1f-17b2ee5c52f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ebebf09-5102-4c49-9480-64edad7d421d",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f63e3b77-6578-4c5b-80c3-5966dad75789",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dd769d1-c9c0-4d45-b710-18e559afb0dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03ca03a5-c059-4ed4-b427-0265f307ef1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e05d853-2b93-47bd-b784-d308cd300b33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3425781-5232-4f7a-a54b-f3f65f330d32",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8603bacc-8b71-4bab-be66-57d2abef4b3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0295494f-7bfc-499e-8ba1-3e093069df31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2f76db1-062c-4775-9437-a644c2c40466",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "68e5f3f5-ccf5-4c32-854e-b419fac8a962"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9a1b011-e742-4b2b-a33a-cf955a91e8c3",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "662ecb80-b065-4178-8765-164d75d28c1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35e04123-4929-419e-aa71-29399ae9042f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec4ec9ab-bf65-48b4-9f08-530a861e89c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4dc2491-d355-4dda-a39f-056543a3d66a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b10cd695-2e16-4ce7-af2d-bb54caff5c01",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "036f37f0-20b7-4b0c-b7b1-269d85dc98a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92ade3e5-3f21-4179-8862-1131c19aa405"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "531e00a8-0f3f-45e1-be36-dbd8cf68bb13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e881077c-db81-40bc-88c7-26d95d1b3b06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3f28ae5-7f66-435d-897a-2631a02f64d4",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "389707bf-7e88-4854-a5c4-2d41bd0a28f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2ffa3e0-c88f-4d53-a0f9-f06b6cc87498"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6c31414-8cb7-4d2c-a35f-1283e9637ed5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "062a8b9f-f405-4f75-aa68-38e50cba7052"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43a97b26-4fe2-4614-a54b-9e7be719b3ee",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "794a0d1b-8844-494e-8584-701b1176b364",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd4d502c-0e3a-4fc4-8a83-e273031d6078"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d9d77bc-43b3-4aae-b8eb-91d1d3f70bdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f412804a-40ae-4a02-9844-2e072df07297"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ffdabd7-332d-4e24-b764-9c234aea608c",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "335d1845-374f-44ff-8192-e4684e772a40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95f65403-903f-4ed4-8692-b1b9d07b23a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8746975-d34a-400b-a15b-23fd592d41ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d7161553-a9f7-4891-aef6-c7b8c19ac81b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "604f9d30-b038-4aaa-897e-be98490687f2",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "136bbd18-9346-4a1a-9bf2-0f591b92a104",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db5e1f4d-6fb8-44d3-b154-eb8a6eec2bbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3349f53-902a-48a5-a400-2feaf770800e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "3df8e581-7351-49d7-a4f2-4bc60a72911b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53d77029-a457-44bd-a018-e5631dfb3f01",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68c7d204-8f8b-46df-b7db-28da250a6220",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "840ad217-8c06-4c35-913a-f025a3a25d8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5508dc7c-cb81-4824-8459-56ca6a557247",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "cdc5080c-8fa0-4c20-9e28-3b4d1c96d8ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c1665b6-03d2-4df8-968a-8e3bad149e68",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f350acf-8356-4022-9621-e724dba5bbbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32c2d1ad-1818-4209-9da7-662602820136"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f8ce18c-2570-44f0-949e-5a831532dace",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "14f5186d-92f5-4f02-b606-9757fd82ae40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "001f9a24-3314-474d-b628-2456c00e97e7",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "607b37c9-d533-4559-91b5-e93535ee0c06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4eb257b8-5035-4afd-a80d-1957d6e69f69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bcd7718-6dcf-4666-b377-ad7412c307bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "d19d7a65-351f-4ed2-b1a5-458b57c28cb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42153a85-4167-4b23-a200-ec19af0594ef",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bf30ad4-c2a7-4cf2-8cb6-24e6062ff773",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "469fc64c-ef3a-4918-bcd5-04e3f5566764"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d4f8ee1-c03e-44ec-924b-12e41a421a0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a76a921-d4e8-4e98-8dbd-4393b08e34c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f73327c0-db8e-4ffd-8433-2f5b1890c56b",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "970b284c-81b2-491e-8ce8-ce711cdb194a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c740c82c-e09d-4a9a-ba55-cde010f1de1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc269f82-8e3a-43f4-a15b-58cf09116a9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5953e4e9-5d38-48f5-b03d-8eba46ebba5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3a67eb1-46a7-4920-80ae-ac65b96fa47d",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f4ccbc1-37c8-4e58-87f6-46a41384749a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dc44db3-7cd4-4592-9153-f9282d082a1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b21c51b4-a1ef-43ee-8984-06a2bd55e484",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b6a590d-1d71-408a-98b0-7d74b5b9d14a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6efc917b-db87-45ea-bbe8-bc5f48adfbef",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c12f7b59-7eb0-4928-a151-b20f6171a186",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "575a8378-ce99-4b6d-ad9b-aded327e2fa0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd986408-64d6-43f5-b869-210313a4f920",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc57fd24-32db-4bab-918f-4d674bede106"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cb4f591-868a-44a8-8f2a-35cf18c71634",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26dfb996-2a0c-4abd-8e6b-ad64f76b2101",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0895fb5-e5e6-42ea-8060-c0190f8c081d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f5f7d78-cd05-404e-90fa-964748bb1b8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e59d4a05-95d6-4a9a-bed9-d83e34965b22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "499002a4-fe11-4809-b257-75e213cfcff1",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1738747-d31f-4e58-8ba6-c52e8cdc0fbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6005647-f9bb-4c66-bbf0-4ddc383ab2f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62e8b845-21de-4380-b86e-318a758cbc15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "458f905a-d4ba-4ed4-b2ad-4e871d560a95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df86837c-5bf9-402d-ab59-27b6cdcbeba3",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ca57e85-3aa4-4ac9-90ff-70b1f4be99d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b2e42e1-1f31-4585-92d9-15c9fbc33477"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0ad1de1-1f0f-4fa0-9b63-d8104e3c9ad9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "df075ddd-4122-423d-8073-e693201d80ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15e8e0a6-1cd9-45f0-a552-489f95a81448",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c77a491c-4ad7-4e99-8a34-8bef1bc154b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4e5cc74-f473-40fa-9762-18c459ac5349"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e2c21ec-6520-4348-b69e-b888acbc7282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d087f7b-5add-4960-a6a0-3880db808bb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16d97487-0bea-4d3b-9c0d-7c65b71ff661",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f674e19c-ed7f-401e-aba8-99524972bf57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ede2a62-fce1-4f7a-837b-f3752d0aed4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a847cc9f-1667-47fe-9cec-0a26f7eafa34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a1cb2cd-abca-447e-8172-9b1a329afc11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d4600e9-9619-4fd6-a0a2-3d803b5002ec",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "707cb189-9764-4ebc-908f-a83d077e2a33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4024dab5-f5b1-459d-8e30-bccec48bd682"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e98b87c6-c7e1-49eb-823d-83e3d5e4079b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "06d8b84e-e76e-4bf0-8162-d5e2cde74aab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97b4198b-42b3-4871-9823-5d843af5e537",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a13c182-e738-4599-8878-7a8a89d22fb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "388e3cf1-d94a-4799-9053-6f215b51ce84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "009e5299-afdf-411e-9cb8-65d7afc8b3c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e52844ec-5d0c-49d6-812f-2a04b1222490"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbf3793d-6e3b-441e-ad0c-49d7f59efbf7",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b61a146c-0ba8-4d63-b123-2173cb0632f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "029a5aa5-ce0f-4efd-a0b8-3a3a0a7ba82c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2590fc5e-6e85-4f0e-bf9d-f85d6c0ce27a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c97d1c83-88ae-4d52-8829-b5044815195b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14fad1c6-770f-4c06-8796-2099ffed9834",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e92a3b06-ea8f-488c-8c60-5f500176990d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "476923ec-3923-4db0-897d-5f8c97c5c587"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b2af4d6-8314-4379-8309-555b39de5899",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "97bbd349-39fb-4f09-9c70-b9d5840ca6ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14da8bf0-39d3-4ef4-b207-1174c08e653e",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12ef47af-5850-4a6f-9942-088c3a972c2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f753aa9-670e-4eae-aad1-3a7c6e5ec82e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57b06178-1c3a-4a9e-9cf1-d991786f18ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2f53967-ea84-43a0-af90-250eff5f4d20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b87af7a-4d20-4eb9-b5ea-a37c9f1950e8",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f46edf9a-17f9-4c91-b6dc-e2d168973eac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee0260a4-7396-4f28-99c6-7f2846bc9710"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c95db66b-b450-4ced-9f67-5790f6dd9967",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "defd4047-9634-4356-963f-cdcb9124e8f3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1a04fda8-10cb-4498-9485-fae8a9cf2190",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1c083410-1bde-4837-8b25-62e4e93e7449",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a7fde6f-59e2-4a59-ad17-bc2ca26b0680",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "3595b622-3fd3-4a0d-8d86-9e0fcac41dfb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "768f16c5-94d0-4540-a662-24badb8da93c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "75976764-4c87-4c22-939b-bf17aa6e2c8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "859f771e-94f1-41bc-8d6d-21684ac0039f",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecf3ff5e-6646-496b-a655-7dc720af835a",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "417aaa9f-8f1a-4cdc-ace3-50983b29401b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dea56b88-3ea7-4fe2-b639-a2ee93364a0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f645013b-2847-4c10-b8f0-cf3f8b57a499"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6e60dbe1-2fca-40b4-9ec5-36675afdac1a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f50b1223-ebdc-4499-be8b-bf07a509f67f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "aac924a7-9a45-49c8-88ad-b956e4ec2f90",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2a39fa6a-c232-4e17-8906-596235eba657"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "18b21d3e-31e8-4efb-88b3-846ceac5222b",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "bc370e67-fe52-4b5d-9762-5e08f0f9d3d5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9a132040-8692-4564-9bcc-8e9d1042b2fe",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0a3c0cb7-4546-4987-8abf-ea95f7f40529"
            }
          }
        ]
      },
      {
        "id": "d312cd5b-6f4d-477e-9a7f-9629306b17e0",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "18675e0f-2baf-419b-aaae-27a56d3023e4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a7564f17-7dc7-43b8-9fa2-08f9769f55f6",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5429752a-65b0-4d57-9642-db15c7799adb",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a58631fb-0df5-475c-b43a-6044ef397435",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d37edbab-ccde-4d4d-8cba-60023c8e3514"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57c10a89-d44b-4dcb-95c0-1d18315275d4",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52e65137-9956-4806-a59c-6562b2ceaeee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdf555a3-782c-49fb-ac7c-858e01213fe1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ee2ccb5-3429-410f-acb5-e18372f08f30",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6fadcd2-2993-48d2-97c5-aac747d5f826",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9709267-634a-47a6-a02e-6213ea0063b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f459282-9aa9-4d3e-b72f-99dd32cdbc52",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "396e5151-b1a9-44b5-bd5f-0cc6a841356e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13fb06fb-e7fe-419f-9c16-a09e2cf6d6ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf547a62-25ad-4eeb-bc88-e06f4f62bfd2",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "071683c4-0b06-42fe-aa1d-9f736def8b81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eafb1e19-1895-493f-8016-aaca3db2e9b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab3bd4b3-5b53-42ec-83bc-c3a042ed143f",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bead6b2-bf3d-43bd-b0cc-8a4071f664e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dc55092-6cf6-43c7-bd64-744aea50f0a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "120d3ea5-3329-485b-91df-38c8d8482963",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "796d26ed-1de3-403e-8c83-ba6cb7abddc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10b1737b-5300-4dcf-acb0-f5c27530bba9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5482501-0d91-420e-a03c-c25cec1fd115",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfa1323d-f473-48ba-be54-1bce36c1e8c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d62cd5d-da02-4b4c-8dd0-9a9942ea550a",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3340133e-4a43-43dc-977f-69f45b84f261",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43f91785-43fe-45dd-8648-48b8ab07c71f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd1c9f5a-d530-436e-b5bb-dfdf7ad6095f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35afe89e-8ed8-4ad3-88f3-e83fddb626d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5901d00e-4c79-4b2e-be90-9478cc954698",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c574fde4-5f56-4544-abed-bc836b26ba67",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7961974d-8514-4621-a582-a8bff911bad0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ffc1cc4-096b-4218-8ca0-2dc39d46e41a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8068a21-9649-49d5-b77a-e8e0203aed28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "995fd17f-4d18-4c1e-84ae-316e5dbbfa12",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c48ee5e-f57a-4095-973d-b82517833a32",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23209951-f0d7-4155-9c74-890c5373a8a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce0e11e9-87e3-49ef-8a14-8c0e26960ddf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61f5f7da-b016-4be7-89db-a017f9a9b85e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53a8e7ef-1740-493c-9103-33cc1a833ecb",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66242329-0d01-4b40-80d3-7bc8511527b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0469efa-be80-471b-b686-85c10287c3a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76219e5f-4c78-4e6c-9a7a-9f86487c8ac6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20825b3f-b25c-4099-b414-af733d6dd3cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e54a605d-3a6b-41ac-96d0-532c951031cd",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "849549ac-7b65-4ba0-b24a-ed9e9b88b6b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "affeef06-48c0-4742-9049-0da131bbe954"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7efc3f60-9a1e-44f7-b280-3292ab2c9d4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcfc5a76-03fb-4f11-a68a-4dd40cd52eac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3415a9b7-a064-4c1a-8bc7-f561070d97d5",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a390520-32bb-4d35-ae6a-2f7c53b06c9a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30bcc4b0-3bca-449e-9384-c05f209f22cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "727cd1e0-3a48-408c-9b4f-e276c656114d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bb1fe19-6171-4d57-af0d-06bef90720a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9e24757-8449-4742-bb8c-1bce46b79a2b",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de84e3e1-a2d2-4035-abbb-c5cf6f42790c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e3f4e05-4176-4094-999d-9db39f439900"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc99fa24-e2fb-4bae-b219-7075bee9debd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cffe6520-25fc-4248-a120-87c3897a7774"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21c22925-5bc1-43f8-882d-562748e17337",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a3b9f94-4c36-4216-bec4-247fed1ddeea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c9822e7-58d2-4131-b76e-e16c72f6168e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcdceddb-c1bd-4ffe-b804-47a2c5895c01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca0ab7bf-9b9f-4f82-b246-2908fff5fdd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6b37f7d-9a5d-4f1f-aa81-cece214aaa29",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2b8ab02-ffd7-480f-962c-28850d404959",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3796b300-05f6-4e2b-bc15-a58022b147a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90041eb8-48eb-4168-977c-f20ad85e9894",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3f177aa-b5b6-4135-91e7-b634b9065a31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01254ea2-9cda-4d0e-b4f4-230580249bb8",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41af6cbc-c7c3-466d-a47a-395eda1e9134",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa081ad4-65f9-4687-9960-ff049d1b7f7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a1d9536-db41-45a8-84aa-752cefb299d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b18232b-2355-45d6-bc70-27aa7f673442"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee26f7dd-1523-43d9-891e-b6a72061fdd9",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ce5709c-6a30-4379-9f2a-69a0668339a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4198f84f-275c-41e5-b072-53e006f0775d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7536fe8b-7cc2-47de-86c1-e2ea46576391",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e273bdd2-8b37-4891-9b81-02b2d530446e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3181b7d8-a2d3-4bff-9f14-aad82ddd2965",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97ee59d3-18eb-47ff-8b4e-0f2962668192",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4be031b-63d0-4275-9dea-c96178dda246"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e211468-1190-4f1b-904d-658fd0044b3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6adcf8f-2d04-401d-bedc-9f6474a3de29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2da53f5d-e337-40e2-8a12-3d0c85aa3507",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bb1decb-7923-403e-b7f6-70d188a48352",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75424e48-5625-4a5a-904b-efd7a178f1d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39b58d9e-43dc-48d0-ae66-4661a4d679e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62e91cb2-8425-4038-a689-e52e1ebe08c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb184f10-71b4-4c66-a295-636ebd13488d",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8bdc55e-b857-4b63-9388-e889802620f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf2d64a2-64d8-4a5a-b9e4-db473b0ae884"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "665609e9-43fc-48dd-87f4-bd658f64d824",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "726d6e08-d633-40ed-9494-57b35cf6ee7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2c4fa34-1452-48a8-a4b1-041c82de51da",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cdbc754-2e03-4d0e-b94c-e7499b71632f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9211f4f-842d-4e36-9e2b-bffc9a161d9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce21425b-d8dd-49e3-a3f2-0815fcf38fea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "604c9564-df91-40f4-8f6e-1273028fc077"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afba8613-3b44-4a9e-9701-f2be81c86e06",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5732b0ed-aedb-4c11-b8ad-bd888013d5b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af5116b2-edc1-4b25-96e1-d8e7aa15d1b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "309dbb16-85ce-4140-b1d9-9716b57b6228",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f71f591-a457-43a3-b5a4-d2a18e385f4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d389c665-ea4a-442f-ab33-a55790b65062",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "150fb5ae-8a83-4e6f-bb87-be722cc4f2f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "443013a5-bf18-496a-b212-aee6b7be05e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0341e76-e54d-46bb-b07c-6bc27a11c408",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe2137de-1af4-4c1a-a275-1066078a855a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62482d78-e9ba-4883-907f-8ee9a6412bed",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6ba29d3-9d0c-4d95-94f0-aa9971c2530d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f744d9e-10a8-44ed-a761-8679ad9300e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d80799d9-00b8-4902-9542-d65419156217",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2f88d15-6c24-4856-b882-6099218f30e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4baaf08-bfc2-4e17-84e5-b99f7f3f8b4b",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c681309-39e1-4d3a-81bb-4379899b1592",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3cd3f957-ba06-4d3f-a46f-1a9c09b3eb62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d689eaa5-aa22-4b94-8ca0-eb09a1da1dc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81dc7a30-04c6-4d2b-af17-82c3a21e5ffe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "956aeade-b7df-430d-b887-384078124b68",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bfa5bea-e77b-433f-8fa7-dd09b69e1601",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc76336c-30aa-4f38-81d4-b0bc3dd7d46a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2111c56-9862-44ec-9ceb-152a567bd9b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84a866da-7870-4581-9e8b-73a1b63b6f17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "615a986d-53b0-4cde-a8b3-bae711bb8215",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a444e74e-c8a7-45d0-a303-48e898a76aee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70efba22-5810-448f-8757-911df179adc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99279dc2-1c0c-4722-9f46-1128c4a15d23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d07d74eb-290e-4d35-9eec-0f9b92c99965"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72ce51c7-ef0c-4f5f-8353-1583dde82478",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a779cb73-73c5-442c-8ebc-0967887dc8d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c696296e-a4c0-4b9a-8090-b8d9e73e90dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dab8dc14-e4b4-4157-bdc0-6aea764570bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aedcfd57-f45a-48bc-960e-d4e03ffcfb9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "862c6d3b-27eb-4e9a-b376-587ec50a449d",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d2cf900-c2da-420f-8d79-359d86e613e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff10e001-fb1a-4e5d-a089-8b0eae196a5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42524830-ef89-4121-8795-4625e5c7007c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "258e8df9-3131-4e8f-b591-c19f9c41391f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "394d9bec-e299-4ab3-9568-e3a4c349469d",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "991eeeaf-d9c9-45dc-9481-90cfaa55a385",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91c18784-1815-4da2-9200-fc120c6505b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1aa4634-0d7d-498e-9d54-14457df0a41c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2957d3e-e2f5-4110-b31f-515529b4b1a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f2d66a9-dace-4046-bcfc-c9335f76ebf9",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f563a98-4a1e-47a6-9465-28f473a653b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06e7bc59-ef7c-41ef-904d-b872b820603e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b68b1e3c-28c0-4e8f-842f-d0a9eb0a5741",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a3090b0-ae6e-4e83-a7fa-634d11b7de79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dea092f-eda8-4bc6-a626-24abb0fbf99d",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48224ba8-f166-41e6-b9c7-be29dd69ee71",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24b7d9d2-55bb-419e-9284-4a674b6bd3a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01a700f8-0561-4044-8d32-ac73a7ae5c77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2890224c-7476-4c39-ad5f-9a85f3d3956a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1edfda9-0530-4135-bd8b-a34de373f61d",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2caa3f7e-ab7f-4a95-b4ea-6ea5fe6a423f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e820a39-7fc9-41ce-8de8-61aa5da0ac6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e582241-a8e5-473f-a274-a1f9369f78d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5b64b8a-8ec3-4866-a2cb-44b6c6dee90d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47b92a46-3034-4bdc-a9b3-6e4d3ae0d549",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c608fc28-446a-4898-bde6-aeb49a3c60de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fa2082e-813c-490a-88d9-ffb8880cedda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a5d1554-6d23-4c25-a0a1-071f9254be39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04557115-11d6-41d6-9cf7-1e7a6890b17c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b406acb-ff85-4857-b88b-1eed8826bc54",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61d04b2c-a151-422c-9935-435bcff2ce18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f8e141f-ccb4-45c1-938e-5bf1e9a6cce6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f51f69a7-33b6-48c7-8524-248a2eb24e83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "056a4185-4acf-4e68-b963-344bf8b2bb47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3036ddf-5763-41f6-91ef-ffb950b8f5cc",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c21b8ce1-6822-406a-bcf7-3acfd948005a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e30b4d86-06af-4e4a-9d79-36092e9162fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57c6d0bb-296b-431c-80ef-dff680ad6340",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2c8da57-a41a-455e-a339-f2b807d33806"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6b10160-973a-4d84-91f3-d8f180ddd70f",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c11f70e-1e60-441a-b00d-95482800f399",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f356177-0efe-495e-9974-6e74487a429d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37315b78-3e66-45e8-b7a8-d71954312188",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75fc643a-b264-40d3-a06b-edb082ca6b38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68805c5d-3482-486b-ba35-20219d1d2e11",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "957014cf-634e-4f45-8b9c-64b2cb35326b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e52f1e88-ca67-44e8-bbf7-e41ebeb77b0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6072a882-5642-4bdf-a1de-7200e54ff708",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9477b82f-0825-4740-8390-31a826386b06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8175fdd-8ba3-4941-a84f-09f72ca6fd26",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37ba1491-a4e9-4720-9bad-a36386251f51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a4aee3d-e7cc-40da-8ed7-5df246ad31d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8af49fa-6997-4514-bf77-cece625fda36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b72d78b-1391-4d1f-8c5a-61312574820e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86dc0e22-5d3e-4cf2-a24a-c2d7cc84ae31",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13eeb238-00a7-4b6d-8ede-b11c92da4c99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50fc672a-d6f6-4aa4-bd5a-c63208425843"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7044ca18-6bd8-409c-b6eb-74704b3487d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12cd2ca6-7761-4597-8b83-9e93f04d83d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b621d133-b34b-4f0a-a12c-2988d0ad4614",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65c20167-5419-45d4-9275-a7dbb1407c79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b524bbc-ac7c-4fd6-99e5-d330d5321f40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34c16e92-4f9f-43d0-9048-536f2c28d126",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59967db7-634b-4406-93aa-05e8191d6d89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a89ebda-5f3f-4dc4-bb00-e1f303a07437",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9eebfa0-33ac-4180-8f2e-1bb1bfd5767b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f218edf5-e39f-433e-a846-8f9cf4ba8d57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "510be99f-241f-4d3f-817c-3f25df164c02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa863b9b-a062-40da-b57c-850f3f4cec58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66fcf63f-f24a-4388-91b7-36998a9558d7",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1944b370-f690-4fb9-951d-1641ac9f74e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40c2a27e-31f1-4c66-8f1c-8fb43eeaa9b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22ed6dbb-632c-4bf8-af02-1ffcfe8c2805",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f4f2546-1d61-4710-b4ac-807dacd53de1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30935425-7788-4394-ad22-ca4db3d77ba2",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf0c96a9-45d1-40ba-9f35-7ba2a11bce33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b508c3f1-6c82-49e5-b233-b1dbcab94193"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56d0d3a9-3fe6-4d31-b1d9-83384fb1acff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc6ae73f-87c5-4384-b897-4fe2be5eb287"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15419cef-ef55-4d75-bc55-3fe61979b008",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db3198f2-52af-42c5-9a34-68cf5d8292ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4a781b1-161a-4bfc-b7e1-a4d46ba0747a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aeae3beb-5b43-455c-af4a-6cf2df58c517",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "664eddd8-56a9-41b8-a9c2-f81042fd15de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59533632-a663-4e18-ae41-7de3c3dae2ca",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b4abc82-4542-42a4-bc4c-6011e89193c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36d60723-f009-4ab6-820e-f994aae5988b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6141c30a-b1e4-4180-bd9d-2d79cc34ff98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5fc2e26-9c3a-4dff-bf36-cdbf7ffef511"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d4fcf45-9591-4a8a-89cf-dd40636ed4f9",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3a79b40-5c71-4215-891f-779d4debec3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bfa5794-20bb-4d1f-be6b-6c0884c8213c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62cee546-00c7-400f-b6f8-734dd20bafab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24804ea0-df41-41f0-b2df-7ef0efc383aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66feb8af-4e10-450e-b2d1-5409299c15d3",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5187d986-42f8-4aca-957b-9dd0df66b861",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6248fcca-4ec7-4010-8496-b17e12d4abbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8af0ae2e-030e-4f1d-bb34-3003f34f93a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "108197fc-a12d-4ca1-816f-9373093f3882"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7a9c92e-9cb7-48e1-a802-bd0015dbea74",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4030fea8-cc45-445b-a9b9-44f97f54f7ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca806b83-7453-4f24-8a6a-e5704e53f407"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "371b7b3c-b6e6-482c-8160-d6285642ef01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a43a26ba-5b57-47b2-a168-78b9e24a2c98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fb8532b-d365-4ae2-b14c-7c1fc1a376fb",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e5f394e-927d-46a7-9aea-000ef44ef49d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd4a6d42-53cc-41b2-a4c3-43ff682fc523"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b2f2aed-068a-49be-bf4b-97356e12dcc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7195c0cd-cce5-4dfc-b282-d4bc0bce93a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85c53d69-3c76-4227-b7ef-18872fb0787f",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30c9d8e2-8f52-412f-bce2-259b8230a504",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83e4ed2e-ff46-4bce-8ecc-55812b720a0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f84b9171-c008-4fea-8670-d64adecaab41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63b1430a-84c8-4a26-917a-4c39e0183bd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7f51ab6-5f95-4da6-9e84-c18fa2ddda13",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "761d6299-3bd5-4497-9efb-f00056e73f25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f51c3e72-3fe9-4069-81ef-dc1d68488a4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9105189a-b817-4772-a9af-6d09cec0f0f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f440c53f-8803-4907-ba74-f1cd65ff0b6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af134561-29b7-4f13-9c0c-881411fa6b00",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17fd6cb0-4625-4ef6-911a-76e24ba89e98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9a4a714-7bb9-4a4e-8166-fe181d9eedf5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9349b2ed-6122-44da-9947-021a8b325a24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67347bce-8a98-4220-8c30-9406d340e94c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f469c130-c601-40a2-886c-4d1c6fcb0191",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27b8a129-c533-4f45-b23f-32e7a0e9d4a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da6d7bad-aca8-4ec9-893d-7af1d27bc835"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd4eace3-eddd-49a4-a4da-1927704326aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d58c3b0-5da7-404d-b8a8-5b376081cada"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa0c01ce-020f-46a6-881f-ab82fc3972e3",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5edb05ba-4952-437c-8407-c89f79d6f56b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac0ea78d-b0d8-478d-b605-dd85b97b44d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4722ce15-1070-471d-a164-758935375208",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae6f4c7b-b307-48cb-bd5e-0e06bb3b3d4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d67328f8-0ee9-4894-bc5d-ea8562f6c35a",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71669639-a671-49e9-8cc2-78b9fbe16a63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b91bfdf2-41a3-44b2-a0a6-c98ff1b7811b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8516f261-b050-4c6e-92f9-8c3d0835bc2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1111e4d9-442d-4b08-a7fc-0e1ae9c6dc46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8f25ab8-11d2-46ba-a175-172567932c52",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebd25963-9294-42e9-8e95-ec729b8ce0a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8a41d37-c36e-4da2-a2f5-ab767976dc0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c274db0-7ddf-4005-b1d6-a50be29664f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d16858eb-f00a-4174-8f8e-45648cfc6883"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31214ac4-7938-4392-a8f6-e5101311e452",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f13f87c-843f-46ef-97d6-6aed08b42e3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2b5b45c-f445-4954-9677-af4d5642f1da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20a7d454-5cea-4800-bc58-593c41bf4603",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "804a3b53-0168-4f84-94e6-06984c738f3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7e41e57-7f20-4b94-a152-aa6b8c4ff134",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe30ab03-0ef8-4881-b11e-3fdac931f845",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ab7cc10-082f-43f3-9825-197b0510c17c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ff398e0-fac5-413d-aa69-2f7014639ea2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f549ad8-8472-408c-b59e-3d24bf290626"
                        }
                      }
                    ]
                  },
                  {
                    "id": "863f76d0-37d7-44cb-88c9-246b573d2fd6",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1d852b1-f5a5-4ce8-90ca-212205ae7d9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b40babd-b96e-426b-8eaf-ca2800adcd94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5dd312e-fef5-4f48-9377-a27c39dbf381",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b5f98b7-aaa2-451f-a971-79f30013d17d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03dbccc3-885b-484b-addf-96fdffc8bfd8",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "315ee463-5476-498c-85af-6691efcf74c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb5e971c-8253-4871-bf7a-b87e24bccce3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cb34bfa-21c1-47d6-b149-35e8ef1fbf18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08536e07-604a-4e32-a69b-a75cf3db10de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10ee843e-3636-491f-9301-6e5b6b8128f1",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47d8fde8-38d6-47df-aa1f-d42f5340cc13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cf124ff-9cb9-4fc1-9afd-576bcdccb0a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8397ae0b-e718-413a-a9f4-83e02e78cf4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09255711-d4f0-4ac9-9b95-b8c0cb61aab4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ce52434-aeb0-4f6c-b6d7-18c4bc9f5d80",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d67a048-0742-430f-aa63-82a119ed177b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e6badb7-e608-42a5-898e-d904d42e897c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "817503e8-53c9-4926-a436-654faf6d15d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55ca707e-6bc3-4f37-baa1-d2131de9fd28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08b9e230-db85-4ce1-bfbe-b584237efd38",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7db5248f-305b-437a-acc3-bf046584f2f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5f560e2-d452-45bd-9bd3-8e5bd38e9f83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "635f1517-2b3e-432b-8892-ed1fd3ba2fd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da2774e2-3a98-43bd-80f1-2ac46c9f8a55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24d9ab5c-529d-4ec6-9ef4-f6c278275381",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "517311d5-99ed-4ad5-a30d-fd856f22127e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cbff200a-7e9f-4844-8125-73dc46041c5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1e9160d-2289-40e7-a292-e6d01905a4b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e89704de-570b-4e47-945d-19dd4620eadb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae7d454d-a898-4183-ad6d-dbbbbb166d31",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "accfb273-4d37-412d-9d12-946f7bcb5e03",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b970abaf-6b05-406f-9994-785209528d79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "084aacf6-5c3a-43b9-a634-ebfc5176a4ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0c800c5-23fd-4f2d-992e-802f9730bcdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4913d701-6b88-43e9-83ff-cfb11c2505da",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87d10ed4-ef5f-4d81-b58a-a95275a1b080",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca8ebec8-a6e3-43b5-b53e-07caaec3c10f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3fe94ac-1b2e-47ab-8c90-128a44dda9c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc739763-3b63-42e7-b981-f036f818fa71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3d8ebeb-4d2c-4ddb-91b4-c67f3204def5",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a55e7c5-fe6f-49b5-b828-3aa3e412f2f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f123c47a-5982-426b-b5a4-1ac6c4c850cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d99837e2-cecb-4bc6-857c-2318a76cef90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb9c877b-650d-4e60-9290-ad97d9f587d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a14d0d7-355f-41f1-a331-750e630aa783",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af27cd12-35bf-4fd6-be04-d7bb329555e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9cab489-6afd-4ee3-9522-e37e21cc54b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d022ddb3-5224-4b84-8bbf-89d35e9ccba5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ea6953f-2908-430c-9d7f-b4aa28c24284"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2adf7a2c-0ba9-428e-9b92-839ab0122184",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b13ad65-e3af-4e38-909e-174cf84969c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3131a43-d429-40b5-8da0-3f31aada5cff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9ac268a-c824-48de-83ad-78a1cc9a6993",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b829dc0c-cc2f-4a0a-afc0-9cd901ee0a13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1e8ce03-0c34-4c34-97bc-c4198472e1d5",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0b5b2c1-7221-4a24-82c6-aca82ca2926a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d43298f-5974-4110-8ec1-d7b3b01e5d89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc79186b-c735-4b98-a104-220f4658ee03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "766e3f5e-4531-4d6a-9fe0-035253bc2679"
                        }
                      }
                    ]
                  },
                  {
                    "id": "516ccf05-09b8-4399-ac04-a350ca3a423f",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10453059-ee8e-4d0e-a3a2-0401081adbb7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "700f7b39-4cb0-4713-a400-1151da1cf7ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d22b8c28-f7d8-4105-a557-f3f70860b57f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e214c19-7de9-4c50-bb99-9082b6c947cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4073a106-efd1-46bd-a818-fbcc71ecf4b9",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aced6ba9-feec-4af5-92ed-f98a14fe34be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94cb7513-ea96-4f2a-8db6-7dde66761a9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "038ab972-5d67-4afe-bda4-3a07799ccaa5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cba3f461-b062-4db6-b847-3bfef823ffa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c44f3515-9ca5-4c80-90cc-8a24315af697",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90b6de11-cd1b-4d73-a088-e5eb8bb574c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69531930-9473-4114-ba56-316eb3f17288"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b81e7cc-cf07-4e9c-bda2-bbedb376c8ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e53ccdc3-012a-47a2-a0de-2a5c3bd76920"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0cad6d3-cc72-412c-b080-7599fa8fa3d5",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecf542e0-93c3-4615-ae0f-6a0e723af712",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dfbc82b6-5755-4b60-bb86-91cff59e3c25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f044f1d-c3c1-422d-9687-c0ab6a19207e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a99e54fe-b45b-48bf-bbeb-817e27fc8c6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39eac1e9-e912-4bfe-9191-25d3120c21c2",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a127659-f097-4fb0-b4a8-eb3090a5916d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20bff3fb-91a8-43a6-a6e9-8c53d20014a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a22b7dd7-280c-46f7-9803-69748a4b8604",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19bb8304-69aa-48ab-89a1-0e41b3f7d3ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "955f580d-b2d6-42d1-82b2-d910db0179b7",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eda2f73-5dd2-4aba-9412-0a0eaa44bfce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b43a8ff-46de-44cf-9e25-e4cd7026992a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7c12047-3ecf-4b36-8b52-e7925684b194",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c3fcf0b-57f4-4b47-9e8d-7590552bf0af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1be4b2f-9e2f-4af8-a8f5-97c0fb2a7daa",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d1640ba-f5ef-4f66-8909-8d7feb9e1ea4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94ad3945-ed77-455d-849e-c7ab1e0894f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8827d5b1-c392-4e77-b37a-f486faed9cac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac30d76c-4334-4e03-a49d-258be867027e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26dfc8cc-6307-474d-9bed-a5ee7a31d293",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8ecd6f0-8063-4e56-80bf-bece8d4138d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be6f9ae4-d992-46c9-a0d6-1b5df8e7ad60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "053cc8b0-9d96-4ee2-a9eb-1bc0c66c8b07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c40e4366-75ff-4754-9b13-3487d998017e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28b249bd-c135-410f-816b-06722bb0d105",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60a2ac8f-56dc-42fd-900f-16b512c5358a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31b2c977-3c6e-488e-9b74-57c47bc7d0b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54cffaaa-50aa-4661-af83-113f6a05eb24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33675561-4b8b-487c-bf11-f0ce7fe5e37a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab69da56-0a4f-42b0-9114-fa8210a9e229",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30db5965-e63c-4ede-9f42-6f97c89bdf38",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aebf4faf-1161-4e5d-a27b-2180b5781c38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bf2ee2b-09d1-4822-9087-ed9d9982443e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d55b17bb-e53e-467b-9220-552ac73f6388"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1522e34d-e0bc-4bf9-bb3e-02bf44337eec",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2aaace3c-98e4-4ae9-b264-b44cbfd472ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56770698-731b-4a0d-848b-8693c1c6ebe4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b035f4c5-21db-474b-b055-d425cc5116ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c536192-06a8-46de-bc29-324dd1d45b00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bd82b04-ab5f-4cee-9f90-d3cd705ea9eb",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6646700b-96d0-471d-bdc9-675ad80ebaeb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0c8dcfe-a611-4c95-8db0-4ad3f8d8a4e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85bb1fb4-894c-4fdf-b7e9-6724072ba9ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4af812c5-8819-4553-9c4a-e979823aceb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e26e6dc9-bc12-4b7f-bf01-d34c088fd0c8",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d86ca572-d32c-40f1-882f-cb2683cb6d8a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ba904c7-6650-4bcd-af7c-638ce5172e5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f47997d-db10-4cb5-94be-324b6cf54e0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d490fc25-fde9-4bf1-8743-1dca241477d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3332845a-cdff-412d-b067-98074e2da88b",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e8588b1-dea0-4dd7-832e-ae4a81ed8f18",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2886f599-f358-4a1c-9ab6-4ef194c51cad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "796c5837-cd30-4f27-abf3-332415392f8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2e237f7-a74e-495a-a30e-c880c748c375"
                        }
                      }
                    ]
                  },
                  {
                    "id": "084aaa6e-5a33-49f9-8bbc-588812481280",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0388c9ff-b37b-43b5-8105-b9764cd10675",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ea4c58e-01ca-4ddd-aea3-4bc49b561146"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19851e81-befb-4567-b95b-b931a8073dfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0366e70f-4080-4817-a865-4ac55ce7e7cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cbaeacf-0559-4a76-aaad-17fdd09e3a00",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88dca721-a9e9-4bfa-b971-67f294ecb11b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e5bb722-f2dd-4414-ace0-6129b48f9aca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95056dfd-8204-4c52-bbc5-d30c894fbed0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e66ad4e5-21db-413a-9f7f-07c511b6dd18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69696bec-f629-4f2c-9d12-e103c21be43f",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc41511f-b17a-4537-9e9d-0d6d391821c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b51e822-63e5-4e19-9d70-b49be666bb2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57080f90-95f3-48ea-9a16-bfe9056c3ba2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00579a4a-86e1-4eee-9d49-aaf1a4ac5b1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dafbfad1-7cf9-4bcf-b632-558153ae83f5",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afe5545c-e005-42a0-9db3-17e39cf6ec9c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "902e2e80-9986-4526-832d-31c8aece08ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ab9f7be-40a6-4f8d-ae2c-e721aad53e47",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "880ea3b9-3252-48fb-aa9d-dc6b8bfce87d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e71b5bf-5dd9-4687-88ed-2a73d3ecceba",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ea5f336-3980-4ad7-9b29-e3fa1354aa17",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30d84f3e-f1f6-4c30-81ad-36ea688af17b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd3fb2d9-da44-4cdf-90fe-024ad7a1df54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "086515fa-e369-45b0-9509-a42812193672"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc2052b7-1a65-44a7-ba1f-65b1d8b042f5",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc8b9a11-38d6-49e1-9114-c67d514eea45",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a9e1481-dd85-4fbf-a5f5-8c93273aec4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d96d5c47-1624-45a4-bd71-3b76cc4e2e8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4de3f246-0680-4c0f-87a9-05de87b75638"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0614f35c-f2bb-48d8-8ad8-31d0b8eebea4",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b4b5a91-7d20-4087-accc-c7931db58f39",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20673298-96f2-4627-a661-eb2889dbbf94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e830fc0d-c9a0-4045-aa2f-36254570976f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "187ea11f-4df6-46ed-ba76-f51bfb1fbf3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74cf9bb6-304f-485a-b54b-bce200d79cef",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd6981c6-6611-43cc-8dd2-b3b778d779cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c6b3339-909c-4d3b-acd0-7bd30d6aad99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "786fbae8-0f9a-437d-b5d0-f8a418f33967",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "838b37fa-fc36-4cd0-aaba-910d84063fe0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddf77cf0-e15d-4a15-9d9d-1dfef6510476",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41fec9c2-0e12-40cd-a4d7-e893b08d7aa5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a3e1e42-e0ac-40c2-bbf6-6c5887f615f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7398851f-10fd-40ba-9ce5-23200e1f9842",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c00fa6c-7918-4469-948d-109813518a46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "034116a5-5de4-4b81-ad09-becbc372a21e",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78d5bd84-571a-406e-a4cf-0494a260513a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1131e073-a8b3-486f-943e-fbcc6b292e91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fcff977-85af-4153-97b8-e5323ec2504f",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db2ae8a8-e739-4064-830f-dc475b6454db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ac4db42-eedf-43eb-a94a-7af7f6309f97",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0a40d45-1ef0-4909-9ed9-b420eb6cc9ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71d2b4ff-17fe-4146-9301-8869d58d4b07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "674cddad-5cb8-4afc-9eb2-6e0305a6779d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d958bf68-6450-4bf4-b583-c07d36445556"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "130ab531-88e9-4787-bd94-e51dd6459178",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "930a2a2b-ea91-4e79-90b7-a34a60598c1d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f4b4e8db-1836-47cd-801b-f5aa54c802ba",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1adcc18b-f5cb-4563-9a9c-5c236a848391"
                    }
                  }
                ]
              },
              {
                "id": "20f16ed4-002d-4be9-8bfe-09fc5881c465",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1e14a0c9-c0cb-4a41-aa35-4291fce93502",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6517321-75e2-4b2f-bf91-01a56aa1c0fd",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "d9fd6d79-18e0-48f7-848b-8886355cf8ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "575307c6-1c7f-41a9-92c1-bd81dd70686c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f5432eab-f132-419b-b535-01046e3330d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e00ef9ba-20a2-4c3a-a996-82ad605c8751",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "170786ab-0153-4383-acc8-589f983d9a23",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "57ed9ffc-c057-4138-9747-9221b1dc83cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cae86da-ab67-4bfc-93be-2e84bd6c4252",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d08a7bfc-7c6a-4f7c-9dcb-5b4f40b879c9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b4e2266f-7b97-4a17-adf7-b43c0a4869b6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "004ee4f4-4aac-49a4-96da-85c547a6ab55"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "965c2eb5-3b1f-445f-9020-97daeac6b7ab",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "131e65d8-5c91-41d5-88b7-61489d909774"
                    }
                  }
                ]
              },
              {
                "id": "a0ce53ec-5730-4e0f-95da-1d1f616efc94",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "19bc5595-ca10-4a9f-98f9-496df2bda946",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36f63fe3-4eea-4a18-a0bb-209547a92b11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "47108108-325f-442e-9650-f2530564b601"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbae38b2-f96e-402a-ad40-c9fee984af3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c4b358d-f48a-47d2-b754-d0d29e8f085e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "7cba0ed4-444c-4acd-8b9a-41cf0a988a25",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ec86ea66-c2ae-49f1-ab55-ba7f80a275a8",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "515c307e-6339-4b89-b168-80d2b2cf675f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "f1478de4-2457-45c0-b589-4f0f2330a744"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9f334d5b-1876-418d-bc77-556cff88b3f7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cc251f03-ea4e-43c1-8165-5ea32a218645"
                    }
                  }
                ]
              },
              {
                "id": "d24d3415-1e35-4485-aed8-0d12fd008bcd",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "65ba7427-6940-4c11-8b23-1a0acceece75",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "72509411-1cd3-47b5-a8cf-7e3a632708ff"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d9361632-ebbb-4674-bce4-031901b53dfd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bc1e6605-70a1-4c05-8374-dc3197193c8f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6191711a-8eb7-4235-82f5-4cc3fb01a92c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "9f3b4765-6478-45c6-8109-7a1bb6ff1433"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4204f9de-aaf2-4bd2-a5c5-f81d33981f80",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1345aaac-ea6c-4cb7-b996-22c9aded7f19"
            }
          }
        ]
      },
      {
        "id": "386bdef6-5c24-42e8-a63b-ffce27c24536",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "b78f1ba6-2b61-404b-ae0b-1ace082e112a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2d53f567-52c1-47b3-ad85-a028e424c42b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b6bdf636-91a6-46c4-9e26-b476255d0c84",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2163ec4-b66d-4896-9f23-1a2e7b97651a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "2fe07fec-a696-468b-9662-1716e60429f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbcf6639-2bd6-47a7-b708-0a3857ae8aec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8879d6b0-b4d6-4f3c-9d8b-77a44543987d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21a1cebe-c3c8-48d1-bc26-b71eca1af850",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b15974ab-dde6-4df3-917d-ef0379587a29",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "1f3ebe9b-9537-43c5-a80d-e76ece572c41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33a110ea-c1ae-4437-b1a4-fad99daaaf56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0e7b99b7-ee19-4a67-97f6-082c61ff142f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "79d0ad2a-507d-4a20-908d-63fce1177457",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e7f21881-249d-460d-af89-c30ca5cb138f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0ec17d50-72f9-475c-9cda-35c63909be18",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2126b0ca-7837-4986-8667-f92a37cd2817"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f5023958-8f14-4a84-b630-96f482a778af",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "1a7cd84d-173a-4fd3-a725-d048325be17e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2dae4505-f520-4f19-86bb-c6d7b89d22d8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "33304828-b0e9-401b-b585-dc57c0a6dda7"
            }
          }
        ]
      },
      {
        "id": "2943f7d5-0148-4cce-9444-c14f5212483d",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "e57cac53-4bdd-4b53-bcc3-490a12d311b9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f94cf8db-6e14-4ebb-ab29-fb604a765253",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2bf6a571-924e-4383-96be-1f1db4e5187b",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3391cf05-eee1-42d9-b9a7-3a7c7ff21b58",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3efb798f-d0d6-4a60-a742-754af17c1238"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b1cbaaa-9a10-4c98-93e9-4d64411db80c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1b3500bf-00a2-4e7b-a012-5039d7f01b88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8f3c6e9-6f84-498e-9b75-46c7e967cc18",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "827e30ae-7dcb-43c6-8821-67ff76add74d",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "76f0675c-41e9-451d-be15-1d11b73086bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc330699-9a55-460a-9007-e0f59862166e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5d0818f8-1f60-4343-bba7-836f7d7c6b17"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4da6bfba-f6d2-47ea-b4a9-e026258491da",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "199bb297-29e8-4946-bd39-0e34dfb385b2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "965d85e4-593c-4388-8338-4e19b650247e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "14ae146b-a8ee-4365-8478-19908241df8e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5324f33b-ed69-4870-be28-4c34b5b6d64a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "eaefffd9-e3c2-4237-b6e7-ff2284ad7426"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9d20bb3a-cbe2-40f6-8dd2-258c46159dd7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fb76d192-98d7-4249-a557-739b2ec772ba"
            }
          }
        ]
      },
      {
        "id": "0e0be369-7a7e-4a02-a1fe-006ef954b9b7",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "a5122386-c095-4057-8aad-ac0e6fbbfd5f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e445311d-24d1-418f-bbeb-3f57cf4e7be9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3e5e6be2-e016-4be5-8a88-035d4541fea9",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f039941-11ea-45b4-9332-355c519ebd1c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "70bbb57e-9eb2-4d8d-9717-b0ccea367ab6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80b808e2-1845-4d71-b60b-7342bbbc384c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "664bcb46-ac69-4bd0-8001-c146db5813a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ba431fb-fcfd-47a2-8dcf-98225042ae54",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f78b64ce-a176-4748-bbb4-98ebbb7b0a80",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "dd6cbdaf-60be-4459-b683-2caac9b2742e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc82deae-2f14-44b1-bb32-886db355ae10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "85c0a066-80f9-4296-a3ca-26b2ac10eb84"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "53395c19-4d47-4844-b92e-80d8bd300431",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0a6f6721-cf47-4ad2-869e-eb555c50f39f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d1f2f076-47f5-425f-b70a-71cc73a12d26",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "31863bec-fdf0-40ca-93d9-dd7c12169e0f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "117d4871-70dd-4a26-bd65-83afcf76cf28",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "04f962be-5eea-4eef-a4bb-8c221fd93dac"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1c4bbaa4-4c68-4f73-bee9-b96d62fb65a3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dbb4f1cb-813e-4d7e-9767-4b2c5b14d3c0"
            }
          }
        ]
      },
      {
        "id": "5d265ee8-f2ad-4b46-81f3-fe46fad751b0",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "13f501d2-17ad-411c-a2fc-336124e650b8",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8ba93099-84c5-44e5-8b5d-495925eae1cd",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "99af4789-1425-49d1-8579-22b6555425b2",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "603b0770-1735-46a1-afe5-f9bafe214def",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a14c94be-f86c-4075-a230-123840c81016",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 648.6423076923079,
      "responseMin": 10,
      "responseMax": 6473,
      "responseSd": 750.3133646238318,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1679186591518,
      "completed": 1679186773334
    },
    "executions": [
      {
        "id": "2832e74b-4208-4e78-b280-883ee57b0a4f",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "d11a396e-567d-400b-8fad-f8272252c922",
          "httpRequestId": "9bae1437-e1c5-46cd-bfbe-c570e6276b75"
        },
        "item": {
          "id": "2832e74b-4208-4e78-b280-883ee57b0a4f",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "dc31330f-0378-4ee2-aae4-a78e4fa594ea",
          "status": "OK",
          "code": 200,
          "responseTime": 62,
          "responseSize": 0
        }
      },
      {
        "id": "1ca6337c-3504-4571-8c49-3624b2b73525",
        "cursor": {
          "ref": "e0c2640a-3fac-4af2-817a-2bf8f9135e36",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "009b274d-16e1-4815-a1c8-76d12c22374f"
        },
        "item": {
          "id": "1ca6337c-3504-4571-8c49-3624b2b73525",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "2f90cb99-3c19-4641-80a0-aefb538d3cd9",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "6f97a6c9-6364-4c50-88e1-a1a15a408743",
        "cursor": {
          "ref": "ecfb5671-a9d6-4b19-87ef-74ba1e8d7276",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "e60a1abd-e25a-4e82-a8c7-cb602c455b93"
        },
        "item": {
          "id": "6f97a6c9-6364-4c50-88e1-a1a15a408743",
          "name": "did_json"
        },
        "response": {
          "id": "85f3bce5-3a7b-49b5-aa6d-3b8bc2fb67b5",
          "status": "OK",
          "code": 200,
          "responseTime": 1018,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c9e4a64-f91c-4d94-b490-297344c65aed",
        "cursor": {
          "ref": "24669345-269e-4f34-b90d-8253c3260cf7",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "2c340d3b-6099-4fe9-a95e-820f8bed1248"
        },
        "item": {
          "id": "4c9e4a64-f91c-4d94-b490-297344c65aed",
          "name": "did:invalid"
        },
        "response": {
          "id": "ae0cff62-4487-4262-a558-6f938c9b900f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 964,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c9e4a64-f91c-4d94-b490-297344c65aed",
        "cursor": {
          "ref": "24669345-269e-4f34-b90d-8253c3260cf7",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "2c340d3b-6099-4fe9-a95e-820f8bed1248"
        },
        "item": {
          "id": "4c9e4a64-f91c-4d94-b490-297344c65aed",
          "name": "did:invalid"
        },
        "response": {
          "id": "ae0cff62-4487-4262-a558-6f938c9b900f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 964,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "962fe6c3-d30a-439d-b7f7-91d85e031ed7",
        "cursor": {
          "ref": "61873b18-fb8e-4196-b0cc-c3b4a856a933",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "6068746f-c83d-4acf-b8ad-a6c63d04bbd8"
        },
        "item": {
          "id": "962fe6c3-d30a-439d-b7f7-91d85e031ed7",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "9a06c10d-95be-409c-bb8f-dd31cf7f4581",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1416,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5344d3fb-a168-479c-b71d-7be50e4d205f",
        "cursor": {
          "ref": "fed9ab68-933c-4136-85f8-279d3bca91f2",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "6c7c912c-ddce-438d-80f0-bf8bc0766c76"
        },
        "item": {
          "id": "5344d3fb-a168-479c-b71d-7be50e4d205f",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "ad964c13-5e10-4414-9390-59a948f478b4",
          "status": "Not Found",
          "code": 404,
          "responseTime": 585,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0c3a76d-00fb-4d69-946a-0c01c5ce55fb",
        "cursor": {
          "ref": "50cd0541-f042-4f93-b3ef-37bdd70c4c3e",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "b9e51bce-9278-41dd-8bd9-ad47e81ad3db"
        },
        "item": {
          "id": "b0c3a76d-00fb-4d69-946a-0c01c5ce55fb",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "e655b9c9-656c-4aee-a267-03ae54dc9982",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1c64777-f67c-4ad7-9513-2b923cb5fcb6",
        "cursor": {
          "ref": "5fe344f9-1755-4e4c-a446-25b1a98c8e44",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "680f034b-ffed-4b1b-bce2-dc71f71117fb"
        },
        "item": {
          "id": "f1c64777-f67c-4ad7-9513-2b923cb5fcb6",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "c2a75ac1-0fba-45d0-bdf0-ed3598dffdac",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 557,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1c64777-f67c-4ad7-9513-2b923cb5fcb6",
        "cursor": {
          "ref": "5fe344f9-1755-4e4c-a446-25b1a98c8e44",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "680f034b-ffed-4b1b-bce2-dc71f71117fb"
        },
        "item": {
          "id": "f1c64777-f67c-4ad7-9513-2b923cb5fcb6",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "c2a75ac1-0fba-45d0-bdf0-ed3598dffdac",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 557,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "243aabdf-6eec-4f94-8e0f-c17e61f7994d",
        "cursor": {
          "ref": "3fd70425-29a2-4773-ad9a-6b2ba2d85f1b",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "c2a8c175-7c55-4703-beeb-eeb59bbcf7f6"
        },
        "item": {
          "id": "243aabdf-6eec-4f94-8e0f-c17e61f7994d",
          "name": "identifiers"
        },
        "response": {
          "id": "999b52df-2577-4862-97fd-f458334295af",
          "status": "OK",
          "code": 200,
          "responseTime": 911,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10f59e39-be7f-474a-a81a-6904b2969aa2",
        "cursor": {
          "ref": "ec8459d4-e4a8-41a4-8cfe-5c4870faed3a",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "fee5f858-e15b-4b39-bec1-1187573b7056"
        },
        "item": {
          "id": "10f59e39-be7f-474a-a81a-6904b2969aa2",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "79e216c7-3c2b-4f98-814c-a43ec7fe0a3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 626,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10f59e39-be7f-474a-a81a-6904b2969aa2",
        "cursor": {
          "ref": "ec8459d4-e4a8-41a4-8cfe-5c4870faed3a",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "fee5f858-e15b-4b39-bec1-1187573b7056"
        },
        "item": {
          "id": "10f59e39-be7f-474a-a81a-6904b2969aa2",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "79e216c7-3c2b-4f98-814c-a43ec7fe0a3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 626,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b04a2a8-d8c3-4fa3-9846-24f316f7da82",
        "cursor": {
          "ref": "a760a15d-b3fe-4333-aacb-3600b803760d",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "2a3a773e-934d-425a-9a01-6ac294d3a9b4"
        },
        "item": {
          "id": "1b04a2a8-d8c3-4fa3-9846-24f316f7da82",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "164284e4-eae1-4e19-a2dc-dc2574e32bac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ffeff57-029e-4fb8-bdca-a58a49235634",
        "cursor": {
          "ref": "2cbe2e17-a531-4287-8623-1cf152d43f3e",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "c8aa46d9-191b-4ebc-9bfb-e99b4f30ec61"
        },
        "item": {
          "id": "7ffeff57-029e-4fb8-bdca-a58a49235634",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "a1bc4729-a44e-4a84-8169-fbbfbca076ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc58a1f4-730c-4b2f-b27a-45d54f57880b",
        "cursor": {
          "ref": "458d1da9-619f-4335-ad7e-23c15e680f2f",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "5e31d7da-b370-43a9-85de-0b8994635957"
        },
        "item": {
          "id": "bc58a1f4-730c-4b2f-b27a-45d54f57880b",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "553b5fe8-9757-4d0f-98b3-4c180c77383b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 550
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4534c3f5-2864-4df4-85de-58c48ed82714",
        "cursor": {
          "ref": "7fd83240-a485-43d7-aa33-7417fea5f0a7",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "1572890c-9348-44dd-b350-4320f77463f6"
        },
        "item": {
          "id": "4534c3f5-2864-4df4-85de-58c48ed82714",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "8991c37c-b1f8-4e1f-819b-fa13d849960e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5feebfc-b156-4790-823a-1fb8f5be1691",
        "cursor": {
          "ref": "91083018-a17e-4d2e-92b3-947b93251fb8",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "e08b69f1-63d5-4d86-8865-14d2e80af8e3"
        },
        "item": {
          "id": "e5feebfc-b156-4790-823a-1fb8f5be1691",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "d4dc09b5-ce61-4695-b230-de42ba1f919c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1862cce-9008-4d8a-9706-294a678347e5",
        "cursor": {
          "ref": "f2fa0d0e-27d7-4adb-9c2c-629406bc61ff",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "373f5d25-ff41-42aa-99e4-27d82a95a1af"
        },
        "item": {
          "id": "f1862cce-9008-4d8a-9706-294a678347e5",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "30546833-b57a-46c8-a40c-78d5325a2c59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 606,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b398f928-ef84-4ea2-b4cc-fe4b9d768e1f",
        "cursor": {
          "ref": "c4770ff3-9c93-401e-848e-3b6927025776",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "247342d6-676e-42df-8d34-c177cb0ab762"
        },
        "item": {
          "id": "b398f928-ef84-4ea2-b4cc-fe4b9d768e1f",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "eaffd26b-2d86-442c-a42b-ce6c63fd9beb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 816,
          "responseSize": 637
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb5f5be0-88ce-4b90-b86b-15179a20a35b",
        "cursor": {
          "ref": "3a97a671-1920-43d5-ba3b-0e18bd3e2ab4",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "e779081b-76f7-46a5-891f-f0e4c56dda68"
        },
        "item": {
          "id": "cb5f5be0-88ce-4b90-b86b-15179a20a35b",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "265128c0-3cdd-4a4f-8dab-3e09c2012496",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 960,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b04a3123-cfb8-41f6-b051-3200afc0ecc2",
        "cursor": {
          "ref": "d8483db6-31c4-40f4-a2d6-7490d7e7289c",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "39799b6e-0bc0-4eb7-a8a9-5b8c20eae997"
        },
        "item": {
          "id": "b04a3123-cfb8-41f6-b051-3200afc0ecc2",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "23c66528-24df-4556-a056-3734a75829d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 903,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad62f7b4-fe2f-458e-b9d5-512395bd9a59",
        "cursor": {
          "ref": "d2bc2a14-a7ec-4500-8d4e-56c621f3cac5",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "0bfa0022-13ca-48c1-b359-e06f35e9cb8c"
        },
        "item": {
          "id": "ad62f7b4-fe2f-458e-b9d5-512395bd9a59",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "99f8dd05-bbf2-417e-8536-6ff637fa7376",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1028,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e675ce3c-1dd1-41de-9696-b95ccd1fadca",
        "cursor": {
          "ref": "2678d473-47e4-49c3-bda3-714c08f006a3",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "6914e319-ae80-4a9b-912b-07b1658d316a"
        },
        "item": {
          "id": "e675ce3c-1dd1-41de-9696-b95ccd1fadca",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "da8ccf30-415a-45b2-acb4-62bd69e048ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 938,
          "responseSize": 646
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6901896d-2e56-4798-8f7c-1f1403ed4eb0",
        "cursor": {
          "ref": "49e78f29-cbb9-4ed4-8c2e-42da93260cd5",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "ec4cab82-8980-4fc4-9471-deaa396937fe"
        },
        "item": {
          "id": "6901896d-2e56-4798-8f7c-1f1403ed4eb0",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "36c16c7b-f2d4-46d6-a6fe-c664b9573ce3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1011,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1da0cbc5-bb61-423b-a1cb-d5fc846fc3d8",
        "cursor": {
          "ref": "42587938-98db-4dda-947a-3a9ad741356d",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "77bee4a2-8e6d-4be3-9ffa-ff8fbd210d5f"
        },
        "item": {
          "id": "1da0cbc5-bb61-423b-a1cb-d5fc846fc3d8",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "6f90dee1-bc0e-4db4-90ef-eb26b3591a16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 958,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4af7192f-f9ca-4b99-96da-aab6937e5022",
        "cursor": {
          "ref": "5843f0d5-6f8d-4134-967e-487aa891a015",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "218570d9-5b6b-46c0-8b4b-23fdc68754ca"
        },
        "item": {
          "id": "4af7192f-f9ca-4b99-96da-aab6937e5022",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "ee6b05ec-7769-46fb-8c4e-37873c7854bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 976,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e63eaff0-05bd-4baf-88ba-0a8b548df355",
        "cursor": {
          "ref": "cc22556d-dea8-4b93-b84f-8e7f2a0cadc3",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "1bd610a4-2008-4236-b51f-7267a9629096"
        },
        "item": {
          "id": "e63eaff0-05bd-4baf-88ba-0a8b548df355",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "0eeb707c-22e9-47fd-81d9-115fb28fc79d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 663,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45b0e48d-59f1-4187-9726-6e864ab0d979",
        "cursor": {
          "ref": "92349443-9486-4966-8df3-688df96fabe6",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "062c6d10-1f6e-406c-be2c-ea5b1123f905"
        },
        "item": {
          "id": "45b0e48d-59f1-4187-9726-6e864ab0d979",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "ef515e4f-cb51-45e6-892f-46b5b4e66430",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 666
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2df17d33-b869-4ad6-89ca-ae3795d90e66",
        "cursor": {
          "ref": "6def2a07-c42d-43e3-a76f-d189e79762c0",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "667b3577-3759-4a44-9021-b59bd1e7f5c5"
        },
        "item": {
          "id": "2df17d33-b869-4ad6-89ca-ae3795d90e66",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "4b104c9c-5c77-47d4-b2e6-ac6610cf9c61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c0d9c98-ef96-4fe3-94b4-508eceab541a",
        "cursor": {
          "ref": "5b2fdd55-1636-4f6d-9038-bdf7f3561a51",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "f602f748-44d0-4b65-95d1-5143324d6b50"
        },
        "item": {
          "id": "9c0d9c98-ef96-4fe3-94b4-508eceab541a",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "631bacd3-7b96-4516-a110-4b78bb8d6d7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "569ca746-b6cc-4845-846d-032f5f183395",
        "cursor": {
          "ref": "03fd720d-c04e-4bfe-a239-bb92efe5fa98",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "939c0ed8-1c93-45e1-8c7d-63431e36e1f7"
        },
        "item": {
          "id": "569ca746-b6cc-4845-846d-032f5f183395",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "09796c85-0bca-4370-a9dc-025dc4e292f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6a0e738-5c49-4d5a-8df8-06d6ca97f93a",
        "cursor": {
          "ref": "fc4cbbae-954c-4e8d-bc24-f3d2d25efc79",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "e7e02ef0-5ea4-4b37-a636-6da1ad57e562"
        },
        "item": {
          "id": "a6a0e738-5c49-4d5a-8df8-06d6ca97f93a",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "d5100906-5f25-47a8-86f3-ec4aca2b30ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2253e4c-2733-44f0-bd0b-a4cfcfa650cf",
        "cursor": {
          "ref": "da0331c9-6922-4ae6-b52e-b70653d45ede",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "ee551f26-f9a3-4d81-bf20-f6c3ca34fcd0"
        },
        "item": {
          "id": "b2253e4c-2733-44f0-bd0b-a4cfcfa650cf",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "69534603-0005-4748-aece-8a11228c2623",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7985ae86-8d7c-4e4d-9276-1f11a87bdb3b",
        "cursor": {
          "ref": "7a92bd46-f4d3-4193-8333-5f0248afe473",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "a95bc8ee-41f5-4b15-83f6-1b5d4916915c"
        },
        "item": {
          "id": "7985ae86-8d7c-4e4d-9276-1f11a87bdb3b",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "ce7baffd-333a-442e-a1ec-d645549ffdae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "906c73ab-1aa8-4e6c-baf7-f6d1e19b30ff",
        "cursor": {
          "ref": "63ad5da8-3457-4181-9282-547dcd9d0241",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "d993ca79-ba74-4616-a37c-35df4e1b40c2"
        },
        "item": {
          "id": "906c73ab-1aa8-4e6c-baf7-f6d1e19b30ff",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "d2f3b91a-154f-43fb-b161-16c2d0f0dbd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b803d49-8b72-4a4a-9e01-45bb031f46e1",
        "cursor": {
          "ref": "d0583774-9ed2-49d4-ac7d-3bba08a06d54",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "b9ef97cf-3eeb-4b3e-be2b-5a50bb63e63f"
        },
        "item": {
          "id": "7b803d49-8b72-4a4a-9e01-45bb031f46e1",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "79871439-b2c8-41a0-bbfd-2712c3eb25c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3bf5098-0d30-4cb5-9081-79946a533625",
        "cursor": {
          "ref": "478702c6-36d5-4992-8fb2-69488f877325",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "cc26d94f-ec22-442b-9b17-abf5671f18ce"
        },
        "item": {
          "id": "b3bf5098-0d30-4cb5-9081-79946a533625",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "ae6df72d-b82e-4d20-b2d1-05b774bf64ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 624
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02f181c2-df64-450f-a126-6f593c84f560",
        "cursor": {
          "ref": "6883dff5-190b-440d-b5d0-d59dda1fe093",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "2bed8c0c-81b4-4998-a528-331588aef3c4"
        },
        "item": {
          "id": "02f181c2-df64-450f-a126-6f593c84f560",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "916539a1-3e7e-4d5d-a482-0ca57b7893e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3a62052-c394-4ae6-b709-c13132e88073",
        "cursor": {
          "ref": "2e06739c-074a-49d8-aad1-9fa8068d7390",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "53917ac7-f7de-4785-a98e-845740cca948"
        },
        "item": {
          "id": "d3a62052-c394-4ae6-b709-c13132e88073",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "3522bdc9-877e-4787-a416-953d66831fb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 623
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6511ef2-f6c1-44ac-bcaa-056ccd7fc058",
        "cursor": {
          "ref": "792ab8c4-ffbb-4264-a44e-b4b56be2be80",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "9a6fb985-ee16-4b37-90e7-35110809ce3f"
        },
        "item": {
          "id": "e6511ef2-f6c1-44ac-bcaa-056ccd7fc058",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "fcb898f3-07cb-402f-bb0e-75139a99f07f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6425e419-db4b-4982-bf57-db65481238cc",
        "cursor": {
          "ref": "7e11614a-6a5f-4aaf-9552-03a8334e2b5b",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "0aff866f-9bd9-41bf-91fe-aa58ec5f5d22"
        },
        "item": {
          "id": "6425e419-db4b-4982-bf57-db65481238cc",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "3bda424e-f414-4116-a4eb-a3a93f2b7ddb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 546
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "742ae0d2-cbfe-46ff-b985-d9cb54136ced",
        "cursor": {
          "ref": "6e18a036-7bc9-4e7c-a810-06f17b3bb3b9",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "e376a1b7-7ec0-42fa-8004-3d05c4d85fec"
        },
        "item": {
          "id": "742ae0d2-cbfe-46ff-b985-d9cb54136ced",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "f397373d-7988-45f1-b661-448eb7c4cd82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 1046
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de70b83e-df78-446a-a80b-52ef29a23315",
        "cursor": {
          "ref": "f0409fd4-167b-466f-8e73-5fe19c9adb9e",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "b57fcab8-4ebf-4c84-8837-75a2129bff6d"
        },
        "item": {
          "id": "de70b83e-df78-446a-a80b-52ef29a23315",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "8032f649-f41d-46fe-a9a7-1367ddcb6cd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 975
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4b9dc02-852d-4a03-8ac3-5cfa0d6de784",
        "cursor": {
          "ref": "53382e2d-d93f-44ad-a7a0-affd9a186e67",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "fdd77826-ce92-467c-b57b-044b0d605e1b"
        },
        "item": {
          "id": "e4b9dc02-852d-4a03-8ac3-5cfa0d6de784",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "fc3a1941-25c1-4435-99d6-24e107d2ec6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 972
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "182ccf9f-0044-40e2-b4af-0afb73a9ae3f",
        "cursor": {
          "ref": "f1726170-83a4-4762-98e3-2268cd964cf1",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "7d907a9c-2016-47d1-9815-60d6b5f99a47"
        },
        "item": {
          "id": "182ccf9f-0044-40e2-b4af-0afb73a9ae3f",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "78ecb562-17de-48e8-a83c-b784df71f247",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 974
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d16de0ea-1cef-4822-87cc-1dc01d7b679e",
        "cursor": {
          "ref": "4ba762de-45f1-43a0-98e8-76be2648e144",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "3e1f5a3c-abc7-4efe-954f-6d5dc537d508"
        },
        "item": {
          "id": "d16de0ea-1cef-4822-87cc-1dc01d7b679e",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "fd3d9547-34db-4f86-bfd1-361798fc224e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 1377
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94f4f8dc-63cd-4582-96f1-d46a7e8efa40",
        "cursor": {
          "ref": "b7601ef6-8a84-4ac9-9617-d75047bfaf98",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "85f4450b-1c0b-4562-9d98-6c1e600bfa74"
        },
        "item": {
          "id": "94f4f8dc-63cd-4582-96f1-d46a7e8efa40",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "272fbad5-5f9b-438b-b005-f8e6f16979de",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 657,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4ee036c-e8fa-4661-8a94-80c977b1db31",
        "cursor": {
          "ref": "dde6922a-be41-465b-ae42-0a5d6b033704",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "de252ed4-34c0-4e83-9a9e-e6f5ebbc3d08"
        },
        "item": {
          "id": "d4ee036c-e8fa-4661-8a94-80c977b1db31",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "36bc624a-8bcb-4d0e-a0e9-e00a855fcf66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 1005
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d131b187-da8d-43f8-bb10-d87126320c26",
        "cursor": {
          "ref": "e5a28194-9226-45b5-8ef6-94863def3675",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "c6750634-cf42-47f6-8698-e26a31522de9"
        },
        "item": {
          "id": "d131b187-da8d-43f8-bb10-d87126320c26",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "79f1de4e-c2b4-41cb-8967-03baac41395e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7056bd21-c3f1-437e-b63b-d31e42931f04",
        "cursor": {
          "ref": "193c002c-fddc-45f7-a7c5-aa755ca17d81",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "1905746a-8978-46d2-859b-c8cb1db61950"
        },
        "item": {
          "id": "7056bd21-c3f1-437e-b63b-d31e42931f04",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "7ad625fd-7609-4f2c-81e5-845d4e6e28f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 1314
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4fcbf1c-efa2-4186-a10f-2d49bb478a17",
        "cursor": {
          "ref": "584fc827-59a9-4fc5-baf8-a65189b2b7af",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "7a001f90-97fc-44c1-b5e1-1ff79c467e11"
        },
        "item": {
          "id": "e4fcbf1c-efa2-4186-a10f-2d49bb478a17",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "0960a439-0bc9-4cdb-8579-569378f51587",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21a074f9-d705-4783-96fa-9aa2bad7c25c",
        "cursor": {
          "ref": "cfb4b343-f595-4e54-b9e3-03bf8837051a",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "e70acaf8-7749-41e9-9757-687e46b81879"
        },
        "item": {
          "id": "21a074f9-d705-4783-96fa-9aa2bad7c25c",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "dc55a07f-8afd-447d-8660-6ffebad1a841",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 1313
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3890d266-d45f-4105-a0fd-a86569c02b02",
        "cursor": {
          "ref": "570999c3-7498-4a51-b6e5-14f298942fc2",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "6937eb86-11cd-414f-b64c-ab4a71accd67"
        },
        "item": {
          "id": "3890d266-d45f-4105-a0fd-a86569c02b02",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "20397724-6d8f-4e58-b71e-33a43b351c66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 1716
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf4b4b6e-15dd-4ed5-97e1-139be8eb05a7",
        "cursor": {
          "ref": "c262162d-07f1-4ea1-a754-4fcedefcf581",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "e58f9f70-8c88-49fc-b7d8-3ebeb692d79b"
        },
        "item": {
          "id": "bf4b4b6e-15dd-4ed5-97e1-139be8eb05a7",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "a6103676-4b2d-4c35-beef-fd187fdbd3ce",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 687,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "866478ee-d929-49ac-a070-b857a88986c4",
        "cursor": {
          "ref": "a4f1d030-4a5c-4dbe-97cc-38f37791d5d4",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "5fcd7677-ea9f-470a-8a61-003207d8037c"
        },
        "item": {
          "id": "866478ee-d929-49ac-a070-b857a88986c4",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "aeaabc1f-4ea2-4d49-8b94-812433a37080",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cb00cd7-0178-4a29-b51c-09ade826a53f",
        "cursor": {
          "ref": "281e2a31-0288-4c69-ba0c-7d86d99f2ede",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "12f9ce61-4b45-4a09-b150-779034fdaab7"
        },
        "item": {
          "id": "4cb00cd7-0178-4a29-b51c-09ade826a53f",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "6ede6aa7-c669-4acf-b5cf-155f69cae12a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c144e676-2a5a-4f31-9c54-3956f7368196",
        "cursor": {
          "ref": "ae2f407e-1cf1-4a8e-80a5-304a201da3d5",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "24373b81-0dfb-4ea7-b5c4-af8437551b1b"
        },
        "item": {
          "id": "c144e676-2a5a-4f31-9c54-3956f7368196",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "1526cb8d-d8e0-4b99-96ac-80ca2c496fcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c04300d8-eac2-40de-abfa-38ac4469bc78",
        "cursor": {
          "ref": "db01f411-7587-47ae-a665-45ff6c303458",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "261eb862-9d73-4fca-91ac-9db3a739a845"
        },
        "item": {
          "id": "c04300d8-eac2-40de-abfa-38ac4469bc78",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "5e472bc0-dbb1-4b19-b308-58d714a97f06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b973ac89-c153-4cb8-b4fb-5f7d20c1f97d",
        "cursor": {
          "ref": "61e75452-004b-461e-99bb-062b27ce0035",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "eeaab3d7-c48f-4758-b425-885d5d9c97eb"
        },
        "item": {
          "id": "b973ac89-c153-4cb8-b4fb-5f7d20c1f97d",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "0cc08856-d2e3-4a55-9750-504819d549c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7806b735-1409-4593-97f9-f604891e50ba",
        "cursor": {
          "ref": "01df218b-2622-41a2-a1e6-328a582d24cc",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "ecfd1110-8e30-43dc-9fae-23a0d7273fdb"
        },
        "item": {
          "id": "7806b735-1409-4593-97f9-f604891e50ba",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "cbca36a4-bdb1-4eb1-b27d-062186beaae7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a78edb68-1615-43ad-8add-9a175aadcbc7",
        "cursor": {
          "ref": "85f0b383-f674-45b6-97f7-f5661ca9cfb5",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "ef461288-017f-4ab2-9bbe-83620c915a10"
        },
        "item": {
          "id": "a78edb68-1615-43ad-8add-9a175aadcbc7",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "c980680f-59fa-4c9b-89ad-8408f00e3968",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9db1abd0-715c-4a38-8767-477dc5586382",
        "cursor": {
          "ref": "97bd7551-823c-42f4-89f5-0dcca504f2f9",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "34c84533-4bca-4ef7-994d-841bb3cb7b8a"
        },
        "item": {
          "id": "9db1abd0-715c-4a38-8767-477dc5586382",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "11a12e59-bf8f-4b2d-b411-8d3df09fc732",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfb2874c-35b0-43a1-91bf-2d1a872d6503",
        "cursor": {
          "ref": "c106c256-0b5d-4850-a4d1-2e6f93457355",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "3e6699f5-4e97-4e39-a0d4-b26dc0bc55d4"
        },
        "item": {
          "id": "dfb2874c-35b0-43a1-91bf-2d1a872d6503",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "3c2a31ff-79a9-4880-bdfc-a38fc997f3ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 1100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ae32250-ff68-4362-98b7-a3c9d4c600ba",
        "cursor": {
          "ref": "0d0907cf-7a83-4cd2-b97b-abd4d564644f",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "5f20001a-ffc0-45e4-94a1-614abfd9e490"
        },
        "item": {
          "id": "0ae32250-ff68-4362-98b7-a3c9d4c600ba",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "57af98e0-10f6-4692-9079-5e7a02c37c0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daedc16d-a40c-4588-a877-9b3b7a3224d3",
        "cursor": {
          "ref": "b7c080f4-80af-4fab-adef-251c2823cef0",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "160b87b4-4e72-45a0-97bc-ab6d368bc085"
        },
        "item": {
          "id": "daedc16d-a40c-4588-a877-9b3b7a3224d3",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "ea346215-55ff-4e51-9f92-cd7293dc2dd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17c7400d-3ee4-4518-b9cc-706a282ef502",
        "cursor": {
          "ref": "9f3f2536-808c-4b31-b725-145c1822ed9f",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "5ac4fb05-ff39-4203-b0d7-dc70debed97c"
        },
        "item": {
          "id": "17c7400d-3ee4-4518-b9cc-706a282ef502",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "6b46b83c-605f-4b38-afad-b284192c4860",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 743,
          "responseSize": 908
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79cc3841-35ec-4584-adc5-f7c1c4dda90f",
        "cursor": {
          "ref": "ca2f5790-8025-4c0a-9dae-d72808b96ee4",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "9f783877-a4ce-4a62-8ba6-b7a8b7a17e3d"
        },
        "item": {
          "id": "79cc3841-35ec-4584-adc5-f7c1c4dda90f",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "2d7da610-41a9-47bd-b0f6-a7ccc5e8a72c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 980,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00872492-8a5c-458c-b157-59673d5ddd49",
        "cursor": {
          "ref": "a5645dd5-6746-445c-848e-75ececf8eb41",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "0a67555c-875d-4bcf-87fd-a4963176e984"
        },
        "item": {
          "id": "00872492-8a5c-458c-b157-59673d5ddd49",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "6f2529f5-c0f1-45d3-a789-5956db6e358a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 731,
          "responseSize": 1415
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f4dcf3b-eb78-4eef-92dd-8f29cdf502ca",
        "cursor": {
          "ref": "39ea4c02-29f4-4f1a-a5f4-b5010659773b",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "d17f7ea5-2b87-47ca-b901-055d88ff146f"
        },
        "item": {
          "id": "8f4dcf3b-eb78-4eef-92dd-8f29cdf502ca",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "51bd5086-aa1b-4d42-b87b-cdbc84e5df46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 807,
          "responseSize": 1401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc20aa92-8b4d-41b8-970b-0c01fcc4bfe2",
        "cursor": {
          "ref": "186263b7-31be-43a0-bf00-758cbc42f748",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "f4bb87ac-85ea-44bc-9549-5204dc4366c2"
        },
        "item": {
          "id": "cc20aa92-8b4d-41b8-970b-0c01fcc4bfe2",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "866d8989-2fac-443d-a557-d89b4432a691",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 717,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81dd7f31-f654-4ecc-ad41-6a1a9a7a5cff",
        "cursor": {
          "ref": "73f28e2e-1897-4525-b9e0-349f3d685618",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "c82a171c-2b60-4b76-895d-384833667f94"
        },
        "item": {
          "id": "81dd7f31-f654-4ecc-ad41-6a1a9a7a5cff",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "d927f384-3b91-44d2-834c-fe23050a1390",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95b891c0-2b66-440a-9a6d-d9db8e5e6724",
        "cursor": {
          "ref": "0e23a978-e853-45dc-b301-fb1ef4e8745f",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "b905da37-f34c-4982-b7bb-33567742271f"
        },
        "item": {
          "id": "95b891c0-2b66-440a-9a6d-d9db8e5e6724",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "cdcb92a3-75bc-4083-9945-baf3c11f66bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8462714f-e4b6-4c26-a693-ae96f292be9c",
        "cursor": {
          "ref": "5df57d6e-70cc-4cd1-9b2b-6759b6994983",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "acd053a8-e567-42d9-89df-a9be7a6c3c41"
        },
        "item": {
          "id": "8462714f-e4b6-4c26-a693-ae96f292be9c",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "51288703-1f67-427a-b518-62d49e3f582f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5f55c68-c20a-4963-a1af-4c29c5aa322d",
        "cursor": {
          "ref": "3cb91b0e-0020-4e61-94c2-e064daa3e185",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "5cf6a27f-dcf5-4c63-ad27-c4fd1c601cbc"
        },
        "item": {
          "id": "b5f55c68-c20a-4963-a1af-4c29c5aa322d",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "770ab05c-7232-47c3-b624-620b78aeb023",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efa08ebc-332d-44a7-96b8-c95e22a74db2",
        "cursor": {
          "ref": "77c0e194-9a36-4443-9d59-ef4013980e3a",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "9ffec9aa-6def-4dbf-bd88-707202d642de"
        },
        "item": {
          "id": "efa08ebc-332d-44a7-96b8-c95e22a74db2",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "a8f93804-77cd-438d-b551-e14b38423a2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "736d7b85-d894-4840-9d9d-e69be2cfd255",
        "cursor": {
          "ref": "87fbe37d-7813-420d-b755-f6d383b34c2a",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "65f0c5ea-09c6-47fd-89c5-fee4097aed3d"
        },
        "item": {
          "id": "736d7b85-d894-4840-9d9d-e69be2cfd255",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "62255031-873d-48eb-89bb-ce29e38e5163",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 591,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73194191-1924-49ef-a6f2-830efe2be9a1",
        "cursor": {
          "ref": "4ec50ab7-f610-49fd-8054-d977fe957c52",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "7b2e7c96-3265-4407-a87f-a2f9d1d87c22"
        },
        "item": {
          "id": "73194191-1924-49ef-a6f2-830efe2be9a1",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "3856067c-3cfa-41d9-abbe-7500e809cbf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 559
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a9a5454-e706-43a4-ba5e-50062f18fcf0",
        "cursor": {
          "ref": "8a5a7536-89bf-4d1f-bf39-c815e8e90d4a",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "b026e644-f6ce-4cfd-85d9-a0540f06a59e"
        },
        "item": {
          "id": "5a9a5454-e706-43a4-ba5e-50062f18fcf0",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "7ef3784f-9c8e-4c9b-b6c5-7d9f0a6d54e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 644,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5534caa3-aefa-4b3b-820c-0df8338c3daa",
        "cursor": {
          "ref": "d0809f54-c725-4290-ac2a-654ae9114358",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "1ec52925-43a3-46b1-80c4-63a77139c141"
        },
        "item": {
          "id": "5534caa3-aefa-4b3b-820c-0df8338c3daa",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "eea7a638-72af-4950-83c3-54043fcd6340",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 626,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc38e34e-3911-4fd5-8252-99d8286c9a8b",
        "cursor": {
          "ref": "ccd187d8-7221-4bd6-b357-01d0ad779a64",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "c11e9f7f-f751-4795-8099-c9c00395ea7b"
        },
        "item": {
          "id": "fc38e34e-3911-4fd5-8252-99d8286c9a8b",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "7e947e3d-3004-41ad-812c-f402087ec42f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 872,
          "responseSize": 836
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c73f339-365c-45ea-95b2-686f7464ddc4",
        "cursor": {
          "ref": "c8249203-5e62-4342-9791-52ecaee920ae",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "56aabf39-85a2-4903-b1ca-66eb471e3134"
        },
        "item": {
          "id": "6c73f339-365c-45ea-95b2-686f7464ddc4",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "defad2cb-43eb-4feb-988f-049155ab1f1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 902,
          "responseSize": 817
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4f75df4-299f-4210-8d65-cf79fa28efd7",
        "cursor": {
          "ref": "41270402-9c37-4f2c-a1f2-4e29fd51f0db",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "f0323d21-a6ca-4e7b-8a51-45a56a53fd90"
        },
        "item": {
          "id": "b4f75df4-299f-4210-8d65-cf79fa28efd7",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "37c0f9c2-bad6-47e1-9542-116557c1e2cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1303,
          "responseSize": 814
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf05d50a-361b-4409-ad4f-1170498a7622",
        "cursor": {
          "ref": "76551525-16de-4aa3-af5e-b25947b33be0",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "66971b0a-3fbf-4d6b-99ef-956ea10d333b"
        },
        "item": {
          "id": "cf05d50a-361b-4409-ad4f-1170498a7622",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "fc5d4bdd-8707-4c97-8366-cfa6f7a78f4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1130,
          "responseSize": 816
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1430e2d7-54f6-43f1-8006-51e4a9beaaaa",
        "cursor": {
          "ref": "524b5562-77d5-4ff6-870b-2daca7d95be8",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "20b91b76-d1be-474a-bf80-cb91c4526dec"
        },
        "item": {
          "id": "1430e2d7-54f6-43f1-8006-51e4a9beaaaa",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "0ddca463-5c67-41c2-82f0-a431054eb790",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1057,
          "responseSize": 814
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3c766ed-1191-48c3-8c81-d5661cd64bff",
        "cursor": {
          "ref": "2ad7ffdb-200c-4599-8168-4ad781fceb0b",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "1e06fd3a-addb-459e-9e8c-a0d4e043c53f"
        },
        "item": {
          "id": "f3c766ed-1191-48c3-8c81-d5661cd64bff",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "80403171-7e46-4a45-86a2-60f49736902b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 927,
          "responseSize": 685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f49f572d-fc7c-4681-a23b-559018776755",
        "cursor": {
          "ref": "fa8740a2-e16c-46ae-8a4d-eba4569c0c73",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "488f72b6-ea0c-446e-8838-798fa342c3c5"
        },
        "item": {
          "id": "f49f572d-fc7c-4681-a23b-559018776755",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "7b573a00-717d-4bb3-ac0c-015894f04b49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 777,
          "responseSize": 653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68ad2416-b858-49ed-8db0-5516bb0d1560",
        "cursor": {
          "ref": "6c84182c-71aa-4a19-9db9-0e6949e4592e",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "5c6c050c-6a41-4dbc-a942-b76937a9d3d2"
        },
        "item": {
          "id": "68ad2416-b858-49ed-8db0-5516bb0d1560",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "0774de28-e9eb-4a3a-9822-d4d8883e0384",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72b9b755-70d3-4377-b91d-9e9d057c5878",
        "cursor": {
          "ref": "c5b43188-c636-4526-81e9-cfae9efade10",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "921f78a2-0419-4ba8-b8fc-d47d8b871f74"
        },
        "item": {
          "id": "72b9b755-70d3-4377-b91d-9e9d057c5878",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "7b53f881-1d5c-4c16-a776-16abfab5638f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f98aa0a-51f5-40e3-bd7b-447d8ee76166",
        "cursor": {
          "ref": "4381642a-09c8-4790-9a5c-84a6f86dea02",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "79844e50-3f69-44cf-b4f9-66ea35a87f8f"
        },
        "item": {
          "id": "2f98aa0a-51f5-40e3-bd7b-447d8ee76166",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "09e06993-f636-4eae-9cb7-7806ae21ee56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 633
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e03843b9-74e5-4599-812d-bd7e4faac8ba",
        "cursor": {
          "ref": "c2e20e8d-0cfc-4548-bce7-2384d6b1c50d",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "f69dec28-97a2-4baa-b7c0-1537af9ab876"
        },
        "item": {
          "id": "e03843b9-74e5-4599-812d-bd7e4faac8ba",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "eadd5970-18a7-4fd2-95f5-08242234a27c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03ce622c-2330-49b5-9460-6c199f547206",
        "cursor": {
          "ref": "309f5119-dc5c-4612-9717-d300f17be88d",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "e7fcc6ab-3f29-4481-8198-d42e9a791f16"
        },
        "item": {
          "id": "03ce622c-2330-49b5-9460-6c199f547206",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "cd306373-e498-4402-8d21-dc2fb99fa0f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b10c1dd4-5b82-4751-b3a6-515e789bdaea",
        "cursor": {
          "ref": "28542801-8fb1-4117-887e-92bb2bbaf3c1",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "1b3ffa99-7aab-4a39-9a1f-68da973bb8a1"
        },
        "item": {
          "id": "b10c1dd4-5b82-4751-b3a6-515e789bdaea",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "0317b2fc-577e-4089-8a37-0d3f1bd98bfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d888ef5f-34ee-4f4f-bc7a-a931d1f03029",
        "cursor": {
          "ref": "a0068cea-edcd-43cf-86ad-120ba3e7d541",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "7fc92d0b-72cc-4cae-9c37-84607299c6b8"
        },
        "item": {
          "id": "d888ef5f-34ee-4f4f-bc7a-a931d1f03029",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "edf1dad5-5f8a-4d08-a48a-d8e57d5c16c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b80bf5d3-ca3e-4808-a120-109132868724",
        "cursor": {
          "ref": "46963637-87e9-458c-b170-bbcf2441cbc0",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "aebee7ed-a97d-4413-8f22-03910ded48d1"
        },
        "item": {
          "id": "b80bf5d3-ca3e-4808-a120-109132868724",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "f00b2b6e-e724-486c-895f-37a273e86ffc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8f45b0d-6db5-4e06-bf70-0d8f49e51f64",
        "cursor": {
          "ref": "c0204a34-a408-47e0-b449-753254bec69c",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "c62ae6b4-2a5a-447b-a747-df61c0abd231"
        },
        "item": {
          "id": "a8f45b0d-6db5-4e06-bf70-0d8f49e51f64",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "71606bad-f7c6-49dd-babf-9b03f1b570c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 655
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f00c1ed2-184d-49ca-b374-e2be34e3ecc6",
        "cursor": {
          "ref": "50322174-5890-43a8-9132-ea5dcd4eb55b",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "6ae2883e-a7fc-4b23-b7d9-7ab6b5da673c"
        },
        "item": {
          "id": "f00c1ed2-184d-49ca-b374-e2be34e3ecc6",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "6d10a721-24f1-4323-80b4-bb70aff6619b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 677
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6dc85bd-6fab-4278-9cf5-18903e91f7c0",
        "cursor": {
          "ref": "b05d419b-9b9b-45be-bb3e-8d98ade1f927",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "273bb71b-8a47-4b30-a4b7-229ef70d4004"
        },
        "item": {
          "id": "b6dc85bd-6fab-4278-9cf5-18903e91f7c0",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "c4ea9c17-b8a2-4c00-bac9-ae29bba65c6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 690
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2611b477-e18c-4642-ab49-8d33e1729481",
        "cursor": {
          "ref": "d47cc0f7-c65e-483b-9fd6-e9c865e0eea3",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "e3474bca-bc57-46fa-b7b6-f5b02814a19a"
        },
        "item": {
          "id": "2611b477-e18c-4642-ab49-8d33e1729481",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "0268c0f4-65ad-4765-a04e-f35639ca82e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 953
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb6d28df-b823-4053-8827-da94d03b5cc0",
        "cursor": {
          "ref": "f522148b-d1b8-4379-b6e1-51445ad3eb0e",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "358f2b2f-aab8-4cde-8016-23ee1b5b1222"
        },
        "item": {
          "id": "bb6d28df-b823-4053-8827-da94d03b5cc0",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "89f33bf6-c342-4156-b872-0a5c63e8256b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ca7b4c2-2956-4da4-a6dd-d6a899bdacd2",
        "cursor": {
          "ref": "97c2f731-4bd3-4b8c-afe2-449e049bfe92",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "82cd9fd5-d3a9-4c51-85f1-70d0f10bc749"
        },
        "item": {
          "id": "2ca7b4c2-2956-4da4-a6dd-d6a899bdacd2",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "18d6c4c0-e2e8-41fd-8096-1150f5e13a71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "751764e2-f5f0-4e8c-a62c-bcc0b54a3377",
        "cursor": {
          "ref": "ea4e4a99-a428-4ddc-a090-fff605eab053",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "d89723aa-aba5-4d29-9bf9-5a331f06b1d9"
        },
        "item": {
          "id": "751764e2-f5f0-4e8c-a62c-bcc0b54a3377",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "dda21c3d-9ae9-4768-815a-50c424f3b320",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd23b21a-0a97-4575-ae0f-2b0bfed18057",
        "cursor": {
          "ref": "690ce7a7-5077-4284-9ece-9cba9e82d8cd",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "f7d7f294-0660-415d-b68a-a910475c1020"
        },
        "item": {
          "id": "cd23b21a-0a97-4575-ae0f-2b0bfed18057",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "21785225-9e9e-4054-9613-f6386a6cc88d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f29fe7c-4b14-41c0-8268-985e02bb6e6c",
        "cursor": {
          "ref": "2a486c81-5370-4d9a-b4ac-b95d63afc3fa",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "fa089889-dd60-4db7-b0c4-8dcf82ae6cc3"
        },
        "item": {
          "id": "1f29fe7c-4b14-41c0-8268-985e02bb6e6c",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "5c70e3ef-0095-4414-87fc-45b9ca3d859e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 753
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20cd21f0-e7bb-4701-a967-f0c78fa3176e",
        "cursor": {
          "ref": "d1a81a52-6c5f-4bcf-8ea5-8c45e0b38e37",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "00614513-9b36-4208-82ef-0b5ef385ce56"
        },
        "item": {
          "id": "20cd21f0-e7bb-4701-a967-f0c78fa3176e",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "5657bf6c-99e6-466a-9587-defbaf5d7ea0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 69,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4281668-de93-4ab8-a8a8-6cbf74338093",
        "cursor": {
          "ref": "7c1f4ae1-1383-48d6-afd1-9d8faeea78bc",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "a601c355-2854-4db8-b690-e6b88b4afc23"
        },
        "item": {
          "id": "d4281668-de93-4ab8-a8a8-6cbf74338093",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "74ba5df8-38e0-4ab4-bf18-6a77df7cdfef",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 544,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "213123f0-498e-4a8e-a926-b4d223c66d5f",
        "cursor": {
          "ref": "a0117217-d715-447c-930b-1eb81c983428",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "a296d67f-024c-4083-831b-4f31cd1d7539"
        },
        "item": {
          "id": "213123f0-498e-4a8e-a926-b4d223c66d5f",
          "name": "credentials_issue"
        },
        "response": {
          "id": "a3bd4ff2-3e69-4fc7-a712-4875add7812d",
          "status": "Created",
          "code": 201,
          "responseTime": 4845,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fc333a3-7e79-40ef-a44a-68867e3d1888",
        "cursor": {
          "ref": "ba9f9124-235f-4335-bf50-185ab3cce2f8",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "d068eb52-69a0-4c8e-9ef9-c190703442af"
        },
        "item": {
          "id": "8fc333a3-7e79-40ef-a44a-68867e3d1888",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "2a05e0ae-7e00-4620-a919-dbd050d524cc",
          "status": "Created",
          "code": 201,
          "responseTime": 4709,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1ed4904-4467-4dec-a42a-d998fa5fe933",
        "cursor": {
          "ref": "5b138291-36c6-4794-8f1f-badcc0db70da",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "b9bee462-49a7-42e2-9cf2-da0ca82011f9"
        },
        "item": {
          "id": "c1ed4904-4467-4dec-a42a-d998fa5fe933",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "434055f0-f41e-4fcc-833a-ad5e360ba2f2",
          "status": "Created",
          "code": 201,
          "responseTime": 5840,
          "responseSize": 703
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bedfc04-2e93-4c50-a41d-f8c14c550463",
        "cursor": {
          "ref": "58d98e18-a692-4db9-8837-71fe1e16684a",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "5afa72ca-eb4a-498c-96b9-d70d41261722"
        },
        "item": {
          "id": "6bedfc04-2e93-4c50-a41d-f8c14c550463",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "13961a13-e81b-4cc6-913c-bf3368333611",
          "status": "Created",
          "code": 201,
          "responseTime": 6473,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "69bb0e8d-36c0-4b9a-81ab-111a32710536",
        "cursor": {
          "ref": "7da1e868-c6bf-4f03-8c30-6091537c5a1c",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "fc7cf2a4-5915-4492-949e-78a655d1d048"
        },
        "item": {
          "id": "69bb0e8d-36c0-4b9a-81ab-111a32710536",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "8ce16294-c908-4e41-bc52-c2b8bbad9c1c",
          "status": "Created",
          "code": 201,
          "responseTime": 3915,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4c045da-3c22-43bf-9f79-ca20c84699e1",
        "cursor": {
          "ref": "09dd6389-7eb8-4f4a-9a80-4460caaee6b1",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "85c75ac0-68e3-4035-b234-e313cc9946b3"
        },
        "item": {
          "id": "e4c045da-3c22-43bf-9f79-ca20c84699e1",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "9aa66aa2-20a9-47ea-b6e4-57d89f1f7fe4",
          "status": "Created",
          "code": 201,
          "responseTime": 4828,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3504d5d0-2003-4e4c-b5ea-87100b6d85be",
        "cursor": {
          "ref": "fa32524e-f44b-4c6d-98a7-df8442498019",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "b0cd56a3-2f03-44af-b663-76d9de24ff3d"
        },
        "item": {
          "id": "3504d5d0-2003-4e4c-b5ea-87100b6d85be",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "a0c7dd49-754c-4cea-a8a3-dde7f1aafbaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3504d5d0-2003-4e4c-b5ea-87100b6d85be",
        "cursor": {
          "ref": "fa32524e-f44b-4c6d-98a7-df8442498019",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "b0cd56a3-2f03-44af-b663-76d9de24ff3d"
        },
        "item": {
          "id": "3504d5d0-2003-4e4c-b5ea-87100b6d85be",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "a0c7dd49-754c-4cea-a8a3-dde7f1aafbaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b225cd92-9f77-4914-9abe-3f1eb9db7036",
        "cursor": {
          "ref": "f06e5622-2e9f-4708-8e0b-087c8c57a435",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "4bf978fb-e544-48de-94f2-493630d465e9"
        },
        "item": {
          "id": "b225cd92-9f77-4914-9abe-3f1eb9db7036",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "cd4d8bae-2298-41c0-9a50-889b2a642d3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea7329f7-b7eb-4b96-827f-07faddbbe7e3",
        "cursor": {
          "ref": "c74727a7-6002-48c6-835a-3e38bc139a9b",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "2f7f20ec-9112-4983-82e2-e1ff735fe52e"
        },
        "item": {
          "id": "ea7329f7-b7eb-4b96-827f-07faddbbe7e3",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "220a54b5-7754-4761-a0bd-a8d4a4c9b5c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84fe9fb6-efb3-430d-af7e-c231e33a7f89",
        "cursor": {
          "ref": "023aa221-3610-4b66-9e58-1114af2324c9",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "dfaf1044-4691-45c0-b20e-2701affc2815"
        },
        "item": {
          "id": "84fe9fb6-efb3-430d-af7e-c231e33a7f89",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "2d7cc3b6-3d6c-46e8-868f-1d228742dfbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8616383-c659-44c7-9fc0-554ca2ac67fa",
        "cursor": {
          "ref": "4a989de1-939d-4f3e-bff3-cb54e617c344",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "6db7a709-3eae-4ae5-a05c-4b36aae052a1"
        },
        "item": {
          "id": "e8616383-c659-44c7-9fc0-554ca2ac67fa",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "d6ed652e-f6bb-45d4-8987-130d1d11e4f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa54c698-7c4a-40bf-8c39-607be008df66",
        "cursor": {
          "ref": "3eb55e22-11fd-4ec3-9fbf-c85dd3f0daf0",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "5cbd4771-e314-4de5-87f8-8dddb5050aeb"
        },
        "item": {
          "id": "aa54c698-7c4a-40bf-8c39-607be008df66",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "9248fc75-1bd4-4855-9e14-25962ad84a1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ebebf09-5102-4c49-9480-64edad7d421d",
        "cursor": {
          "ref": "38c3e6d0-ca76-4424-b319-dfeb275c0bcf",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "9613bec4-b6ed-41c9-85f9-631f6b19a3da"
        },
        "item": {
          "id": "8ebebf09-5102-4c49-9480-64edad7d421d",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "0414ebf5-3bc8-414f-a842-9c0d5fcb0433",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 431
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3425781-5232-4f7a-a54b-f3f65f330d32",
        "cursor": {
          "ref": "b1830345-6549-4508-8dfe-965d7fb9cea7",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "8af1bc56-17a4-4ad3-9b51-ffa2c6e83001"
        },
        "item": {
          "id": "f3425781-5232-4f7a-a54b-f3f65f330d32",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "359e4512-bf62-4523-83d6-7aff053c5bff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 482
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9a1b011-e742-4b2b-a33a-cf955a91e8c3",
        "cursor": {
          "ref": "f685ee21-c0c3-4846-b6ca-1658a970ef39",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "9cacf0cf-4e7c-417a-8cd9-5fafa0fd4fd2"
        },
        "item": {
          "id": "d9a1b011-e742-4b2b-a33a-cf955a91e8c3",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "874c395c-21b7-4450-bea8-c957786b734a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b10cd695-2e16-4ce7-af2d-bb54caff5c01",
        "cursor": {
          "ref": "1e9c1d81-bc30-45d4-9d12-981ced3d3339",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "e6834740-90bf-43de-9916-d4388da95cbf"
        },
        "item": {
          "id": "b10cd695-2e16-4ce7-af2d-bb54caff5c01",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "f576052f-dd3f-4b48-a902-c48698f61561",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 582,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3f28ae5-7f66-435d-897a-2631a02f64d4",
        "cursor": {
          "ref": "0220eb60-f7ec-4390-a489-e8bb4c7e2031",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "cfce02bc-d740-4021-9c05-c4c93f9b3249"
        },
        "item": {
          "id": "c3f28ae5-7f66-435d-897a-2631a02f64d4",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "1f2723ee-f8f0-4112-accd-e2d6ebc70a4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43a97b26-4fe2-4614-a54b-9e7be719b3ee",
        "cursor": {
          "ref": "49987909-a3f3-406a-8660-6cebb9b662a3",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "60e4fc09-ae79-4633-86b4-50bb40761e73"
        },
        "item": {
          "id": "43a97b26-4fe2-4614-a54b-9e7be719b3ee",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "6000e112-4f4b-40fc-97c3-ecf13c0cd289",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ffdabd7-332d-4e24-b764-9c234aea608c",
        "cursor": {
          "ref": "8e16b18f-328b-48a0-8e1f-c24f29c1ac19",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "dacacfd8-aed1-4362-bad9-c3df9323f583"
        },
        "item": {
          "id": "3ffdabd7-332d-4e24-b764-9c234aea608c",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "4a31ec86-0dfe-4f8b-a2c6-8014a140a36b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "604f9d30-b038-4aaa-897e-be98490687f2",
        "cursor": {
          "ref": "42827dd6-99bf-43d9-8f97-9ead77e9e967",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "27b10db9-0f56-417e-a14d-12209d9b5a55"
        },
        "item": {
          "id": "604f9d30-b038-4aaa-897e-be98490687f2",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "ea4482fc-9bb4-45cd-b182-14666af7a472",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53d77029-a457-44bd-a018-e5631dfb3f01",
        "cursor": {
          "ref": "00106bc7-4edf-4e04-a4ed-cb58ccc7d229",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "be7f3af9-ac64-4e4a-adb2-7162685c2b47"
        },
        "item": {
          "id": "53d77029-a457-44bd-a018-e5631dfb3f01",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "2a16ce5e-852a-4ec2-9497-ed99742a4bcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c1665b6-03d2-4df8-968a-8e3bad149e68",
        "cursor": {
          "ref": "0549de1d-c80d-4b7b-9c72-6e61d8317283",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "9bbe2c2d-f28c-42db-836d-026ab76d6700"
        },
        "item": {
          "id": "9c1665b6-03d2-4df8-968a-8e3bad149e68",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "42555cfe-0565-460d-8918-9296bc2e2964",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "001f9a24-3314-474d-b628-2456c00e97e7",
        "cursor": {
          "ref": "83ee2e38-9a4a-4984-9a36-6e6622e38b33",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "2d6cfd83-3a9f-45fa-8b4b-1616cdab46c6"
        },
        "item": {
          "id": "001f9a24-3314-474d-b628-2456c00e97e7",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "aba172df-7b84-491f-bf4b-5a5506fbc731",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42153a85-4167-4b23-a200-ec19af0594ef",
        "cursor": {
          "ref": "8c80381c-2482-4aee-b072-5ffc90df5b14",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "1764c65b-417f-481e-b480-1c14015aaca9"
        },
        "item": {
          "id": "42153a85-4167-4b23-a200-ec19af0594ef",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "ebd6db2f-81a7-48ae-a3f6-dc624ace8252",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 632,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f73327c0-db8e-4ffd-8433-2f5b1890c56b",
        "cursor": {
          "ref": "5dc24a34-73ef-4d6a-beb8-c47c77893d7f",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "2c0b702c-9632-4fdd-85b2-8e1d1643ce73"
        },
        "item": {
          "id": "f73327c0-db8e-4ffd-8433-2f5b1890c56b",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "f953c162-cee1-4793-bc48-9a5fcdf40403",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 882,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3a67eb1-46a7-4920-80ae-ac65b96fa47d",
        "cursor": {
          "ref": "6053b9d8-fca0-40a0-a6e6-5fa386055ebe",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "4f900d79-8966-4e00-88ef-5a252762f781"
        },
        "item": {
          "id": "b3a67eb1-46a7-4920-80ae-ac65b96fa47d",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "0b914129-4c95-4351-b324-163bd732684b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 791,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6efc917b-db87-45ea-bbe8-bc5f48adfbef",
        "cursor": {
          "ref": "41744512-a5b2-451e-afd0-b9e5c35946b7",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "6c0bfa1a-3424-48eb-939c-1694c8d8e8bd"
        },
        "item": {
          "id": "6efc917b-db87-45ea-bbe8-bc5f48adfbef",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "1e6197c0-4599-486e-af51-dac84a8d2d0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 833,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cb4f591-868a-44a8-8f2a-35cf18c71634",
        "cursor": {
          "ref": "b56481c4-a9c7-4ba4-b5c0-a2b5f7e06516",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "1da1243b-1ea8-457f-9c21-d028da094049"
        },
        "item": {
          "id": "7cb4f591-868a-44a8-8f2a-35cf18c71634",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "47537a91-7eec-4fcd-9f15-849384a150ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 722,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "499002a4-fe11-4809-b257-75e213cfcff1",
        "cursor": {
          "ref": "3bbf1799-7c9e-4ef7-9542-de4657a96e2d",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "e4a060bc-29a5-41df-9a5a-77c335220347"
        },
        "item": {
          "id": "499002a4-fe11-4809-b257-75e213cfcff1",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "4585f19e-6abf-4da4-8b04-84cc3c0c8d7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df86837c-5bf9-402d-ab59-27b6cdcbeba3",
        "cursor": {
          "ref": "1ffdc80c-3b2a-4c04-ac57-d58a30ecb4fc",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "ec5d4e99-feac-4d13-9001-7485a3f8b186"
        },
        "item": {
          "id": "df86837c-5bf9-402d-ab59-27b6cdcbeba3",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "d90ebddd-7522-46d7-9d6a-f431db57c8c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15e8e0a6-1cd9-45f0-a552-489f95a81448",
        "cursor": {
          "ref": "04bb9905-b06f-44f3-9469-e95230f7e26b",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "4ced1092-a914-4217-a38f-c7e2d475a269"
        },
        "item": {
          "id": "15e8e0a6-1cd9-45f0-a552-489f95a81448",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "385ffc4a-288d-45c3-b0c3-89f5ad42252e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16d97487-0bea-4d3b-9c0d-7c65b71ff661",
        "cursor": {
          "ref": "9b9766a7-588a-4744-83bf-d6ec650c2e89",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "8357cd9b-e49d-41da-8bb8-5f87700adf09"
        },
        "item": {
          "id": "16d97487-0bea-4d3b-9c0d-7c65b71ff661",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "200dff59-58f1-4f03-b9c4-7ddb7c5bdb79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d4600e9-9619-4fd6-a0a2-3d803b5002ec",
        "cursor": {
          "ref": "72d19ef8-ed02-4e46-b60a-38f0b5097f2f",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "b9918df4-1eac-4bee-8178-e940c19d2101"
        },
        "item": {
          "id": "9d4600e9-9619-4fd6-a0a2-3d803b5002ec",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "d0f3e432-40c5-4db6-aeec-6766e391e1f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97b4198b-42b3-4871-9823-5d843af5e537",
        "cursor": {
          "ref": "56030ec9-2b3e-40f9-84d3-73af8e686390",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "0f23f4d4-20cb-4179-ac63-aaefa2bef21e"
        },
        "item": {
          "id": "97b4198b-42b3-4871-9823-5d843af5e537",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "cbab3011-428a-472d-af50-ca3152770734",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbf3793d-6e3b-441e-ad0c-49d7f59efbf7",
        "cursor": {
          "ref": "a7add624-2698-40eb-8fa3-0e16c9ce1f04",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "1d1186c8-7fef-46c2-971b-e047cf653494"
        },
        "item": {
          "id": "dbf3793d-6e3b-441e-ad0c-49d7f59efbf7",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "d4da364b-cd92-41af-ba61-5b2520621929",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14fad1c6-770f-4c06-8796-2099ffed9834",
        "cursor": {
          "ref": "8f6c98ad-383c-42cf-981f-52a740b08371",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "0bc381f8-09c4-418c-9900-d1f597d52a01"
        },
        "item": {
          "id": "14fad1c6-770f-4c06-8796-2099ffed9834",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "bb97944a-06bb-4acd-97e0-3a862dc5c642",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14da8bf0-39d3-4ef4-b207-1174c08e653e",
        "cursor": {
          "ref": "031bc7f1-0281-4577-b735-126f6175d0eb",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "8ef77558-e9d0-4b8c-b3ba-19a0d3a310a8"
        },
        "item": {
          "id": "14da8bf0-39d3-4ef4-b207-1174c08e653e",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "5737716e-5303-4d6f-9aa2-c6635548f553",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b87af7a-4d20-4eb9-b5ea-a37c9f1950e8",
        "cursor": {
          "ref": "7c82aa31-a0d3-4fa6-a379-41cb66900ff0",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "432c4682-b2e5-4d85-8229-45c70f27332d"
        },
        "item": {
          "id": "1b87af7a-4d20-4eb9-b5ea-a37c9f1950e8",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "2b880bac-2b7a-42c8-8237-38e587044f80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c083410-1bde-4837-8b25-62e4e93e7449",
        "cursor": {
          "ref": "d03ea283-cdd1-41e2-ae9f-42f53b829606",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "c8816384-1452-497d-ab6b-d95171f032f3"
        },
        "item": {
          "id": "1c083410-1bde-4837-8b25-62e4e93e7449",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "bbf48345-290c-465b-8c7e-8e5be68aa726",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 69,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "859f771e-94f1-41bc-8d6d-21684ac0039f",
        "cursor": {
          "ref": "37ff0c19-a7c8-4f03-8b28-d7e6fea8cbe9",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "5d292461-5c69-4cae-9f5d-25a480e3f375"
        },
        "item": {
          "id": "859f771e-94f1-41bc-8d6d-21684ac0039f",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "63417b15-396f-4759-b315-27d7b89b18a2",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 531,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5429752a-65b0-4d57-9642-db15c7799adb",
        "cursor": {
          "ref": "d65ab62a-7497-4ed7-b7bc-ccd669128b3b",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "9bc58130-7e48-4e4f-8a74-bd867fc05342"
        },
        "item": {
          "id": "5429752a-65b0-4d57-9642-db15c7799adb",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "4ded8a32-a9cd-47a2-83d3-d15de673e29b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 377,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5429752a-65b0-4d57-9642-db15c7799adb",
        "cursor": {
          "ref": "d65ab62a-7497-4ed7-b7bc-ccd669128b3b",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "9bc58130-7e48-4e4f-8a74-bd867fc05342"
        },
        "item": {
          "id": "5429752a-65b0-4d57-9642-db15c7799adb",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "4ded8a32-a9cd-47a2-83d3-d15de673e29b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 377,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57c10a89-d44b-4dcb-95c0-1d18315275d4",
        "cursor": {
          "ref": "3693004b-33da-4a7f-aaea-36037964cad2",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "85eb58b6-4a57-43ce-bf73-43b2fbbb8f76"
        },
        "item": {
          "id": "57c10a89-d44b-4dcb-95c0-1d18315275d4",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "886765fb-177e-45ae-8a07-32071e65b41b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 429,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ee2ccb5-3429-410f-acb5-e18372f08f30",
        "cursor": {
          "ref": "08d2a0d6-4574-42cb-898f-0992e1524f47",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "4276e254-ce66-426b-bce8-f85ae8cf85d5"
        },
        "item": {
          "id": "4ee2ccb5-3429-410f-acb5-e18372f08f30",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "530b9ce2-0894-4343-b793-7c4b7063cab5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 350,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f459282-9aa9-4d3e-b72f-99dd32cdbc52",
        "cursor": {
          "ref": "1e378b1f-86c7-4f18-802c-4d14bf093cf2",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "5f82240e-32af-42f1-8ae0-24b524749b92"
        },
        "item": {
          "id": "3f459282-9aa9-4d3e-b72f-99dd32cdbc52",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "8b70837e-0465-41e4-b09d-def9177654ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 384,
          "responseSize": 644
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf547a62-25ad-4eeb-bc88-e06f4f62bfd2",
        "cursor": {
          "ref": "8976d1b0-901f-41a1-9969-f925e5682ce7",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "c2f657fa-6ee3-4efc-a52c-9837899e6097"
        },
        "item": {
          "id": "cf547a62-25ad-4eeb-bc88-e06f4f62bfd2",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "70c40761-2dbe-419d-8174-5eb898822fc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 349,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab3bd4b3-5b53-42ec-83bc-c3a042ed143f",
        "cursor": {
          "ref": "aee49203-915a-4fdf-aed3-a711a7a5873f",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "d3e1920e-774f-4fcd-8f4b-61269a831bf2"
        },
        "item": {
          "id": "ab3bd4b3-5b53-42ec-83bc-c3a042ed143f",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "71656920-3e40-4394-a7c8-206376b1d42e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 367,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "120d3ea5-3329-485b-91df-38c8d8482963",
        "cursor": {
          "ref": "cb728d36-1f5d-4adf-ae72-97d52233e997",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "0dc6a6fb-a130-44de-a2be-f88b6faf8def"
        },
        "item": {
          "id": "120d3ea5-3329-485b-91df-38c8d8482963",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "486349f7-efb5-40e3-b5b0-106fba209869",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 335,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d62cd5d-da02-4b4c-8dd0-9a9942ea550a",
        "cursor": {
          "ref": "a0b89300-77ee-4791-87ec-7456756cd3fd",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "cbf05670-0eee-474a-9021-fe289c63f2e0"
        },
        "item": {
          "id": "0d62cd5d-da02-4b4c-8dd0-9a9942ea550a",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "576668c3-925d-459e-8c5c-df80d13e017a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 355,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5901d00e-4c79-4b2e-be90-9478cc954698",
        "cursor": {
          "ref": "1da03ce6-86a8-4a40-9172-65617a4fa0b2",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "683b2ce3-13c8-4a9a-a820-4036c7ca25bd"
        },
        "item": {
          "id": "5901d00e-4c79-4b2e-be90-9478cc954698",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "11c6251a-ab90-4ed2-864b-5ae3cb84050a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 353,
          "responseSize": 1468
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "995fd17f-4d18-4c1e-84ae-316e5dbbfa12",
        "cursor": {
          "ref": "38c2c542-1f8b-4296-9093-ee07e8784e61",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "7efe069c-e422-4975-a601-04e952bfb0fa"
        },
        "item": {
          "id": "995fd17f-4d18-4c1e-84ae-316e5dbbfa12",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "956d2db0-8491-492d-b409-d6ad81be671b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 341,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53a8e7ef-1740-493c-9103-33cc1a833ecb",
        "cursor": {
          "ref": "fffbe583-72eb-4774-a954-88583711930f",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "6c2c930e-8f34-4d02-b5fa-fe72301df533"
        },
        "item": {
          "id": "53a8e7ef-1740-493c-9103-33cc1a833ecb",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "805158c5-f9ad-4305-ae59-fbe335e922bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 355,
          "responseSize": 1367
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e54a605d-3a6b-41ac-96d0-532c951031cd",
        "cursor": {
          "ref": "ae6d8478-aec0-425a-8e05-22364a88b9ac",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "2b655274-6c7a-4dff-b003-0a5288f53594"
        },
        "item": {
          "id": "e54a605d-3a6b-41ac-96d0-532c951031cd",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "f60f97e1-310e-49e6-bd04-823bdc7a7dd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 339,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3415a9b7-a064-4c1a-8bc7-f561070d97d5",
        "cursor": {
          "ref": "b67c2a7e-7aab-4f60-8540-64dc3bb09792",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "f38c2b04-7d53-4a15-83c6-0a3b77fa1fa6"
        },
        "item": {
          "id": "3415a9b7-a064-4c1a-8bc7-f561070d97d5",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "8e92114e-3815-4687-acbb-03a914db1101",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 346,
          "responseSize": 1532
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9e24757-8449-4742-bb8c-1bce46b79a2b",
        "cursor": {
          "ref": "9c95ea39-ac47-444e-b679-03cf6c1cdec2",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "568ee1dd-ea11-493e-b420-2f02aa0b9025"
        },
        "item": {
          "id": "d9e24757-8449-4742-bb8c-1bce46b79a2b",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "4ab3d911-5b59-49fd-a65d-be7e0efc74ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 356,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21c22925-5bc1-43f8-882d-562748e17337",
        "cursor": {
          "ref": "a9732d7a-ae77-4707-a7b7-f31768a9ccf7",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "35cc3519-56e1-4e79-9d5c-a2dad1e80f89"
        },
        "item": {
          "id": "21c22925-5bc1-43f8-882d-562748e17337",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "17040b00-de39-4200-b6cf-122a4729f515",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 354,
          "responseSize": 1521
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6b37f7d-9a5d-4f1f-aa81-cece214aaa29",
        "cursor": {
          "ref": "25e58bc9-66cc-42a5-bfc3-21840b172e6c",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "19bbf69f-ce9b-4229-91ce-0686c0963957"
        },
        "item": {
          "id": "d6b37f7d-9a5d-4f1f-aa81-cece214aaa29",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "048b980d-6fa1-45f6-875b-00b3034aeb90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 353,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01254ea2-9cda-4d0e-b4f4-230580249bb8",
        "cursor": {
          "ref": "ae9294f2-4885-4055-a4ae-0792b3858130",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "ea09d47f-2618-49c9-bde4-c93ca95eb868"
        },
        "item": {
          "id": "01254ea2-9cda-4d0e-b4f4-230580249bb8",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "482b107d-f0c5-49c9-88b8-0f9d27af93e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 345,
          "responseSize": 1420
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee26f7dd-1523-43d9-891e-b6a72061fdd9",
        "cursor": {
          "ref": "b559f027-4f93-46f1-a14b-09e7c9835697",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "66db9b1f-bfdf-465f-aa4f-073487c3d4ba"
        },
        "item": {
          "id": "ee26f7dd-1523-43d9-891e-b6a72061fdd9",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "6ee04eb4-55d3-4c1c-a20a-a1083bb7e9eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 357,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3181b7d8-a2d3-4bff-9f14-aad82ddd2965",
        "cursor": {
          "ref": "91829cc6-3529-4846-b817-20ef71115174",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "ba0635b2-62f1-4e8c-a563-949e16e7e28b"
        },
        "item": {
          "id": "3181b7d8-a2d3-4bff-9f14-aad82ddd2965",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "09802f78-cf80-44e9-9acc-52b64dc1832b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 343,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2da53f5d-e337-40e2-8a12-3d0c85aa3507",
        "cursor": {
          "ref": "9444a954-8135-4489-89aa-644fe34073fe",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "69711380-35bb-4a0b-b89a-15c67c5b6723"
        },
        "item": {
          "id": "2da53f5d-e337-40e2-8a12-3d0c85aa3507",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "e3554488-cca5-4936-95c5-023ea93841f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 349,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb184f10-71b4-4c66-a295-636ebd13488d",
        "cursor": {
          "ref": "019748c4-d19e-4858-a965-3587336ab8b6",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "a9af0207-da8a-46aa-9c8f-ff3fd2a0c4de"
        },
        "item": {
          "id": "fb184f10-71b4-4c66-a295-636ebd13488d",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "dbe6c083-1841-4c8e-966e-cc3b1a8b128d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 351,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2c4fa34-1452-48a8-a4b1-041c82de51da",
        "cursor": {
          "ref": "f726202a-d31d-4b64-8314-c01d82467e78",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "be23cacd-467c-4d48-8f11-ce9f94c1edee"
        },
        "item": {
          "id": "f2c4fa34-1452-48a8-a4b1-041c82de51da",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "8ad08eec-e51b-4d0a-a7f7-f2875a1cd088",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 343,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afba8613-3b44-4a9e-9701-f2be81c86e06",
        "cursor": {
          "ref": "f7e44f66-e6e4-4b83-b234-b7551120fbb4",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "10839c3e-f98d-4ed4-8222-d923cad39013"
        },
        "item": {
          "id": "afba8613-3b44-4a9e-9701-f2be81c86e06",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "e4b14523-2a2a-446d-a505-37472c4be829",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 346,
          "responseSize": 1360
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d389c665-ea4a-442f-ab33-a55790b65062",
        "cursor": {
          "ref": "2dea709a-c78a-4bd1-ae80-d3f11977a999",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "ba110316-fb24-43cc-ae2c-15cc91b8189f"
        },
        "item": {
          "id": "d389c665-ea4a-442f-ab33-a55790b65062",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "c443f586-813d-469d-9662-8cf50cb968c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 342,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62482d78-e9ba-4883-907f-8ee9a6412bed",
        "cursor": {
          "ref": "68ea0d34-b4e9-422d-aa5f-f5c36d3a94b4",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "58dfd92b-2816-4de9-9e5c-ed342599c87d"
        },
        "item": {
          "id": "62482d78-e9ba-4883-907f-8ee9a6412bed",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "131c639c-befc-4017-af02-1ca0879667a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 336,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4baaf08-bfc2-4e17-84e5-b99f7f3f8b4b",
        "cursor": {
          "ref": "bc811230-8cc4-4415-934d-10c5bc6b7f5e",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "df17bd9c-71aa-4b60-b50b-30c5d91bf83c"
        },
        "item": {
          "id": "d4baaf08-bfc2-4e17-84e5-b99f7f3f8b4b",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "f7818796-e24a-47f1-9b10-1814c1ebed30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 337,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "956aeade-b7df-430d-b887-384078124b68",
        "cursor": {
          "ref": "870f8d85-37f3-4d88-a929-be08a073e711",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "dfd8ebe7-a739-48fa-b169-b8e8322519c5"
        },
        "item": {
          "id": "956aeade-b7df-430d-b887-384078124b68",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "e8726187-9ca2-4109-8c26-3a98f19970c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 388,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "615a986d-53b0-4cde-a8b3-bae711bb8215",
        "cursor": {
          "ref": "a7fc0e64-b75d-405e-9d7f-61bb0511cc80",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "aa831a27-368d-4a2c-a88d-ea2b72160f12"
        },
        "item": {
          "id": "615a986d-53b0-4cde-a8b3-bae711bb8215",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "c112675e-27b7-4830-8d98-9281c2f5d3eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 364,
          "responseSize": 1372
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72ce51c7-ef0c-4f5f-8353-1583dde82478",
        "cursor": {
          "ref": "55f77552-6950-4022-83ac-6d5af5da3e80",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "20a97687-3d3e-4b0f-85b4-af6030ffe0c6"
        },
        "item": {
          "id": "72ce51c7-ef0c-4f5f-8353-1583dde82478",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "3e265240-f396-4e12-8508-fc2f5fa825f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 346,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "862c6d3b-27eb-4e9a-b376-587ec50a449d",
        "cursor": {
          "ref": "2f577498-8668-44e8-9a3f-c3c63e16f643",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "c9fd3eb2-7610-4b3d-841b-44614985ff1b"
        },
        "item": {
          "id": "862c6d3b-27eb-4e9a-b376-587ec50a449d",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "ab990652-3c00-4b96-ba20-40389a5c3a69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 340,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "394d9bec-e299-4ab3-9568-e3a4c349469d",
        "cursor": {
          "ref": "1cf253ce-b7ef-40e2-b107-031d3ee27579",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "24c8a948-b5dd-456b-89e5-b1ae354f2c9f"
        },
        "item": {
          "id": "394d9bec-e299-4ab3-9568-e3a4c349469d",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "33bb5be3-b4ac-474e-ab79-63f5500878b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 355,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f2d66a9-dace-4046-bcfc-c9335f76ebf9",
        "cursor": {
          "ref": "2cccfefe-a8ea-49c2-97d0-dc788d6357eb",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "3123fce1-1a8c-4814-bc36-0a1c6b06ada8"
        },
        "item": {
          "id": "0f2d66a9-dace-4046-bcfc-c9335f76ebf9",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "493956f6-7d94-4da6-b035-81e577763efa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 328,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dea092f-eda8-4bc6-a626-24abb0fbf99d",
        "cursor": {
          "ref": "43428293-1e9c-441b-b71f-683f75af623d",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "a24fc634-f1c5-4c54-92b0-fbd7341e65fb"
        },
        "item": {
          "id": "6dea092f-eda8-4bc6-a626-24abb0fbf99d",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "ca72872e-aab5-4d3a-9620-49019e22c886",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 336,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1edfda9-0530-4135-bd8b-a34de373f61d",
        "cursor": {
          "ref": "a4fdfbce-dd5d-4da4-925c-6bc72b533f39",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "04bce065-2f83-4956-96d4-ed395d58460b"
        },
        "item": {
          "id": "e1edfda9-0530-4135-bd8b-a34de373f61d",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "9ec0621d-2b15-4fb0-8656-796675a51c04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 336,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47b92a46-3034-4bdc-a9b3-6e4d3ae0d549",
        "cursor": {
          "ref": "c6aa1f38-2f2b-402e-9eb4-a98eb7d73bdd",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "b34c6630-b6a0-4657-bc6d-89ec0c71749a"
        },
        "item": {
          "id": "47b92a46-3034-4bdc-a9b3-6e4d3ae0d549",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "c128bb40-504a-4188-bdf9-008c2540411c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 338,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b406acb-ff85-4857-b88b-1eed8826bc54",
        "cursor": {
          "ref": "70ffcfaa-28ba-4ce1-b887-e2c1310f72db",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "1b0e55c5-9213-42bd-9da5-193eb70595e8"
        },
        "item": {
          "id": "4b406acb-ff85-4857-b88b-1eed8826bc54",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "d9e4c0d8-7894-4bae-becb-361ce10a067b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 362,
          "responseSize": 1801
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3036ddf-5763-41f6-91ef-ffb950b8f5cc",
        "cursor": {
          "ref": "f4214092-8734-4aba-922a-cd671b6100ec",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "343566c7-51c6-4010-86a3-8bea665e1c3c"
        },
        "item": {
          "id": "f3036ddf-5763-41f6-91ef-ffb950b8f5cc",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "06d2fbfc-68d4-41bb-ae32-5f4f7eeefa8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 346,
          "responseSize": 1787
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6b10160-973a-4d84-91f3-d8f180ddd70f",
        "cursor": {
          "ref": "8dfbec6a-6e80-4c0f-9f27-22a5c8b5781f",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "eeac5c97-3b25-4fc8-bb73-c032585def27"
        },
        "item": {
          "id": "b6b10160-973a-4d84-91f3-d8f180ddd70f",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "bf62c966-ab43-419c-b504-7137a014695e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 341,
          "responseSize": 1785
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68805c5d-3482-486b-ba35-20219d1d2e11",
        "cursor": {
          "ref": "082ba1c7-3300-48a1-ba6d-6d7c10cf67e3",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "8e9c8152-c920-4e3c-ac38-315a14983853"
        },
        "item": {
          "id": "68805c5d-3482-486b-ba35-20219d1d2e11",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "b7bc8a3f-fd40-4a7b-be9c-98cc1b85da31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 442,
          "responseSize": 1786
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8175fdd-8ba3-4941-a84f-09f72ca6fd26",
        "cursor": {
          "ref": "31a31550-5453-4388-981d-a1ddc196903e",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "54dccdc9-c853-4569-8e87-a9c894fae922"
        },
        "item": {
          "id": "a8175fdd-8ba3-4941-a84f-09f72ca6fd26",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "90eb01fd-e021-4b30-b5a4-e481b9f8fa89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 357,
          "responseSize": 1817
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86dc0e22-5d3e-4cf2-a24a-c2d7cc84ae31",
        "cursor": {
          "ref": "acc28f3e-5b06-44d0-80e6-cbed35d19269",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "35b7e25f-3bc2-41b0-a993-574367883e48"
        },
        "item": {
          "id": "86dc0e22-5d3e-4cf2-a24a-c2d7cc84ae31",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "0cce6bdb-ca79-4583-9308-ce4df70805c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 368,
          "responseSize": 2160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b621d133-b34b-4f0a-a12c-2988d0ad4614",
        "cursor": {
          "ref": "61c8b807-2c71-49a6-b662-6f3877016e40",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "e1588478-0be3-4c77-8f2d-a39f759e2e31"
        },
        "item": {
          "id": "b621d133-b34b-4f0a-a12c-2988d0ad4614",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "0feffab6-0b94-49da-8010-904c1e1a2a8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 343,
          "responseSize": 2146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a89ebda-5f3f-4dc4-bb00-e1f303a07437",
        "cursor": {
          "ref": "ff328697-f030-42d8-9dc9-ecd2c05fb017",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "6d5af390-0438-47a3-b120-b2c758837119"
        },
        "item": {
          "id": "8a89ebda-5f3f-4dc4-bb00-e1f303a07437",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "bf7abf10-275e-431b-b15c-def71528fd30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 345,
          "responseSize": 2144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66fcf63f-f24a-4388-91b7-36998a9558d7",
        "cursor": {
          "ref": "460a5a25-9327-4f9a-b2a8-6873fc6cd3eb",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "9e22a782-19f6-4f62-a88e-4ab9ff97170a"
        },
        "item": {
          "id": "66fcf63f-f24a-4388-91b7-36998a9558d7",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "24fc2175-10af-4d69-8cdf-60300a8b873a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 344,
          "responseSize": 2145
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30935425-7788-4394-ad22-ca4db3d77ba2",
        "cursor": {
          "ref": "fd6348f5-462d-46b9-8be3-db6130aae57c",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "5a755005-f7ad-4836-9ca5-3844fb7efdc6"
        },
        "item": {
          "id": "30935425-7788-4394-ad22-ca4db3d77ba2",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "695e44e4-ae52-4c0f-aecc-070c1ba8b600",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 335,
          "responseSize": 2166
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15419cef-ef55-4d75-bc55-3fe61979b008",
        "cursor": {
          "ref": "108a05e8-3a4b-42f7-86cf-65d8a6d23433",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "d8a9ee1f-1c03-4bf9-a20a-44400127cc76"
        },
        "item": {
          "id": "15419cef-ef55-4d75-bc55-3fe61979b008",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "5a1ccccc-b69e-455d-be70-4a6a917f4326",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 352,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59533632-a663-4e18-ae41-7de3c3dae2ca",
        "cursor": {
          "ref": "a4c7dc16-dc99-4ee6-a632-627a08c643a8",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "222e9497-9be9-4686-acb3-74374a303fbd"
        },
        "item": {
          "id": "59533632-a663-4e18-ae41-7de3c3dae2ca",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "ddaf8bba-b872-4c9c-83f7-57e6ba495df1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 347,
          "responseSize": 1394
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d4fcf45-9591-4a8a-89cf-dd40636ed4f9",
        "cursor": {
          "ref": "a7e1140c-a6e8-4cdd-87b4-d5a8cb956d8e",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "9469223d-5770-461c-8084-836dcb2cafdc"
        },
        "item": {
          "id": "9d4fcf45-9591-4a8a-89cf-dd40636ed4f9",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "c30f563f-4bc0-442d-a861-e6d5aa746045",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 337,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66feb8af-4e10-450e-b2d1-5409299c15d3",
        "cursor": {
          "ref": "9a65b013-db18-4b3a-86c6-4e87dad30a6e",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "e3040d75-0c63-4fc6-bb37-c3dacbb6290e"
        },
        "item": {
          "id": "66feb8af-4e10-450e-b2d1-5409299c15d3",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "3776b16c-eea9-4a20-bd98-b1b00eafc590",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 347,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7a9c92e-9cb7-48e1-a802-bd0015dbea74",
        "cursor": {
          "ref": "cb95566d-3c06-42d0-82f2-f2072b6dfcf6",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "7181aae2-d222-4cba-af3f-1dfd55275c78"
        },
        "item": {
          "id": "d7a9c92e-9cb7-48e1-a802-bd0015dbea74",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "4d3be4c1-2c9d-431b-a2df-d4c2adf37eec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 343,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fb8532b-d365-4ae2-b14c-7c1fc1a376fb",
        "cursor": {
          "ref": "205d740d-d3f7-458e-9741-70fb2e907be1",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "8511e249-dbc4-4746-b380-ef0a3b45b380"
        },
        "item": {
          "id": "8fb8532b-d365-4ae2-b14c-7c1fc1a376fb",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "7745aaf6-d862-4f88-9fe4-63d5ad50b91c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 340,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85c53d69-3c76-4227-b7ef-18872fb0787f",
        "cursor": {
          "ref": "7e8d5b5f-4b9e-41d6-9787-ec082c7b6187",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "3bd2e82a-2c2f-4f56-910b-cb56865d8f7a"
        },
        "item": {
          "id": "85c53d69-3c76-4227-b7ef-18872fb0787f",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "e2a5592b-09b5-45b1-a411-48221ea9d938",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 330,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7f51ab6-5f95-4da6-9e84-c18fa2ddda13",
        "cursor": {
          "ref": "440b372f-f338-4b15-a576-732958b06b45",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "64cabc84-f8bd-43e6-bbc0-51fb2fd16a98"
        },
        "item": {
          "id": "c7f51ab6-5f95-4da6-9e84-c18fa2ddda13",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "8218bf08-baa1-4387-9f4e-351feec5c555",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 338,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af134561-29b7-4f13-9c0c-881411fa6b00",
        "cursor": {
          "ref": "6e0f0743-ed20-457f-839a-af64747d6953",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "d842e5bc-c2a7-4525-a1c8-29881ee32e6b"
        },
        "item": {
          "id": "af134561-29b7-4f13-9c0c-881411fa6b00",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "27b5deb6-47f3-47b1-8030-4c2ddf8c039a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 356,
          "responseSize": 1874
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f469c130-c601-40a2-886c-4d1c6fcb0191",
        "cursor": {
          "ref": "4f90b4a7-55de-4315-8bd2-946a985b4dec",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "9687396d-e6a6-4303-8d59-c0df41678126"
        },
        "item": {
          "id": "f469c130-c601-40a2-886c-4d1c6fcb0191",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "c7c40bbb-81c9-4632-975c-e5934900a895",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 386,
          "responseSize": 1673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa0c01ce-020f-46a6-881f-ab82fc3972e3",
        "cursor": {
          "ref": "61405c83-e739-4fcb-9374-ccbb0dc6a10e",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "a2a70126-b287-4e1c-9874-ab27fc4a0507"
        },
        "item": {
          "id": "aa0c01ce-020f-46a6-881f-ab82fc3972e3",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "11320360-5eb9-4134-9aeb-2ed405bf84bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 355,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d67328f8-0ee9-4894-bc5d-ea8562f6c35a",
        "cursor": {
          "ref": "49bd604c-19fe-4579-ba4c-e2ed8dee9c47",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "b6d5014c-3804-4db5-a7ec-159969634400"
        },
        "item": {
          "id": "d67328f8-0ee9-4894-bc5d-ea8562f6c35a",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "6a25a4f8-20d8-4063-83ea-6a301843359a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 343,
          "responseSize": 1672
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8f25ab8-11d2-46ba-a175-172567932c52",
        "cursor": {
          "ref": "7bccbc76-75da-4fbc-8612-d193a72da319",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "7d8643f6-1820-4dde-84ac-1d8f59b7fd5d"
        },
        "item": {
          "id": "c8f25ab8-11d2-46ba-a175-172567932c52",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "44b247b5-4e72-472e-a2e6-e96e8e0aca7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 373,
          "responseSize": 1685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31214ac4-7938-4392-a8f6-e5101311e452",
        "cursor": {
          "ref": "f309b10c-def8-4601-94ef-fa529645ba45",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "3bb282d9-85a2-4962-8253-26bbf4a2afc4"
        },
        "item": {
          "id": "31214ac4-7938-4392-a8f6-e5101311e452",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "53209241-a8f1-4db2-a7fb-b4a8da5efe1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 351,
          "responseSize": 2209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7e41e57-7f20-4b94-a152-aa6b8c4ff134",
        "cursor": {
          "ref": "2cec2fa4-999f-4cc9-ad46-f895d515955c",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "9f88698e-9835-4be8-b56b-dc944a71f03d"
        },
        "item": {
          "id": "f7e41e57-7f20-4b94-a152-aa6b8c4ff134",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "1a97f9b4-5007-427d-afd1-d6c107ce80b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 338,
          "responseSize": 2195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "863f76d0-37d7-44cb-88c9-246b573d2fd6",
        "cursor": {
          "ref": "596b7df2-83c9-4411-ba9b-4cdbf75deb4d",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "ba32595e-d43d-4b8a-b72f-fcef041da1ed"
        },
        "item": {
          "id": "863f76d0-37d7-44cb-88c9-246b573d2fd6",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "7eb145fc-e6f9-4205-b213-bbc782169e40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 355,
          "responseSize": 2193
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03dbccc3-885b-484b-addf-96fdffc8bfd8",
        "cursor": {
          "ref": "fb045949-ce2e-4292-a33f-d2f55623d0f4",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "a1239a57-5d66-4028-aec9-df610a9f6177"
        },
        "item": {
          "id": "03dbccc3-885b-484b-addf-96fdffc8bfd8",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "4293f9ff-b30e-4c68-a31e-4b5c2546c376",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 338,
          "responseSize": 2194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10ee843e-3636-491f-9301-6e5b6b8128f1",
        "cursor": {
          "ref": "eac56540-3094-4cfe-a253-bac13a7aba0a",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "25a90c2e-9d90-49d1-9095-e2f6599e8fc4"
        },
        "item": {
          "id": "10ee843e-3636-491f-9301-6e5b6b8128f1",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "130e34d5-a310-4869-b6bc-3e3d844831bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 339,
          "responseSize": 2215
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ce52434-aeb0-4f6c-b6d7-18c4bc9f5d80",
        "cursor": {
          "ref": "b1e8debe-e20c-493c-9ccd-04b233763076",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "e767c610-206b-47db-8178-b397edc20d0f"
        },
        "item": {
          "id": "9ce52434-aeb0-4f6c-b6d7-18c4bc9f5d80",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "3cba82ae-3950-455a-af19-53361febb04f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 353,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08b9e230-db85-4ce1-bfbe-b584237efd38",
        "cursor": {
          "ref": "704616bf-fd1e-4768-a4cd-418de096ed0f",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "55f0880a-4437-4854-8fc2-d39a7473701b"
        },
        "item": {
          "id": "08b9e230-db85-4ce1-bfbe-b584237efd38",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "55ddc385-a3a1-4e8b-a00b-5ca4fa2815a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 343,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24d9ab5c-529d-4ec6-9ef4-f6c278275381",
        "cursor": {
          "ref": "804a5a8e-5601-40e8-b355-5f42181b9fcc",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "4652e2ee-cabb-4c03-ad2b-b50411565305"
        },
        "item": {
          "id": "24d9ab5c-529d-4ec6-9ef4-f6c278275381",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "1d831e59-e2d8-402a-9b15-7e2cbac75f67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 332,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae7d454d-a898-4183-ad6d-dbbbbb166d31",
        "cursor": {
          "ref": "a9970c37-cbbe-4e12-82e7-38ff1cf0fa44",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "c6a8e8ed-4552-43a9-8c36-4f0328456d5c"
        },
        "item": {
          "id": "ae7d454d-a898-4183-ad6d-dbbbbb166d31",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "b5b0f31e-29e6-4568-a2c5-c46da2b41c4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 342,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4913d701-6b88-43e9-83ff-cfb11c2505da",
        "cursor": {
          "ref": "08f7064b-91fa-46e3-8348-6bbe20aec738",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "950c55b4-bd34-4a7f-8737-f6a9eb4cf0d3"
        },
        "item": {
          "id": "4913d701-6b88-43e9-83ff-cfb11c2505da",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "71701cc3-d632-4027-a57f-b85bdf74ee1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 339,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3d8ebeb-4d2c-4ddb-91b4-c67f3204def5",
        "cursor": {
          "ref": "967487bc-52ec-4f9d-8bdb-be6d9dd0102e",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "e862dcb4-ca42-4b7d-a79c-971c4f0c70b7"
        },
        "item": {
          "id": "d3d8ebeb-4d2c-4ddb-91b4-c67f3204def5",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "d574aef0-30b9-4442-b34b-339d3aec5039",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 353,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a14d0d7-355f-41f1-a331-750e630aa783",
        "cursor": {
          "ref": "c58c5464-8ae2-4a68-baf3-7cb23c9e8e2b",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "7fa7ef02-dc8b-4add-8468-de227cbd65cf"
        },
        "item": {
          "id": "5a14d0d7-355f-41f1-a331-750e630aa783",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "6e1878ee-6466-49d0-9864-2c05ec35a0e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 342,
          "responseSize": 1307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2adf7a2c-0ba9-428e-9b92-839ab0122184",
        "cursor": {
          "ref": "54f950fe-8de5-4219-97fd-00fa7b7c8344",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "6f157376-eec3-4650-a7e9-9c5e47bdac01"
        },
        "item": {
          "id": "2adf7a2c-0ba9-428e-9b92-839ab0122184",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "4eef64a5-4647-4932-a595-06d2062c1570",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 340,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1e8ce03-0c34-4c34-97bc-c4198472e1d5",
        "cursor": {
          "ref": "e59dbcf4-49aa-4d33-bc20-ff5927020ef7",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "e528626f-83c2-4a68-9615-dfc9df93aaea"
        },
        "item": {
          "id": "a1e8ce03-0c34-4c34-97bc-c4198472e1d5",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "a842dc94-725f-4657-b8a4-5e7049b7c0b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 340,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "516ccf05-09b8-4399-ac04-a350ca3a423f",
        "cursor": {
          "ref": "776bb097-6de7-4cb4-96a9-841304a39a04",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "b1c229cc-2255-4c28-a1b6-06e4105258bf"
        },
        "item": {
          "id": "516ccf05-09b8-4399-ac04-a350ca3a423f",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "a5d965fd-cee2-43b2-8eff-8b48afc35f2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 341,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4073a106-efd1-46bd-a818-fbcc71ecf4b9",
        "cursor": {
          "ref": "feabb4c9-fd31-47e6-afb2-c9b555c5f7e2",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "cf8862a3-f776-441e-9ac0-e5e46ea31b26"
        },
        "item": {
          "id": "4073a106-efd1-46bd-a818-fbcc71ecf4b9",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "c0cd5fab-e106-41db-a1f3-1bb9fc5e6ce9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 373,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c44f3515-9ca5-4c80-90cc-8a24315af697",
        "cursor": {
          "ref": "e9fa4490-ebc4-41f8-864e-c514070d5e16",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "139103b4-b13f-44fd-b4a8-64e21e17c83e"
        },
        "item": {
          "id": "c44f3515-9ca5-4c80-90cc-8a24315af697",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "26bd8a88-7fb5-4e58-a9a0-c0c3158210b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 637,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0cad6d3-cc72-412c-b080-7599fa8fa3d5",
        "cursor": {
          "ref": "1f3d8f0d-7cd7-4618-aaf8-0566270665f8",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "e0fb6dda-4870-43bd-9759-02cc843fc413"
        },
        "item": {
          "id": "d0cad6d3-cc72-412c-b080-7599fa8fa3d5",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "2c80379e-d47a-4443-9bd3-ae6ec5cf8e34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 763,
          "responseSize": 1344
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39eac1e9-e912-4bfe-9191-25d3120c21c2",
        "cursor": {
          "ref": "5e4986c1-41f4-474f-8223-f26e5e446853",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "9ff99fd1-4487-4985-9c25-ea80d3b778d0"
        },
        "item": {
          "id": "39eac1e9-e912-4bfe-9191-25d3120c21c2",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "a271388d-e885-40df-9579-b282e2a9b9f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 741,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "955f580d-b2d6-42d1-82b2-d910db0179b7",
        "cursor": {
          "ref": "546b4236-da9b-48f8-befd-d773d31add31",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "092f90dd-94af-4444-beff-0d17b224d1a4"
        },
        "item": {
          "id": "955f580d-b2d6-42d1-82b2-d910db0179b7",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "dbac87e8-c5e8-4815-8920-6967128001d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 639,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1be4b2f-9e2f-4af8-a8f5-97c0fb2a7daa",
        "cursor": {
          "ref": "959cb279-d7d7-4aa5-8d82-bf0513502642",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "c3245913-a3c5-4d8c-8165-c050727a6fba"
        },
        "item": {
          "id": "c1be4b2f-9e2f-4af8-a8f5-97c0fb2a7daa",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "5de3b3a7-2771-40e3-aba1-35bbb38d3155",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1002,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26dfc8cc-6307-474d-9bed-a5ee7a31d293",
        "cursor": {
          "ref": "bcdd284f-1e67-4efa-b14f-0fede44478be",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "c0848cc4-7c46-4bbc-acdb-42ba4237b9dd"
        },
        "item": {
          "id": "26dfc8cc-6307-474d-9bed-a5ee7a31d293",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "27c26528-33b8-4b77-985b-148c5187aa15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1250,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28b249bd-c135-410f-816b-06722bb0d105",
        "cursor": {
          "ref": "4d8284a7-10fc-4f9b-a7cb-d5b81812584f",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "7dd6a0a7-eeef-494e-b9d2-22059b0b116d"
        },
        "item": {
          "id": "28b249bd-c135-410f-816b-06722bb0d105",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "241d78f1-ed27-43d9-a31a-ac0d7a5ece7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1410,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab69da56-0a4f-42b0-9114-fa8210a9e229",
        "cursor": {
          "ref": "28ab11e6-899d-47cd-beac-043a5846aae5",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "de1b95b3-06f2-4c26-ba74-e6446dbbce20"
        },
        "item": {
          "id": "ab69da56-0a4f-42b0-9114-fa8210a9e229",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "962fb8c6-d654-4b80-8c21-554270d483ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 901,
          "responseSize": 1298
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1522e34d-e0bc-4bf9-bb3e-02bf44337eec",
        "cursor": {
          "ref": "7a97c4ec-bd49-424c-b0db-5d416cbba635",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "ce974d8d-723c-4d15-80c4-5373bd8567b0"
        },
        "item": {
          "id": "1522e34d-e0bc-4bf9-bb3e-02bf44337eec",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "cbe335e0-046a-49b0-a8f6-d067fa1041bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1241,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bd82b04-ab5f-4cee-9f90-d3cd705ea9eb",
        "cursor": {
          "ref": "198bcc4d-f292-4491-8c84-c221c61cb04e",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "daab0eba-3137-49e5-9e01-cb02e615f129"
        },
        "item": {
          "id": "8bd82b04-ab5f-4cee-9f90-d3cd705ea9eb",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "d122906b-6215-48fa-afdf-0362582ac4c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1146,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e26e6dc9-bc12-4b7f-bf01-d34c088fd0c8",
        "cursor": {
          "ref": "94c451be-8f18-49f7-843a-d9291d96e770",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "bbe48518-84b0-4d03-b5ae-f9ee8fc5488e"
        },
        "item": {
          "id": "e26e6dc9-bc12-4b7f-bf01-d34c088fd0c8",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "7f348d90-0224-43c5-bafc-7466d6765e93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 887,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3332845a-cdff-412d-b067-98074e2da88b",
        "cursor": {
          "ref": "ff666274-2c37-460a-b2a9-07fb0d5b589b",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "76f45dbe-34ab-4a7a-89fd-368a3921f30c"
        },
        "item": {
          "id": "3332845a-cdff-412d-b067-98074e2da88b",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "4ddd1d9e-99b2-468c-a040-280a15663aba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 387,
          "responseSize": 1304
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "084aaa6e-5a33-49f9-8bbc-588812481280",
        "cursor": {
          "ref": "8895a77e-f457-4804-8ab5-e22179ce16e0",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "a0593f0e-7e0f-4359-979b-72d4b6add4bc"
        },
        "item": {
          "id": "084aaa6e-5a33-49f9-8bbc-588812481280",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "9b5c76ef-04d5-4697-8b7a-fe0799f9f31b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 349,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cbaeacf-0559-4a76-aaad-17fdd09e3a00",
        "cursor": {
          "ref": "8f995ce1-3983-4a88-988a-fa3d0c97eeb8",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "2a1946dd-0f90-47c2-ae8e-518ccee6e00b"
        },
        "item": {
          "id": "9cbaeacf-0559-4a76-aaad-17fdd09e3a00",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "0ef6ae40-caa1-4f49-9a7b-a6d5dec479ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 422,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69696bec-f629-4f2c-9d12-e103c21be43f",
        "cursor": {
          "ref": "755d7094-ab86-494c-9fcf-62f4f0dc5a88",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "06eddfbc-331b-4732-b07b-9caa9c959ff0"
        },
        "item": {
          "id": "69696bec-f629-4f2c-9d12-e103c21be43f",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "d3d9b901-d3d6-45c7-bbb4-09788c15c301",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 348,
          "responseSize": 1194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dafbfad1-7cf9-4bcf-b632-558153ae83f5",
        "cursor": {
          "ref": "e3948215-15b9-4fb8-b8c8-a0f8af0b5530",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "c00937a6-af9c-4897-a141-eb39b525a230"
        },
        "item": {
          "id": "dafbfad1-7cf9-4bcf-b632-558153ae83f5",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "bbd7d258-83e7-4c7f-8e67-b7af19828890",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 379,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e71b5bf-5dd9-4687-88ed-2a73d3ecceba",
        "cursor": {
          "ref": "7392e9b9-43c5-4c2a-8bc3-2290f729f1a6",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "af9228e7-5819-44c1-80ca-40c6a0a1bb19"
        },
        "item": {
          "id": "9e71b5bf-5dd9-4687-88ed-2a73d3ecceba",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "36300acb-f535-46df-8e90-c12ed6c69932",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 365,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc2052b7-1a65-44a7-ba1f-65b1d8b042f5",
        "cursor": {
          "ref": "3375bbf7-e05c-4400-9679-3fbe990ee50b",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "cd6daa1d-3bc2-4817-aec3-ef1d5741b386"
        },
        "item": {
          "id": "cc2052b7-1a65-44a7-ba1f-65b1d8b042f5",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "ef7f1896-7f19-486d-8be9-dee30bb476e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 361,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0614f35c-f2bb-48d8-8ad8-31d0b8eebea4",
        "cursor": {
          "ref": "2d8bec73-f0b9-4cf5-a4aa-9393b8352a49",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "7ae34c26-df4d-4180-a1ec-aa2bed749633"
        },
        "item": {
          "id": "0614f35c-f2bb-48d8-8ad8-31d0b8eebea4",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "774fe276-3c99-40ae-9e35-99ec5d5ad353",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 371,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74cf9bb6-304f-485a-b54b-bce200d79cef",
        "cursor": {
          "ref": "b87ee178-8596-4f49-9f4c-fb7532da5ddd",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "9511538d-60de-410e-8b8c-26c56103f02f"
        },
        "item": {
          "id": "74cf9bb6-304f-485a-b54b-bce200d79cef",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "fbee2abc-2dfa-40f3-bb57-81cbad7977ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 341,
          "responseSize": 1323
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddf77cf0-e15d-4a15-9d9d-1dfef6510476",
        "cursor": {
          "ref": "abc78e9d-5326-4094-8da5-dd5b8ac4e1d5",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "3337cb69-547c-44b2-811d-9281a60d9c85"
        },
        "item": {
          "id": "ddf77cf0-e15d-4a15-9d9d-1dfef6510476",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "2adf9379-269c-4385-815c-1339059e5f65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 389,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "034116a5-5de4-4b81-ad09-becbc372a21e",
        "cursor": {
          "ref": "68e3cc12-2f8b-4413-abce-91512614387a",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "35119a98-8532-4209-a6c9-a609f755f353"
        },
        "item": {
          "id": "034116a5-5de4-4b81-ad09-becbc372a21e",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "4e699662-1abc-4826-a298-ebb4f2be7ee4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 347,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ac4db42-eedf-43eb-a94a-7af7f6309f97",
        "cursor": {
          "ref": "8b2c63fd-f0e9-4862-b223-0d460d2e36b0",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "af36feb2-2a11-4232-9094-341ba32de7e1"
        },
        "item": {
          "id": "9ac4db42-eedf-43eb-a94a-7af7f6309f97",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "e73d4726-7115-4126-9c1f-474c866cd661",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 351,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e14a0c9-c0cb-4a41-aa35-4291fce93502",
        "cursor": {
          "ref": "febd480f-0a34-451c-9f4c-744f6245b512",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "fa9f07c1-e6fd-484f-a256-7f63cc72afe7"
        },
        "item": {
          "id": "1e14a0c9-c0cb-4a41-aa35-4291fce93502",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "3568fa34-31c4-4b52-8c03-1e4a21407bfd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e00ef9ba-20a2-4c3a-a996-82ad605c8751",
        "cursor": {
          "ref": "71b74256-9082-4ae2-b6db-0a37c91a5443",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "02f38d06-90be-4cac-942e-f4f9be7460aa"
        },
        "item": {
          "id": "e00ef9ba-20a2-4c3a-a996-82ad605c8751",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "f2d55055-4941-4f94-b73b-dbdd916ed5ea",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 349,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19bc5595-ca10-4a9f-98f9-496df2bda946",
        "cursor": {
          "ref": "d5e4ff1d-b1d9-48c3-8e2a-4eea9cffae9d",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "f288201a-dc6f-4201-954d-87b11d2ac55d"
        },
        "item": {
          "id": "19bc5595-ca10-4a9f-98f9-496df2bda946",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "5e69b57b-9cb4-4ee1-834f-0bbdcf14720e",
          "status": "OK",
          "code": 200,
          "responseTime": 468,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec86ea66-c2ae-49f1-ab55-ba7f80a275a8",
        "cursor": {
          "ref": "a6720ab2-2351-4a43-a618-2b1cb46542e9",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "d3c123f0-4104-4848-b5c3-a9af89d0cf87"
        },
        "item": {
          "id": "ec86ea66-c2ae-49f1-ab55-ba7f80a275a8",
          "name": "credentials_verify"
        },
        "response": {
          "id": "da675414-64cb-4b23-94f7-356eefab3aff",
          "status": "OK",
          "code": 200,
          "responseTime": 1965,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "d24d3415-1e35-4485-aed8-0d12fd008bcd",
        "cursor": {
          "ref": "035550c8-4c2c-41c8-81b8-73b016050601",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "bc0c2513-da38-4937-a5f6-636942dc6845"
        },
        "item": {
          "id": "d24d3415-1e35-4485-aed8-0d12fd008bcd",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "87f1afe4-ec86-4c33-8ba0-cf8c9608ac4b",
          "status": "OK",
          "code": 200,
          "responseTime": 2750,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6bdf636-91a6-46c4-9e26-b476255d0c84",
        "cursor": {
          "ref": "9bbd101f-a605-4413-931f-16c7c2bf3be1",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "866e20de-7db9-4877-8761-41b86ea9d6d9"
        },
        "item": {
          "id": "b6bdf636-91a6-46c4-9e26-b476255d0c84",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "2c82697f-2595-4811-bf5c-a56fec57ca0b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6bdf636-91a6-46c4-9e26-b476255d0c84",
        "cursor": {
          "ref": "9bbd101f-a605-4413-931f-16c7c2bf3be1",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "866e20de-7db9-4877-8761-41b86ea9d6d9"
        },
        "item": {
          "id": "b6bdf636-91a6-46c4-9e26-b476255d0c84",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "2c82697f-2595-4811-bf5c-a56fec57ca0b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6bdf636-91a6-46c4-9e26-b476255d0c84",
        "cursor": {
          "ref": "9bbd101f-a605-4413-931f-16c7c2bf3be1",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "866e20de-7db9-4877-8761-41b86ea9d6d9"
        },
        "item": {
          "id": "b6bdf636-91a6-46c4-9e26-b476255d0c84",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "2c82697f-2595-4811-bf5c-a56fec57ca0b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21a1cebe-c3c8-48d1-bc26-b71eca1af850",
        "cursor": {
          "ref": "ce02c3d2-76db-4700-a483-497224fa0c60",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "6fd79ce3-a341-4946-8f50-f393fb34921f"
        },
        "item": {
          "id": "21a1cebe-c3c8-48d1-bc26-b71eca1af850",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "4985c286-273c-4583-83f5-3b05a7dae295",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 550,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bf6a571-924e-4383-96be-1f1db4e5187b",
        "cursor": {
          "ref": "2eebd7d9-3bd4-4303-bfea-4104044aac23",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "ed8c6bb5-2ce3-44ed-9255-a82f403b64cf"
        },
        "item": {
          "id": "2bf6a571-924e-4383-96be-1f1db4e5187b",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "ad6056c1-fcb1-4ba0-b2d7-47ebe822effe",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 68,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bf6a571-924e-4383-96be-1f1db4e5187b",
        "cursor": {
          "ref": "2eebd7d9-3bd4-4303-bfea-4104044aac23",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "ed8c6bb5-2ce3-44ed-9255-a82f403b64cf"
        },
        "item": {
          "id": "2bf6a571-924e-4383-96be-1f1db4e5187b",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "ad6056c1-fcb1-4ba0-b2d7-47ebe822effe",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 68,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8f3c6e9-6f84-498e-9b75-46c7e967cc18",
        "cursor": {
          "ref": "6c071eb0-c4e5-4830-ace0-acc160fe5cbc",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "b21450da-fb48-405d-8769-1e3fb3f48bc6"
        },
        "item": {
          "id": "c8f3c6e9-6f84-498e-9b75-46c7e967cc18",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "1b5e9ce8-4c49-4e28-9bae-8ad7f79115ea",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 537,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e5e6be2-e016-4be5-8a88-035d4541fea9",
        "cursor": {
          "ref": "c13c4a72-09ec-4cd4-a8c6-6657671869bb",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "6b911161-5c4f-4086-97be-6c21e17c52f8"
        },
        "item": {
          "id": "3e5e6be2-e016-4be5-8a88-035d4541fea9",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "ad40389d-78c2-4b69-bb6b-4286b423c47a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 67,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e5e6be2-e016-4be5-8a88-035d4541fea9",
        "cursor": {
          "ref": "c13c4a72-09ec-4cd4-a8c6-6657671869bb",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "6b911161-5c4f-4086-97be-6c21e17c52f8"
        },
        "item": {
          "id": "3e5e6be2-e016-4be5-8a88-035d4541fea9",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "ad40389d-78c2-4b69-bb6b-4286b423c47a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 67,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ba431fb-fcfd-47a2-8dcf-98225042ae54",
        "cursor": {
          "ref": "fb0ba380-82dc-412c-aba8-b99a5ed56b96",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "97718083-7620-4228-94b6-bfe885dfe150"
        },
        "item": {
          "id": "9ba431fb-fcfd-47a2-8dcf-98225042ae54",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "6bb55ff6-6a3c-4e85-a9fb-bdc6c1e7cefb",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 561,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}