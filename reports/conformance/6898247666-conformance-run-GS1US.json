{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "dc056a9a-6849-4754-b5dd-7fc150389c0e",
        "name": "Clear Cache",
        "item": [
          {
            "id": "46918399-3b14-4a21-b452-0fc5b98e3d93",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7e81c4a0-fcfd-41b8-9070-1f6054e1f75c",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "2aa69f0d-dd3c-4300-be17-967302343a41"
                }
              }
            ]
          },
          {
            "id": "9ce0dba0-5fe6-4128-84ce-511c9ddf8879",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a416b911-5ad2-4976-a1ef-16bfc742929f",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "a5fcddb6-a061-45da-b052-ddebabe822a8"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "545b5d65-7334-431f-95c7-cb28e928efda",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "e808365a-5244-4d4d-8c52-e18fb0312018",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6759e1b5-6dae-4786-b004-55538affc15b",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1acfb09f-ce02-4664-b5c3-33f40572b462",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "30def4be-cfa7-48ad-9a9d-6ba68ab2ce5d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9f376ef4-004f-40f8-8792-fab6429e6064",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "83f48b7f-738b-46fd-8dd8-aab436a03913"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2a4ab786-1a08-4128-84fb-677c520c083d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b156aac8-2047-49a4-9529-94239bf29b5b"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "473e6f2e-43ef-43c4-8eaa-14108525c3bc",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "d9890042-6044-48f7-81f0-3bcd4ff99b0c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "19d1a1a2-623d-43d9-a90f-153b532d1e3c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1ec144d7-0bb5-4ce3-9aa0-1825d1039331"
            }
          }
        ]
      },
      {
        "id": "ef666822-072c-4254-8e0d-753f6f47b187",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "6aeefd13-0897-43ff-9607-0f387255d08f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7e7f8aa8-20a3-4a6b-9dde-71cb2b486969",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "be408e73-9acc-47dd-bc78-d2074be3a043",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb75c2e6-536f-40d1-a43b-4ec9d452808c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3b215be9-8992-465d-a0eb-c1b551c620ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eb84150-8d32-4b2b-bb56-9c3a9bddd603",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64ab6dbe-5267-4eef-b5f6-8678882437d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9630f02a-3199-40cb-8886-5b45970a430d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe88f114-26ab-4ef4-ac80-bdc168fb3e47",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c61101d-7158-4ebd-915d-14b6285a8272",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "69f9616a-b262-4e19-a192-daf0d414b034"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1c337875-df1b-4d88-86a9-2158cf9115ff",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2a6db3af-b886-4876-a39e-81d796f84aea",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcf58d60-d7d9-4e56-bebc-6be233097068",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9aeeee2e-1d24-4559-8f78-4930fa05328a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "455697d5-8840-4f55-bdaa-598d7871a971",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4953c742-927b-4346-9cb3-08af2b85b532"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "6f9434d2-63fc-42b9-a072-4b45b37d0d0f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "47663cf6-b40d-423a-861f-32b20c1565d8",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b02d7572-b8b6-412f-b384-ff84f88c667f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "0b5f9121-8363-475f-82e3-547855f47f7e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d25fe442-ce94-4e84-9f17-83367a345bbf",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "89133eab-08a8-44f8-8626-df16b7ef03d8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9203e011-e3e9-49ca-830c-d92c322b4077",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c757b7b5-e060-4030-b279-ff8e76d5dfc5"
            }
          }
        ]
      },
      {
        "id": "09ab36fe-c323-425d-bc0d-4c503742fe14",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "c7f68462-e902-4084-b9be-40004bac4ad5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ad78dd73-9556-4081-a63f-5b607b0cb50f",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "2ed37aca-c1d9-49f4-9182-791b68347afd",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7264ce9a-a7e5-48d0-85a3-83622263d3ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6b7c024-4303-41d1-a999-b981d8e5bf97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "744d6f02-d62c-4b67-a007-f98f4ebda4cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5bbf50c4-339f-498d-bb13-4ec8a38074e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1b0cfaf-7855-4b24-92e1-4ff11ee66ff3",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79e840da-219b-4c8f-b1a8-cde87d7d23dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0689960f-17f5-4c87-81fe-e47f623785dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "410e90bd-f601-4eae-aaef-a14f783eeb72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9b914268-7380-499c-bdca-88ae4027ecb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb775536-dc28-4929-92cf-be80a3f12c8d",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c1bb44b-b303-4c77-940a-9e2a8859f2f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d06ef7d-3f4a-44be-9741-75ff8d86ee9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf2c3ebd-537d-41be-9fd4-c83068ed648b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e2357505-6841-47d1-860b-2a46a930f486"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e14f32a-308a-44d0-b4a5-bae5b2febbe4",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe82afd0-6796-4861-8a7e-7ae2f716cda4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d0d17f9-8515-4db6-bc0a-3ac95a8a02a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d52fb5d1-c01b-4192-b3af-3c8f06e889d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "49d624e5-4ae1-48eb-809e-fb91050b0a83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d0d675f-6311-4384-ac76-3a8e4bbb3555",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e983996-c7d2-41ef-8837-1ba00adf87a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e277c59a-8793-4ce2-a9cf-5470b7b776e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a894c40b-8a52-4b3f-b685-ed91e96af7fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "32ad6fca-dfd0-4894-8650-016e0a56fc0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec548481-8548-4181-beaa-3df1afca5646",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47d31d57-89e0-434f-a070-ba83a5009b49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0ad73d6-373e-4641-aad0-76ba5c514416"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e73739c-88c0-4cf7-b942-e4807c9a8092",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ef4aa6de-f930-4135-9e7b-e216bfb1b2f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0e61fee-a617-4c66-b8cf-f6cdd78560d9",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a5e0bd9-872a-4ae4-80fd-5dcced0ec6fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de397800-c660-4b22-9949-85369f05c44a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6ea6716-719d-4d58-a447-dc29b87b0db0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f1d2d1c1-20eb-433c-95d9-642b3cb71805"
                        }
                      }
                    ]
                  },
                  {
                    "id": "148fe3fc-444e-4bf2-9e0b-966c2478ea54",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9d87f5f-b1d8-47e5-ae14-5383d2e48a29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b6310f2-63b9-473f-8724-4d40014bc3e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25412556-f289-4574-8832-15aa9227e56f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cc3b9a27-c23a-4f46-8ef0-81f6b7218f75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0619a8d0-0949-4e57-acd3-d9ad64909e45",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c23806c-f0ed-4003-baa9-5d77e023ec75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ac18979-5477-4460-8419-cc78af41462e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4166b9f8-dc14-4dfb-8e64-ba755da21fc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "413f8dd6-cb22-4b63-84ff-43ecbf17cc31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d776ada-7a06-4f9a-af63-f6c8a2e71eb5",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00c1a9ee-1e5d-42d0-8c01-51ffa91431f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb3dfce9-25b8-4964-97f2-465afac55feb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6cbc72f-fc57-4847-9cd6-a55cc860fea6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "48189577-c6f4-46f7-9170-de2c5e1f636e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b377ee3a-6148-4f43-9db0-e9881e167e75",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "641fc54d-89f1-4455-a6e8-ace74e726015",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34ca309c-678c-4cae-b171-cbb75888503d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "886731a7-20fa-418f-86d7-a0d9a87a73e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f7891c6f-5604-4818-8847-b8bf22ac7009"
                        }
                      }
                    ]
                  },
                  {
                    "id": "905c6ad8-f03f-43d7-a66d-bf617e24a65f",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a39f2538-b475-4ecf-a1ec-3528cdc12722",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ebbc88c-cd52-458a-bdf3-07b0bd4b72de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0744d364-3e6a-403d-9308-c281cd773c3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9e4afd18-43dc-437e-81b4-ded5b67e482e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47e2177c-d725-48cc-b5a3-f5f2c65807c3",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1c62b1d-ce9a-424b-aa0c-9f24820be548",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "218916fe-0f75-45bd-9035-023e27ade3ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad9ecf89-c556-40a5-8f23-d4d58c72b688",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "baf8bf92-46a2-4507-8d5b-5f9302896fa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76e14d0d-e64e-414a-9d9e-d34576f6c090",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "482ddd8b-ae67-43cb-97b1-aa21cc598f0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73068d10-c499-4e51-b813-9cd09d3be40a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d59f26e7-06fb-4cd7-a509-a7c7cb60bb11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3d5d185d-1b0d-4a66-a2ba-6a9f0520e5ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9d5616f-cb54-4ba2-8f40-124acd3b9048",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "064c2b53-be75-4af6-a3b1-04467722e095",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64466ed1-3f1b-4aef-8f43-4c90f2d603bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76e3151f-6888-4b40-afe4-6d4a3e746a41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "820c3759-07ae-4769-9b7c-d45428c5ae10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1285e8ec-2476-42b3-aae1-816f6c55080f",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b10ad29d-234e-4df7-99be-bfd248b6e9a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5e72267-8c5e-4fcc-b1a5-fdb20c20ec3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9a9082e-3dd0-442c-8513-f82d8003bf29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "18e1c8cf-cdee-4ecd-83f4-7cf4d34922e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f62be10d-2a7f-47eb-8d05-601c8bf710f9",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a26e3f4c-321a-433e-9bef-73977671cf0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72cea38e-30a4-42b5-84ec-f48ca23b5e48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be3e3d4d-8b93-4fde-8faf-eaf836948873",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "44b9ebb3-6dd0-4f3a-bfa2-ca93539b51d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce5f01b3-7f10-4307-8f07-7eed4e5a9af2",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb1bc84a-f1f1-44f3-916a-e98a97fc236c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "639563d7-1159-420e-b9b9-9b37769742a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b234cb5c-0b48-4752-a2b1-60d0f711dfb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "56bfafa0-d0e1-47b0-a29b-daaaaed1d6a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d831889-f7be-42fe-8bf6-3ad47f155b04",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e474e764-cd4a-4427-b03b-789ce4efe437",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c1a8beb-bef8-4ad3-9add-684752cf6593"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2545fb68-3064-4b24-981d-251d6097b965",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2bb2716c-b430-4de8-98af-986d41f421e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49ded70e-2daf-41f7-9768-44f89f47509d",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3310cc4a-067c-4802-b0f9-9000e5580d1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50c99cc0-c71a-4a4a-9bce-6b3883404cb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f610996-0243-42f6-8f73-f760db59fbb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "50420395-d5c1-4c8d-8ed2-724a73725ec5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9f6499b-faee-4f43-bb80-d2ee973d5469",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a39c2c0-f9c0-4874-ac86-7077266611e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29532780-d90c-49ec-8dcb-214339a403e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29d98bc2-d18a-471c-b0e7-90d5494a9220",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7cc9d77a-77d8-4706-8045-b4e895d31880"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2359ff16-fb8e-455d-93cf-742a883d1140",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be124348-e8c0-4cac-a7a4-08b8360e7913",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "598374e3-96d3-48d2-9195-5bdbbdcdcd65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6a93bab-b528-47f5-9fce-97fcd9e7c5e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "85408ced-3ed0-4b8e-ba0d-1eacce147c48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fbf59a8-3394-4101-bcb1-102f46475544",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77bdce57-4afb-48e7-b86b-6a0eab336816",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2aae6425-80b4-41d2-b6ac-066043e0f19b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9ddc6ca-7dce-4964-a4e6-2e07200de549",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f8b4b0b5-9538-4d66-8eba-29a4456b207c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "707d2354-4704-4cba-a0e2-ac00d2902698",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f108e637-1486-4f60-8d88-0fdccf60e355",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "168f502a-646d-4e58-ab27-395754dee959"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed0d45ec-a183-49ea-9f5d-876f805f5c4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e6605fa-3b27-4ac2-9733-7e7b1d474447"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2536b853-eb6a-4233-842f-58301df92b71",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e34da22-1ddb-4c93-8aec-0dc94e0f811c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9830b752-7a87-4309-918b-0f25995a7361"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca1af52d-b28f-4334-9a5b-5be53bbdb646",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b4c52db-6c07-4026-843f-d63851418716"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87e42a2a-fc2f-41bb-bf2a-af0c5b4a07a0",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8f35be1-31aa-4831-bac8-a9f43ec89354",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ee361a5-b2b0-4223-b0af-e19dca2ecbdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4722bd7f-f6af-432a-b632-07d953a81c50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b21415de-be0a-4f14-a3c2-b8fd72a680ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8331fcbc-e448-48cf-988e-24f92f1c2d5c",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c821c9d-0421-4c46-b89c-f4541e81bce7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f73b5101-2abf-4b8d-9442-3a7313944441"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3529c8ca-d218-4562-b5b9-599300702a8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb22f47f-00a9-46f2-b5dc-5b271b54d3ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16603e0a-948f-48d1-9e67-e4eb70802a5e",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "782b2dcc-e740-4336-b9ae-133e07950871",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eeae6f5c-96cb-41dd-ae23-7169d9701ff7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "974ce0eb-4599-431a-93ed-044022aa5067",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2a714fd-524e-4c8d-bd87-fa1e7549bc47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51e403a4-1a8d-4893-a8b0-4608fb6c5db9",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e87ebb2b-b3e8-496f-b608-c18e3f9fdcee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90420337-d88b-4284-8c58-ad608d7a8e9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a0bb8e5-17fb-4295-ad52-b0e482489637",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3eb6eb8a-505d-4da2-8399-0c0a0e77abef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f64742c0-12c2-4bdb-9059-fca990eb152c",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdc6eb04-91a0-428c-9c43-bdb35d00a0c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dae997af-9aa0-4427-8f66-fe2448aa1152"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2948e4bc-a1eb-43bb-ae14-8cad675e6731",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "afbb645d-742b-455c-b423-12b7e4822575"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1edd5e26-0f03-400e-be5c-315c439bc043",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eee8370a-af34-4f16-bcb7-b7d20788bebb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "286f5f98-9136-4003-99bd-baec10c05cb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f431679e-ed51-4a7e-b198-122212e3ca57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "695ec24e-22a5-4a82-a347-cc9695d71fa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9360d727-a098-4627-90f8-2e1dac6d2744",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b540f2d-bbe9-4e48-a87c-165de3c004eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "782ffe0c-0188-4bd2-994d-f08c954ba4be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cac31cb6-b164-427a-88c3-f90a26b9d417",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d48a22c-594c-4872-86b8-3d932acb6a64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "383e178c-0c31-4f46-8dd6-37e584c3b896",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a3f190a-27d8-4ded-aced-bc076ec88403",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d870708a-e5c3-470e-97d7-89d7e32a8099"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b838f6e-b03c-404a-88c6-4bb0645e9b2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "48b58237-5080-4868-be07-a44f34e3f73d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8caa3a39-8d41-4f4f-b5f1-04cfdf1c6624",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7df3d152-73e1-48bb-a1b1-5e6e6330229c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9775bdb2-eaa7-407f-9a93-44e0c2df1a99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e91c170-593f-46d7-9798-c63f6221b970",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5dfb60e7-3764-4fac-9016-38b8b69ff846"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81720418-5b81-4552-961f-b0ddd09a7974",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb8e0cd4-4044-42e9-92bb-2d16f42a988b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0a36b66-956f-4232-83b5-dd327955c1eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd133f5a-ccdf-40d0-9078-8760384c20fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "31412708-0b00-4c6c-a79e-fb7d76f8df8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5ae5b27-c378-42b4-9129-94a902404d67",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d38e147c-54d5-464d-a77b-0c01972b79d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d66beaa7-233c-4057-8b0d-47d8385bbc6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85f5fdb1-691b-4c40-b150-ec8db716ddeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8bfdb0f7-b9ea-481a-a593-91ff5bc8fcdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b57cfc4-fae5-4355-8294-0ac1edd90dba",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86243aac-2ed2-464b-9663-ddeebc72db9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d12961a2-5d19-46d9-829e-beef6f2d2086"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a42c2cd-d2cb-47d8-8c03-9f30fc151486",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "393ba611-88dc-47e8-b0f8-45b621444d95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fb3687e-0808-43f8-91b7-6d64a0a0a18d",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8397eefc-c9cf-4136-b68b-770b127c38c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a81a1e9-18a8-4eaa-9452-1e212db5243a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc193acc-8674-4b62-b5f2-2ef03d423f1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b5258a13-9bc1-450f-bb7b-3f3f395e26ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dcfae62-6913-4930-9e54-462c7caa8ab1",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4a045a2-070c-4838-9118-fb9225f07f30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c36d67e7-8c1b-45d9-abdb-bb553d3e8204"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c232957a-cf03-44fe-8988-f7df0bd7afca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "410c89e1-3041-4f67-a54a-dc2b1928e29d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f599bb5-51a8-4522-a5ea-5451a0e456f8",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aec8969d-ef0f-4713-9b9a-0755eb708928",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1af1436-25f6-47c3-a414-fc2ddcf6b86b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9dd02a5-f763-4509-983f-950d34d635c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "22f6b970-6ab0-485f-8632-a370e9b50567"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c040642-792c-40eb-aa0e-5440a94bd7af",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79bf9b5e-351a-4851-8f17-7071e452f415",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10f980b7-a493-4aa0-84cd-beb2961ba288"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae27df12-2eec-441c-84a8-1142adea8b3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "cdbc24e9-25d9-4ed0-bc77-4eafd1dd7613"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae91e31e-6b5f-45a7-a2bf-f3e3e1df7442",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59c11d33-c0a4-4bae-8eca-c9279ac0e22e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e91e7c4-2a19-4549-b48f-55264b91cc94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36ff7021-1325-4d30-bc91-b70f56fe4b4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "cc7024f1-3e2c-48e9-9d64-096763047fc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d85db2c3-0b78-43e1-86bf-b090f9c06bb5",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7badca3-2fb1-4efe-bd9e-b7b941fc58be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "faa52c3e-72b3-425e-858d-e7916fa63d05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfeffa8a-c4ea-4d22-bc6f-ea6e878a597d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "ce376023-1464-4270-afef-391c4272740f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ffb5932-12e1-4280-ae8d-b12e7fa76b12",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c80f5887-9bd3-47da-b8fb-5e46f7d48c6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8468847a-7520-4d05-a64a-e99eeca377f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afb4da95-bfbf-46cf-9464-167dbb52d3c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "0072cef6-21a9-4b0b-8a2c-3d6df8470730"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02174846-a8d1-4c6f-a764-d18daec83cb5",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "642d25cd-9b5e-4b6d-8928-a5cd3836066c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f50050b0-d435-4b5b-a97f-aaf7beb69299"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d0223eb-6d4f-4bc0-a94d-6cc5ed4b8b4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a2943a9d-ab30-4131-8306-2fb687cc8487"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb186a41-aabc-425f-b659-6df98da8a7b8",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3350812-e907-4985-89ec-d097fa562ba7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39dd9844-7479-48d4-a9a6-ec7048474144"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e102f45-f72e-4f39-98a7-4cb10df4cf60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "86a54327-47b0-439b-a942-1dfc7b4c4dcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "957b27b5-7cd3-4b18-ae3b-c5d86ba06fb8",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bf80896-8b84-4340-9489-56a06bd02198",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "850ba0cd-0070-445e-b1ef-95c254335c6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4082be74-56e0-47da-8b67-782056512fe2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0cce64ff-1e0a-440c-a4a8-ddc481a6eb4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50521224-78c5-43fa-8daa-819dcdb39342",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d383883-93e7-44bf-9023-bbedc6c2c815",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f92d9afd-97a2-4979-91c0-d2152976564c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "704e15b2-5cbd-4cd8-a9d9-3cb0dc6d5c2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a4017d51-d31f-425f-87bc-1d1f817bfc38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ded6ad8-307e-49d3-97d1-99dfb12e55e6",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c7f6ec5-25aa-47ca-b2b6-d3b8337e5fc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4341bace-3af5-4a91-9a91-91d613a80672"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db8cb831-714c-4128-ab34-d7edb89a408f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a6733742-2f78-4906-a3be-95ff1ec5731e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "503815cb-a6ef-4902-8548-9ae30542a38b",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45e1dd1d-f0a7-4d96-9a80-21a75b72eb48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78c64e83-07a7-4b20-9dcb-486005f94f01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cddae81b-7361-4f73-a553-92aeee2effbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a1fb8a68-d0c2-4c62-8a14-61e8ff4d0084"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f47db08-099d-49b0-aecb-9b2f7d0e4f79",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f28648bc-7d77-4dc6-bf35-04ca97ef3939",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09a41c53-0f68-4ba3-9aa5-7025c41bf6c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53f0fcb6-091c-43bf-8cb0-08f7ca6f2446",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "75b9dc9e-52d8-4d10-a0c6-9c86bf7d7981"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9422a8c7-a5bc-4c61-8e8f-b2b2b117eddc",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d3989e6-7d71-4fb7-8c95-1b93cbc11f33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc8f4745-1bc3-4107-a7e1-09465006ab00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41e0d99e-9e5e-4496-8eb1-befcc8185dfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a0a83cf-7d58-47ab-bcf2-e37dce94efef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ee0fedb-00e3-4b6b-b0c5-09bf4c578f57",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "792f17ef-9ce2-4510-a569-ec59d37704b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a36821f0-986d-4ec5-8dcc-585b18ea0cda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20eb0571-82a2-4364-a4f2-a00dd77136de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8c8badee-b0ea-4c11-8be5-96ed10578d26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffef3e99-9deb-4c8b-adf8-a4422bb0fa60",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a103498b-e231-4a70-acbd-abf1d372ebfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9541f5c1-5f24-4c4e-bf90-cfd1a8fda8e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56da6347-af1d-4965-af64-5482f1bcebb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cda6ea68-e792-4f47-9c6b-8842eddb7da8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45864ec5-e506-4c3d-9063-a28fa0017b0c",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd430495-cf62-416d-a331-facec57fca6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2746ea6d-ecdf-453d-a699-3cdd27e3b69f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f34a726-5027-433a-998c-b12ac8707807",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "91f4805c-a923-451f-ba46-36ece4af7287"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c49b45e3-133b-4a91-bb2b-29f5d3c38c2b",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da84016d-8d4a-40c6-a16e-f8413f8a2b0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c7ba11a-90e4-40a8-99cd-372f0630bb3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c4cafbb-e2f8-4287-8966-1102936b77b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "29bc3abc-adaa-4175-a78a-8d44ccc39aab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e46695a6-6e70-4d2c-91c3-97967710ab4a",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "facad542-5091-4602-8acf-a40654317958",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94166e3b-b84a-41cd-acc1-e5a5fb4dc2e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8166f21-3581-46d3-b6c9-44268134d2f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "bf353c8d-575c-492d-8c36-545e1d77db7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68e74384-c5fb-486b-9d45-8c8014543de4",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1c1b444-4c64-452b-90a0-0f6016cd9afd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a030f0a6-4449-4f30-8d9f-6affccc02713"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14b28296-e9dd-43c7-9529-a3b058183fdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "055ddc31-8a03-4b5c-8f6d-5c09d53e2471"
                        }
                      }
                    ]
                  },
                  {
                    "id": "381ec622-fa22-4eac-a216-d1c0cc78e45e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36040915-b51d-496a-8db3-b8895005b9bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19f86c39-f8b0-4a62-bcef-97b3b32b1106"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0090a0a-2fff-4870-a8f9-d3cf26c2b19a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "638b2703-c222-49ff-85dc-742665651242"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66465ad3-998c-4fc5-af96-d784efbe1766",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d505f68f-19a1-4171-8799-5def4e3e5b4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a38cde2b-49ec-47f1-8ba5-ed966a39c6ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00938d50-6f42-489e-8975-56b1f53a6a96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "994cfe97-6f15-41fe-9c50-01589968bb75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b801150-ebf3-4043-99dc-8f79eb6506b6",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25829eab-e723-49f9-9383-362826bb766c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22da37f7-e4f5-4955-a925-6b1ec03b6ad8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53067368-14c6-46b0-b692-dde43df1bdd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "2007f8aa-0ca8-4ef2-9107-18823bec62d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7c267ed-2b6b-47fd-9d73-9325a3ff7592",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afbc0a6c-97f0-470f-b02c-6d0460cb9a4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82199b69-23a1-4135-8b7d-d1e0f178440a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "052a2ca4-5606-4231-a98d-a6a0969e7eff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f8adbb3-5184-4d79-9088-5fd2a9ef1aab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05a74309-57b7-4e1b-9064-9ba8d4d6c6ea",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5584b63-f0ef-4cec-961e-cefdb22a79ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af4e3b7c-af7e-4629-a6e0-683ee5eab7a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8752298-232f-4437-95c8-67d14c7e4faa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "b55f0189-10ab-49e5-bfd6-dc7792f8c6e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "466e0eb0-3dce-4880-bb63-d510adc2f99a",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c179c390-23cc-4310-a46f-210cc29f8d83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26191173-1a1f-4629-ba94-6302027a2cc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcd3467e-de2f-40b9-9992-35fd0c0aa1c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "37e5c77a-7c08-4573-805a-2e928bd9cbcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c41863d-6c30-4fea-88d4-6f749afa9ca8",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ad82adb-ff4c-40da-a3e2-fcbf869a080d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4265dee6-57a3-497b-b0ca-ea8ba6239bdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b10c144a-9d90-44d9-b7e4-b44211ac52fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "276e74e4-6a89-4bc6-b3ee-06e03addc63b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c7229fb-af4a-4d37-8d45-bebfb54a44b4",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae570124-e4df-4135-a9df-601eb77f9594",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93cd525f-d3fa-4381-b155-6f01c933f696"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3c42457-d11d-430d-a3e5-56e6fa218894",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc643028-93f9-4e57-a5b1-8666942b1dcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c405bbb6-e669-4607-a0e9-40991a170c09",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89625833-a6b4-48e7-b563-96be42306488",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffc5523b-730b-4471-9708-974502db3943"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9fcc257-504a-48ca-9b4e-01377350b670",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "655e7b2f-6941-4b7e-93a5-f8fa997d2167"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be47b448-c53a-4507-aa2c-a9ef464f7cb6",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "faa28250-96a1-4435-b1b3-9999521ad92b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fda07f3-637d-4455-a17b-6452772566f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7da873b0-0d3c-46a4-80c1-2d75ecd2f275",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "89f66a93-73a9-478b-932d-7c124ace988f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6fea87a-c7ae-4ccf-bf87-e840b90e5b26",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "575fd0e5-9613-4d43-88e0-715d03e7dc17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ae2dd18-3710-49ed-8369-180912ad746f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a69d89f6-7622-4c02-acb9-a425606152b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "dbc7c377-44c2-4b23-8e61-0e6c2ee4502e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc19d296-fd06-42f8-89da-e460a901e28a",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e480054-326d-43fe-9e4f-c4a38c1e0e18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f18b7ba5-4bdb-4e52-94ca-632b640b1173"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b1b5004-87c3-48af-a059-d43b8e921019",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "841c0b16-0dcd-44ee-a5a3-c48605357d26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb306d20-5881-4c06-aa2e-4d1172a7fcba",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f85a29ad-c4fc-4076-8e46-6658e9de1eca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73e548a8-f21e-4a85-a922-4791d3667ad9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e81c0273-f5e1-4405-8ce9-538ebf49c4b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0fb4bbb6-bbfd-43b2-b0d7-3b7e7d7a09c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5256445-f2aa-482b-a39b-18f7d6611fd6",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66164db0-01f6-45b2-a888-a9f4c71d84ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8463e46f-1dbf-413a-b7d7-d5ef45532e44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00d7acb0-a172-4f0d-bcde-a3bde712c79f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5adb072-456f-40e8-9623-bf9e1c1dbe71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d047c2d-de58-4a3e-b88c-201aa24faf99",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd400c4e-9bd2-4567-93ce-0e03824ffa12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50da6ca6-28dd-47b6-960f-896688f3f6a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7889a1ee-9a57-426b-9c2b-2c8ee5c6eed9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8885b03f-426a-46cf-b1e4-b9da96c30163"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e22fba1f-a7a2-4010-83cb-8a690812d351",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb6928bc-a2ab-4f83-a568-813d8054974c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd0d8217-fa7f-4e78-b94d-82bca381ce15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ae3be54-e141-4490-80b5-212ea44781c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5502dcf6-0256-4452-9a9d-932c1662ad94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed1959de-cee5-45a3-8ca9-753079c672eb",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfc40007-81ba-4b38-a5d3-d4ad7b458937",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19a6677b-8d88-4573-99c1-c4b649b96cb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22d9515a-e3b1-436f-a2f5-5c7016fd495c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "34e7c352-8e84-4fb8-a058-53498837a334"
                        }
                      }
                    ]
                  },
                  {
                    "id": "991577e1-2f3d-42ae-868d-877dafd7e268",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "594980d0-e46c-4947-a68e-84056a02a3bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12e12a49-88e3-4990-b1e0-fbc0c661ddbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fc4e676-02a8-4446-881b-703ab783783c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "80ca175e-b58a-43df-9bfb-b1e4a3bafd80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dc57c94-52ab-467b-a669-46c32f0e4503",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ed3432d-8b32-46cc-9a97-aefe8582ba72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2dd6fe7-25fb-417b-84e8-d8d082233d3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b05589d-6a97-4247-832c-9544e5d509be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d98cefb5-532a-4ea6-9872-befd50d887cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e69ce4bb-af53-4374-b838-1246401c9ff9",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd355d9b-b7c5-41f7-9cf2-3040155e9874",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a34f4bb-eb78-4d57-899a-b1a22a6b0b5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac0986f2-d684-481a-a12d-4a442b2711e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c192e58-a2f3-4713-9d1a-6ca06aff9eb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5c03e5d-3bfc-46f9-967d-35942c410633",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7328c0e4-b461-426d-8109-08ba3b38130e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "913874f6-6f4b-4d3c-bcbd-053c115a0031"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd83fb54-6651-493c-b8c1-ddf3dfe20b91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5bdc115e-57d0-45dd-a44e-725c36b85db9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "988b49a6-468b-49aa-981f-8386e6b52e3b",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63f0c2cf-f8f4-401a-bb81-dedf2102fe29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "baf0ce4c-4ad7-4239-aa5b-f777d0c19b96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "803c1175-5647-4583-8d9a-d98c6f666c62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "06d4f428-0818-4b37-99df-1c5d3705bc08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d43c4346-a089-41af-9360-4f32d9243b5b",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae39b9bc-80ca-4bcd-8ede-b8350a3d4fcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62d5497f-0553-4a00-9019-5d69e68b50af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e23674d0-f7c1-4119-adf6-16184d5eff44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "98f3709b-b5ab-4ec8-b1f6-313591a46f74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89210fef-6f29-466e-8697-dd49928a3218",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6be26e18-d779-47a3-9fd2-1bb7e40e65a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06e81d96-4e71-46b7-8fa4-e9c6108d859c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d50ef97-f336-4d2c-93cf-11bdcd96404b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e9cea8dd-22d2-42c7-ad3e-087be558667d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edfbe4bc-0bf3-456f-821a-9a05a3333895",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b905178-4a5b-4d17-897b-64c98c9c987d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f302fad9-b646-41bc-a29e-43522fb9a5a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a8e3ea0-7ea1-4846-82f7-354f3c671205",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c2ce5a99-5a2e-4aa8-90f0-1e308a535a8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0af77eb-ebcd-4289-a429-abb521254677",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59d0b721-45c2-4da5-8f16-d8f2a62f4a4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b457d033-2672-484d-bc1f-0683275896d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5c7bb3d-d39a-4204-9ceb-748a32426fe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "660ef9a3-0ee6-48a1-82af-c01c6fdf5b33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30b0db8b-a00c-43d0-b69c-87c6d70b5c50",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf9ee57b-3122-4fda-b59d-80a2741c56dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "033c108b-11a9-433c-ad4c-0137f6f2beb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eae13c41-f5a5-42be-b241-ca646e671923",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7196744d-cc52-4ce2-b92c-4fa8f4ef5441"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e24e81dd-d4d6-470c-8d92-42f0548a9fdb",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0409ac77-4bea-4c4a-ae23-67ad09c050f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72b393b9-3b67-43cb-9948-98136e6cb681"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0530c32-5f8a-4ecc-954f-0dd60600533e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "dfff9ee7-5ad3-4bf9-a213-02cfaa085bf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d49d5c9-80ed-40d8-aaaa-36ccde7ff429",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ddc42b3-b162-459a-83ea-2a8bbf807652",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65f6ad20-e489-4676-b7e7-bee08bca1294"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0b88d9e-5e65-4625-b859-baaa8d84a3ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2c57259d-6a40-4218-aaaa-401af6396d4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fff51bc4-a7f2-49ca-ba05-cfc04314d2a6",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acd314b7-00e4-45d0-a2ff-3e4e2d6922d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "522ba563-0fa8-445f-866a-33880131637a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9ee89ed-9ea3-485a-8c66-10df13ed3e15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "8e7c9088-e0fe-47c7-9e7e-5110aef94768"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9999a08-6f65-42ca-a606-ce3008cddca6",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "880b3aca-8907-486b-981e-022dc9fd7eb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e90e275-9778-455c-ad07-a88f849044dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba87bc99-4fcd-4442-87dc-84d7338c475d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c9789cb9-b054-4236-a009-0f9514836b11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7283f38d-8d47-4f15-b448-7ead28702b31",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "daf3dec1-8303-4863-a25e-1fb0060a3c4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3790f0e-fcd1-42ae-b037-4c98462a1969"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "326232fa-8a58-49a5-95ff-ef251ad4846d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e0e31156-3133-4248-825c-6aee0ddbf636"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d7e3d7e-54fa-4f91-81da-5b042e494342",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3955b0fe-0d5d-4cd8-b15a-e4530e622209",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0637ab1-8213-471c-99b7-ed7bc135fc65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b7456c0-2adb-4e12-879c-e3536b7564e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "aebf733a-6677-4ad4-b404-b157e3862de2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75259800-5ab7-4fb0-bcc3-b1cd61f55493",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c6354e4-6f7f-4d19-96c4-bcf488b38abf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "7becc783-3417-4af8-9fc6-1b1565a0ebc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aa68fc2-3cf2-40e6-aa68-6e948beed7be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "d6e9e00f-2fc3-47f1-a73a-edabacfaf092"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b81bb7e2-ac1b-4c70-ab93-14ac034d05af",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "367b6c1c-a7ec-408f-80a6-9beb8e79492e",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4c78ae2-cd07-47d9-b3e0-8ef8615db57f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c9117117-d425-469d-943b-63709a2d01b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70e4c759-cb6f-4207-b77c-b47978c6945a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ea428ce2-37da-4cde-9ffb-3c9657dd2259"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1d47e39c-c768-4357-a6c6-1b295358610b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fae76370-d72b-49df-af16-951d07a38af9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "638b3079-9f41-4757-8a64-0ac02b997687",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8d0454e7-44f8-412a-8673-c9ce02bd789f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9589d79d-5b18-429f-8a3f-880be3015a88",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "70688682-45d5-4515-9933-71c0788b7d24"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b1779433-2ef1-48cb-a42c-aae0a76fa7aa",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "894d587f-d8b9-430d-8c1b-80b6de2146f3"
                }
              }
            ]
          },
          {
            "id": "1b70922f-c33f-4341-8355-2fb82873ae5e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1ad73f80-e832-40ad-943d-b6dbafdfdb62",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "8cf3e7b3-49b0-4c27-bef9-d97cdf5b9b4d",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51217dcb-098b-4711-883e-9e4b749f912c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "c728156d-8d09-4fb3-9b0b-864a6517d2c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "547965ea-7c62-499e-922f-3d57f8724b54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d8948ac-1c2a-4c1a-812f-e5e0e0816a9a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ee2753ca-9e2a-4190-9319-4909bcce4f95",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3aa0e733-ae91-499d-9ec1-83e586b20730",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "45e46b4c-18be-4838-930e-992113b966f8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "65352f0d-2110-43b3-b4ad-a8ec23d8460b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5063b7b5-cb60-4a0c-a017-9cf1cf7f5260"
                    }
                  }
                ]
              },
              {
                "id": "16ffdfca-a0f0-4c45-946d-e61e64b76185",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0ce22dd0-730f-4cab-a396-fc819ae7c875",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2d4f327a-b839-4076-8a6f-f451e29896c3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d92312ca-24f3-40ac-9548-7b0848afe9d8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1f5792f2-9f79-475f-bc4f-7efd61041850"
                    }
                  }
                ]
              },
              {
                "id": "a956fd4d-d6dd-48c1-8216-c51d8001164e",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e08cbb5b-d274-481f-8ba3-7f8b269af955",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "44bb2720-b8c0-44f6-8ecb-134beb1a96a4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "56155333-e01b-4869-963c-ce858b6d929f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4baa2b56-6697-4adc-9c36-6a9176bf32ef"
                    }
                  }
                ]
              },
              {
                "id": "819ddb40-3d71-402c-a289-db88e5b306bc",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "21167bcc-5803-4bec-8b5e-95b760ba7e44",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1954261d-5e09-402e-bba7-5088f6edb280"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2917a5c5-e8f5-4dc0-96b7-f03c01162423",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "bdfe71a8-8d21-48eb-917a-46ed80967797"
                    }
                  }
                ]
              },
              {
                "id": "00636d98-0bcc-4595-82e5-7cbd9fd5ddbe",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "17e40b9c-64ee-4a4c-a681-61cdad27f781",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "258dd369-aee3-4fb0-a14b-40125f70e685"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "446189d7-1598-4020-b7fa-7c6e0dc46cbe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "3d301b05-47c7-4cb2-a875-1dbc38999753"
                    }
                  }
                ]
              },
              {
                "id": "22c0e853-d55c-45a3-905a-5d9fdd896ec4",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "08c1b90d-ab3a-48a3-a77f-9f555f4ec6f7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a9adfa76-e868-4237-804c-5e77f23df843"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dbb1aa19-9d4e-4f6b-864f-2230eeaaa4bb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d6f96308-21b6-4871-b644-79811599eb1c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b903db87-e9f2-487a-89bd-eae5993c1736",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bc85834a-639e-4883-9d7d-4edbb7673659"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e060b501-3bd9-479a-8379-85a9932c72d8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "725f70bf-329e-4ec6-852c-3d59f5262ce7"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3d4fc0d8-67af-453d-8941-68c214327b48",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "29133a98-f248-4d76-9ce2-0cbf7e616840"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5358b51c-f1d2-46e1-9907-c91a654529d0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ab1cea89-1111-40f5-a711-d7edaa561187"
            }
          }
        ]
      },
      {
        "id": "841018b1-d207-45ea-b075-6bc01d3c8db6",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "f735651e-5a4e-48af-b057-bce9ee01fd34",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d3bf2da1-8d80-4720-b42f-8d5066d39cb2",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e5cae2b4-56ba-4bad-9c35-96732df96df5",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad60ad8f-f337-4010-be95-1e7281507952",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbd1e112-db26-4360-9441-23cd1816626d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67acce85-4869-4910-b319-9fce6276452d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "3223b4f7-87a7-40b0-9944-4913477a0e45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57cb8074-0766-4544-a7fa-a443c9e067b9",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b8d4557-5d20-4524-8866-0bbea1600b2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80d9c4dd-f6ed-4ee1-a008-534b643c36a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e870121c-3275-4fb3-a107-6b18302adfb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "802071f0-5a7a-49f1-bff9-c071bb25d53c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c469767-23fd-4714-8ada-c080f45f6b7d",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab8a7895-c98b-41b8-90c9-14c4b7794862",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d356e74c-3c97-4d02-96f8-ec3368a731dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04f6a5cc-bb28-434a-8e4a-c84b69ccb4de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "766aab47-4b98-4c6d-8dc4-65d44997b815"
                        }
                      }
                    ]
                  },
                  {
                    "id": "947390f6-8ff5-43b0-9b53-e87a04d04fdd",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c69932c3-fc82-48e1-8816-ef22933c7c87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60b91eee-cdf1-4796-a7ab-746b146d62e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62e1cdbf-17e6-48a2-b840-3640b0c388ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fbc79da4-e8f1-4d48-8506-7526f3f5db84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d70b1586-cc36-4594-a700-a7fd61f04c3c",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eb82179-2488-4163-80ff-6b71eff2bc37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6c02f04-c4b6-4503-9bdb-830e535d5b09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80d7af97-7b22-4c78-8900-d78c6623a206",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d0a42151-4fee-41d5-9d5a-64c9c01e99a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6a82f99-11e5-478b-a7e1-d7271aa9f45f",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edd06f1c-c00e-4b60-a7ce-153acc964758",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82aae727-6f39-40e2-9999-0399b4011ee9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b4b5a43-fce5-4460-9b11-2a911827805f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a406352e-9a33-4aac-848e-143f987342a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39694cc9-6caa-42a7-8fc0-997b1a871ed8",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b95d4975-a4ae-4023-a673-f098f86a5363",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db4d57ad-f4a1-4a0b-915b-01e3c915388a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5e415e9-f77a-402e-8d53-f19b631d501d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "bbeb2262-6679-49d6-8ff8-3f85747e6846"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c652034a-29eb-4653-94aa-98f494b2fd03",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c61e9b68-3ccb-48b8-a024-ebf4bd8e7a2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c7f1451-5fe2-4527-bce5-d52d860dfb7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbf55281-a6b8-4a45-908b-d74252d1db18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "65f5cb0f-6646-4f2f-b1d6-d6b8e260538b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3f7bddf-daaf-4ef0-afa3-3240513a6098",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4060655b-6291-4b41-bd71-1dc91ed43a92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cbb27c4-0a69-4fa6-adcd-144b947d7008"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2ddb55c-8cf2-47d3-9f73-8ba653ed3b67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa856ba8-ab3b-4dec-abe4-11799b3281d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f72ed94a-986d-4319-9846-8440cdf68c11",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "963b3f22-118b-48f0-8f94-67e2a945f9d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a910e57-dfa8-4cb4-ab70-a23dbc0b91c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de43a9c6-c9fc-454d-90af-f548025b43f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1166b361-01a8-460f-94ec-eb12428bb272"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bacca153-ae83-429a-92f8-7daaacd1e443",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb4a0638-c994-4beb-a319-e26c89d645cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b77afec9-2d78-487f-b98a-4ba0d7c708f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc83225f-3fec-4966-a3c8-ddf2241d0136",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "3e175a23-91da-43a1-8d68-c075cfbb6190"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed4fda37-f243-404c-8fa3-4c01bce8596a",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c932b368-e3bf-4baf-b741-17ebd51e3d61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2cdb5d0-0580-4a0d-b377-9384fa507aec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be5cbf08-2621-4453-8a80-49632ea6bbe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e8a98f54-79de-4817-8895-8f7b1bf31c2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d169c7c-667f-4f7a-a4cf-6cf52a8de1fb",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97a36a09-c629-4c2a-8266-7b215bcf395b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d43cac4-9355-49a9-853d-9cc091103091"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f6441fd-da52-46f9-bcf2-5849ad25f815",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "20ff470a-6fc2-4e09-b861-dc1493960e2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7be32c7-e3c0-45fe-8620-f52b71d827b2",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a05c1ca5-3f5c-45c6-9ca6-4a079a828355",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "147eebac-3935-4a9d-88b6-a53b31a4ffbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d79a09f2-e233-447c-8cc9-00c6c6d80dae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "69c305ee-de58-475b-aa32-b72f9e4597c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5b6082d-f8b2-4153-87d5-1028e898d269",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "768d28fe-0122-41f4-88d0-bc5087235663",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "040e96b1-afa7-453b-b3bc-3f9b7309c18d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72a11b9e-cf1a-4f4b-b78f-8661449b0722",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "51653ef8-b2b9-467f-83d8-6774765705a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "124d1724-5325-406e-9ddd-8c9d28591b43",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46706ccb-a32f-4c7c-adb9-ddf2f6ab8167",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1fed80d-86b7-4ed3-8ab6-c6647ec9aad5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4eea665-3807-4edd-820b-b56a54b0e83b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "9336af5c-9770-4eed-97fe-c08542a27d04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "159c4e84-573b-4112-81ab-dd50463165f8",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e0e1444-c7d4-442c-a368-e07ef97d5a24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f92e056e-d2cb-4097-8d86-55b32866fac7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03f06d94-984b-4109-98a1-7ec096ebe5d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b1dfdfe-dbda-4e63-8f90-963052dee020"
                        }
                      }
                    ]
                  },
                  {
                    "id": "815b7ba6-a432-4de6-a75a-c486c95a3d26",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39f701d7-a832-41b9-8999-d1132c1ed14a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a003d48-348b-404a-b6a9-00b6ba0cd967"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "082dde7a-b14e-4ef6-9d56-a0f34d3f770a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b6fdc30-051a-4424-bd34-2cb6c85b73a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0df5b36f-fcc1-4048-95b9-befbde0697e9",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d670e54e-02af-49b5-b99a-24ebfe292570",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9647975a-9ddf-44f3-98cd-b1cdde6c02c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a75239e-43e7-4919-ad10-a87098b787b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "545691d2-1c06-4e76-939e-499090901f9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "494326f4-6d1d-434b-8e71-bcb404787c54",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb09d217-0d7d-4113-b4c4-10bc409b8e25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "868e2a94-4cbd-4c44-bf36-870e6ba3f5ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5df9ccc-d981-434a-a4ba-54364e7d59cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "981c3d2e-ea8b-46ca-a65d-4f2b89c77dc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ed31f32-adac-4c21-ba1f-9ec3551bbef4",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e82838c1-cbf3-420a-a229-71f3c26f946f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1ec6ec7-8611-4fc6-9eb9-34f53e212108"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db77376f-c6e1-4943-ad6f-7cf163a8305d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "47449212-02aa-4fa9-a8fa-6d3db01eafbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27f1b999-a30a-46d5-97db-a191115f138e",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b1037a5-537f-463c-8fa6-422773644f89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "367767ad-4da7-4019-ba42-e272fb32a173"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2325b755-9d05-4eea-8d26-d1f11c4fd18a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "86fa7936-1d04-4f25-a43e-5415ea0f6624"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c7c90c2-02b1-4b68-b225-80007f75f486",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55e1e948-1140-4466-80b6-814f597d18e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e3a650e-69c4-4685-a289-f6c1eb215b88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bb578cc-0fb9-421b-894c-dd32a0749c3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "306ac677-53d2-47aa-8d65-f5d72e462526"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86b4dea6-2092-46d4-b58a-2eb950fb410c",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93b0bf11-fb98-4e48-bb6a-6141df90537b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a0f0b31-abc2-4f99-819f-808f5a329a43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66c43260-71fd-4380-b01c-e118b19e771a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "816a7e81-152d-4a15-bf2a-f95ecc6449cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac20900a-503d-43d2-84d5-dd9fce7fc3ec",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f1880b7-afad-4d8d-990d-fbc92b15d281",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25c9aa74-9fbb-4eca-a3f0-afacfdbebbc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1d4a8b9-0c09-45c3-99e3-7d4b92bd912f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee07381e-5cba-49b3-a3eb-458e2b36fcd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e25c609-5868-4abc-bf28-e24b46fe8f1c",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4b814d2-1436-4cd2-9cd8-707d91db1ad0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19e83cfb-7b66-4a84-8afc-2ec12a94b2cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d47d120b-41ab-4cc9-a4c5-838edbf355e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "631612c9-c35e-4937-88cd-a3425d09f657"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6c75f17-6a17-4fee-9de7-5878db67fcab",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c6b14c2-65d3-409a-91bf-70a5c2432a00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4ef143f-80ab-4019-b819-0918ac1cf84d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dea68a2-5443-4797-bf23-6cb6024f88fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ae80908-130c-4afd-b43b-40cc0430e210"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efda8080-4ce4-4afd-b9b5-7317a55bac12",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eb38390-f452-4604-9e20-948719b5187e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a19c5406-a093-43d1-867b-31d23f592196"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25bf58ac-e78a-4c96-857c-6e09960429c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b2041c6a-6982-4a41-9a3f-e7c2b68023d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a855d02a-abc4-474d-aed3-8c6705f4402a",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eefdb544-c9f9-4986-b281-80552814e5c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "326f70d7-882f-4de9-ae71-943184f3e372"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "685e97e2-8a1c-4a69-b33f-f120106d8243",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc186dbb-51be-4d6c-87b2-1e3fc1a00b5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a92bd07-10ad-4ed3-99ad-1f73c5b4610a",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6aa3716a-4885-4e91-bf49-e025b18c46c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8304c35-a980-448a-862c-7384030a160f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f92e027-382d-4ccd-ab0a-1ccb48747c61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b99bfd9-76d8-485d-a9a4-0e90d0cd08ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2d43863-2894-4e82-a137-9841ad576e46",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0373da37-3372-463c-afea-cebededfda8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34c9b657-7c32-4561-9dc1-d38868b4d9e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ab0bfc2-8d51-4f36-a747-bd82442c1719",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "affa5021-c5af-4da9-99ea-7bb2310c7a55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d34c7c3-8148-4154-8337-13519da9b214",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ea80650-024e-4489-b17d-01a0747ca7d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db401a69-42b7-4352-bd0c-f75c2948de8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78bcc372-3f3b-4221-b4c9-c84ab182cea0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "00a6877c-5273-4415-b714-7a8ba0bf4154"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9bf63006-8a47-4221-9e48-00505668371d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3665d469-2d7d-49ca-956d-e77935978df0",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9d0f9dc-84aa-4bf8-9310-e8735f8dbf9b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "2b57af96-ee5f-44c0-b0ac-3cc66ed1e0ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ea54629-a9a9-4b6f-805c-c8bdefc44187",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "12f276b0-22e9-437b-866c-a8bc5c3d695d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cbd62f43-f037-4ca6-9744-a85373b4dc1f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0d54fa52-08b8-4a8f-9eb5-8a046da3c156"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "edfa69a6-3fe8-4ee1-ace6-f0b11e883d7e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "108a31c7-b4b0-4dca-839c-d80710ec429d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "76969b6d-c225-428e-b336-f2079b7189b1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "46608da5-3fd2-4c56-8e4e-099b8d34dfe4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3302d298-fc2f-4a75-8075-348851baa0eb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c8c49f97-1484-4645-a45c-44c8ec4a12a4"
            }
          }
        ]
      },
      {
        "id": "c93d202b-6125-42b6-b481-5534515ae587",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "07aa19e4-ecb3-47a7-8f20-37b93e50c9c1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "be255c89-9db2-4be3-b82b-f2006fbd1881",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ad806a04-3928-4fc7-9c1b-b806d752a71f",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "655a5fd1-4bd1-424b-96c4-f7ca9f364665",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9118e65e-7905-45f0-941d-fcf5d24a9efb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f988c25-7c57-41c2-b40a-d5c3fe5d11d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "b02446d6-5a0a-463f-871f-0fb2d59834a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "328833b2-05e2-4c10-89e9-c1af6d7a5341",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28145275-b496-4d75-99fc-36330ba7a330",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62a90eb3-f1c7-40cb-985c-d0211dd1bd52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d619c60-1230-453c-8b05-89d464bbe486",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "851f3551-6069-45b7-9747-c2abf73f0923"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e42cb8d6-8e14-4976-bc96-7825437ec4b1",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f84ea11-9336-40e5-9c6c-36baf456cf9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b566f9d6-1521-4d7e-94a8-0a598ad8632e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b48a45c-53c4-42fe-a068-3957c0b38397",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a97d76c-afec-4e90-87ae-f14afe14d196"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0365fa1d-28cc-4b64-9699-fc28489beaa5",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8911325f-36b2-41e6-ad9c-69242a30ce14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1d087ae-0eb2-4b1e-a7b1-73c1d4dfd755"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34695a37-051c-4a07-86dd-11abea207b3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "45e191cf-532e-4950-b87b-b90cca3bfb4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "787c8be5-cffb-4da8-b3f6-51b4cd4ee854",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "daeb7eb1-6579-4686-b4a5-ca808e411a1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9664f7f5-ec69-4248-873c-c2fc3c8e30af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "337cdbbd-3eb7-4025-aac9-c74e8459f399",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c3a84ae-01d9-4857-90f3-c2fe74d54c77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8053c218-de4c-40a6-91a5-342cf5d07f0c",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb9bb3b3-4624-4810-8e10-54bf31eb1b10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e4e9267-0ea8-48b3-b863-e327f4795684"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "993b86fb-b201-4bc4-9392-d7c2674ab1e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f8abd294-6dfb-4f44-8c57-fb8738aa1291"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fbd082d-ece7-4c38-9550-27473c18f928",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b8b8bbb-65a7-416b-9376-68515e22dfe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8535cc3f-7bba-4712-93f5-1c4ebb6e8547"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f08f70a4-d704-4add-8bb5-4eb5e29e8d1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "7fed9c83-2ba3-4678-8bf3-326d259c727e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d98d745-1e12-4f4f-9527-4c1fedb8e373",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cda8ee7d-d731-422f-8d70-67fb05758120",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82ee0ae0-7555-47a1-9201-f5e63e41cd3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e70f3e59-af0a-466a-8bcc-17e434d7b891",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "77caa076-73f7-49bb-833c-0c333bf74c8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a0be297-739a-49c1-a570-97a5ad7dd88b",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "263df478-c6de-434a-a903-6343e4be32ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f3b4729-1180-42b4-9b4b-14e7e6b78f18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a09629f-cf77-4b3e-a98b-101511c1fe01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1cb7b549-d2b7-4afd-8b0c-a8971ea24ec0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e11b280-2674-4d2c-8665-bee19fa406a6",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e283d53a-e6b8-4c78-902c-1d59061d2495",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1dfbd25-d43b-4ec5-8bdb-423086c940fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7a23664-d5a6-400c-9c50-2b4dbb429ff7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c3e37eb-4c8d-4c8a-9cc5-257386e3c1b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96cbf652-3b7b-4e54-951a-9d992e8669db",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c493ff24-46ac-49f3-9532-689a6185c8b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d6054fd-d7b7-47ab-ad98-88775efc8605"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6a0b7bd-a726-4533-85d8-fbe8bb7c548a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "a7d9b9c3-b2d8-4342-a975-2df3a837ed7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6ffb549-e984-4afb-b9b3-2c7a7cc34c74",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6474e6bb-b987-4ca9-9660-8ca00953416c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "915faff3-493b-429a-9658-d1cc2ac2e6de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae8e0ef7-f01c-4384-b92a-07b40580b929",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f1590192-0f51-446a-b60f-94a1a8cdfe99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d205c39f-061b-4969-a875-082a234891cb",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e39c8a1c-ecd4-4511-bc10-b0aeb16eff63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c26f5174-1fc3-4adf-8d8a-ca2ba2e8528c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9fb9306-fc3b-4694-89d2-ad3b0deaf93a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e02a9b81-4b4f-4507-8da7-83b1eadcf024"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a34f3c58-fca2-4d45-a02d-41fb85bd115b",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "764b02f2-4772-4921-b992-a198f3e2d8a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4266dec-4b00-43e4-8e15-973eaa304487"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12696098-1032-4a65-950d-2a190171cff2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "0aa62eb7-f5ce-4982-ba90-4b0f578859e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8655c8f-6341-47fe-a1d5-16211f224442",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e841acdd-ae48-4301-818d-e070862b2992",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ab22f0e-8dfe-469e-a319-ab16c31740fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28f4f40e-55a5-4595-ac60-b854932e6ab8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "90b03408-8807-43e0-adea-5ec5ca22a0b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b21fbee-3a77-4d76-9793-b1d516b1d1e7",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa3b271b-3329-4092-8a6b-17c0486e05b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0160ff2-0171-44fa-89ec-9e38d372f5f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cbd8ec0-d3aa-4c4e-bacd-f4483a141ee8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "eab117f1-f842-4d7f-a481-466e4d102360"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa443ae8-f0de-47e1-9528-0fb604b8728e",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67979e19-c909-4bb7-8a87-780d64cbbbdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "931a1706-8f34-4905-82bd-c49936dc5e64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9b397fd-458f-4a64-ade9-0fbfa1846deb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "d25fc231-0a6f-4237-ac55-997e39fcaa08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61e793ef-a93b-440c-bbd7-b7de7ae2a5bc",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acabf043-8194-4446-99e1-32da7b9c4492",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8da1d28-555e-4d70-848e-a9b64eeb8255"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83e14a84-01f1-4b79-8aa7-53180fdcebc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "34d460b1-1412-4c57-81d6-acc40530fd96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed16b58a-2b30-4b6e-8eb8-5222fceca0fa",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc07d216-b022-4ab8-8496-06c5e8d737cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ffbac28-485a-49e1-93b7-7a4ffbfc2631"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9793d0d3-0cbe-4f42-a8a8-043c8ecc37df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "49a4b8e7-838a-4d39-ad92-749253af1cd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43d01d46-61ea-4440-92f4-47f38af5ae1b",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0455ca2-0b02-4b0d-a1c6-97b1a35a018d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c01e1ec-b2aa-4f8e-ba74-173b4789e716"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22b76196-a177-4cc7-942a-7f8220a7c618",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4cd8657-a5e4-4ef1-a86b-100912d123a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cd122e2-6ba8-431a-9e01-125cf6af00d3",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de06c6cb-c3fa-450e-abb7-891134dee317",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c52caa97-a2a1-4ff4-8b5d-7c725551f063"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11876b54-2a1e-4846-ba9d-eb0bdf9cdc16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f34e39bc-fb99-47b2-97f0-1c34e1b82013"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff58c1c5-2383-4fe4-96c5-649da051d7eb",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13f1bd34-7707-477b-bb57-694a721ad335",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7e058e8-593a-4b09-8455-359fe73219e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0c4b907-43e7-4657-9626-d9d6b3886501",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cad9d489-3946-4e1d-9ad5-f156a036654e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbb1c9f9-6938-4022-9603-bdb9ca02417d",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab98116a-93c5-488e-b75e-059ec327d0ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42f2c3cb-090f-4fa6-9c54-b26d220a81c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed7d3e40-3551-4ee5-b596-7a7bfc7ebc45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3069b998-f061-49e8-b644-7bebac9698dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd22c348-6c92-4ad0-9eda-3eed68340cdb",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51c622fb-52ab-4b65-89b6-bd1e672103e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b76452bb-de1d-47a3-b82b-a575c3b7811b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41292dea-9ce8-460b-977a-9b76f3a1e196",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "77b8121d-92ca-4a42-8510-a4ded345f1ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dd0b3d0-dd00-4337-94d0-44cb34e63ce8",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0ef547e-77c5-4f82-87dd-d2e5a408cad9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "098728fc-28c6-4af5-b9e1-cc51c3210e4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "958b3ecb-560a-4b38-a2fc-336adcd56176",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6bed6e6a-e795-445e-9477-1b27262b8e00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9e55d00-9565-486e-8435-e311798f1ec7",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82c7eeff-02f1-4e75-8180-c8d89b9627d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af8dbf82-f387-47e1-8fe1-97affd78dafc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b41ace82-6f49-4771-b910-c72e2a89e274",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8912cff4-dcf8-40de-9b43-7cfcfec256a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4916a840-6f66-4848-8942-751b0cf970ff",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcb2c3d7-73c0-4006-957a-bef5e224bf59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e21b521-c6f8-443d-84de-8dcc6394ee74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb19aeed-0a45-4b30-bcb0-77c6450729a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6241df1c-a5a2-4a18-9603-3d5503f897b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df4aecdc-4012-4c80-902d-c50eef5b0cd4",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "190d99ec-fafc-43d7-b44f-017dbbe13c8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95caa7ee-717c-4476-8b55-3067fd5e2f22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a897bd9d-36f5-4200-9cef-1b8d0e1cc3d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eda2d8d0-c2dc-4501-9fae-7b39bfae1153"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f80887c-03c0-4f7b-9274-2344c84d06b3",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e68abb5-2392-4ce6-a971-3a38b60fa86a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0acb8a16-cb44-4bac-9853-75f54aaf39b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd4e46ae-9b14-40c0-b8a1-626a7ecd71d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b2104f44-1d00-46f1-ac5f-593bec52b031"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb0b2aee-05a8-432a-8362-dc51960e9283",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfd00816-984d-453d-89ff-57bba5fdc55f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1555d0e-e6f0-498b-b9e1-e310c5b4b2de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c69adf9-9732-40b4-ada8-35659a09da37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4465a1b5-1c01-439e-81cd-dd4851b6f30b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f367086-b414-408c-a831-0991ddae71d5",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2766e4ee-aa2b-46f1-84c8-85c3536ce06c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab02635a-dfc8-4bb7-8a6f-64882904aa6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "227e3b4f-00a6-4cdb-8d46-8517aea56913",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e485f07b-ac1a-4b0e-9bae-c49e7199f61d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "434db42f-3983-4046-9fba-a0cef6fd7058",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb96c36e-8b16-4e12-956b-bae4574c74dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26e6fc62-ba27-469b-bb09-5ba15992cea3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7abfb6d-3cfc-4eac-8364-d50dd9852149",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e04bcf03-a57c-42d8-bdcd-2a8d057253e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cef698f-80e9-4e1c-8eb4-af356b37088c",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "532250f0-c609-44e9-a092-7cd56f44cb32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74b6b1f0-ce25-45d0-af6a-ae3417bbf3f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f18768c8-3968-48d0-a096-2aae374f39e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4e2bc8b-b3a3-4b84-8e97-d517c2700c15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87a946b4-3eef-4dec-801f-66b3eeb68298",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e5213cb-632d-4fc6-ac3e-f524b2eb7bbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2e42e2a-ea56-4eb8-beca-d0c860663a84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a9cba8e-f86e-4023-a624-ab615fb217d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f328f70-b1d9-4b52-adf0-63aab8ae0c1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4714f773-66d5-4f4b-920b-48b8ae50763a",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f013aa6d-c45c-4a6f-9fdd-1e7993f4d1e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed475a1f-92b0-4144-aa15-1f882b4ea4e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10bd95de-2ac5-4400-a8aa-4d988db6650a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e0d84cfd-d122-445f-9074-b8fa145b2f7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "940a0186-76c9-4b43-ac74-f71bdeee8d88",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d841d37b-fa67-4c2c-9a71-00cda876a21a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "616587ab-5d77-4ddf-9b98-afd390f63507"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1f3ffdf-0313-4bf0-a5d9-c5486b13e9e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf73336d-0234-47a0-89f8-9bcd26d754c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "121c2258-4d1c-429f-b3d4-b291a886cfeb",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c36e6fc8-08de-4a20-9d25-cc2b44479c1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca0b91b5-5df7-444c-b88c-f091d9b46b6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0156da50-5913-4b20-b0e8-695254aa8f52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2243b396-5f6c-4c06-8795-763a969b20b0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "142106a7-1d70-4707-9df8-74b7ee0d6021",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b1392eae-a205-46e7-bd1e-9636d7b11366",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e491440c-cf88-4ffb-9198-d1093bf384db",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "d5629790-3b7a-4903-add3-5f7f18c6e5fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7616c9af-d5f6-4eae-baa1-46ab48830cfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fad3deda-76a7-4775-8ac6-2d5805b32e07"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ea60f57b-7aa4-4bf1-8b2f-061fcfc713b4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5cf6c6b6-74fc-4cfa-81d3-ed6949acfe4e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f9f76773-3d40-4e4f-90b6-902ce8e2b4a6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3511dc96-7620-44c3-925b-8cee949a7a59"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "eac4ace0-b5a0-49cd-b5d4-d57cc12075d4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "71653e50-6205-4dfd-be09-708327af5fd3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b48a8ba3-e767-43f4-9218-03ec614a703c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e148aa65-3f3e-4baa-a0b4-9980a538d9d7"
            }
          }
        ]
      },
      {
        "id": "895b2963-6181-4ef8-91cf-19140f28f88b",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "605f8d10-f559-47f5-9fd0-68daa75f6ae6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6a04e287-2391-4841-988e-7cb76383550b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "21367054-bf0b-4a25-99a3-8aedc5f952cb",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20a04a71-ea6a-4966-a73c-76080000136b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c19927da-e6be-4525-a538-3ebc7017edb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ad8b9a7-3848-4cc1-92bf-79e1179c10e0",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0b8e4ff-e039-4094-8115-8a6f268c98bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4144fb4d-b48e-49de-a508-033bc6d87273"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fd8356c-a454-4444-bb63-ae61c171ee89",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc128ae6-eff5-4d8e-a9d2-6010e0115864",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ccb3c03-eb0e-43e6-9ce6-7f3e300dcf6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d225cbf5-afde-4c48-b36d-23198bed4738",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4c5f0dc-8ef8-4013-9dcc-930a635798cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69a159e7-df19-4f4f-a13a-ce3f9ef77b2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d90dd7c-f172-4d99-b850-ed069c6509ab",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e1c1152-ee21-44cf-b89c-3685a4813be7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e189dcf0-ba6b-4507-962e-ff8547af7ca5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2ab77d4-e936-4447-801d-74e48266d2a5",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b098ad9-d3c6-4e44-a94e-f031970448f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91ab1b55-d4b9-437f-8f16-d16a1e4b0629"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d77c2e95-a2c9-4fed-baf8-8246d261fe14",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83976815-4ebc-4fc8-b6e2-7f3dd398e683",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fea36c4-a531-43ab-b60d-de9febac365c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f48bbfe-3724-4354-8f70-eb70be9feefc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4151b18-50ef-4a14-b79c-b233ae6bc109"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e6890ec-097b-48a6-a02a-cb623754f661",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5025a2b9-5340-4e90-bcae-a4aa26673026",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa8747cd-be83-4984-9e9f-484bc13a09bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0c7c7ef-14ba-4936-8439-efd0541d4378",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19ba3daf-f8a3-455d-b5cc-489039ec06f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46a347a1-cf53-472f-ba81-7f6d1e51639a",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d626b19-cf94-4034-b32c-f18387c1e81a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "731ad84d-4139-47bf-bf22-243d306df1ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30b18edf-d49c-4b76-a39d-5a7503d6c97d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6ade81e-bd0e-4218-998f-89690c90090c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c119a8b-0da7-4210-ad65-2b6966608799",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afb21563-f850-4f0c-a27c-94ca25440ac5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d557a56-c787-4126-82a9-ab2dad27d720"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05b9650e-6508-47de-b8dc-c3e0d893156d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5e26891-2e09-4dbc-a35b-28911de83e47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7c6cf3e-8dc8-4deb-b68a-603349e38e4c",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9e30d30-eaec-4cfb-a1e9-b4f139e6636c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46d6ed55-d618-4754-813e-d12ca3148ccc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79d76d6f-f8c9-456a-a5a0-db510c53b800",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad5487e0-194a-485f-b9ec-d91583c653b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4aec3fa-f7a2-4a19-921a-3d62cc1ffd89",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "242a1ac9-77f6-42b6-b863-1b70786dcfdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b74436c2-edbb-471d-9f1f-e733261e67b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e825752-4b84-40e6-b286-ce20148c72dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6045c3c6-f015-48ed-9350-5ee0379ddf90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "563b24a8-db45-40a3-a11b-bb3b9d543504",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b88ba053-0eec-4316-af65-1bb2c7f59ce1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9d15e17-1da5-4c5b-ae13-2132f5d27b08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c04d7943-bebd-4b09-844f-11064ebba1ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6efe7449-37f4-464c-b5be-9fc99161b4c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4065ffdb-b790-44ab-8e1c-8812a93ebc06",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e65b01f2-563b-43cb-a63e-1e7110e12f28",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "624017d2-566e-4b76-b698-4f87fe55ffc7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d98a954c-a002-4b4d-a445-ee199bba8d39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3e4f9d3-9576-437b-b786-6692843341cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4527178-06fd-4957-b088-28b0cac2af4b",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "381ad3ed-6952-4dcb-8dd9-c572258d6c9d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98453bd2-c15e-4094-afdc-024a21383ad4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f10dad11-8e7b-49f3-93d6-810ad1a0a9af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a02c37f-2dc3-4f21-985d-428d7f18ca49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f372bae-2dd8-4f0d-b6d4-93a9d0b41f71",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ca3eb87-7268-4771-8b4b-60cb8a7dfea1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1085a3b-7d42-4ea4-8c33-6feb6c5c0816"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b799b15a-7a91-4e6c-a488-7988b6386262",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7c99170-ed2b-4347-89b7-7caf70f0c473"
                        }
                      }
                    ]
                  },
                  {
                    "id": "361a75fb-647d-4db2-91f6-81a450bf2871",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e0afe6a-a569-40f6-986c-1b85c75e9a62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23356092-ecf7-4c6f-b366-09d346658b49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1371727d-f8ce-4eec-8e7e-b51182252276",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee83dab3-4705-4fe8-8a4c-fc90db891c4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a21bfc89-9953-48c1-9382-b43ef2765037",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d02f2011-4ffa-42f2-b444-409ba1881cd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4abfd0c8-7abd-4171-8774-5ef0bd1d6c4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78916c8f-ea68-49f8-b8ba-3f244456d935",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e04299e9-59e3-4a38-b0a2-b950507ee88e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ee18725-d4ee-43e2-ab1d-4f1473e02ddf",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39902203-956e-4050-90a5-643ea7539017",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "918084c2-337d-406d-b6c4-45e6629b7c3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30d20cc6-9bbe-405d-918c-0398856dbdfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59dada46-5e16-4586-baa1-c73bdc176e10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac6b4f04-46b4-491a-a0a8-69b17db69843",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e213961-5f00-4487-8adc-00ea9280ee58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dcf97ef-6df1-45be-b4e0-b4b5d91ae43c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd859eca-2744-4ce9-8807-cf0ce94ea582",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "610a0faa-ce75-4ca6-bbd2-0ca2169570c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbac2550-bf72-4540-85b0-576b2dc410ef",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bddf95a0-d37b-4c3c-811b-e9bbb13272d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68eca6ad-8505-461e-a460-f10151ac492f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e290c7b-5a14-4c8e-b234-22960cafae19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c7a1dd5-7fa0-4e3d-9422-6cfcc80e6e08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "591a0bb0-a841-484e-a6e1-7a4e75a1c7b2",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "805a7560-64c5-4d18-a6d2-4f7c63554e7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc818a73-8930-4b8c-83d1-e3b72711f3e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba01eb05-9022-45e7-b771-a2bedf0b4a62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "667b2eff-c78c-4618-a77c-d2f5086c1831"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d8ef828-5d2a-4e84-a232-e072038d70c9",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c27d5693-6549-4922-b14a-282e4f11a0c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0fe93a3-5444-41fc-bda0-604af78f9872"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d612a906-eb00-4978-b18f-6e15e807752e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dbb1b24-e4bd-488d-a6d6-a862f02aa278"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb5a44b1-0c88-4c6e-9cee-1b362eabede0",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "390237a0-a382-4781-8174-a7e4a0b28f72",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f82f447-6ee4-404a-9daf-f6fe7988d0bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "744a769e-46bc-4c2e-8b13-f877f3d2e345",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16d2b4b2-d3e3-468a-80d2-5d2f572103d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc1d4f9c-6ee4-4b7f-9944-95bfb9704554",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c75ee805-6d96-477a-ac45-0fe95886eff9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26bac32f-0258-4986-b247-fa4f0e1a7aba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d093ae7a-967b-49d4-b790-1db3630ee596",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4c32b4b-b571-42f7-82b1-80fb8898b7fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ab53693-6f78-49fa-9a21-944ad12a9b09",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faf4ab02-e94e-40cb-81de-801af709d37a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1579b6e9-d364-400e-9a5f-73ed7c168f44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40222bf8-1cd1-4176-8e2f-e2b9ac5f074b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52361eb8-4130-4343-aa7c-5422b9ff7915"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edbb8076-c98a-42a5-8316-582d9a799d2a",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85dfcb06-f5b5-4afd-87d4-713f13b461ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c30d81ff-abab-437e-af1d-05f6899de9e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1608906c-abd3-42b1-b9eb-77255d32afa2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a70854cf-9f06-493b-a9c2-984aeac65ba8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "275aa16e-1856-4639-80b4-ed603fcbfa59",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca769966-7f67-4c72-bb0c-2421a81f2310",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "376051c1-4891-4588-939c-ab835818cf85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "522d5ce9-f5f0-46ff-8a4f-692cb974fd06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b9f0edf-1089-48bf-8477-7d0d09c7a3ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a09d5096-7f4a-4812-b57b-e4cffc268a41",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90df2553-d8c7-40a2-bb8f-2621a36c0c3f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d7e710f-0b90-4aa3-ab54-4bc25df4d35e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbc42c16-6755-4441-b7ed-83d85696790d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecc8f779-6276-4d60-b613-fb9f790e05c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47e7fe68-3eb3-478f-9ea7-09658a1dec9a",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c20ea1ca-d13f-454d-bbe2-f86b724b05b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b375ff1-1bc8-453d-a24e-0aaa4b84eacb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a9ac897-490d-42c7-a91c-93e57255f850",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef7b32c7-15a6-4ce0-b8b4-81611d294c9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a399df8d-f9d6-409e-93b7-9c288a62511d",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee5c1675-3f50-4aaf-8d6a-6581e6799fcb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10db334b-9424-4e56-83ec-d83669048cab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94324567-a4e0-483c-9cad-0647a2ad0235",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6121dea0-b410-4de8-a3f5-e9230a5b30c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fb80f6d-e776-4bf6-aa40-ab39195e8467",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0629b791-0fb1-477f-b4e7-7dd721296ad2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7010e68f-b550-4af9-ad1a-e5e421c868a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbee705c-1aa3-43d8-bb25-bc5a352c5d4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d07e21b-479e-4160-abef-03296480b79a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd52fa18-aa38-4a3d-bbc3-aef9c0533391",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5d20dc8-fad8-459b-a601-5706cd1f77f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c3dd027-9eee-4e00-a7e6-4501d652301f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16c4ff94-b159-4704-be36-96d91bf0cb54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cac5414e-6215-4939-9fc4-1c79209ebe9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2569041c-2607-4cd4-9201-02dfdb87770a",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33c54795-bb76-4fc7-9e1d-ee0cc7379dd2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f4d2fec-4dec-49fc-bb74-a5f011980833"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68630d00-22e0-4e5f-8956-a79da28ac470",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d1ba9e0-b120-48c6-bed8-d5378ec97cee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07794aa5-d0de-448a-8edc-419d7062bbee",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e701c9b7-ed5f-4eff-8e24-153ec6c39840",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9f4b30e-613d-4ec0-8a91-4f177567c926"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea5ee247-0185-4dd8-af13-1b1eb9e4391a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62372bc2-49c3-46e8-8b9a-248b196df0b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59404603-2bf0-4096-a4ef-5cdaf75aff56",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dfe017b-e514-4641-8aa7-50c7af95b55e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ee8a11f-82b9-4717-9c74-75aab60cea43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaa36864-c3f4-494e-97ac-4c0a57206f9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bdabbb5-c175-4d4c-8526-4a2905448bb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f7ee569-3970-4f82-b392-e90974df92d0",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d594b58-1ea9-4dfd-a8fc-f31b3b830ec3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b3f0a29-32f3-4884-8189-66bd3afd1789"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7d6bfff-48b2-4d16-baf5-b6c00625baa0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f16b1d9b-7834-4c39-aef2-5cd9d1ad3c3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80882470-5b9b-4baa-81ec-369f4211ad55",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "197534ee-210d-4aa8-9528-e1aa32ea3294",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cf79f87-8fd3-4a88-8689-8aa2999f75ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c90c8c9-a75a-44d9-b235-befde7e369ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d4422ad-dd82-469f-8301-6d7765864cb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48864698-ec61-4d82-9525-643bf6227b7a",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbc2105f-1920-4ad6-a14d-2229b1286dac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47eb9bbd-02f5-4192-9e05-b766492b202f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e9cf253-25b5-4aa6-a484-f47271eec312",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fedc6ae-3286-473f-97c8-033a2316152c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5654db40-21ad-447b-9e73-0a58c8d979a3",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "968c8a4e-6862-4a44-af20-f1ddb9451fb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20d2c04d-e6bf-415b-8174-5068bb1060ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fce1f9a-fae7-4708-9459-6312d5cbd52f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cf68932-43a0-4aaf-b6de-3c0c4c581ecb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a16832e-f0f1-4544-85b2-51784720be6f",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1f656f7-05a6-4e26-a299-ba374acbf5cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb3070c7-e0ef-46ae-9e79-7c4ba6027f9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b81b243-0dc6-4088-a8f8-67ce086ebef4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75e6341a-4eb2-4fca-8aaa-70d6623a5ca7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7562647-c73e-4b7c-ad2b-0b45e508f81a",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb0ad5f6-24bf-4679-883e-0768e419f11d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "915a1587-434f-42f5-81b6-58ba269f5661"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d79ebb7d-01ea-4bbe-a820-2bd3a3b3d5e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5813f8e9-8510-4e21-8ab9-2f56fc2b14ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa377a55-debe-45e8-acda-e6ebf218f439",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1389189-a0f1-4116-a87a-114619c55335",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b30043b7-10a9-41f8-a018-2c4709ed48ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fac0738-ee12-43ee-893f-07233bf0c1d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55996c30-85b6-49f1-88a4-d7d612f71143"
                        }
                      }
                    ]
                  },
                  {
                    "id": "311453a8-832a-4be6-996d-11eb34ae1b68",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7ead83b-b17b-4bbf-9cbe-cd96d5959259",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f011c20-a483-404b-8a0b-aa44ede588a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c06ea3df-faa3-4c14-8164-32c767bd2812",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f960a633-b8c0-45c2-bf1e-de48f31256e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "835d4246-4bf3-4ed7-a66e-f2ed9fb15471",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b86c61d2-2d6e-4404-a5d5-e2631fa2c37b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86738194-7980-4307-8092-57f2a8e3b410"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "255f00a2-5d07-4c78-b3c5-7259bfe4a27e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73ee4790-b373-4c63-a6f2-192fbe7acb36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d1eeb01-6c98-4f2f-a708-efff441d2a46",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33d55fc9-daa1-48d7-a549-df61d1f82c93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af0b8226-6dfe-480a-9405-78fe7f6d6365"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30c7ae1e-4429-445c-b2f9-55624b2737f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34d17e0e-c0c2-4d40-aee0-c9095bd88221"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bf91363-75bd-4381-b046-0795c05163e8",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af36824f-cb0e-456d-b9ae-caf1823e49b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3dbc9d6-5a84-4817-91f7-3c774f88b01e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0617918-6e29-4590-a82e-47b865b3772a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68ca4ada-8e28-4ef4-bd04-215c083c5945"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ff7de95-3204-435b-8280-2c0bed880793",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa5b995f-050b-4850-b513-b99e21cfb505",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a558b267-adbb-4861-8cc9-362b7e3cab84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aebb1dcf-4b36-4cec-a3b1-1cfcf85f1734",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b76f146-b8d1-4588-9fdd-1805c506e294"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97e9e49a-a115-449f-8029-1c91fe587153",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b36220f-e799-49b9-af2b-d75f61dbf6f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abef6ea5-d38a-4f84-b018-8db5c44fe4b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "375284f6-65bf-4abf-801d-11ea9f0867cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0eec446-b4a3-4f22-b895-2e9d9926f7f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91287027-bdb1-4e25-937d-5b6af8485fc9",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60ebd6db-0e85-4c16-b5c0-c27d731a9ba5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b621bc2-1d13-4f2f-9156-0ed850a764c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9218316f-84f7-4702-b7f9-e194a33ad7c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "092a4d7b-770f-4488-87de-d5db6e15370b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b8dfe4c-91c5-4e78-ae72-694694d345fc",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a2554ff-fe80-4113-83cd-ae56947a7a71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9f29388-e320-4d9a-be05-e44755ae29df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6764636d-55b8-473e-99d9-1061d788d425",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c7328b5-4b94-4c1a-8672-974e779560aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0944969-b6b7-4ba6-bbd3-5221bb6647bc",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abe9a52f-4983-45ae-b6ed-85fc2d9a1e16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94daacb7-d4d7-43e2-95ab-9cf5309ead55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c49c17f9-f416-415f-9f18-c1ff8cba3cd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03f99788-847e-4320-ab1a-00c34502125d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c81789d-f2d0-4cb8-859f-ef663f71215b",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "530833f6-7d9b-4b86-8ea3-e1c554482427",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1ce3f2a-52c3-4429-9948-51bb2ca4c340"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1607ec97-c80c-4a43-80eb-cc59cbaf2527",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b2f92fb-f663-443c-9512-d6f811eb2fc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a4be186-6597-4ce8-a7a9-988a246decbf",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "045f5a78-e820-4ec1-9f54-ecae0584d707",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "498e5971-bfec-46f1-aed3-b7409ec6564f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e931e1c5-b723-4201-8e5a-7ee0288dd026",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fcaa273-59c9-4e1a-99a8-f43df37c23f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f33e5b4-1305-4f6f-ab41-cd15c1fe72e1",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "682a5c03-b4e3-4885-a2e9-26650480ff0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eae3be2b-3042-4317-a8c2-3c72bf316c98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90ad75fb-7401-4cc9-8f13-33cd52d14964",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdf2e838-907d-4a53-9d1b-3e55ac2567db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67b6478d-78e0-43e3-a7b9-3df6d7a2a1b4",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc1a3f5c-7ffa-4cca-b5b0-98dd7299cd56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ae8f1a7-c7af-489c-8069-c2a294a5b2a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32290f0a-e5fc-4cba-b80d-67c9e6d0af6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fb44b1f-82a6-4b33-b405-ebb868c1228a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1a6f344-910d-4cfe-934c-e772a574971d",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56da8764-0611-4d10-a41e-2333c075d96d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "471519b1-7de8-43d8-89ab-ae40572ece24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "973f54d3-206c-44a6-8898-f345bd3b0127",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a865430-ec5e-4e6a-91de-0e156479e811"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8acad1d9-e2b7-40e0-9304-374df790a13f",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a4bfde0-93f6-4dbb-99b0-688ba1c8013f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08d39cab-312c-4bef-bf08-0b970a817991"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8e0b6d6-5d19-446a-8a07-d71a7327d51d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3282f0d8-5645-4315-b8bb-6cb6aea9f472"
                        }
                      }
                    ]
                  },
                  {
                    "id": "739150cf-76ae-4feb-8aaa-25480ad50571",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bc0f1d4-660b-4237-9ddc-dc2bd4269091",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ae14553-8281-41aa-ac8b-38206f72a2fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb467d4c-c3df-410e-bdc7-c45c33f1bde6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40b66870-ce90-400f-af04-efa87cd2e10b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09e4b325-722d-4945-a9f9-d267a4f0db24",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f407f420-da26-4fd5-b741-0baae1ddcc94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54013eee-0ba5-4498-86fa-2a677d5e53ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4fc70f7-3f28-4579-b89f-25d5741d3b98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e82d133b-5242-400c-b953-ab9087faf1b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "414b22a0-e6ca-4949-bb8f-0060847cadc7",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6761807d-7d37-45e2-93d9-b266c735a4c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c808d38f-ce91-4bf5-83e8-97c67859360d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fca325c-a367-480f-b09e-94432be99a58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e71b2e9-5245-4942-80be-f83fb3abda0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2aac1670-6886-437b-9e84-1de2568b01db",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "665317f3-9624-4460-8be2-34d1f9666b37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69497449-fe7c-45f2-aaaa-df27faec9ba6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaf5da7b-dde9-4cb7-bb56-bf4c89fd1325",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f354476e-0a7d-4553-b9fa-704bdc277565"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72141a6c-d674-48dd-9595-875551f0a633",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c6aa1bd-bd16-49ce-b890-a9f488276795",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a32fd3b-35ab-4aaa-9139-e81fdb931f10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cf50ecd-b5cc-423a-97c3-e5b3441f56ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b9b3be9-1bf3-44d2-81e9-216330343f17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21efc8c5-c60a-4896-ba98-0fed3927def0",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12a0b850-2771-4bbe-b6d6-f5859b4bfccc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a72a3a7-0d7c-44f3-aecc-7e0bac5f4b02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc276891-5b09-4c64-ba99-cdf84aeff4d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cc5b4aa-f943-43ac-ba00-6d21b38c4d6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09ffb747-0eea-46e5-8a9f-91c823af1985",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b132f097-d664-4733-a913-20d216e2bc43",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "142c5fc5-3cd1-4c75-a285-4f09d6357a9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6ca5072-c028-4cfe-bf72-18f28659b5ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc36a9a4-27dc-407d-98ed-80af99344af7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dce216c-fff7-4303-a2a1-1c672e5b917b",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8546c93d-6ee3-4978-ac7e-5bde63b68ece",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6bf108ad-1a20-40d1-bdf8-cff6b1f37c4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d7eff98-12a6-4c1d-b6a3-739bd25e6e7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dfdb2df-df69-4e98-8a46-f03b3e017250"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6d3f647-8465-45d3-8412-d011b7b535dd",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6a52ebd-b60a-49f7-bf91-0b1569d5b329",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "daf88ca9-3874-4365-bf57-8da9ce802da2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efa970ad-1f57-4ba5-8441-7b452c6b953b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92be41d8-6241-4625-a6ba-1fecb55713c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "407bd094-6c9f-47f3-b2ae-5a2d8be1870b",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44f56d9d-66a3-4195-9c22-493d243a6772",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2f18eb3-1985-439c-85a4-0545a8c47072"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b947c66-27ee-4863-a906-31b56eb3e686",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a9f2a5c-0213-48b6-957d-d0d076cb1697"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06205cba-451a-4788-824a-73e304fe1d2b",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bc71818-19df-4695-af19-af9142a08d7e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c979727-b380-41d2-918f-075987660e57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8858f5b-4563-4e55-80f7-c5cc9b1b09f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37e7da59-0e2a-4df3-a4ad-8a65113d5b92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bba7bb5f-cbf4-4c54-9f0a-09f86d7cb9df",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebee0e1e-28da-46ec-aa49-817beec45844",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5cf8df9e-408f-4c38-a980-17637fc3c770"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23d29d13-efc6-40cf-9be6-377132d3ea19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f86cf5a-abbb-473f-b1b1-f95c6ad0b924"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71b38051-95c3-4247-bd95-cb77cf580494",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3feb83cb-ce22-494f-8394-010afac14301",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8f85529-5533-42ed-ba66-4015e6f03061"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "246a9bc5-434b-4a1a-9b27-156818057c8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "587fea32-eda1-4ac8-b7c3-8c028ba62e8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f62eaafc-4de1-4a5a-96b1-70127eefdbd8",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08859c9f-3a7d-4a5d-b001-ed2a66e8ec8a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d6eb287-e72e-4e7d-a464-959eb82aae54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "274b5326-9856-4b4e-8604-30a73035d7ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1bac30b-55e4-4c58-a6cb-718754d4f066"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7aecaf03-49a4-42cb-a1ff-d2b4720e5780",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3ec2790-0065-4e6e-9133-29b725aba509",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3ca4dac-d79a-4c49-80ce-56411178fc60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99b788c7-4be1-4e60-920c-7ea14e152276",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbe5996b-8ce1-49cf-8c65-11ca526f6944"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8916e184-5cc4-471a-9d52-1d7acc432b3d",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "842d982b-51e0-44f1-8282-1e212c1a8bb4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c519b42-da28-4d1f-bba5-f861a42d7b04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70621742-23dd-4f35-a570-f4c2081312ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e582d82-27e0-4658-8cf7-10081c068d8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8770e7d-3ce8-4037-a1c3-71f3e23b1907",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b95810f-124a-41e8-82dd-fb031e45ef8f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "098e4cc9-82e5-4603-a6f2-005d8d6042f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91904e07-350a-4e4c-8313-fff023a0c195",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "241e44c0-13e2-4646-a3c2-1472e4919827"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a960f2c9-ecb0-4f0d-bdb2-5b8d8d5c9577",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "467a8e53-0e6e-486a-bc07-e5864f72119f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ced041ab-914b-4e9a-b9d4-d44511b545fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c106b74a-b699-434e-8d01-3def3f9d4da0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6e9c295-5286-4678-a754-1f00a6937e6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6e36c70-0ded-4f65-bdc1-640d3f865fab",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59dd5e2e-bb8d-41ba-957c-17fc8e245e00",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2bbe995-2d9e-4003-8369-4d88812febe3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2074db6-bde1-452f-badb-e51e6690896b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84799d3f-9f71-4101-88b2-847f19ef35ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51d7faea-6855-49fc-a051-8ada77d65ef0",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f230caa-de4e-4cc8-b14d-d6a36c7bd1c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a62a624c-b873-4320-a557-fd19d292c2db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88b2f4a5-ce28-4909-9ae9-4b2c08b64aef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "706002f1-9883-4537-b8cd-79bae57c5e54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17a140e0-3de1-4277-8aea-21316d05a41c",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c16aaaf-6b2a-420f-a743-a11d24aa242c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "507d25a1-c2c4-4785-9e76-a4d3efe2314d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "487bbaf9-4065-479a-a8e3-7370626bbc24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efe9d935-9fa6-45b7-8b6e-831463c49205"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68da4698-4e3d-4a7d-adbb-fafc08ddd164",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "073f767e-7a40-4dc6-b8d2-f33917abf093",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35fd1e43-3797-4577-995d-485e87477756"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b774c6b7-3b88-4417-9e14-85a1845c41ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb5542ce-7fae-40fd-a1b1-4e92e9ffbd50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17edff37-be5a-4570-9e59-4b531148afbf",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66533d7c-9cab-41c3-bb6f-5e39093ef085",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cdf95c35-4e1a-4234-a53a-4a078275d169"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "676aada6-fbdf-4111-bdd0-07f1261c91fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c60af984-fd18-4ee5-a40e-8d74539a0776"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a5f15e6-eb36-4dbb-9bb2-23ecdfc2c4e1",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7679c345-0c40-4999-935f-d84a6d5ee22f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88a2a570-ad80-4b7a-9a36-c67c79b6db25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fef13be-26c7-4297-8e1e-25636bef79e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02088d3b-b5d8-481b-9307-4edc1e705e69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff57a9dc-b3a5-442a-b554-364e744698c2",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b33b1831-6cc8-492c-beff-718316e40b99",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed4ce376-4c45-4809-879f-997ee81f63cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a30d8f6-debb-4e2b-a7b2-aba43787eca1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c90795d8-9d85-4229-9654-6f01e60c6f8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1a8f04f-e8b5-4aea-bc0a-ac5ebd92bc23",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57ef3c70-4688-4f0c-a729-7b0bc13b0966",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0e9a65c-f869-483e-8932-96b7a4d7c4c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af7f2d97-9294-459a-a35e-6f730f0c6dd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cc13686-8e0d-4289-b5ae-c33647b9fc19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "061a5c55-2a8a-4dec-ac22-5867cbd45241",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c45b42b-e930-4901-94cd-ef4aef8c06ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65f5718c-dbe7-485f-9129-f86fba6c62bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "feda7085-ef60-403a-9a45-9e37fc82bc17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "877011b0-52e8-4353-951d-b4be0b89f4d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7bd2f48-f1c1-4434-96a1-7fd48f007043",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38510c2f-1a07-4bbd-ad76-9187568e6548",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a38e3ccf-15e0-4de0-8b3f-37bde8970abc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ac21d17-1a7a-4f35-a91b-78af07b0b094",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f3b7eb5-5c76-47e1-aba0-9a8f77502b40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e29b1cf-e526-42aa-955f-9442dab09be8",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e55f6e6-e46a-4eba-8b82-e744ffb1f275",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73e20b50-f6d8-4cd9-8404-61e09c0786da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1766a924-3c25-49a9-a335-4f3618edda8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2943fa9-dc4a-4a87-b8cc-c88998fca5b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aef44149-46c0-4eb0-8e8f-fde89eccdee5",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4abd171-fbef-424c-a82b-976e9d738e7f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ca39a04-b05e-482d-b027-bd6eae7eb06f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b8e97ff-509d-4e25-be81-99c05d06e95a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "161ea79a-b08d-4721-be87-52a7ec365787"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a9c9ece-7c01-4974-9ef4-4a720dd0c75d",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faa6f82d-94bd-4a81-b801-fc5b07e047e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e62f5bea-05a6-4b02-bd4f-a14a5d46c580"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "355669be-ae04-4bf1-8373-99d6b6b5900a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbf005d3-62ce-4ae4-ac61-b40c3da75009"
                        }
                      }
                    ]
                  },
                  {
                    "id": "796216fc-2fa6-43bd-b89d-ed5df1ee6736",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7eb58c66-1678-4b4b-a7ad-6361ef7917a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8910ad2-41a3-4e74-931a-3012cc7dd629"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82cb01d0-2349-4b9c-8ae3-fc975beaadfb",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "203198e8-42a2-4f55-94c4-83db8d83f47e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33779c7c-17cd-4fdb-8a8f-dc924748ba9b",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50af37a0-4161-422c-b60d-6ca9e5de56db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95309130-425f-4153-9bc2-4d6cb8b1856e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e794f03-8aed-45f7-ba1d-3e06ade7ab40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a89b8e3-5161-4240-9cbe-14e2f2d96362"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95036f21-6c7e-4734-a758-2c389eac056a",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fee276e5-73a8-4ecf-91df-8fc3c28dda67",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d68a4d4c-3dd7-4645-bdec-0d57a9038c67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ae6bc9b-07cf-45cb-a355-87d9223898c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3aed0a7a-e4ff-4644-915d-96c30faa64b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39e081ce-5003-4a76-b483-ccff6b8cefad",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40a48315-604d-471b-b375-c3ca4dd5d4a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a14cee77-b96b-4da3-8ef3-ca89c28b280a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9908cdea-8335-4246-84e0-10e861f092f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a037f73-5eb4-494d-a417-6e2cd4521e42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94a7b61d-3f29-493f-9bd8-58bf96156204",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "968ca92d-90e9-4db4-8650-985d9b7ee02a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e99ab6a3-39b4-494c-b865-4877e50889ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d633f091-5b24-4092-ae7c-2d2a80b8f684",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e42421c2-8f17-4cec-b38c-7236ab38905b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a2d90ae-013f-4121-8aaf-c4be1a999e7d",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73cf7434-3a71-462d-8283-8764c2eb262f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54e20a65-0a72-4600-8f2c-b2e797250c9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9c5a1e3-cf40-420a-bdc9-6c51155ac82e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06c02e73-3a83-4a15-8196-900a853e6c4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd466fde-aded-46d7-b288-dde4a8df1ca4",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "431da013-4c22-4407-9f82-cd2aa7b67520",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8fc4608-4a78-4377-8e10-7ae7bee6a0c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8de7d39-18c0-4757-8e79-13512b0e381f",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "676d3970-1e80-4f32-8699-824eafdd8d7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e293a78-25a7-4043-a99e-ec80c235e127",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "119b2db9-f78a-47de-acb3-179062acaeaf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ce0e144-9967-4a7e-8611-3a790a2b8c2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bfd313f-f960-436b-856b-ec2bb8bcea64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1f1127a-c5fe-4260-a995-2f1ad4c995b2"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5cb0bfc3-c527-4ba8-afb5-a40a56f912d1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ea5b3121-1c4d-4312-946d-6ff71f91dab4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b3e73dd3-a8b3-4fbf-a463-205a6ebd119d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1a21ea26-9572-48a3-b7cd-b62b519a6582"
                    }
                  }
                ]
              },
              {
                "id": "853579e3-a335-4b3b-8479-2dfd1adfcdc5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a1164028-8687-4ed5-a1d7-beeea7a61e5b",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "892bcbee-8936-4566-9979-ae1c4585eb4d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "17600ca3-0ece-4d59-af47-b300b741123a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ceb18b4-96b6-4896-81be-a19a9f69e4e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ecb25ac6-7624-4b78-8259-39b94a550873"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "71e6130f-c5d4-47f9-9924-5496ff1b8392",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "aaa0afcb-1f5a-45bd-8e75-a0141ef5cd87"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c523a204-7a60-4f2a-9515-3781cebc7d78",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ef906b3d-5b86-4840-8fd4-b5204a450820"
                    }
                  }
                ]
              },
              {
                "id": "c8de1720-c932-4490-baff-aa4b8d93f769",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "36181c0c-f7cb-4a9b-a77f-1d58ad18fd69",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c229af8d-7833-447c-ba47-572fbc129e71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "991c554b-6d9f-49b6-b029-5849dd01c0ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb851cba-76dc-41c2-8e1d-6009a6219904",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b46f6b9-2947-4782-8e99-9a77fa8115d4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "8d7f0d94-a2d4-479d-bc65-14dc6ab89d70",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b6f2cd72-eec9-403e-b9ec-d785b4da55c8",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "90d35cb0-98c7-41c0-b90d-62a4c259e736",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "f1c807ad-fb07-40d8-9d8c-c17156c30544"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d4cef588-452b-4e7a-8038-aa579cf663aa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0bc218ae-c0d1-47cd-a9da-7ffab14b193f"
                    }
                  }
                ]
              },
              {
                "id": "d26d3c93-728e-4066-8955-eafb3980ecef",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "baffe13c-7974-4f08-81c0-4fe67230f3de",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "62cb91e4-ecc3-4de3-97d4-ea5e1e478c60"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7de3e3fd-93cf-4166-ae17-df504fa2f1d3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "715b7b47-087c-4d38-b73d-b5727c8d4a95"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "727083f6-7404-4060-b404-bc924a5d190b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "d920cb09-ca3f-4cfa-ab09-b3c8f07f80bc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8d3b8e15-3a89-4efe-936c-1314c721e88d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8a5ae3e9-11fe-46de-b7ad-7a4be91e1753"
            }
          }
        ]
      },
      {
        "id": "6ea2a079-af80-4110-88c8-2d8de8a0f2ca",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "873cdf51-1a6a-40ab-a7f3-4e27ea6d403f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bc497431-58ce-4a75-82e6-ae36a1c53294",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6cfa2bc8-64ff-46fa-a1f6-6aef205401f7",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bd85c5c-dbfd-4b56-8ae4-6fa2a4155fe0",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "6481d115-a530-44f6-a0bf-e530ecfc489d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50034ff4-a869-4548-9075-11002f0e002e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c5c8b3c7-ca9c-48e8-92f2-2736b54755ab"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f52af205-3769-494e-915e-e7175156d803",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f02653f9-eed5-46cc-9c38-6e6c4766b30e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6cc217a4-2a58-4607-8991-891f93ea0a1f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "54e1a4d2-7c6c-4a27-b154-017d2749a366"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3fabb3c7-8b6f-4ce6-93a8-4f0030508018",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "a2e232e6-446a-454c-8b9b-d4f613f53c4f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b95c568e-469c-4ac9-af73-0adeceaf9fc7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a69b0b9b-5640-4a7d-b02e-5e9691d3c238"
            }
          }
        ]
      },
      {
        "id": "bc6b94ab-92b2-4e4a-a60d-ea63919cd3ca",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "dfb4661e-2502-4801-a231-602d5aff8a6e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5af8485b-1b33-4020-8067-18babacbf7f5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4010761e-5f4f-4011-bdb9-99698fab302c",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19246991-ed45-4e91-ab6b-1a72958b6502",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c297c5a7-0e63-46a8-a920-699fcdbcc98d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37352849-76c8-4106-a100-d0098ab374d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5c0e122a-c87e-4205-a633-c5e19682ec7e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "18e283f7-f0f6-4d9b-b44f-1f6b260fa76b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "13aac2f7-2f68-4290-b55e-0958be72ff6f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c50487c6-bc8f-464d-9c8f-f9d75950b9f8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cae8a10b-c963-4f12-970b-1287a14a29e1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "88679bc3-9b14-4b55-854a-fc0356a23032",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1d91074e-806a-43b0-bdf1-b2b47937bd4b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ee588e6a-a84c-428c-830f-741465e891fd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d988fed5-5e80-4097-9f56-f8a1eb49ba29"
            }
          }
        ]
      },
      {
        "id": "901294d1-cddd-4305-be07-5a7b3653ef1d",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "987228dc-667e-44e2-8d29-2e2905842ae6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7ce3b0f7-4835-4615-949a-68d83fbf4941",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b13c2cfd-7535-48d5-b442-940c5e1eca95",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcdca04c-7901-4ec1-9207-8b7239130830",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "847d8004-3cca-4622-ab63-a13ea53ea6ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdcec068-3ae0-44c9-b17f-5533dd7aa955",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f83a191f-eb62-473f-a273-08f916436721"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ee9fe3f5-4247-4ce8-a70c-62315c55343c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4ca82067-bf85-457a-96f5-e4e65018b205"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "47564064-859d-4914-a18d-5936d7b18584",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eef5c905-8bdb-425e-ba4c-a10715d99f41"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "aec7c74e-1731-4117-88a7-fc15fe4f6564",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "37b3d8a3-3b3f-47e6-a820-a18d56b0dcf1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "830d7dbb-97a4-46b7-a87e-9884660ea022",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "58a6acdc-0634-40de-8dcf-222ae6190739"
            }
          }
        ]
      },
      {
        "id": "60431b79-2a2c-4cd2-bee1-6febd904d16f",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d364af44-774d-4abb-a355-800216ed9616",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9a151861-fd86-4aaf-bf3d-fa3401e0e4be",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "b9092b94-2d7c-4e91-8de9-8eddba17f36f",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6b75d928-1847-4d9a-9078-5f6b6826673a",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "859a8442-b785-4745-92e3-a7eeb292393a",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 24
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 147.2807017543858,
      "responseMin": 5,
      "responseMax": 9752,
      "responseSd": 701.758626829291,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1700181337492,
      "completed": 1700181389036
    },
    "executions": [
      {
        "id": "46918399-3b14-4a21-b452-0fc5b98e3d93",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "b84eab0c-a3df-41d6-94c1-a5c5d60c3b27",
          "httpRequestId": "a41fb46e-73fb-4d48-8308-f14990e3de68"
        },
        "item": {
          "id": "46918399-3b14-4a21-b452-0fc5b98e3d93",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "e4f72bda-bd27-4d06-b5ad-56d3a508d061",
          "status": "OK",
          "code": 200,
          "responseTime": 49,
          "responseSize": 0
        }
      },
      {
        "id": "9ce0dba0-5fe6-4128-84ce-511c9ddf8879",
        "cursor": {
          "ref": "8d612547-adf0-4fe4-bfe0-f9506e974be5",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "ca514f52-92c4-41dc-a6c7-0d3f30c24893"
        },
        "item": {
          "id": "9ce0dba0-5fe6-4128-84ce-511c9ddf8879",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "5837cc0f-c532-451d-9ab2-92f25e2c2838",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 0
        }
      },
      {
        "id": "6759e1b5-6dae-4786-b004-55538affc15b",
        "cursor": {
          "ref": "9dcc1f63-4495-47d3-9f46-a6e5ac88e0be",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "74d049ba-8e94-43ab-98ac-d703e77a6ad2"
        },
        "item": {
          "id": "6759e1b5-6dae-4786-b004-55538affc15b",
          "name": "did_json"
        },
        "response": {
          "id": "65b7a40c-522c-4d66-a437-646b9b880873",
          "status": "OK",
          "code": 200,
          "responseTime": 529,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be408e73-9acc-47dd-bc78-d2074be3a043",
        "cursor": {
          "ref": "c0e66573-d390-4e0b-bf79-04d75919be53",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "935b554a-50f1-45c3-a940-e666b5eb22af"
        },
        "item": {
          "id": "be408e73-9acc-47dd-bc78-d2074be3a043",
          "name": "did:invalid"
        },
        "response": {
          "id": "fabf6e7a-e775-4da3-a58f-bb494acda125",
          "status": "Not Found",
          "code": 404,
          "responseTime": 679,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be408e73-9acc-47dd-bc78-d2074be3a043",
        "cursor": {
          "ref": "c0e66573-d390-4e0b-bf79-04d75919be53",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "935b554a-50f1-45c3-a940-e666b5eb22af"
        },
        "item": {
          "id": "be408e73-9acc-47dd-bc78-d2074be3a043",
          "name": "did:invalid"
        },
        "response": {
          "id": "fabf6e7a-e775-4da3-a58f-bb494acda125",
          "status": "Not Found",
          "code": 404,
          "responseTime": 679,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eb84150-8d32-4b2b-bb56-9c3a9bddd603",
        "cursor": {
          "ref": "6d984352-0aa3-4ae6-8771-59fa304e67cc",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "00f628bb-52cb-49b7-bb37-877fdc2ff28e"
        },
        "item": {
          "id": "8eb84150-8d32-4b2b-bb56-9c3a9bddd603",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "4f66793f-afe5-4923-96f0-494ea89e3250",
          "status": "Not Found",
          "code": 404,
          "responseTime": 61,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe88f114-26ab-4ef4-ac80-bdc168fb3e47",
        "cursor": {
          "ref": "c8c42071-0bc1-43a6-b5a7-1c66b8570e04",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "5c128a15-04eb-40b7-ae6e-4b50f1a40c88"
        },
        "item": {
          "id": "fe88f114-26ab-4ef4-ac80-bdc168fb3e47",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "2c956cc2-928f-4261-a5d7-385c98ddf4bb",
          "status": "Not Found",
          "code": 404,
          "responseTime": 63,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a6db3af-b886-4876-a39e-81d796f84aea",
        "cursor": {
          "ref": "a9c31675-8cbc-492d-9a33-782e16c66c8f",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "2bfa8514-3d76-4a43-a89c-8fdf44bdc3ef"
        },
        "item": {
          "id": "2a6db3af-b886-4876-a39e-81d796f84aea",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "813c0005-e1f4-4e17-898c-fc61d2a435e5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 73,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47663cf6-b40d-423a-861f-32b20c1565d8",
        "cursor": {
          "ref": "99014ae0-1a61-4e8c-b8eb-b2703ff1a041",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "b715718f-a6a4-42c9-9fbd-891a87a490c2"
        },
        "item": {
          "id": "47663cf6-b40d-423a-861f-32b20c1565d8",
          "name": "identifiers"
        },
        "response": {
          "id": "084c08fd-a5bc-4a97-a10a-b4ed1d82464b",
          "status": "OK",
          "code": 200,
          "responseTime": 69,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ed37aca-c1d9-49f4-9182-791b68347afd",
        "cursor": {
          "ref": "857cb400-f6e5-4499-8e1e-a9d8f41578da",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "b487825e-cf86-4619-be8c-6a3f623fdaa4"
        },
        "item": {
          "id": "2ed37aca-c1d9-49f4-9182-791b68347afd",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "a11df860-81e7-4705-8fb8-d7547f06276d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1b0cfaf-7855-4b24-92e1-4ff11ee66ff3",
        "cursor": {
          "ref": "281da165-49d7-4ff9-b7b4-3e09372c8138",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "d0cd0cfe-e6f9-40ba-a87b-331ea9fb509e"
        },
        "item": {
          "id": "a1b0cfaf-7855-4b24-92e1-4ff11ee66ff3",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "0a5e229d-a1ff-4c94-9056-b95ebc8b3108",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb775536-dc28-4929-92cf-be80a3f12c8d",
        "cursor": {
          "ref": "a8f26d64-1913-432e-bd8f-b1087328b7d1",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "1a396bf9-9a42-40b9-af19-112685c8f5a7"
        },
        "item": {
          "id": "fb775536-dc28-4929-92cf-be80a3f12c8d",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "a1ffce68-bb3d-430f-acb0-927ebc2615de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e14f32a-308a-44d0-b4a5-bae5b2febbe4",
        "cursor": {
          "ref": "807ed327-86eb-4cd2-80e3-4a2b86735740",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "6610c8c8-1b2d-44a5-aa77-35a75dc7d23d"
        },
        "item": {
          "id": "4e14f32a-308a-44d0-b4a5-bae5b2febbe4",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "c64f5c9b-76c0-4652-b70e-343aa65a7f62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d0d675f-6311-4384-ac76-3a8e4bbb3555",
        "cursor": {
          "ref": "3c2f81ea-9a2f-4a64-930f-c3181ed9f910",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "e6c806ed-4dbe-466d-a6cc-c9240024da2b"
        },
        "item": {
          "id": "2d0d675f-6311-4384-ac76-3a8e4bbb3555",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "c9141ba2-6ab3-4a05-b1ea-6c51d4902973",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 150,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec548481-8548-4181-beaa-3df1afca5646",
        "cursor": {
          "ref": "ec9a79d7-6fa8-4deb-a0bd-8c416ec3526c",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "37befe74-d0c2-4997-aea1-8650df982414"
        },
        "item": {
          "id": "ec548481-8548-4181-beaa-3df1afca5646",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "9799b61a-3dd9-4183-8ed5-95964590bbef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0e61fee-a617-4c66-b8cf-f6cdd78560d9",
        "cursor": {
          "ref": "3b978d38-ff43-4a4f-a03c-4d4d4cc7fba9",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "9c0929e7-fff2-411b-9c17-95927944aae1"
        },
        "item": {
          "id": "d0e61fee-a617-4c66-b8cf-f6cdd78560d9",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "c2002822-6eb4-4964-ae6b-88be628c9b22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "148fe3fc-444e-4bf2-9e0b-966c2478ea54",
        "cursor": {
          "ref": "5334547b-ee6d-4f40-bf8b-f629b422dbc2",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "0f3132d0-8165-4aa1-b76c-1d7b3e570ad1"
        },
        "item": {
          "id": "148fe3fc-444e-4bf2-9e0b-966c2478ea54",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "e7a3b06d-5eaf-460e-8696-836e4b39cfe3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0619a8d0-0949-4e57-acd3-d9ad64909e45",
        "cursor": {
          "ref": "1c9d1da5-e6a5-4b10-a7e0-4d09213d5a73",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "4c7db71a-2c45-4ed4-b687-df4f4cad4cdd"
        },
        "item": {
          "id": "0619a8d0-0949-4e57-acd3-d9ad64909e45",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "3f3bf2a0-1534-47ef-afc0-166224430ca6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d776ada-7a06-4f9a-af63-f6c8a2e71eb5",
        "cursor": {
          "ref": "f3e25565-4cc4-4c67-98a6-99a81c34b096",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "13644bea-2c87-4186-a938-7a765267d545"
        },
        "item": {
          "id": "6d776ada-7a06-4f9a-af63-f6c8a2e71eb5",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "63e4d64d-4589-4a3b-b6aa-fa748504127d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b377ee3a-6148-4f43-9db0-e9881e167e75",
        "cursor": {
          "ref": "a5f67c5a-7e9b-414d-bb3c-a16dd82f2711",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "6b8f07e8-0ade-423c-ac2d-24f13fa8e01d"
        },
        "item": {
          "id": "b377ee3a-6148-4f43-9db0-e9881e167e75",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "7e94158b-cba9-4608-a255-cc5f3e8db6ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 130,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "905c6ad8-f03f-43d7-a66d-bf617e24a65f",
        "cursor": {
          "ref": "ba330f26-d3aa-4d74-b167-437d9f1da818",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "512e98f3-11c0-433f-b0a0-3e095468e3aa"
        },
        "item": {
          "id": "905c6ad8-f03f-43d7-a66d-bf617e24a65f",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "2b7252f9-e31c-46cf-829b-eb0faef035ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47e2177c-d725-48cc-b5a3-f5f2c65807c3",
        "cursor": {
          "ref": "4bb215e7-5ec3-49a6-9a53-4f9a9794335f",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "0f9ee81b-a75b-45d0-b498-ece5b358e3de"
        },
        "item": {
          "id": "47e2177c-d725-48cc-b5a3-f5f2c65807c3",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "5e29ffa3-6e7f-43d3-a750-0062c9f7fe74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76e14d0d-e64e-414a-9d9e-d34576f6c090",
        "cursor": {
          "ref": "fdcd7ca7-732a-428f-acbc-9d0aa5a45c04",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "aa78d0ff-29de-4d49-b0ab-7f8ccfeeaf8b"
        },
        "item": {
          "id": "76e14d0d-e64e-414a-9d9e-d34576f6c090",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "aee5b8e7-c911-4639-8716-a1583ca72191",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9d5616f-cb54-4ba2-8f40-124acd3b9048",
        "cursor": {
          "ref": "3cc26fa8-255a-443d-9747-5e497faa801f",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "914222bb-5f83-43e6-83d1-22bf5573d977"
        },
        "item": {
          "id": "a9d5616f-cb54-4ba2-8f40-124acd3b9048",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "1d818f6f-9e0b-4c6b-be57-290c48efa783",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1285e8ec-2476-42b3-aae1-816f6c55080f",
        "cursor": {
          "ref": "af898599-3aaa-4a3a-8ec2-7144e2aead32",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "428268ad-b86e-45b8-b3be-1012bb4df79e"
        },
        "item": {
          "id": "1285e8ec-2476-42b3-aae1-816f6c55080f",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "3188657f-b332-4324-82f4-772bdedd8785",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f62be10d-2a7f-47eb-8d05-601c8bf710f9",
        "cursor": {
          "ref": "b1152ed3-1e8f-478b-b266-48e1f3a57223",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "d9bfeddd-b7f1-4118-b3ba-daa869fc5fcd"
        },
        "item": {
          "id": "f62be10d-2a7f-47eb-8d05-601c8bf710f9",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "444c48fc-67e4-4cea-87b2-b14076867d17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce5f01b3-7f10-4307-8f07-7eed4e5a9af2",
        "cursor": {
          "ref": "a0e8c171-8744-46d5-89c1-8245a5aa4c39",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "0a29e323-ad7d-40fe-80dc-29fb472de7ef"
        },
        "item": {
          "id": "ce5f01b3-7f10-4307-8f07-7eed4e5a9af2",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "92e08cc6-9e42-4c86-8666-3c86f59ab7dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 112,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d831889-f7be-42fe-8bf6-3ad47f155b04",
        "cursor": {
          "ref": "25006b5a-38e6-4818-883e-2119b5586336",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "7e38a7ab-0fe4-4e61-ab1c-e642df1ec531"
        },
        "item": {
          "id": "9d831889-f7be-42fe-8bf6-3ad47f155b04",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "d67f7c5e-fe2a-4fac-8db0-df9eab061afb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49ded70e-2daf-41f7-9768-44f89f47509d",
        "cursor": {
          "ref": "d1756542-9819-4162-923f-a742c8a64a5e",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "ce2fdbc6-c9e7-4749-b653-b41ac34fed9c"
        },
        "item": {
          "id": "49ded70e-2daf-41f7-9768-44f89f47509d",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "c05e2a4b-e713-40ab-97c3-5ea2f30e215e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9f6499b-faee-4f43-bb80-d2ee973d5469",
        "cursor": {
          "ref": "b4d77b50-c519-4ca7-acbb-1bc97a56f247",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "7989b6c3-e42e-48f1-a0a7-8244fea5d621"
        },
        "item": {
          "id": "c9f6499b-faee-4f43-bb80-d2ee973d5469",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "e1587bef-d107-4f3d-aca7-f9ac35cb3fcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2359ff16-fb8e-455d-93cf-742a883d1140",
        "cursor": {
          "ref": "b669e80e-050b-43f3-9f5d-95edf3f6d6ea",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "9aa69185-8b9f-4f96-b4f1-748dbfea6fdd"
        },
        "item": {
          "id": "2359ff16-fb8e-455d-93cf-742a883d1140",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "51fa1efd-250a-4e57-9840-f9bfd4b26ba5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 415,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fbf59a8-3394-4101-bcb1-102f46475544",
        "cursor": {
          "ref": "fda18175-4cf0-45e2-b74e-fce6c6948c6d",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "36ca7c71-df8c-43cd-9662-f5da1e952927"
        },
        "item": {
          "id": "4fbf59a8-3394-4101-bcb1-102f46475544",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "321bfd6b-0b13-4920-b495-07b153c9866c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "707d2354-4704-4cba-a0e2-ac00d2902698",
        "cursor": {
          "ref": "58c790e1-f520-4376-a36d-9df14bdbcaf7",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "d8fff2b8-7695-4e61-8980-ddac5d9faf96"
        },
        "item": {
          "id": "707d2354-4704-4cba-a0e2-ac00d2902698",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "5dff2e32-7d45-4488-a632-7083571c8d1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2536b853-eb6a-4233-842f-58301df92b71",
        "cursor": {
          "ref": "39e8ea3c-475f-4811-9955-ec591c4c5a49",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "3637ea8d-cc71-4250-aaec-96b43090f45c"
        },
        "item": {
          "id": "2536b853-eb6a-4233-842f-58301df92b71",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "19cb2f21-28aa-44c7-b6c0-ef0a1877fd18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87e42a2a-fc2f-41bb-bf2a-af0c5b4a07a0",
        "cursor": {
          "ref": "40c03cd0-a7d7-4b72-bfd1-9ec23652597e",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "7603d987-8788-4af5-b631-c988ddebd108"
        },
        "item": {
          "id": "87e42a2a-fc2f-41bb-bf2a-af0c5b4a07a0",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "8e5b2362-7886-4337-b2bd-8af5e33a37f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8331fcbc-e448-48cf-988e-24f92f1c2d5c",
        "cursor": {
          "ref": "56ee37c9-6b6b-4351-82fb-4f83e2fbd0db",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "d491a4a9-1c1b-42e5-b40c-2fcbcffbf4ee"
        },
        "item": {
          "id": "8331fcbc-e448-48cf-988e-24f92f1c2d5c",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "25c75235-9e1e-4eb1-aed5-126b820b8573",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 112,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16603e0a-948f-48d1-9e67-e4eb70802a5e",
        "cursor": {
          "ref": "1961164a-b806-4bcf-a158-5df4b33cf233",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "51b0150a-b037-41b1-b489-9df2098199d0"
        },
        "item": {
          "id": "16603e0a-948f-48d1-9e67-e4eb70802a5e",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "35f1a4c3-b4d2-4453-8306-6d7bc20acf0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51e403a4-1a8d-4893-a8b0-4608fb6c5db9",
        "cursor": {
          "ref": "d946332e-bd41-4ca6-827c-99971552c5d0",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "37407c49-b802-4e65-9d2c-431a06ab4994"
        },
        "item": {
          "id": "51e403a4-1a8d-4893-a8b0-4608fb6c5db9",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "d33f08f6-9fcd-4b75-ba52-5454584349cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f64742c0-12c2-4bdb-9059-fca990eb152c",
        "cursor": {
          "ref": "a154045e-4d88-46e9-8288-ccf07d20df98",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "67b563bd-5971-4084-9a68-0c2d4a0efa8b"
        },
        "item": {
          "id": "f64742c0-12c2-4bdb-9059-fca990eb152c",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "d100d627-9938-40cd-9494-bd7ccee69556",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1edd5e26-0f03-400e-be5c-315c439bc043",
        "cursor": {
          "ref": "dd4c545a-33ce-4f9e-927a-5023ad93882e",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "33861c1a-35f8-4293-bafb-44239ef9b6d7"
        },
        "item": {
          "id": "1edd5e26-0f03-400e-be5c-315c439bc043",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "751fffbb-53c3-4fd0-9f53-4166ad77595f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9360d727-a098-4627-90f8-2e1dac6d2744",
        "cursor": {
          "ref": "9e649e50-83cd-4d4a-94a8-4450b89737dd",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "81689ebf-36bc-4123-b75e-78a75e3d685b"
        },
        "item": {
          "id": "9360d727-a098-4627-90f8-2e1dac6d2744",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "eecab963-eafd-4700-bf08-d31400738d1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "383e178c-0c31-4f46-8dd6-37e584c3b896",
        "cursor": {
          "ref": "b4ff2c59-81c9-4de3-aaa0-c71eca5c8546",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "7a7de755-051d-412b-8c8b-12b12b85d6af"
        },
        "item": {
          "id": "383e178c-0c31-4f46-8dd6-37e584c3b896",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "37eea320-5600-4bae-8295-64f127dc48ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8caa3a39-8d41-4f4f-b5f1-04cfdf1c6624",
        "cursor": {
          "ref": "bfe4d744-590c-407c-b152-0d33a53d773a",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "8136f416-73e8-4696-82ff-9bebb60c248f"
        },
        "item": {
          "id": "8caa3a39-8d41-4f4f-b5f1-04cfdf1c6624",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "2d5da751-f13c-4ae6-b556-1cd4eee41078",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81720418-5b81-4552-961f-b0ddd09a7974",
        "cursor": {
          "ref": "b47e970f-8f7d-40ca-8b4c-57282b848061",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "ec74f729-edab-4abc-abad-23f3171513bd"
        },
        "item": {
          "id": "81720418-5b81-4552-961f-b0ddd09a7974",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "3e6eecf0-05d9-4fcb-9b09-8072f1ecddfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5ae5b27-c378-42b4-9129-94a902404d67",
        "cursor": {
          "ref": "b1fc964d-9850-43ec-b49b-4035d86751cb",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "d6a52813-614e-4d24-ace9-866e264aebe5"
        },
        "item": {
          "id": "e5ae5b27-c378-42b4-9129-94a902404d67",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "03bbeff9-57b6-4e42-8b1d-fe07d836c291",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b57cfc4-fae5-4355-8294-0ac1edd90dba",
        "cursor": {
          "ref": "3ca76420-e37c-46cb-9be7-edbc5b9d81b9",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "cc5b87cb-c57e-4030-92c7-9785735605e2"
        },
        "item": {
          "id": "3b57cfc4-fae5-4355-8294-0ac1edd90dba",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "78b2e77f-0bac-4ea5-8c59-ec05619830a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fb3687e-0808-43f8-91b7-6d64a0a0a18d",
        "cursor": {
          "ref": "c1e0a685-7dbd-41e2-b281-3d8187afc545",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "be0a8b3c-44d4-4557-b6ec-e296c5597396"
        },
        "item": {
          "id": "6fb3687e-0808-43f8-91b7-6d64a0a0a18d",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "cf1961ce-e601-4857-86f5-5f2a1b36b55d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dcfae62-6913-4930-9e54-462c7caa8ab1",
        "cursor": {
          "ref": "a2b3f1f4-47b3-40de-954a-509a3dde62ac",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "600bfd8f-75e2-4c1e-9145-4728f6271fe5"
        },
        "item": {
          "id": "4dcfae62-6913-4930-9e54-462c7caa8ab1",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "18aaf7e6-214a-47bb-828d-4f5b68b46826",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f599bb5-51a8-4522-a5ea-5451a0e456f8",
        "cursor": {
          "ref": "fac5d1b0-7d59-4050-be7d-a9267fe21960",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "68536452-c626-4dc1-b863-1f849d8a34f9"
        },
        "item": {
          "id": "2f599bb5-51a8-4522-a5ea-5451a0e456f8",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "b5fc6338-83e1-4b3f-9d1f-acbf68829c8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c040642-792c-40eb-aa0e-5440a94bd7af",
        "cursor": {
          "ref": "fff853a8-3fe8-4fdf-a39e-4db120e16640",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "3254fc27-760f-4cd9-baa6-9445b24c24f3"
        },
        "item": {
          "id": "8c040642-792c-40eb-aa0e-5440a94bd7af",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "54c58926-f14a-4007-a171-9e3272c142d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae91e31e-6b5f-45a7-a2bf-f3e3e1df7442",
        "cursor": {
          "ref": "dea24a7f-729a-44dd-b4d9-8f550d97882a",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "bd7d04e5-5542-4601-8bf0-996294d1f29e"
        },
        "item": {
          "id": "ae91e31e-6b5f-45a7-a2bf-f3e3e1df7442",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "dee78bd0-cd9f-4dfe-8d41-1a16f1e6bd59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d85db2c3-0b78-43e1-86bf-b090f9c06bb5",
        "cursor": {
          "ref": "08839da9-93d2-43ad-a14e-5706ded6e36e",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "86cce1e1-ea9a-4f07-a151-07536abb7b64"
        },
        "item": {
          "id": "d85db2c3-0b78-43e1-86bf-b090f9c06bb5",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "82c4fc37-24e0-449a-854f-66cf433ba464",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ffb5932-12e1-4280-ae8d-b12e7fa76b12",
        "cursor": {
          "ref": "4c378467-bf36-4268-9c5f-a360586b7c20",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "fec1353d-afe6-4565-a6c2-2d075813d930"
        },
        "item": {
          "id": "8ffb5932-12e1-4280-ae8d-b12e7fa76b12",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "23bd8b87-ea9e-44d6-973f-3b05de36f089",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02174846-a8d1-4c6f-a764-d18daec83cb5",
        "cursor": {
          "ref": "2fe82304-ebd6-4206-893c-c9f2116c245a",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "f833d1e6-009f-4d4f-ad89-361c1814d523"
        },
        "item": {
          "id": "02174846-a8d1-4c6f-a764-d18daec83cb5",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "4115ca36-3bce-493c-8efc-7656a1e9f779",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb186a41-aabc-425f-b659-6df98da8a7b8",
        "cursor": {
          "ref": "2c8356a6-8a16-4f94-931f-687a7731cf61",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "0e40ab9d-d236-48d9-bb4e-bfa5714529e9"
        },
        "item": {
          "id": "fb186a41-aabc-425f-b659-6df98da8a7b8",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "8f56b453-1169-4fcf-bdf2-5b388a26d193",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "957b27b5-7cd3-4b18-ae3b-c5d86ba06fb8",
        "cursor": {
          "ref": "fc32b4d4-5c97-4fef-93d7-7ed9fa84da6b",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "9adde3ec-9e08-443a-ac51-9a8a3a244e44"
        },
        "item": {
          "id": "957b27b5-7cd3-4b18-ae3b-c5d86ba06fb8",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "2402dcdb-765c-4668-803a-b5353a82dfdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50521224-78c5-43fa-8daa-819dcdb39342",
        "cursor": {
          "ref": "7dfac46a-2e25-4069-abbd-1af11998f993",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "1e317b8c-f220-42dd-bb5d-ea5f213e9388"
        },
        "item": {
          "id": "50521224-78c5-43fa-8daa-819dcdb39342",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "a112d33a-477e-4b8c-9af5-638cd844239b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ded6ad8-307e-49d3-97d1-99dfb12e55e6",
        "cursor": {
          "ref": "fe8ce95e-faab-47f2-8dd2-7a00011fcd36",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "5c4d8776-5dcf-47fb-a754-bb485a7053b2"
        },
        "item": {
          "id": "8ded6ad8-307e-49d3-97d1-99dfb12e55e6",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "99303416-80fe-48d2-be1a-f4b892ae5f2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "503815cb-a6ef-4902-8548-9ae30542a38b",
        "cursor": {
          "ref": "b56f4dc2-9ea8-4d2e-816b-f43181f5d60d",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "e329b9c1-9fc8-4169-bb86-cb22a6249151"
        },
        "item": {
          "id": "503815cb-a6ef-4902-8548-9ae30542a38b",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "6e19253e-51fd-49ba-8d85-60c54f70a09f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f47db08-099d-49b0-aecb-9b2f7d0e4f79",
        "cursor": {
          "ref": "fcde2b83-0891-448d-923d-14356f6362b3",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "a365968c-49cf-443a-834b-16f3c85f6e69"
        },
        "item": {
          "id": "1f47db08-099d-49b0-aecb-9b2f7d0e4f79",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "cbd9d1b8-d06a-426a-b43c-bd39d208182e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9422a8c7-a5bc-4c61-8e8f-b2b2b117eddc",
        "cursor": {
          "ref": "13144b41-0ea5-4364-b8c3-af5ed9aa69ef",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "e1a01de7-e4cc-4e56-ba3d-bef023601a1b"
        },
        "item": {
          "id": "9422a8c7-a5bc-4c61-8e8f-b2b2b117eddc",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "41c890bd-126f-4b30-839a-35674c2a8cd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ee0fedb-00e3-4b6b-b0c5-09bf4c578f57",
        "cursor": {
          "ref": "f0b69a86-1a88-46ab-bc96-5a60d0b52e0f",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "ec740dc7-b88f-41cd-b13b-6321f1e61cf7"
        },
        "item": {
          "id": "2ee0fedb-00e3-4b6b-b0c5-09bf4c578f57",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "84c6f738-bfc2-46de-a5b9-6609143aadd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffef3e99-9deb-4c8b-adf8-a4422bb0fa60",
        "cursor": {
          "ref": "4f30e0b4-8a80-45c8-9f9b-d4437584e5e0",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "a2fc0648-1f82-40a9-b1b2-e2fc62aebb38"
        },
        "item": {
          "id": "ffef3e99-9deb-4c8b-adf8-a4422bb0fa60",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "655754c3-26a6-42e8-9f0a-dfa39719556f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45864ec5-e506-4c3d-9063-a28fa0017b0c",
        "cursor": {
          "ref": "3bee77cf-6b7d-40d7-9c5d-bd860effdcc4",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "66867369-ffd7-49f8-aac5-8145c79d2ff7"
        },
        "item": {
          "id": "45864ec5-e506-4c3d-9063-a28fa0017b0c",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "41538020-fb71-4be6-9867-e32ac0462c3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c49b45e3-133b-4a91-bb2b-29f5d3c38c2b",
        "cursor": {
          "ref": "cc0083ab-e381-429c-913f-78c62141bb47",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "81cfc1d6-42cc-42f2-b31d-bfa6d8c4f007"
        },
        "item": {
          "id": "c49b45e3-133b-4a91-bb2b-29f5d3c38c2b",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "23f1d26e-817f-4d00-913b-229eb8b3d3a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e46695a6-6e70-4d2c-91c3-97967710ab4a",
        "cursor": {
          "ref": "f8acf4f7-71df-4c82-b932-550b5f262e9f",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "807b10bc-cb0c-4ffe-bd21-3312c5cc1a9f"
        },
        "item": {
          "id": "e46695a6-6e70-4d2c-91c3-97967710ab4a",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "a59f9bef-af5f-44d9-9de9-b0a0942662aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68e74384-c5fb-486b-9d45-8c8014543de4",
        "cursor": {
          "ref": "34e3334a-11e3-46ac-8837-3b79f4dc89c8",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "8b3a6821-721e-44ad-8eab-9efe02745397"
        },
        "item": {
          "id": "68e74384-c5fb-486b-9d45-8c8014543de4",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "2b37e922-f39d-4b9d-95ca-b1041af29042",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "381ec622-fa22-4eac-a216-d1c0cc78e45e",
        "cursor": {
          "ref": "f88bffec-b91b-4a13-ba23-21ffb18320c0",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "37a2c19a-73f6-495b-b34d-d660c15095a4"
        },
        "item": {
          "id": "381ec622-fa22-4eac-a216-d1c0cc78e45e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "d573d7be-c8ba-4aaf-a2af-9bf92d63ca49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66465ad3-998c-4fc5-af96-d784efbe1766",
        "cursor": {
          "ref": "2912201f-1e8e-4c0a-b6de-36e6a3ed94a4",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "79eb1c05-650d-4db5-a9b1-c5258ccf86c2"
        },
        "item": {
          "id": "66465ad3-998c-4fc5-af96-d784efbe1766",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "574d18b9-dd66-4b3c-8892-07bce821390c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b801150-ebf3-4043-99dc-8f79eb6506b6",
        "cursor": {
          "ref": "0c97f39d-de09-411b-9835-8c7180d7f0d4",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "6a6dbc5e-019e-4396-9667-f76212483fbb"
        },
        "item": {
          "id": "9b801150-ebf3-4043-99dc-8f79eb6506b6",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "a6bf811f-3a3e-44ba-a395-50101d23333b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7c267ed-2b6b-47fd-9d73-9325a3ff7592",
        "cursor": {
          "ref": "efccba52-5908-4ca5-a0ef-0974c9a7644e",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "029cc3d9-6bb6-46f0-a4fd-23252e4a740a"
        },
        "item": {
          "id": "c7c267ed-2b6b-47fd-9d73-9325a3ff7592",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "352bf411-d078-4e96-9d12-3e201d8ebeb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05a74309-57b7-4e1b-9064-9ba8d4d6c6ea",
        "cursor": {
          "ref": "b4650d5a-e006-486a-b2a7-b63d88a2042d",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "449f6a50-b5a2-4b50-aef8-1f494e0a1855"
        },
        "item": {
          "id": "05a74309-57b7-4e1b-9064-9ba8d4d6c6ea",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "e416eae1-b162-4a11-ae65-42def47aa420",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "466e0eb0-3dce-4880-bb63-d510adc2f99a",
        "cursor": {
          "ref": "ee6f190e-ff31-438d-974f-8620d05b1986",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "6ceeecbd-8e88-40b9-a31a-d8f8430e0e9f"
        },
        "item": {
          "id": "466e0eb0-3dce-4880-bb63-d510adc2f99a",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "2f466f12-d11e-4bca-a1c0-893ad3d5060b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c41863d-6c30-4fea-88d4-6f749afa9ca8",
        "cursor": {
          "ref": "037c9b13-5aa2-4e33-9a09-f048d64f3bbf",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "e027b500-a978-4177-a4cb-c979adccdfa8"
        },
        "item": {
          "id": "8c41863d-6c30-4fea-88d4-6f749afa9ca8",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "8127e3be-233f-49d1-bfc6-7883cc1ff729",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c7229fb-af4a-4d37-8d45-bebfb54a44b4",
        "cursor": {
          "ref": "5a8a54e7-0b8e-4d5b-b558-04bf8e1d6a9e",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "493f5c61-8e05-4c43-ac48-2a3ccf8ce6b0"
        },
        "item": {
          "id": "5c7229fb-af4a-4d37-8d45-bebfb54a44b4",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "0efa3b0d-1b0e-4f3b-95ca-497f390f16b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c405bbb6-e669-4607-a0e9-40991a170c09",
        "cursor": {
          "ref": "b11f115b-99a1-4c49-aec7-304c4a143f4e",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "d451aafa-e3bb-48de-8234-a1eace977d31"
        },
        "item": {
          "id": "c405bbb6-e669-4607-a0e9-40991a170c09",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "85a1e884-9599-40dc-9145-777c41c3113c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be47b448-c53a-4507-aa2c-a9ef464f7cb6",
        "cursor": {
          "ref": "b97ca8ec-0122-4e98-b4d7-2a680ad3e150",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "98bcc8af-9e47-4888-b055-27f5db4bc64b"
        },
        "item": {
          "id": "be47b448-c53a-4507-aa2c-a9ef464f7cb6",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "e9fec061-3af0-4626-ba9c-b25e40370954",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6fea87a-c7ae-4ccf-bf87-e840b90e5b26",
        "cursor": {
          "ref": "00afd311-4004-4640-87da-b51b8abf4ae0",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "aadb9741-2ec6-4304-85cb-b318b025152e"
        },
        "item": {
          "id": "a6fea87a-c7ae-4ccf-bf87-e840b90e5b26",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "86577b6b-933d-413b-8c25-851384408d4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc19d296-fd06-42f8-89da-e460a901e28a",
        "cursor": {
          "ref": "9ffc9b63-9fc0-4536-a463-5684b7117f2f",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "c1fd4412-8ab5-4177-b113-897f1e47003e"
        },
        "item": {
          "id": "fc19d296-fd06-42f8-89da-e460a901e28a",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "50f0772f-143b-4369-a6da-23e3374c86e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb306d20-5881-4c06-aa2e-4d1172a7fcba",
        "cursor": {
          "ref": "46288f50-79b9-4815-ae89-8f58d797e5dd",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "371ecaa0-d1bd-4e54-9785-592626d623a4"
        },
        "item": {
          "id": "bb306d20-5881-4c06-aa2e-4d1172a7fcba",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "917b7542-fc5f-4385-9eb0-74aa95548090",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5256445-f2aa-482b-a39b-18f7d6611fd6",
        "cursor": {
          "ref": "bfe79fdb-9501-4917-a38a-a55a046a8ed8",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "2af21f1a-0d44-429a-9726-37e2bfe8f312"
        },
        "item": {
          "id": "a5256445-f2aa-482b-a39b-18f7d6611fd6",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "f93e7e16-9f33-4f67-9757-7708affd68c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d047c2d-de58-4a3e-b88c-201aa24faf99",
        "cursor": {
          "ref": "ab095031-8bae-465b-9add-8817961639be",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "ed83b006-54d0-459b-b818-5f483eba40d9"
        },
        "item": {
          "id": "6d047c2d-de58-4a3e-b88c-201aa24faf99",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "71046117-e744-4af1-9eb3-c380a67967e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e22fba1f-a7a2-4010-83cb-8a690812d351",
        "cursor": {
          "ref": "1ab4335e-2471-4c2c-ac40-ea0dcabf3761",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "ba6ce6b4-304f-4cf5-9d3c-0489ca70e071"
        },
        "item": {
          "id": "e22fba1f-a7a2-4010-83cb-8a690812d351",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "8c820444-acb5-477a-abfd-93e8964d7e62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed1959de-cee5-45a3-8ca9-753079c672eb",
        "cursor": {
          "ref": "7ad27eb9-6d79-469e-91e8-3dbc9570b37a",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "3c26cf40-a7da-45db-9cd3-b6dd6c7ffe64"
        },
        "item": {
          "id": "ed1959de-cee5-45a3-8ca9-753079c672eb",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "892d398e-b818-4e3b-bf64-3d6a37da4c1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "991577e1-2f3d-42ae-868d-877dafd7e268",
        "cursor": {
          "ref": "1751441c-b0c5-480b-b08c-8138a46207bc",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "d8ae6aaa-eaa6-44f1-8afd-d5b161183aab"
        },
        "item": {
          "id": "991577e1-2f3d-42ae-868d-877dafd7e268",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "4341ed5f-03c0-4a84-98a7-ae20b245e989",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dc57c94-52ab-467b-a669-46c32f0e4503",
        "cursor": {
          "ref": "134f432c-bdbd-438f-a55d-fb4b2b1dc464",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "56f206f0-81de-4865-952d-07c67bcf9264"
        },
        "item": {
          "id": "9dc57c94-52ab-467b-a669-46c32f0e4503",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "9d7fd77d-c137-4b8c-9046-08d428414dd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e69ce4bb-af53-4374-b838-1246401c9ff9",
        "cursor": {
          "ref": "281bb946-2ade-4963-9efb-d043d70d9e4a",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "16271970-4476-4d1f-afca-d054943a4251"
        },
        "item": {
          "id": "e69ce4bb-af53-4374-b838-1246401c9ff9",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "39c102e6-7542-470b-8c5c-b06c7eb18a55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5c03e5d-3bfc-46f9-967d-35942c410633",
        "cursor": {
          "ref": "0c405412-226a-48e8-b97e-601ebf33fe7c",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "93c91689-1fda-436a-9451-201509d55fa7"
        },
        "item": {
          "id": "e5c03e5d-3bfc-46f9-967d-35942c410633",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "0071792a-2392-4a1a-985d-3dde9b9c6454",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "988b49a6-468b-49aa-981f-8386e6b52e3b",
        "cursor": {
          "ref": "e64c63d5-5fcb-4636-93e9-700495a6007f",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "e0598a95-5852-4772-bd93-f66d69f05a79"
        },
        "item": {
          "id": "988b49a6-468b-49aa-981f-8386e6b52e3b",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "46e1bc61-db8b-4345-ad47-0bfd9f9da5ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d43c4346-a089-41af-9360-4f32d9243b5b",
        "cursor": {
          "ref": "2905372e-175b-4154-bfc9-e4ede3dc4d53",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "9760f919-5816-4c57-9fc6-8514847ff2c8"
        },
        "item": {
          "id": "d43c4346-a089-41af-9360-4f32d9243b5b",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "b64530ee-ee58-4202-9733-3a22793adcf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89210fef-6f29-466e-8697-dd49928a3218",
        "cursor": {
          "ref": "1ddd8b46-0f48-4b24-8b83-373ef5bb97eb",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "57e7dbf0-154c-4038-9f08-e6b1015312a9"
        },
        "item": {
          "id": "89210fef-6f29-466e-8697-dd49928a3218",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "332e87d3-5b6f-4601-9b2d-8cf338f70c95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edfbe4bc-0bf3-456f-821a-9a05a3333895",
        "cursor": {
          "ref": "456f5798-feca-401d-a745-195704c34bcf",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "b43b81d6-17ff-4d8e-9c11-b93b6c695c1e"
        },
        "item": {
          "id": "edfbe4bc-0bf3-456f-821a-9a05a3333895",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "077f73da-e8d7-441c-850c-1247a3b99dcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0af77eb-ebcd-4289-a429-abb521254677",
        "cursor": {
          "ref": "e0cc4ec5-3aeb-4402-b780-492f7616790e",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "a65adff7-811c-492d-a159-ac6f0058bc19"
        },
        "item": {
          "id": "a0af77eb-ebcd-4289-a429-abb521254677",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "8c8567e0-2d58-4cea-b8f5-5e7ea2152682",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30b0db8b-a00c-43d0-b69c-87c6d70b5c50",
        "cursor": {
          "ref": "66175154-9e1c-4f6e-b263-a18e4633c66b",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "a2fb2dcf-530b-4b06-9417-42da6d7f3698"
        },
        "item": {
          "id": "30b0db8b-a00c-43d0-b69c-87c6d70b5c50",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "7adf0540-619f-42c0-ba7d-fd94b0cf341c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e24e81dd-d4d6-470c-8d92-42f0548a9fdb",
        "cursor": {
          "ref": "f713905a-bd93-4d4b-9973-06db8fa2e2a9",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "d872e181-bbc5-4dcf-8b91-c17904cdb8d9"
        },
        "item": {
          "id": "e24e81dd-d4d6-470c-8d92-42f0548a9fdb",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "995f7cd3-d51b-48a9-ac62-44563c4f5d41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d49d5c9-80ed-40d8-aaaa-36ccde7ff429",
        "cursor": {
          "ref": "3dc7a189-c108-4f82-ace4-cfcec1806570",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "a2925e0c-f48d-4ac8-a97d-13d6e91b2829"
        },
        "item": {
          "id": "1d49d5c9-80ed-40d8-aaaa-36ccde7ff429",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "ee7914b3-f74d-4cd7-8c1a-d3aaaf89c90b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fff51bc4-a7f2-49ca-ba05-cfc04314d2a6",
        "cursor": {
          "ref": "1872e732-d3e1-42fd-9fe9-bda9c9428354",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "4b42748b-7bc1-4fcc-a044-a34aefaf8462"
        },
        "item": {
          "id": "fff51bc4-a7f2-49ca-ba05-cfc04314d2a6",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "680ff93c-9201-4810-9863-22c49c45f6de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9999a08-6f65-42ca-a606-ce3008cddca6",
        "cursor": {
          "ref": "896c7aff-0fdf-4090-8605-7881657a971d",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "fa6d9164-d239-4bc6-8712-6316e797ac61"
        },
        "item": {
          "id": "a9999a08-6f65-42ca-a606-ce3008cddca6",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "f8ee6dd3-676f-49ed-b740-6e7dead18d18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7283f38d-8d47-4f15-b448-7ead28702b31",
        "cursor": {
          "ref": "bdad7ddc-33cb-48fc-9153-2857b3b45d16",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "27c7c61a-2aea-40c6-92be-351be7b53e15"
        },
        "item": {
          "id": "7283f38d-8d47-4f15-b448-7ead28702b31",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "a4adec88-f16b-4761-bd4c-b27eba87fc06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d7e3d7e-54fa-4f91-81da-5b042e494342",
        "cursor": {
          "ref": "e5c459b4-fe9d-44e7-a0bc-2e1bd146637f",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "9614023d-fe53-4365-a94e-928dc670750c"
        },
        "item": {
          "id": "4d7e3d7e-54fa-4f91-81da-5b042e494342",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "0b3f0376-1f3c-4596-84ea-0cae04cf3b2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75259800-5ab7-4fb0-bcc3-b1cd61f55493",
        "cursor": {
          "ref": "12552996-3241-45b2-964b-4383135e7277",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "1fd629f2-4cdb-425d-8b7e-dafe3ba5f7b4"
        },
        "item": {
          "id": "75259800-5ab7-4fb0-bcc3-b1cd61f55493",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "99380171-0877-4fee-bfff-7b15571e578d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "367b6c1c-a7ec-408f-80a6-9beb8e79492e",
        "cursor": {
          "ref": "68c6f5cd-87e5-4f58-8a5f-26f30c857659",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "21ea6b20-c109-4d90-975a-9cd6bb2698e8"
        },
        "item": {
          "id": "367b6c1c-a7ec-408f-80a6-9beb8e79492e",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "458fefa3-3f39-4bb2-8fb0-33bea999ab06",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cf3e7b3-49b0-4c27-bef9-d97cdf5b9b4d",
        "cursor": {
          "ref": "d7d4486c-535f-4fa5-b497-10483b47eac0",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "bf352bdc-f6f8-4cf3-be8e-69fcddc89316"
        },
        "item": {
          "id": "8cf3e7b3-49b0-4c27-bef9-d97cdf5b9b4d",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "9ea96104-b0cd-45c8-862f-ba1d56067afe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "ee2753ca-9e2a-4190-9319-4909bcce4f95",
        "cursor": {
          "ref": "544d73a9-4629-462c-a643-ced03784b6ac",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "53740f92-3059-426a-9c31-3d0d457add66"
        },
        "item": {
          "id": "ee2753ca-9e2a-4190-9319-4909bcce4f95",
          "name": "credentials_issue"
        },
        "response": {
          "id": "ce2a745a-46f4-41e6-8d22-3c479c66e636",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "16ffdfca-a0f0-4c45-946d-e61e64b76185",
        "cursor": {
          "ref": "183b954b-6d1f-4dba-ae98-6907f2de1ab3",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "f39016a0-47c6-4972-800f-76f9490fe5da"
        },
        "item": {
          "id": "16ffdfca-a0f0-4c45-946d-e61e64b76185",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "638f84ec-95e6-4475-8220-a153fe751809",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "a956fd4d-d6dd-48c1-8216-c51d8001164e",
        "cursor": {
          "ref": "72268faf-987c-4177-ab84-add61975647c",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "70caaf41-99b3-4215-889c-b340d4b67576"
        },
        "item": {
          "id": "a956fd4d-d6dd-48c1-8216-c51d8001164e",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "f899d936-813b-4c74-87db-9d15a9fa51c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "819ddb40-3d71-402c-a289-db88e5b306bc",
        "cursor": {
          "ref": "1fc61573-0889-4b61-a477-8e01396bff02",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "22572b17-cb34-49e7-b38e-b9c302294f04"
        },
        "item": {
          "id": "819ddb40-3d71-402c-a289-db88e5b306bc",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "dbfe91f0-98c6-4fba-be00-86da5059053a",
          "status": "Created",
          "code": 201,
          "responseTime": 9752,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "00636d98-0bcc-4595-82e5-7cbd9fd5ddbe",
        "cursor": {
          "ref": "3eb5d426-42fd-40f5-86a6-cb9221341546",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "629f58e4-1f06-4cbc-9688-f0c5a4133610"
        },
        "item": {
          "id": "00636d98-0bcc-4595-82e5-7cbd9fd5ddbe",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "29e757cd-3241-4ca3-9d01-bab690c20587",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "22c0e853-d55c-45a3-905a-5d9fdd896ec4",
        "cursor": {
          "ref": "6ec38cfa-7c75-4ae1-9ced-913422a43f6a",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "0961cfdb-7079-4db5-920b-fdf19a269d12"
        },
        "item": {
          "id": "22c0e853-d55c-45a3-905a-5d9fdd896ec4",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "e6c6d37b-6bc7-4e24-871a-d8ad3de05f51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "e5cae2b4-56ba-4bad-9c35-96732df96df5",
        "cursor": {
          "ref": "145ef2ae-9396-4c1e-bcc2-1a6b819b81ba",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "9cb2221e-26c8-4790-a556-e1331932462e"
        },
        "item": {
          "id": "e5cae2b4-56ba-4bad-9c35-96732df96df5",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "57ece0be-d38b-4716-a1f1-17323a39f66d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 130,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57cb8074-0766-4544-a7fa-a443c9e067b9",
        "cursor": {
          "ref": "da52f44e-40f1-4b8c-aa9a-a4e7c277bef9",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "31e6c1c7-ce94-40df-ac9c-0ea76e61afbc"
        },
        "item": {
          "id": "57cb8074-0766-4544-a7fa-a443c9e067b9",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "c357aab9-937e-4677-a686-f1d48277afbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c469767-23fd-4714-8ada-c080f45f6b7d",
        "cursor": {
          "ref": "df0fc8e4-3dac-473a-a05c-f2df3cc8d0f2",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "d9aa69aa-0827-4934-af6e-bc06a39f772c"
        },
        "item": {
          "id": "4c469767-23fd-4714-8ada-c080f45f6b7d",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "3b640966-b94b-48a3-9267-9beaf74bc8e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 129,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "947390f6-8ff5-43b0-9b53-e87a04d04fdd",
        "cursor": {
          "ref": "8a8b778d-5a10-4560-9254-611fed0d3684",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "e9ece982-bb2a-4a37-bee8-77628b789da7"
        },
        "item": {
          "id": "947390f6-8ff5-43b0-9b53-e87a04d04fdd",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "4e6c2060-4557-4f39-9c68-b1fec7a9f514",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d70b1586-cc36-4594-a700-a7fd61f04c3c",
        "cursor": {
          "ref": "5cfce0bf-df47-4575-9a25-dc75c2b2df1f",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "f5275cf2-7302-4b82-a2ba-cd11723b00b7"
        },
        "item": {
          "id": "d70b1586-cc36-4594-a700-a7fd61f04c3c",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "b322b396-53a2-4b44-b63a-e5e59de53386",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6a82f99-11e5-478b-a7e1-d7271aa9f45f",
        "cursor": {
          "ref": "61b71618-99f9-47f5-b425-01141d8c9e5f",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "b0711810-624a-4afe-98bb-850e7f54d46d"
        },
        "item": {
          "id": "a6a82f99-11e5-478b-a7e1-d7271aa9f45f",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "ee63fb50-45bf-41ab-82a2-269521bc13f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39694cc9-6caa-42a7-8fc0-997b1a871ed8",
        "cursor": {
          "ref": "5e912046-86b1-44fc-9a09-3668e4b21916",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "f266a239-c951-4ff1-84f3-7c9cd33b5e26"
        },
        "item": {
          "id": "39694cc9-6caa-42a7-8fc0-997b1a871ed8",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "7937fc61-97aa-41c0-952e-0c62466df161",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c652034a-29eb-4653-94aa-98f494b2fd03",
        "cursor": {
          "ref": "9cb94b82-4aac-414e-86a0-366900f40d78",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "7b9abda0-4b79-4ec5-bb90-11671dbbd04d"
        },
        "item": {
          "id": "c652034a-29eb-4653-94aa-98f494b2fd03",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "3db1b98a-ff51-4aa0-95f4-ce0590910b1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 173,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3f7bddf-daaf-4ef0-afa3-3240513a6098",
        "cursor": {
          "ref": "dd6cba99-9ab8-4557-a539-af70d320d497",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "13c6172d-ac79-4e03-8296-f5e78f99101d"
        },
        "item": {
          "id": "c3f7bddf-daaf-4ef0-afa3-3240513a6098",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "f24fe76d-44bd-4c16-bf40-c5bee79e0833",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f72ed94a-986d-4319-9846-8440cdf68c11",
        "cursor": {
          "ref": "49b7db20-42b0-48d5-9987-a63cb3c5f7ae",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "421164f2-3d03-4108-a592-15ef6238d03d"
        },
        "item": {
          "id": "f72ed94a-986d-4319-9846-8440cdf68c11",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "2aa8c293-ff27-4f4e-afca-de7c7044a838",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bacca153-ae83-429a-92f8-7daaacd1e443",
        "cursor": {
          "ref": "5844031b-14d6-480a-879f-3511a33c7859",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "d24c07f0-09d4-42d4-ab68-c9e2b2b55fb9"
        },
        "item": {
          "id": "bacca153-ae83-429a-92f8-7daaacd1e443",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "57af187d-609d-4d25-850c-2ed9f9ab91a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed4fda37-f243-404c-8fa3-4c01bce8596a",
        "cursor": {
          "ref": "b4045a3c-c42c-46f5-9f17-68ed7f384725",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "9fb10777-8049-430f-ab1a-02b474a5bf28"
        },
        "item": {
          "id": "ed4fda37-f243-404c-8fa3-4c01bce8596a",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "44ef8b65-9472-4e88-8b1a-d41cb81677e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d169c7c-667f-4f7a-a4cf-6cf52a8de1fb",
        "cursor": {
          "ref": "cd05d50c-6684-4b7f-8272-2a3e8944a6a5",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "5f99d69a-3ff8-4c27-bf59-c44c473a2156"
        },
        "item": {
          "id": "3d169c7c-667f-4f7a-a4cf-6cf52a8de1fb",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "13d43f61-9295-47f4-a281-344df46ffc4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7be32c7-e3c0-45fe-8620-f52b71d827b2",
        "cursor": {
          "ref": "7627cfb8-4de3-4abd-8a61-dd9041e0b4f8",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "68e3f281-8427-4564-a6e3-d71f42e08383"
        },
        "item": {
          "id": "d7be32c7-e3c0-45fe-8620-f52b71d827b2",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "6d5b6d89-7743-4f2c-8155-8d2b55a7bb15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5b6082d-f8b2-4153-87d5-1028e898d269",
        "cursor": {
          "ref": "fb21a7e5-3853-46bb-8eb7-a2f7c6b6013e",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "70795cae-4fa3-42dd-a492-9021777e9c4d"
        },
        "item": {
          "id": "e5b6082d-f8b2-4153-87d5-1028e898d269",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "6aecb7a0-aa6f-4fa9-830c-b0fb0a80e991",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "124d1724-5325-406e-9ddd-8c9d28591b43",
        "cursor": {
          "ref": "9ee69fe8-6626-45a6-a830-23e481c0fdb0",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "f891f599-8c5d-4a06-9fab-f6adb4416661"
        },
        "item": {
          "id": "124d1724-5325-406e-9ddd-8c9d28591b43",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "483b46d7-def2-4622-97f6-0fbf38c372ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "159c4e84-573b-4112-81ab-dd50463165f8",
        "cursor": {
          "ref": "9e95a1a1-92b1-4c6a-adff-b4ea7e242cf0",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "e82480bf-024b-4c87-b15c-6b5d04ba490b"
        },
        "item": {
          "id": "159c4e84-573b-4112-81ab-dd50463165f8",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "d0ec9926-aacf-4f66-96f5-d40f76b04289",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "815b7ba6-a432-4de6-a75a-c486c95a3d26",
        "cursor": {
          "ref": "21020fe0-f2cb-420b-8349-029baf65ccc8",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "7177df1a-4aa3-4861-a638-e7652164a937"
        },
        "item": {
          "id": "815b7ba6-a432-4de6-a75a-c486c95a3d26",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "ea145155-9a0f-4d50-989e-7c7875bdde1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0df5b36f-fcc1-4048-95b9-befbde0697e9",
        "cursor": {
          "ref": "48edbd06-02be-48d4-9115-1ccd712b06e4",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "f11c7bac-219b-4401-8644-939149ea9c2c"
        },
        "item": {
          "id": "0df5b36f-fcc1-4048-95b9-befbde0697e9",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "83164a1f-f0de-4d8f-b698-6361db96d533",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "494326f4-6d1d-434b-8e71-bcb404787c54",
        "cursor": {
          "ref": "c73090c5-5ee0-45e7-84ee-4c0854551384",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "f16e5b3e-6251-4b7e-bb02-cfc5e255efb2"
        },
        "item": {
          "id": "494326f4-6d1d-434b-8e71-bcb404787c54",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "56a4e727-5819-4eac-a26c-c43ae3e2dcf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ed31f32-adac-4c21-ba1f-9ec3551bbef4",
        "cursor": {
          "ref": "1fc3d545-e8f1-4d2d-b644-01e36efea81a",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "8c76591d-2a84-4d81-9c32-c63bc6d031e9"
        },
        "item": {
          "id": "6ed31f32-adac-4c21-ba1f-9ec3551bbef4",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "2acddc19-d2fb-42eb-a9e6-a7ffe305352a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27f1b999-a30a-46d5-97db-a191115f138e",
        "cursor": {
          "ref": "bdff396d-deac-4312-bb53-52c54f8a285a",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "f87ba35b-60cf-4a22-a736-357256898193"
        },
        "item": {
          "id": "27f1b999-a30a-46d5-97db-a191115f138e",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "54fcf496-6050-4e8a-831a-f0a434a9cda4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c7c90c2-02b1-4b68-b225-80007f75f486",
        "cursor": {
          "ref": "9d6ec450-667f-4a96-8aac-2b7e2583ec8c",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "6ae092cf-fb1f-4f40-9a55-ce242b063bdc"
        },
        "item": {
          "id": "6c7c90c2-02b1-4b68-b225-80007f75f486",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "c59df2f7-c4e7-441a-817d-6a49eb0c2e39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86b4dea6-2092-46d4-b58a-2eb950fb410c",
        "cursor": {
          "ref": "1f48f678-9d02-4e1b-a2bd-8dc4bfded83e",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "b07ee67f-184f-4fc2-9d03-62a83137ff1e"
        },
        "item": {
          "id": "86b4dea6-2092-46d4-b58a-2eb950fb410c",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "216210f8-8138-4b21-b97a-eeb340c4f0f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac20900a-503d-43d2-84d5-dd9fce7fc3ec",
        "cursor": {
          "ref": "121b0186-70f7-4532-a750-970cfa74b5a2",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "ff7cdb81-c1d7-408a-b3d6-bf4b3f2969ad"
        },
        "item": {
          "id": "ac20900a-503d-43d2-84d5-dd9fce7fc3ec",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "288d786b-de91-4713-ba3b-50423684c3aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e25c609-5868-4abc-bf28-e24b46fe8f1c",
        "cursor": {
          "ref": "08d0b37c-0a31-4bc5-8801-89cecbb3488b",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "a6f5b40e-2b31-4509-a4d1-263e0ed8abe8"
        },
        "item": {
          "id": "7e25c609-5868-4abc-bf28-e24b46fe8f1c",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "bb2f1b32-df9f-4f94-9034-4e3a062b021c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6c75f17-6a17-4fee-9de7-5878db67fcab",
        "cursor": {
          "ref": "f0d0dc12-8332-47fe-9aaf-1a9a6e8a6aff",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "7de06b38-7e59-43d3-877e-fe39299408df"
        },
        "item": {
          "id": "e6c75f17-6a17-4fee-9de7-5878db67fcab",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "049d84cb-8b95-4c2f-bebb-b9448a8e8a88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efda8080-4ce4-4afd-b9b5-7317a55bac12",
        "cursor": {
          "ref": "83bd4481-e109-45aa-a96d-f1fe9e4df41c",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "7f83b78e-74e7-46df-9331-15dc5e915e73"
        },
        "item": {
          "id": "efda8080-4ce4-4afd-b9b5-7317a55bac12",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "b693133e-b0e1-433e-84c6-b72127444f53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a855d02a-abc4-474d-aed3-8c6705f4402a",
        "cursor": {
          "ref": "f073dec7-fdf0-4ddd-afe4-1ec9952285b2",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "8614ff29-9564-4217-8fb3-e7025f82449d"
        },
        "item": {
          "id": "a855d02a-abc4-474d-aed3-8c6705f4402a",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "4021ab88-f5db-497b-a544-d3d64ae1891d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 102,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a92bd07-10ad-4ed3-99ad-1f73c5b4610a",
        "cursor": {
          "ref": "a6c58213-1f39-43ca-a3e7-568ddc11a4d4",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "0329eeac-cb0a-4f8a-b2a6-0677f119e862"
        },
        "item": {
          "id": "4a92bd07-10ad-4ed3-99ad-1f73c5b4610a",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "311a82bb-30a6-4086-b7d9-738f2f762b6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2d43863-2894-4e82-a137-9841ad576e46",
        "cursor": {
          "ref": "39496c7f-6350-44da-9c59-cb383ca9c789",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "a9671700-1a25-4dbb-a316-849ecb86227c"
        },
        "item": {
          "id": "a2d43863-2894-4e82-a137-9841ad576e46",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "c9e930ff-ac8e-4136-8809-c854d3307abd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d34c7c3-8148-4154-8337-13519da9b214",
        "cursor": {
          "ref": "d2db1d5f-1f17-4f8e-b9ab-64dba08b5f0c",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "36b06be4-3b33-46eb-8aa3-7201b39fe002"
        },
        "item": {
          "id": "5d34c7c3-8148-4154-8337-13519da9b214",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "58ca4d46-436b-4c63-ad94-7781aafa0570",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3665d469-2d7d-49ca-956d-e77935978df0",
        "cursor": {
          "ref": "b653de4b-6a5e-4e9a-ab22-0c7114363c4f",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "6a6b22ad-a004-4466-a5b5-3523da9362e1"
        },
        "item": {
          "id": "3665d469-2d7d-49ca-956d-e77935978df0",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "5a6cc9d3-1cbe-4e6d-9f6f-7f122613abf2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad806a04-3928-4fc7-9c1b-b806d752a71f",
        "cursor": {
          "ref": "e64b6d9b-177f-465d-b010-6f301480bc8c",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "ec28749c-3bfa-4f37-88ac-a81495f42c6e"
        },
        "item": {
          "id": "ad806a04-3928-4fc7-9c1b-b806d752a71f",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "0982b1ac-d57e-42cd-83f1-72b8f1a0417f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "328833b2-05e2-4c10-89e9-c1af6d7a5341",
        "cursor": {
          "ref": "d83ebc65-05f1-4050-b7c7-5e320ee8c218",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "a6dc7b67-da6f-48a8-8987-8ba076e1a836"
        },
        "item": {
          "id": "328833b2-05e2-4c10-89e9-c1af6d7a5341",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "379f4436-f2eb-4089-872f-9ed4a1fbd12d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e42cb8d6-8e14-4976-bc96-7825437ec4b1",
        "cursor": {
          "ref": "9596b99d-f202-465d-bc18-f77103ebaf6d",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "e3cf4485-d63e-4fac-8fc5-86f0846c339d"
        },
        "item": {
          "id": "e42cb8d6-8e14-4976-bc96-7825437ec4b1",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "492dfd9d-5f99-427f-984f-3c67d4bf32a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0365fa1d-28cc-4b64-9699-fc28489beaa5",
        "cursor": {
          "ref": "fe016a30-eb18-4aef-9932-9a9c5dae70e4",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "3d9ab612-d869-443b-81c3-99538e60f66b"
        },
        "item": {
          "id": "0365fa1d-28cc-4b64-9699-fc28489beaa5",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "5d548709-40b3-4b5f-8d79-087f54f546b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "787c8be5-cffb-4da8-b3f6-51b4cd4ee854",
        "cursor": {
          "ref": "07fd1737-2410-4c9c-99ac-b062885f3538",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "d4b2fe9d-6b3e-4abe-97ab-6bc12b4d8271"
        },
        "item": {
          "id": "787c8be5-cffb-4da8-b3f6-51b4cd4ee854",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "1cc1a0fe-1536-4f9c-a9a0-c0ab8e5267da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8053c218-de4c-40a6-91a5-342cf5d07f0c",
        "cursor": {
          "ref": "595bcb4d-9b8e-42ca-b77e-86f254f57b50",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "14fbb6d2-90ad-4274-8c5c-1ca471288497"
        },
        "item": {
          "id": "8053c218-de4c-40a6-91a5-342cf5d07f0c",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "cbf7cc8f-8b5b-48a9-8f7e-baab9bfbe8f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fbd082d-ece7-4c38-9550-27473c18f928",
        "cursor": {
          "ref": "72cf96c6-a95d-4ab3-927c-4686bb47ad6c",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "dedd6ed0-18a6-4362-9591-3133b4f7c325"
        },
        "item": {
          "id": "4fbd082d-ece7-4c38-9550-27473c18f928",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "4f6e3d8a-4bb1-45d9-ad6a-96f875731b01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d98d745-1e12-4f4f-9527-4c1fedb8e373",
        "cursor": {
          "ref": "fd7efd2f-b52c-4cae-9017-64ec26afc53b",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "8e205986-055a-4e2c-ab0e-243d24ca8c71"
        },
        "item": {
          "id": "1d98d745-1e12-4f4f-9527-4c1fedb8e373",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "f5eeb32f-0baa-42e0-a93a-700561eac217",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a0be297-739a-49c1-a570-97a5ad7dd88b",
        "cursor": {
          "ref": "43993827-01d8-4e1b-8438-08a5d488d68e",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "3fc9a907-fbec-4450-bd96-7aa1c4f830f5"
        },
        "item": {
          "id": "9a0be297-739a-49c1-a570-97a5ad7dd88b",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "b78b3ab7-e362-4207-bab9-211f538d5d39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e11b280-2674-4d2c-8665-bee19fa406a6",
        "cursor": {
          "ref": "d56dded6-81c2-4055-a51b-07ca971671d3",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "96328919-4040-4a76-a627-0549a56456b3"
        },
        "item": {
          "id": "9e11b280-2674-4d2c-8665-bee19fa406a6",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "0ad3f315-42c6-49d5-95ce-ee9859337a55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96cbf652-3b7b-4e54-951a-9d992e8669db",
        "cursor": {
          "ref": "c4e5ac65-2b11-4aa4-950c-03634f495069",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "e1e92dcf-98b0-4678-a780-f8f3e8e5ae50"
        },
        "item": {
          "id": "96cbf652-3b7b-4e54-951a-9d992e8669db",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "1fac1c50-fb5d-48d2-a4fd-69c261a0fa3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6ffb549-e984-4afb-b9b3-2c7a7cc34c74",
        "cursor": {
          "ref": "a3469d32-522d-4d77-8b79-05df9183cb36",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "f202a1f8-6ccb-48c5-98a5-1e1ac91aec7f"
        },
        "item": {
          "id": "d6ffb549-e984-4afb-b9b3-2c7a7cc34c74",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "817f95ca-401b-46b4-92ab-bb25d7dd2490",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d205c39f-061b-4969-a875-082a234891cb",
        "cursor": {
          "ref": "c3bf6fad-bf0a-40e7-a3b9-0f3066283dbb",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "156afa15-d7a5-478e-85b1-1ef5c606bb01"
        },
        "item": {
          "id": "d205c39f-061b-4969-a875-082a234891cb",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "8f50f0b9-5238-46d6-a578-84df01619820",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a34f3c58-fca2-4d45-a02d-41fb85bd115b",
        "cursor": {
          "ref": "2e261205-018e-492c-91f9-692cf80449ba",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "4596b767-9f30-4824-b1cf-bd223107ab51"
        },
        "item": {
          "id": "a34f3c58-fca2-4d45-a02d-41fb85bd115b",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "ab685ac5-af0a-4a2e-8562-da1a1190141d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8655c8f-6341-47fe-a1d5-16211f224442",
        "cursor": {
          "ref": "0724fafa-496a-4f15-9bbb-1663f5531fc8",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "83910d12-eb49-4ad9-9ec1-83b73867b761"
        },
        "item": {
          "id": "a8655c8f-6341-47fe-a1d5-16211f224442",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "a67a348d-66f4-4c57-a203-80afc1518465",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b21fbee-3a77-4d76-9793-b1d516b1d1e7",
        "cursor": {
          "ref": "774a0546-0493-487f-8f9a-5790152609f1",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "716cfcdb-3a4b-4388-be53-2a96e22ad4b6"
        },
        "item": {
          "id": "3b21fbee-3a77-4d76-9793-b1d516b1d1e7",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "d3f492a2-f402-40b8-b153-4d82cf859e7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa443ae8-f0de-47e1-9528-0fb604b8728e",
        "cursor": {
          "ref": "c5af7ba7-6dc9-4cc9-beb2-701a7c1271d3",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "5520ef64-2939-4686-b747-a8609850c946"
        },
        "item": {
          "id": "aa443ae8-f0de-47e1-9528-0fb604b8728e",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "3335f921-180a-44e0-8602-7da53b9faa3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61e793ef-a93b-440c-bbd7-b7de7ae2a5bc",
        "cursor": {
          "ref": "578660d6-8770-4608-9fc4-1a06843665c8",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "f7ce0489-7f84-4ff5-a68e-46c8fc68c725"
        },
        "item": {
          "id": "61e793ef-a93b-440c-bbd7-b7de7ae2a5bc",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "a6f1d243-7d86-45e1-b09e-d84807e37006",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed16b58a-2b30-4b6e-8eb8-5222fceca0fa",
        "cursor": {
          "ref": "64b59b6e-2f97-41f1-b682-f8972ef9552e",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "7e46c9bf-e088-4f3e-b918-3c697af990b0"
        },
        "item": {
          "id": "ed16b58a-2b30-4b6e-8eb8-5222fceca0fa",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "882a985a-2ed6-457f-bbf4-1215876984e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43d01d46-61ea-4440-92f4-47f38af5ae1b",
        "cursor": {
          "ref": "69fdde31-fd74-41e3-aa18-b1cf2193704c",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "bf4edbc2-227e-44df-b8ec-c6e15865f829"
        },
        "item": {
          "id": "43d01d46-61ea-4440-92f4-47f38af5ae1b",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "6585c0d2-d7c1-4e20-9023-5eb0fd1fd5dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cd122e2-6ba8-431a-9e01-125cf6af00d3",
        "cursor": {
          "ref": "115af399-2fa9-480f-b812-0ae485f42b48",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "8beb1f5a-f91d-4d37-9c9e-bd28aa039f3b"
        },
        "item": {
          "id": "6cd122e2-6ba8-431a-9e01-125cf6af00d3",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "a8b1f55e-e2fb-416c-b2b5-16ff7910dc59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff58c1c5-2383-4fe4-96c5-649da051d7eb",
        "cursor": {
          "ref": "e696a05e-3554-4233-b748-d92765774fd5",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "4bcd2ff9-ab0d-4091-a3b1-b1374bde1650"
        },
        "item": {
          "id": "ff58c1c5-2383-4fe4-96c5-649da051d7eb",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "70777b9e-8c3a-4a91-9c0e-a951c4272a32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 172,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbb1c9f9-6938-4022-9603-bdb9ca02417d",
        "cursor": {
          "ref": "80a5ce10-2092-460d-9197-da8fea9d405d",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "c0d7192e-17ac-469e-ad01-f92f47ba7e20"
        },
        "item": {
          "id": "bbb1c9f9-6938-4022-9603-bdb9ca02417d",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "6decd4dc-9060-4463-9bca-1d7f6b7c4e38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd22c348-6c92-4ad0-9eda-3eed68340cdb",
        "cursor": {
          "ref": "60625fb0-8697-460e-84da-abd1d06ed7c2",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "cef25b67-2c8e-4763-a27a-3dc796154df2"
        },
        "item": {
          "id": "cd22c348-6c92-4ad0-9eda-3eed68340cdb",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "7f4c9656-bcb0-46c0-8d8d-69e95f7c5496",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dd0b3d0-dd00-4337-94d0-44cb34e63ce8",
        "cursor": {
          "ref": "3a72adb9-40bc-4dee-a2b2-dcb7b6ab9793",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "80c892e5-8e0e-4455-9333-05f6bb2fcaa4"
        },
        "item": {
          "id": "6dd0b3d0-dd00-4337-94d0-44cb34e63ce8",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "a1b2dd35-f1dc-45eb-9d91-246fdec07087",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9e55d00-9565-486e-8435-e311798f1ec7",
        "cursor": {
          "ref": "10957b00-b5ab-4cf3-afaf-1b70da4174c4",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "7116c37b-c91a-443c-adbb-b56c24fab880"
        },
        "item": {
          "id": "c9e55d00-9565-486e-8435-e311798f1ec7",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "9263acf1-0bd6-44fd-a7b2-189daa78826f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4916a840-6f66-4848-8942-751b0cf970ff",
        "cursor": {
          "ref": "822d0e60-56a3-4d60-9045-9d8e0949b253",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "290c3333-130e-4504-9aed-a8aa185afed8"
        },
        "item": {
          "id": "4916a840-6f66-4848-8942-751b0cf970ff",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "e83016b3-2ed6-4b52-af07-607e211cb23d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df4aecdc-4012-4c80-902d-c50eef5b0cd4",
        "cursor": {
          "ref": "f7895e22-3dae-4743-813c-21fdf4a7295a",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "fd590f71-a92f-4693-9762-5017a2be61d5"
        },
        "item": {
          "id": "df4aecdc-4012-4c80-902d-c50eef5b0cd4",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "3f84e85b-a907-47e2-bd56-6f72dd286e09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f80887c-03c0-4f7b-9274-2344c84d06b3",
        "cursor": {
          "ref": "0ab3456b-62ce-458c-ba6d-fba87c59940c",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "345ede45-53cf-475a-9a00-e9c13facfee1"
        },
        "item": {
          "id": "6f80887c-03c0-4f7b-9274-2344c84d06b3",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "7e9038fa-2592-4560-98cb-0b0c868339a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb0b2aee-05a8-432a-8362-dc51960e9283",
        "cursor": {
          "ref": "d8784af7-3b9e-4512-98fd-09d9341f0b32",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "472af6b7-5be8-4dfe-b53b-d898c9ba1840"
        },
        "item": {
          "id": "bb0b2aee-05a8-432a-8362-dc51960e9283",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "8c03a3f4-87b0-46b1-b980-c4c28ab13f3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f367086-b414-408c-a831-0991ddae71d5",
        "cursor": {
          "ref": "fd91da46-eab6-4285-a754-702973cce7ea",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "bd47f8f6-a02b-4eb9-8010-23c3d43cafc3"
        },
        "item": {
          "id": "1f367086-b414-408c-a831-0991ddae71d5",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "37225082-973a-4da0-9fe2-55a7fc9f1670",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "434db42f-3983-4046-9fba-a0cef6fd7058",
        "cursor": {
          "ref": "61585d80-e754-4779-b64c-6587486542d1",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "5e336358-f4dc-4ed9-ac21-b8726693d591"
        },
        "item": {
          "id": "434db42f-3983-4046-9fba-a0cef6fd7058",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "97ac1160-79e1-4b37-9905-0fe42a1d537d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cef698f-80e9-4e1c-8eb4-af356b37088c",
        "cursor": {
          "ref": "1cb0282f-751c-44fa-87d2-aaac750115c3",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "b0fd16c9-636e-4671-9f0a-c3e91322bb3e"
        },
        "item": {
          "id": "3cef698f-80e9-4e1c-8eb4-af356b37088c",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "beb1ba96-70a6-478d-91e3-f60755a094ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87a946b4-3eef-4dec-801f-66b3eeb68298",
        "cursor": {
          "ref": "f921a8a4-c326-4de0-b0cd-eaf75b127888",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "8a681f6c-d52a-486a-ae3b-c7273082202f"
        },
        "item": {
          "id": "87a946b4-3eef-4dec-801f-66b3eeb68298",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "867ed914-579d-4722-9ad0-998de6cef442",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4714f773-66d5-4f4b-920b-48b8ae50763a",
        "cursor": {
          "ref": "88670c0b-eef9-4bbd-8e8b-28ee8d0a3263",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "23a8bcdb-4c9f-47b7-be69-49ddc6541e1d"
        },
        "item": {
          "id": "4714f773-66d5-4f4b-920b-48b8ae50763a",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "f994e766-1955-4798-9235-37f1d6b0fd95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "940a0186-76c9-4b43-ac74-f71bdeee8d88",
        "cursor": {
          "ref": "282ae846-da95-4da4-8d44-fa4b5cc77910",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "ba30eb0e-172b-4540-9583-9d2abadd7867"
        },
        "item": {
          "id": "940a0186-76c9-4b43-ac74-f71bdeee8d88",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "f15381e8-f422-4aef-9cf9-b617e4c782e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "121c2258-4d1c-429f-b3d4-b291a886cfeb",
        "cursor": {
          "ref": "454121e5-5e65-4c66-b739-711d98b6a229",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "38308e2b-d9d1-4e6a-96f7-978735a96844"
        },
        "item": {
          "id": "121c2258-4d1c-429f-b3d4-b291a886cfeb",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "18c2b6ed-3a61-4bac-87f0-8f0dea6e9cf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1392eae-a205-46e7-bd1e-9636d7b11366",
        "cursor": {
          "ref": "e71df492-f224-4b4f-a4d9-c1fb3f385ded",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "dc4c50b6-5734-4572-869a-043615c70d9c"
        },
        "item": {
          "id": "b1392eae-a205-46e7-bd1e-9636d7b11366",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "75fec5f7-3d58-4e4c-b77a-3cdf98747110",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21367054-bf0b-4a25-99a3-8aedc5f952cb",
        "cursor": {
          "ref": "4d70e2bf-c332-4d02-a555-83f2147f1645",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "f2ca6143-75ce-4215-9a41-ada41d679e00"
        },
        "item": {
          "id": "21367054-bf0b-4a25-99a3-8aedc5f952cb",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "20689ccb-e13c-4ad2-9bef-a605f0bd5897",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ad8b9a7-3848-4cc1-92bf-79e1179c10e0",
        "cursor": {
          "ref": "fdbbe1a9-7573-43b2-94c4-9a18c97811d1",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "891c1600-ee5f-42a2-8556-3aea6af11b71"
        },
        "item": {
          "id": "8ad8b9a7-3848-4cc1-92bf-79e1179c10e0",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "f11187a5-43b3-49e6-aae5-3d0ed7cdfd1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fd8356c-a454-4444-bb63-ae61c171ee89",
        "cursor": {
          "ref": "85dea093-54bf-4c03-9d38-4b3e26c9e047",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "3f63f230-8083-43aa-9e48-a7813037ae65"
        },
        "item": {
          "id": "7fd8356c-a454-4444-bb63-ae61c171ee89",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "710bb1d9-d191-44f0-9922-9c5b9abeb270",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d225cbf5-afde-4c48-b36d-23198bed4738",
        "cursor": {
          "ref": "f30afe62-06c4-44b6-a5da-4ec6a59305dd",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "df0d4fb3-5b6e-4ad3-9289-f466092517d3"
        },
        "item": {
          "id": "d225cbf5-afde-4c48-b36d-23198bed4738",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "a3bb17f5-bd57-4668-9a23-968888f482db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d90dd7c-f172-4d99-b850-ed069c6509ab",
        "cursor": {
          "ref": "72ed0933-39a3-40b5-b10f-df46fb28326a",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "b77b364b-45e3-448b-9775-91790df45980"
        },
        "item": {
          "id": "3d90dd7c-f172-4d99-b850-ed069c6509ab",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "d611bf78-7127-4982-97ec-ccae6b6b68e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2ab77d4-e936-4447-801d-74e48266d2a5",
        "cursor": {
          "ref": "787325ea-6445-4704-9f83-9d0756b74355",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "58bf8206-c8e5-4a0f-91cf-ccb864d9bb81"
        },
        "item": {
          "id": "c2ab77d4-e936-4447-801d-74e48266d2a5",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "f649560d-5b47-4dd0-af02-f409af832ae5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d77c2e95-a2c9-4fed-baf8-8246d261fe14",
        "cursor": {
          "ref": "ed36b17b-2509-4515-9321-aaad3ea8be29",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "d066cc71-2c2f-4a67-92ca-9e56ccf390b1"
        },
        "item": {
          "id": "d77c2e95-a2c9-4fed-baf8-8246d261fe14",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "cfbaaae6-b8ed-41fe-a91d-fbefaf6c7949",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e6890ec-097b-48a6-a02a-cb623754f661",
        "cursor": {
          "ref": "7e70e5f0-3a1a-497b-b970-a140efc7a16c",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "526304c5-fd34-41c8-ae0c-14762163fbd3"
        },
        "item": {
          "id": "7e6890ec-097b-48a6-a02a-cb623754f661",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "656f0988-59b9-4eff-8c9b-033433c75a13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46a347a1-cf53-472f-ba81-7f6d1e51639a",
        "cursor": {
          "ref": "90712b4f-b0a2-4c33-a3f5-01ea2874d682",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "22b1756f-b92f-4cd9-aa15-83c1882a6f22"
        },
        "item": {
          "id": "46a347a1-cf53-472f-ba81-7f6d1e51639a",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "7a7b45ab-012d-49b8-aa1e-3ce35a70a4dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c119a8b-0da7-4210-ad65-2b6966608799",
        "cursor": {
          "ref": "d02da7d7-2dac-4539-a16f-f4e712d30acb",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "37d9db0c-b533-4a2f-a528-1b9f70402542"
        },
        "item": {
          "id": "2c119a8b-0da7-4210-ad65-2b6966608799",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "3e2899ab-e94b-4f1c-970b-76d900b1ffcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7c6cf3e-8dc8-4deb-b68a-603349e38e4c",
        "cursor": {
          "ref": "f210fb17-f813-4ee6-bb12-2afeb049506f",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "587d531b-6af2-4d56-8bc4-486adc9f0ade"
        },
        "item": {
          "id": "a7c6cf3e-8dc8-4deb-b68a-603349e38e4c",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "00f7577e-69f9-414f-9b18-ca969bf48d66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4aec3fa-f7a2-4a19-921a-3d62cc1ffd89",
        "cursor": {
          "ref": "d09dd729-527c-4625-beb5-2cd6910c142a",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "1163b8a4-9451-4cee-9307-063660197ae4"
        },
        "item": {
          "id": "f4aec3fa-f7a2-4a19-921a-3d62cc1ffd89",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "90efc9fa-6224-4106-95b6-be653a294ce7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "563b24a8-db45-40a3-a11b-bb3b9d543504",
        "cursor": {
          "ref": "0c065c38-280e-4485-98fe-e40191e4391d",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "686f4fb5-d761-4c82-9976-1a00c9c506bf"
        },
        "item": {
          "id": "563b24a8-db45-40a3-a11b-bb3b9d543504",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "1d97f6d1-5c3e-491f-b0c2-a8cd028915f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4065ffdb-b790-44ab-8e1c-8812a93ebc06",
        "cursor": {
          "ref": "469f1d37-a023-4311-a751-5ea1ddd653e1",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "e4c83219-51ab-4943-acea-64edf19f71da"
        },
        "item": {
          "id": "4065ffdb-b790-44ab-8e1c-8812a93ebc06",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "89b087ad-3ff3-400c-8a65-6bb5bfd4a6c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4527178-06fd-4957-b088-28b0cac2af4b",
        "cursor": {
          "ref": "3ac4f1c0-2946-4740-9deb-2bdc8683f5b5",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "dd9d897f-1ac2-4a1d-9114-4435940c7b10"
        },
        "item": {
          "id": "c4527178-06fd-4957-b088-28b0cac2af4b",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "358f8e71-688f-46c3-9b51-508f3d9ec081",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f372bae-2dd8-4f0d-b6d4-93a9d0b41f71",
        "cursor": {
          "ref": "be41c160-ceee-4f3b-b606-53914b32a3b4",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "ccab174e-e5ed-4e57-ab66-e77722c63700"
        },
        "item": {
          "id": "7f372bae-2dd8-4f0d-b6d4-93a9d0b41f71",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "5cf3dd5c-7369-4a4b-a9c4-83ac3315ef5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "361a75fb-647d-4db2-91f6-81a450bf2871",
        "cursor": {
          "ref": "a954e617-728f-4acc-a005-12534795b9c3",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "0dbfc6a8-c6e1-494d-937e-950ae0a796a7"
        },
        "item": {
          "id": "361a75fb-647d-4db2-91f6-81a450bf2871",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "19f130c6-46e7-406c-8ee5-e6f64c90026b",
          "status": "OK",
          "code": 200,
          "responseTime": 218,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "a21bfc89-9953-48c1-9382-b43ef2765037",
        "cursor": {
          "ref": "1f00d72d-a76c-4703-ae0a-2a5a6d526e50",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "6d15af73-0318-401e-99bf-9a0a22b7ecb7"
        },
        "item": {
          "id": "a21bfc89-9953-48c1-9382-b43ef2765037",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "7ad57200-efc7-4c5f-9cbc-c0fad54a6da3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ee18725-d4ee-43e2-ab1d-4f1473e02ddf",
        "cursor": {
          "ref": "10ba12f4-bb7b-422c-850b-2044ae735f95",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "b954ad29-7356-44e9-b0dd-23f154a1ef78"
        },
        "item": {
          "id": "2ee18725-d4ee-43e2-ab1d-4f1473e02ddf",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "37464ab8-f27b-4061-8118-4db2e64c8cf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac6b4f04-46b4-491a-a0a8-69b17db69843",
        "cursor": {
          "ref": "cb68d6d2-f7db-4882-a688-0f1e07e455d7",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "906342f5-e1ab-47c4-9975-80b9c500a9e3"
        },
        "item": {
          "id": "ac6b4f04-46b4-491a-a0a8-69b17db69843",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "5187c51a-122d-4a58-9a21-48bc1fbd0be1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbac2550-bf72-4540-85b0-576b2dc410ef",
        "cursor": {
          "ref": "9a29f647-cda1-42de-96ce-8b723af1aa27",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "6471bd32-b254-4790-af8e-8312ab4e6cc6"
        },
        "item": {
          "id": "cbac2550-bf72-4540-85b0-576b2dc410ef",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "b34d58b4-a0bd-400c-b748-998fbce596dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "591a0bb0-a841-484e-a6e1-7a4e75a1c7b2",
        "cursor": {
          "ref": "7910ab6b-b963-4c19-8f71-6f25fafecfaa",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "bee6c87b-a86e-4d8d-8ff5-2a770c34ea8c"
        },
        "item": {
          "id": "591a0bb0-a841-484e-a6e1-7a4e75a1c7b2",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "e2dbc90e-8db4-4f7d-8a23-7d639d7490f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d8ef828-5d2a-4e84-a232-e072038d70c9",
        "cursor": {
          "ref": "d8234be5-70fd-47bf-9179-7167681da4fb",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "fd2ceee6-7abe-4bf0-8b56-e7dae72222f3"
        },
        "item": {
          "id": "5d8ef828-5d2a-4e84-a232-e072038d70c9",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "60e3ea26-f3d8-4962-a4e1-02ffcecddead",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb5a44b1-0c88-4c6e-9cee-1b362eabede0",
        "cursor": {
          "ref": "0e77148b-8a64-4fc3-b112-944c665f331f",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "bcc33228-01c3-4657-8d48-d5a5d6343fcc"
        },
        "item": {
          "id": "fb5a44b1-0c88-4c6e-9cee-1b362eabede0",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "6b1f319b-9b52-47cb-bfd8-d937b474cd85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc1d4f9c-6ee4-4b7f-9944-95bfb9704554",
        "cursor": {
          "ref": "fd2287d3-1006-462b-8da6-9d17e43683e4",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "9eb9e157-21db-4d37-80e5-ce6eb477fd77"
        },
        "item": {
          "id": "cc1d4f9c-6ee4-4b7f-9944-95bfb9704554",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "96b3c020-fc25-4f26-964f-745336934874",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ab53693-6f78-49fa-9a21-944ad12a9b09",
        "cursor": {
          "ref": "64bdd139-ace1-47c2-8f7d-a195b45eda2f",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "d2f24c2a-8b31-497e-a61f-e715e8ac0ccf"
        },
        "item": {
          "id": "2ab53693-6f78-49fa-9a21-944ad12a9b09",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "fcf085cc-3a5e-423f-b047-de2ed1b485f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edbb8076-c98a-42a5-8316-582d9a799d2a",
        "cursor": {
          "ref": "7790566b-a504-4147-bc50-a0edad478332",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "72251d35-816d-4776-bea8-45c0ecd1ad8c"
        },
        "item": {
          "id": "edbb8076-c98a-42a5-8316-582d9a799d2a",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "2924422e-55d8-491b-91e2-ff82adfa9ec6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "275aa16e-1856-4639-80b4-ed603fcbfa59",
        "cursor": {
          "ref": "85a9dfd1-ba49-4c7e-b7ec-7d76cd48253c",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "01355352-622a-4a95-b95e-4c9deb834ef0"
        },
        "item": {
          "id": "275aa16e-1856-4639-80b4-ed603fcbfa59",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "1e8315d2-90d4-42d0-b8c0-2b40e5a4de77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a09d5096-7f4a-4812-b57b-e4cffc268a41",
        "cursor": {
          "ref": "1940d335-91f3-4c41-8ed2-62a15501c791",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "4029b33b-f13e-4589-af39-5e968613c24b"
        },
        "item": {
          "id": "a09d5096-7f4a-4812-b57b-e4cffc268a41",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "6089a74b-6b5e-42d9-8440-739aab2e72e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47e7fe68-3eb3-478f-9ea7-09658a1dec9a",
        "cursor": {
          "ref": "440075a7-e52d-47ae-b82d-acc770dc44c4",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "bdc2f478-747e-483b-bf07-28b6b157ad33"
        },
        "item": {
          "id": "47e7fe68-3eb3-478f-9ea7-09658a1dec9a",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "d4938c5c-6ed1-4cf0-b230-016264a77b93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a399df8d-f9d6-409e-93b7-9c288a62511d",
        "cursor": {
          "ref": "22b07290-a9d2-4169-9158-73095ebaf4e7",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "f05d6c5a-6383-43e9-a636-454d6eb6ae4e"
        },
        "item": {
          "id": "a399df8d-f9d6-409e-93b7-9c288a62511d",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "970f5a05-3dd7-4c07-b867-96ba2106df7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fb80f6d-e776-4bf6-aa40-ab39195e8467",
        "cursor": {
          "ref": "ebce7d34-2e50-46cf-9b54-a21a1b68874b",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "9c146df8-8c6c-4f61-be85-0360194e0641"
        },
        "item": {
          "id": "6fb80f6d-e776-4bf6-aa40-ab39195e8467",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "da2e0e75-8473-45be-ae87-64ac0a5d5179",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd52fa18-aa38-4a3d-bbc3-aef9c0533391",
        "cursor": {
          "ref": "aaf7297d-96fe-43d9-8f31-441ccccd7ed6",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "c660517a-0af3-4246-aaec-af0aa42f9ac6"
        },
        "item": {
          "id": "cd52fa18-aa38-4a3d-bbc3-aef9c0533391",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "3cd2a3df-5de4-4967-a109-3000880690e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2569041c-2607-4cd4-9201-02dfdb87770a",
        "cursor": {
          "ref": "36d250e7-130c-4e0a-b1f8-b700580ce3a5",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "bee955ae-5c0c-4c4f-903f-98509a2b7032"
        },
        "item": {
          "id": "2569041c-2607-4cd4-9201-02dfdb87770a",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "18bf8730-f55c-4437-aaff-15a82e4d5a3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07794aa5-d0de-448a-8edc-419d7062bbee",
        "cursor": {
          "ref": "736eabf2-8cad-4502-adec-3473d0ff34f6",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "a914ffbf-8d34-4a79-b71a-9fb5a14efc1e"
        },
        "item": {
          "id": "07794aa5-d0de-448a-8edc-419d7062bbee",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "dd5bc04b-1e96-4bdd-be49-48bb1778c612",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59404603-2bf0-4096-a4ef-5cdaf75aff56",
        "cursor": {
          "ref": "f31a0f67-1614-4451-b438-2a70b54f6f6f",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "915f919f-18e1-4612-b7d0-a7436a718072"
        },
        "item": {
          "id": "59404603-2bf0-4096-a4ef-5cdaf75aff56",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "12224451-c5bb-436f-a408-dc01f1d9ced1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f7ee569-3970-4f82-b392-e90974df92d0",
        "cursor": {
          "ref": "29d4dfe5-34f0-45ed-8e4a-eb0b01991fad",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "c79aa3a4-8f6e-4181-bcd5-ecbd8c40ea46"
        },
        "item": {
          "id": "5f7ee569-3970-4f82-b392-e90974df92d0",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "02c196e8-4ca9-4fc0-bda0-9d1f2aa517e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80882470-5b9b-4baa-81ec-369f4211ad55",
        "cursor": {
          "ref": "950fb9ce-68bc-4a90-bb19-c2f7f18d5396",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "4f34be24-2125-4f57-9177-44dc642c3701"
        },
        "item": {
          "id": "80882470-5b9b-4baa-81ec-369f4211ad55",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "4205d19e-cfd1-4f8f-ba03-8de03b6bee64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48864698-ec61-4d82-9525-643bf6227b7a",
        "cursor": {
          "ref": "51f0883b-5cd0-4214-a605-07a9dbacd83d",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "f262de7f-9581-44db-acda-deeb03a7386b"
        },
        "item": {
          "id": "48864698-ec61-4d82-9525-643bf6227b7a",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "0e064cd6-8b31-4cbe-9f6e-298b12da6081",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5654db40-21ad-447b-9e73-0a58c8d979a3",
        "cursor": {
          "ref": "e5aaa19c-163d-4e6b-b6ce-412f8688834d",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "c1530543-ee21-4c18-b8d3-d1800ff25e7b"
        },
        "item": {
          "id": "5654db40-21ad-447b-9e73-0a58c8d979a3",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "34394d12-ed2e-4530-929b-64917e11251b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a16832e-f0f1-4544-85b2-51784720be6f",
        "cursor": {
          "ref": "797d7b5b-16a4-4286-b771-538828bf98af",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "0bce3c7d-5c26-45d5-b493-a60fce97a735"
        },
        "item": {
          "id": "6a16832e-f0f1-4544-85b2-51784720be6f",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "3c470fa9-b7a0-4104-be49-0836b8dc5729",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7562647-c73e-4b7c-ad2b-0b45e508f81a",
        "cursor": {
          "ref": "d3c25853-637c-4bfa-a28c-a699dd88161d",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "301f6f3d-b120-492f-9f1d-5cf87b0b6b8a"
        },
        "item": {
          "id": "c7562647-c73e-4b7c-ad2b-0b45e508f81a",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "8989893d-e7e2-4d89-835f-aec85d789f5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa377a55-debe-45e8-acda-e6ebf218f439",
        "cursor": {
          "ref": "0153755d-0e37-4c4e-adb8-2bbbf2b50abb",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "a7c0a75e-3250-454c-ae6f-053707597e74"
        },
        "item": {
          "id": "fa377a55-debe-45e8-acda-e6ebf218f439",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "8086c7ec-f6b6-4306-9fb3-76d49ff0ba94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "311453a8-832a-4be6-996d-11eb34ae1b68",
        "cursor": {
          "ref": "0544e905-1f53-46ff-9cfe-83ed030f6f73",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "a570b3e0-2828-465e-a872-89109cc1b861"
        },
        "item": {
          "id": "311453a8-832a-4be6-996d-11eb34ae1b68",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "03c7a5f5-fbcb-4b82-8eb1-0f3712ef7688",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "835d4246-4bf3-4ed7-a66e-f2ed9fb15471",
        "cursor": {
          "ref": "738950e1-8eb6-433e-9b4b-f89407a5a4b5",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "11333607-6fdb-4d5d-96f6-b1492d8fdaf3"
        },
        "item": {
          "id": "835d4246-4bf3-4ed7-a66e-f2ed9fb15471",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "f5c6efb3-b536-43c2-bc48-716f1ee92f92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d1eeb01-6c98-4f2f-a708-efff441d2a46",
        "cursor": {
          "ref": "5b7fd72c-b5ed-4fe6-a3c4-790d21cb2832",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "ac7a4860-ab8a-4db1-b50d-365a25788ffc"
        },
        "item": {
          "id": "9d1eeb01-6c98-4f2f-a708-efff441d2a46",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "e3f30a27-4cbd-4320-86d3-16e266ca6a90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bf91363-75bd-4381-b046-0795c05163e8",
        "cursor": {
          "ref": "ccf28aa8-d348-49c1-a7ac-ed22952feff6",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "890bf8fb-02f8-4b9b-8474-13d1148f758f"
        },
        "item": {
          "id": "4bf91363-75bd-4381-b046-0795c05163e8",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "67a31b4a-9a2c-41aa-a350-e35d65b915cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ff7de95-3204-435b-8280-2c0bed880793",
        "cursor": {
          "ref": "67c6facb-bb84-440e-a619-90b8a7f6647a",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "e4153dd2-1e07-499e-b173-cf2d5c09aa4f"
        },
        "item": {
          "id": "7ff7de95-3204-435b-8280-2c0bed880793",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "0b7bea6e-7d7d-4ae6-9856-4598a5189280",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97e9e49a-a115-449f-8029-1c91fe587153",
        "cursor": {
          "ref": "e71c55dc-f3ee-4c4e-909a-6f898395875d",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "dc693790-20dd-490b-a38d-7ce47503d8da"
        },
        "item": {
          "id": "97e9e49a-a115-449f-8029-1c91fe587153",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "915e393d-9bf1-40fb-8eb3-e666db65c049",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91287027-bdb1-4e25-937d-5b6af8485fc9",
        "cursor": {
          "ref": "b24bcf1a-3dfd-48a4-b3fa-dc62f63c8095",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "b1c6e14c-9040-4b8b-b117-7f0823b3964b"
        },
        "item": {
          "id": "91287027-bdb1-4e25-937d-5b6af8485fc9",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "743e6a6c-3a3f-4461-95c5-b51172edb2f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b8dfe4c-91c5-4e78-ae72-694694d345fc",
        "cursor": {
          "ref": "b852b81c-cc2c-4196-8fc4-8ddf51bfabac",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "b5b14a3c-0bbe-4cd4-8637-1983020ce7a3"
        },
        "item": {
          "id": "1b8dfe4c-91c5-4e78-ae72-694694d345fc",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "54423566-92e0-4e9b-b7fd-c0302713edbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0944969-b6b7-4ba6-bbd3-5221bb6647bc",
        "cursor": {
          "ref": "2960cd8a-7047-49e0-8466-2788cd611e68",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "9d83573b-115e-418e-9a5e-efec18a278df"
        },
        "item": {
          "id": "e0944969-b6b7-4ba6-bbd3-5221bb6647bc",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "23bf0257-7925-446f-b4b8-ccc59dd3118b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c81789d-f2d0-4cb8-859f-ef663f71215b",
        "cursor": {
          "ref": "bb5b7088-e1cb-4d1c-ae79-a11617023bcb",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "6658bf29-021f-4e17-908b-2e9ee05bd2c9"
        },
        "item": {
          "id": "9c81789d-f2d0-4cb8-859f-ef663f71215b",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "52599d6a-3cd6-48a8-a803-d590498323b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a4be186-6597-4ce8-a7a9-988a246decbf",
        "cursor": {
          "ref": "cfbb012f-dd7c-48a4-9311-0c4cba55650e",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "917a54c4-37c3-4ccd-be4f-96839f3f70fd"
        },
        "item": {
          "id": "5a4be186-6597-4ce8-a7a9-988a246decbf",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "cb90affc-32e6-4403-8d2f-cdd5c27b28d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f33e5b4-1305-4f6f-ab41-cd15c1fe72e1",
        "cursor": {
          "ref": "f6ebd2ff-63c1-41bc-899f-4d3797808270",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "7a38c337-c9a1-4c29-9c14-361f952c5a61"
        },
        "item": {
          "id": "6f33e5b4-1305-4f6f-ab41-cd15c1fe72e1",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "e8c0b455-beec-41aa-b8dd-b56f30985129",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67b6478d-78e0-43e3-a7b9-3df6d7a2a1b4",
        "cursor": {
          "ref": "7f4ee37f-e33b-4eb7-b752-eee6bf13ece7",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "2402812b-2cd2-4ae3-9c2c-efb565f1025a"
        },
        "item": {
          "id": "67b6478d-78e0-43e3-a7b9-3df6d7a2a1b4",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "034223b7-53ad-4f08-9420-00f531765fbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1a6f344-910d-4cfe-934c-e772a574971d",
        "cursor": {
          "ref": "39a309af-2a78-4593-b56c-0e652b82a1ba",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "eda31bf3-430f-434f-ad43-0d30092b9d89"
        },
        "item": {
          "id": "d1a6f344-910d-4cfe-934c-e772a574971d",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "b5170b8b-d051-4356-821e-ecee36e724b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8acad1d9-e2b7-40e0-9304-374df790a13f",
        "cursor": {
          "ref": "71173dd0-843d-4823-8f2d-dc25147da2af",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "c162b67f-f618-43d7-a11b-e4e35d658f8f"
        },
        "item": {
          "id": "8acad1d9-e2b7-40e0-9304-374df790a13f",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "8c4b762c-b616-4098-bcd1-9beb895efb7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "739150cf-76ae-4feb-8aaa-25480ad50571",
        "cursor": {
          "ref": "87062d7b-a609-46de-b6fb-915b3217d5d0",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "9df2a068-05c9-4306-b585-24e16aaad801"
        },
        "item": {
          "id": "739150cf-76ae-4feb-8aaa-25480ad50571",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "c026591f-8e96-413a-ac33-167fe3c124a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09e4b325-722d-4945-a9f9-d267a4f0db24",
        "cursor": {
          "ref": "03929ff6-c93c-4539-b4a2-e0d4efcaf9e2",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "4f731e32-ee0f-409f-95ff-96c0eb651665"
        },
        "item": {
          "id": "09e4b325-722d-4945-a9f9-d267a4f0db24",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "7e5c028d-e97f-4010-8b9b-38f73324e254",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "414b22a0-e6ca-4949-bb8f-0060847cadc7",
        "cursor": {
          "ref": "074402ef-fa02-4164-aa07-77b9becad9d9",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "1cf34ed3-6f20-4269-82c9-e68856fa692a"
        },
        "item": {
          "id": "414b22a0-e6ca-4949-bb8f-0060847cadc7",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "a25364b1-538f-472d-b9ca-55acb989ca4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 126,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aac1670-6886-437b-9e84-1de2568b01db",
        "cursor": {
          "ref": "323b20a3-d139-454f-a012-5d1456de6164",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "841cdf4d-cf5b-43ed-849b-4573b2afc989"
        },
        "item": {
          "id": "2aac1670-6886-437b-9e84-1de2568b01db",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "b674f724-a135-4b77-a4dc-a671cac6ac3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72141a6c-d674-48dd-9595-875551f0a633",
        "cursor": {
          "ref": "8cfc3a81-f210-4d64-abbc-f9e1675cac12",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "f081200b-aec2-4d52-9e56-782dba5e603d"
        },
        "item": {
          "id": "72141a6c-d674-48dd-9595-875551f0a633",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "efe2a717-09e4-40da-b6f3-dcfd68636e3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21efc8c5-c60a-4896-ba98-0fed3927def0",
        "cursor": {
          "ref": "3835b61b-8f56-40c2-a41d-e1ccd9d4c2fd",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "d5857bed-4bfe-4bd8-bf3b-5bf86dcc2c14"
        },
        "item": {
          "id": "21efc8c5-c60a-4896-ba98-0fed3927def0",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "c14f3b6c-1310-4078-aaa2-29ceaca4c763",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09ffb747-0eea-46e5-8a9f-91c823af1985",
        "cursor": {
          "ref": "f86fe18d-c58d-4d14-ae3a-47d7b39522cd",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "9e538082-7a4d-4860-afa1-5ecf3d54a976"
        },
        "item": {
          "id": "09ffb747-0eea-46e5-8a9f-91c823af1985",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "a205bf9d-5d42-4edd-8e4c-3ed049870440",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dce216c-fff7-4303-a2a1-1c672e5b917b",
        "cursor": {
          "ref": "f8a75ca7-7449-40be-80b0-fc25f9c46a88",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "528fa2e2-3916-4e9c-8c5f-5dafec3c444c"
        },
        "item": {
          "id": "3dce216c-fff7-4303-a2a1-1c672e5b917b",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "91e3cd18-778c-4c7b-8f27-0804c3dcf1ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6d3f647-8465-45d3-8412-d011b7b535dd",
        "cursor": {
          "ref": "9dda6ddd-a101-4ffb-8d5d-7fede242e35c",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "aaf80eff-8214-4d0b-90dd-b8b2371a3427"
        },
        "item": {
          "id": "f6d3f647-8465-45d3-8412-d011b7b535dd",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "0625a970-de77-42cf-82fd-511e3efb6292",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "407bd094-6c9f-47f3-b2ae-5a2d8be1870b",
        "cursor": {
          "ref": "8cd830a9-ee82-450a-b99d-947436c478b0",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "0d907c28-eee3-4e67-b8fa-7f81fc2f68d4"
        },
        "item": {
          "id": "407bd094-6c9f-47f3-b2ae-5a2d8be1870b",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "7e743798-3103-4d9a-b605-f0e58c390bd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06205cba-451a-4788-824a-73e304fe1d2b",
        "cursor": {
          "ref": "511a64f8-b911-47dd-a666-7cf4d19b7e3f",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "f92d5a4e-2ef1-468a-8d9f-34ef18fb135b"
        },
        "item": {
          "id": "06205cba-451a-4788-824a-73e304fe1d2b",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "232526b4-3ce4-44c9-a1ff-daa05ffead04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bba7bb5f-cbf4-4c54-9f0a-09f86d7cb9df",
        "cursor": {
          "ref": "a8d6b01c-0949-419e-931b-77561653d1cb",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "4d370127-95b0-497f-8838-57fb400bfd11"
        },
        "item": {
          "id": "bba7bb5f-cbf4-4c54-9f0a-09f86d7cb9df",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "da2345b1-f707-401b-afe5-5104d2bfb3fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71b38051-95c3-4247-bd95-cb77cf580494",
        "cursor": {
          "ref": "4bfe2ef0-b512-4d2b-ad78-2bb8723ac3b8",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "bfabde54-6ce5-4232-8133-88f8e19d3cd8"
        },
        "item": {
          "id": "71b38051-95c3-4247-bd95-cb77cf580494",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "6877ae33-e39a-4266-9dc7-5ec206b25c9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 102,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f62eaafc-4de1-4a5a-96b1-70127eefdbd8",
        "cursor": {
          "ref": "dbd81f37-4369-4b14-a38e-4bb6ec3ac568",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "946f3005-cd1f-4970-b71d-60ca82440244"
        },
        "item": {
          "id": "f62eaafc-4de1-4a5a-96b1-70127eefdbd8",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "99b46a11-88f2-4556-b7ca-2ccfafe091c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aecaf03-49a4-42cb-a1ff-d2b4720e5780",
        "cursor": {
          "ref": "ba1c1746-3120-4cff-964e-ad86f07953c0",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "b6368908-dfff-4fb9-97d0-42c6e20002a1"
        },
        "item": {
          "id": "7aecaf03-49a4-42cb-a1ff-d2b4720e5780",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "9fbcb9ae-a29a-43bf-b841-d635777af1c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8916e184-5cc4-471a-9d52-1d7acc432b3d",
        "cursor": {
          "ref": "a849f0a0-10ee-4d57-98e6-7abe07e7915b",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "500ee3c7-dca2-4215-8f2c-f42a44031b89"
        },
        "item": {
          "id": "8916e184-5cc4-471a-9d52-1d7acc432b3d",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "e2808aff-cfdc-4cee-b072-0f7274612731",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8770e7d-3ce8-4037-a1c3-71f3e23b1907",
        "cursor": {
          "ref": "0b478f37-2aaf-464d-a72f-f7a78c257d2d",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "4cd3511c-9156-43e7-8439-2f81f8a6145b"
        },
        "item": {
          "id": "b8770e7d-3ce8-4037-a1c3-71f3e23b1907",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "1a7076c2-0c6b-4ddd-8c63-2f686344ab91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a960f2c9-ecb0-4f0d-bdb2-5b8d8d5c9577",
        "cursor": {
          "ref": "9c589205-c335-4e48-8ecf-a7615a323feb",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "48194705-cd6a-491f-b4b9-fcea8f97f7ab"
        },
        "item": {
          "id": "a960f2c9-ecb0-4f0d-bdb2-5b8d8d5c9577",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "e25258b4-e715-4c6a-a47b-a3b865156afa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6e36c70-0ded-4f65-bdc1-640d3f865fab",
        "cursor": {
          "ref": "8ba686ff-745a-4ac0-be32-8c609fe36eab",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "98895bb1-dc1d-4338-bf73-103061782d01"
        },
        "item": {
          "id": "f6e36c70-0ded-4f65-bdc1-640d3f865fab",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "9761bf79-9151-434a-9da4-debcf5561944",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51d7faea-6855-49fc-a051-8ada77d65ef0",
        "cursor": {
          "ref": "48296058-509d-4df3-8bf9-8645c83baa16",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "8f49c75d-dc27-489e-bf86-b0bb1efbd01a"
        },
        "item": {
          "id": "51d7faea-6855-49fc-a051-8ada77d65ef0",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "54812608-b532-498f-921c-e81bafdcad75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17a140e0-3de1-4277-8aea-21316d05a41c",
        "cursor": {
          "ref": "40d8133f-a7c0-4a92-97df-4a18ee8c0b47",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "8489f2c5-09bc-4508-9a77-953455b08e32"
        },
        "item": {
          "id": "17a140e0-3de1-4277-8aea-21316d05a41c",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "01593210-04b0-4cdd-880e-4539659ef008",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68da4698-4e3d-4a7d-adbb-fafc08ddd164",
        "cursor": {
          "ref": "dd494b31-62d5-428e-920c-1251cf853bc5",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "4f983948-55d2-4236-a2ce-ade4fe1e3a40"
        },
        "item": {
          "id": "68da4698-4e3d-4a7d-adbb-fafc08ddd164",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "f1b44c44-0491-4814-9248-7ec494f59d60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17edff37-be5a-4570-9e59-4b531148afbf",
        "cursor": {
          "ref": "de8111be-bfa6-4ace-81c4-0dfdea653a52",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "1214be3a-84be-4882-88d5-fa5465609092"
        },
        "item": {
          "id": "17edff37-be5a-4570-9e59-4b531148afbf",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "b7431fcb-73fd-494b-85aa-431275f18f78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a5f15e6-eb36-4dbb-9bb2-23ecdfc2c4e1",
        "cursor": {
          "ref": "d62bc9a4-573e-4c33-9b3f-c00e9832cfa3",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "2ee7e41e-61fe-40e1-a72b-fe139b513894"
        },
        "item": {
          "id": "3a5f15e6-eb36-4dbb-9bb2-23ecdfc2c4e1",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "cc5fbc88-6e65-4fc5-a659-143f5727b6c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff57a9dc-b3a5-442a-b554-364e744698c2",
        "cursor": {
          "ref": "3887e76b-0392-4d26-9a28-2c66cbfb051b",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "27b24233-3526-45e2-824d-e7ca9d4dea97"
        },
        "item": {
          "id": "ff57a9dc-b3a5-442a-b554-364e744698c2",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "1af3275d-d081-42b5-94ba-4b3f51c9f2df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1a8f04f-e8b5-4aea-bc0a-ac5ebd92bc23",
        "cursor": {
          "ref": "ef783453-b782-48f9-b18c-b31b58ed92b1",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "90b802aa-c944-4f55-bd2a-2949e0e8637d"
        },
        "item": {
          "id": "a1a8f04f-e8b5-4aea-bc0a-ac5ebd92bc23",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "51fe0e3f-b412-49fa-bf59-f8e11daf8664",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "061a5c55-2a8a-4dec-ac22-5867cbd45241",
        "cursor": {
          "ref": "66c421c9-4fa3-442b-88d0-23f5601d6a79",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "e1273145-5cdc-4cc7-99d5-f535b36fff26"
        },
        "item": {
          "id": "061a5c55-2a8a-4dec-ac22-5867cbd45241",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "ae496af7-245a-43db-9c03-11c4df69e45a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7bd2f48-f1c1-4434-96a1-7fd48f007043",
        "cursor": {
          "ref": "5a1861b6-76e6-4de3-a021-79313996dce6",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "8476ce95-434f-41ac-aac4-070e7474f9c7"
        },
        "item": {
          "id": "e7bd2f48-f1c1-4434-96a1-7fd48f007043",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "49922b9f-f15b-42c4-9339-5fc33f1a0b38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e29b1cf-e526-42aa-955f-9442dab09be8",
        "cursor": {
          "ref": "0d39ff59-1ddd-473d-9d78-fbf9ad936d71",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "7907286d-2444-4cef-8be2-a508d64bd53f"
        },
        "item": {
          "id": "3e29b1cf-e526-42aa-955f-9442dab09be8",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "b43afd9c-6dbc-446d-9e3f-4533d48dbf2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aef44149-46c0-4eb0-8e8f-fde89eccdee5",
        "cursor": {
          "ref": "eb3be540-2c54-4edf-a133-a9c8cde1279e",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "2bfca2aa-db31-4e85-9694-418a69be72ed"
        },
        "item": {
          "id": "aef44149-46c0-4eb0-8e8f-fde89eccdee5",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "becdc0a3-7173-43e2-adb2-906fc98e5af6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a9c9ece-7c01-4974-9ef4-4a720dd0c75d",
        "cursor": {
          "ref": "874de189-17e3-4c50-a822-310e22fe4cfa",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "bf877d2d-dfd4-4395-b2bf-0d109cae53e4"
        },
        "item": {
          "id": "8a9c9ece-7c01-4974-9ef4-4a720dd0c75d",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "df93bcad-d358-49cc-b667-a1e970410cc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "796216fc-2fa6-43bd-b89d-ed5df1ee6736",
        "cursor": {
          "ref": "3202de42-99c5-4c53-ae14-d0cc239963b4",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "ef24f8dc-c498-44c1-b40a-eb3d6c32d97d"
        },
        "item": {
          "id": "796216fc-2fa6-43bd-b89d-ed5df1ee6736",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "1c056dfd-0631-4a6e-81dd-344bbfa5d641",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33779c7c-17cd-4fdb-8a8f-dc924748ba9b",
        "cursor": {
          "ref": "8b28a76c-76d0-4c2b-900d-1833119eb3c1",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "54af9afd-e316-4089-bb97-4a6d58297953"
        },
        "item": {
          "id": "33779c7c-17cd-4fdb-8a8f-dc924748ba9b",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "37b0b649-35ea-4b46-bbdc-ff9b8d76befe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95036f21-6c7e-4734-a758-2c389eac056a",
        "cursor": {
          "ref": "648a2250-4ac5-4934-bf6f-7d4ebb293ef8",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "50c2daf4-2e3a-446f-9320-393b0de216a5"
        },
        "item": {
          "id": "95036f21-6c7e-4734-a758-2c389eac056a",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "9395c0f2-1f59-4a21-b449-4f55d64f5122",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39e081ce-5003-4a76-b483-ccff6b8cefad",
        "cursor": {
          "ref": "1fe5ee1d-ad1f-4ebd-9ba5-634118e2b838",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "725c9753-096f-48a8-b51e-70aef08afc72"
        },
        "item": {
          "id": "39e081ce-5003-4a76-b483-ccff6b8cefad",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "8d19d48e-1be1-483f-a7c9-5ae615e65cec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94a7b61d-3f29-493f-9bd8-58bf96156204",
        "cursor": {
          "ref": "8b0a9be2-a430-47b5-b135-b53987795ecb",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "69ba05fc-c05b-4106-b3fb-543eaa415224"
        },
        "item": {
          "id": "94a7b61d-3f29-493f-9bd8-58bf96156204",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "60003c2e-d6fc-4695-9b13-182e93fa116e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a2d90ae-013f-4121-8aaf-c4be1a999e7d",
        "cursor": {
          "ref": "c961936e-999e-4c78-ae7d-734fe858124c",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "d3f7ae08-a610-42c8-a706-dc87e1a47df9"
        },
        "item": {
          "id": "0a2d90ae-013f-4121-8aaf-c4be1a999e7d",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "602c247a-3563-4bd9-b527-6a75cff58dde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd466fde-aded-46d7-b288-dde4a8df1ca4",
        "cursor": {
          "ref": "e56e2221-84d6-4bed-91f6-e1d040716dfb",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "6bdad119-30a3-42fd-9bf9-4517e79ca31b"
        },
        "item": {
          "id": "fd466fde-aded-46d7-b288-dde4a8df1ca4",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "c5889f23-8a90-4a39-aae3-8580459302fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e293a78-25a7-4043-a99e-ec80c235e127",
        "cursor": {
          "ref": "72e2ff22-eb99-4cf0-927b-15c28fdb45a1",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "ad86592e-4b26-4cfd-bf31-0b851c4ef23c"
        },
        "item": {
          "id": "6e293a78-25a7-4043-a99e-ec80c235e127",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "a0f9700d-dd40-46da-91cb-331e8ab6912c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1164028-8687-4ed5-a1d7-beeea7a61e5b",
        "cursor": {
          "ref": "5bb90e58-a68a-4b07-bffa-38127c4c95e6",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "bd457ce7-372b-4435-9601-e073e6369f75"
        },
        "item": {
          "id": "a1164028-8687-4ed5-a1d7-beeea7a61e5b",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "c0ef7a64-512e-4c33-82e2-837ccf938008",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36181c0c-f7cb-4a9b-a77f-1d58ad18fd69",
        "cursor": {
          "ref": "d140862e-f38d-4a34-9fc3-fcce5588df36",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "8254d664-71be-4b44-9f49-3bfd363caf4e"
        },
        "item": {
          "id": "36181c0c-f7cb-4a9b-a77f-1d58ad18fd69",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "a668a661-5140-4dc7-8e6c-fca4ce9ed2fa",
          "status": "OK",
          "code": 200,
          "responseTime": 76,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6f2cd72-eec9-403e-b9ec-d785b4da55c8",
        "cursor": {
          "ref": "e8d7752b-8eba-4708-965c-69f50a07663e",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "de572605-2f49-48a7-9e21-818f4bc272c8"
        },
        "item": {
          "id": "b6f2cd72-eec9-403e-b9ec-d785b4da55c8",
          "name": "credentials_verify"
        },
        "response": {
          "id": "5b2a87aa-a821-4e7f-a6ac-2fafacc3c935",
          "status": "OK",
          "code": 200,
          "responseTime": 4730,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "d26d3c93-728e-4066-8955-eafb3980ecef",
        "cursor": {
          "ref": "b424198f-e2f7-438c-a76b-d0b567827e2b",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "ba75e771-5ee5-44e0-86b6-ef79a6e8f9fd"
        },
        "item": {
          "id": "d26d3c93-728e-4066-8955-eafb3980ecef",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "6bc9e305-b034-43eb-876b-93f6c9275c4f",
          "status": "OK",
          "code": 200,
          "responseTime": 4881,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cfa2bc8-64ff-46fa-a1f6-6aef205401f7",
        "cursor": {
          "ref": "d2e6ba22-4754-4d7a-a3b7-44b34ebcaae9",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "73611481-ddfd-449e-9086-2e38aefb4d45"
        },
        "item": {
          "id": "6cfa2bc8-64ff-46fa-a1f6-6aef205401f7",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b60d273f-920d-484c-a2d0-8edd832471ce",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cfa2bc8-64ff-46fa-a1f6-6aef205401f7",
        "cursor": {
          "ref": "d2e6ba22-4754-4d7a-a3b7-44b34ebcaae9",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "73611481-ddfd-449e-9086-2e38aefb4d45"
        },
        "item": {
          "id": "6cfa2bc8-64ff-46fa-a1f6-6aef205401f7",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b60d273f-920d-484c-a2d0-8edd832471ce",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4010761e-5f4f-4011-bdb9-99698fab302c",
        "cursor": {
          "ref": "b42d4bc2-7446-4ca5-8583-de4b0b3b0185",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "d5ad9485-d690-4673-8b5e-b85d1a8fdc87"
        },
        "item": {
          "id": "4010761e-5f4f-4011-bdb9-99698fab302c",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "05c31e2b-07b3-4f5a-be72-1d23331aa12b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b13c2cfd-7535-48d5-b442-940c5e1eca95",
        "cursor": {
          "ref": "fc6512d3-53a9-434d-9b04-65bc4ad2b6d9",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "7f03ce54-e536-42f9-aa5a-bffe19cd0b77"
        },
        "item": {
          "id": "b13c2cfd-7535-48d5-b442-940c5e1eca95",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "577abc4d-c4e2-4421-8f7c-4dd62fc194f7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}