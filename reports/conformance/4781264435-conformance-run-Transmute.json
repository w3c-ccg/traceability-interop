{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "5ff141bc-c50e-4d58-aec0-a2df55768008",
        "name": "Clear Cache",
        "item": [
          {
            "id": "79c319ac-72a9-427c-bc11-322179b503e8",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0d017fbb-07cb-4a60-8c50-9d2332ef811d",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "7de5420b-a519-4bce-ab46-5b10a851724f"
                }
              }
            ]
          },
          {
            "id": "ff3ad86e-e779-497e-bdaa-6b881259742a",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "79655a79-97c6-421b-8eec-5d885a118664",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "f86d0048-2ff2-4db8-a527-5c71ef959b1f"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "7dfca643-bb03-458b-abc7-081dc22aa7f2",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "092c1ea4-9c1c-4df4-8869-66555b9ebe0c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e7fad7cc-f90f-4f2d-8918-49f758c1e494",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "df67ba89-8b17-4d80-8030-4b9150b206c8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5e53a818-225f-48eb-bbfa-a5debce1958b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "da67daaf-f017-4ae5-afc1-b5a0f05437d9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d2826e29-bf6c-464d-9de4-2a02d4e90470"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2e57d51c-c09e-4301-a045-723091ae6d1a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2fb0f0a1-6d80-4660-a7eb-756fb3e3ca4f"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0b47e257-016f-4daf-b3b7-7445b027a8b3",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "ba53312b-d27b-4d3b-bc96-d5fa6dd80387"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "53f8ab6d-9cfa-400c-a8e9-26074841cad1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f50acac0-6aa4-4b95-8e0e-9215afc46aed"
            }
          }
        ]
      },
      {
        "id": "e117b317-19d4-4dbf-9f04-9e6e5d00e661",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "ba4dafbf-bcbd-4a55-af35-f45cbd48c2ef",
            "name": "Negative Testing",
            "item": [
              {
                "id": "eb34d64d-7f65-4c81-9b08-333adc8396ef",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b9c54301-a3e9-45ca-9237-78f035757070",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8977ff0c-8651-447d-b79a-eb8f08fa7976",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d1bf9c8a-fe58-4899-897a-046ff744023a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32578242-f9ca-4a51-ae08-687013a905e3",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dee4cac3-a3bc-4f71-941a-9d97a540a45a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9cfa3027-dea1-45ac-a985-fe8bb85d533a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54cde901-89ce-4d48-9475-aa25513cbeb5",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bf87138-3683-4610-8d92-b42f280cf7c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "342158d3-1b68-4c86-86b4-e9c34c17db73"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a2691cb5-36a1-4fb3-b212-9f5b9966b269",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7d1a3eb2-0283-4471-887e-8e304034873f",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e0d07bf-3014-46f9-b324-3ee888712336",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9b337b21-871f-446a-8c1b-bef4b343a57e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "798d769a-ec26-4729-87a6-e64699884b35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54a1dd73-27c8-464f-a400-4ed82fd041b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61650758-394b-4ddb-a4f9-ede0d855bf3b",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6496f4fb-91c4-416c-9e52-4b0101d34ad1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0cb7a93d-d98c-488b-ad7f-c419edc0c470"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d465fe5-f3b7-4ace-8d97-0bf9b2440cc7",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "7b3d1e81-39ee-4677-b883-acde32e6dae6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "06f25e4f-327f-4471-9de2-249ea3bf545f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3df0387a-f6d5-4a64-8295-c4191b71a5fb",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a242b5b9-e3c9-4802-9e2c-07aa0d1bf686",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "a4640763-30bb-4020-9886-476480bdf36d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4758c3a9-eea1-42ac-9957-a80328b19cb0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "2bce64ad-b2fb-4ea5-8097-bb7558360977"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a8990c1f-3cf9-4929-bf32-62630e8e5e48",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fd1a789e-4baa-4d74-bb0a-708716c01876"
            }
          }
        ]
      },
      {
        "id": "bd544fbf-b3b3-485a-9a1d-e63ea150fc18",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "9dd5d441-cfe9-4f77-a567-7d198c2c3a40",
            "name": "Negative Testing",
            "item": [
              {
                "id": "34883d2c-0fe8-4491-adfb-063dc7c06582",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "37066b5c-e69f-4d92-aa42-24fa8ce4aa70",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2aaf9b4-f0fd-4da6-8e85-74d65c5a78d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94cbb9f0-82a9-4fc4-8650-e8ca9432f67c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "684a515f-be3c-4800-b3d7-0fafbdbbfd41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b763acec-4996-49c5-b886-235a580d1241"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c61707f0-95f6-43b3-8af8-df31ce16736c",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f88cd9e-0f30-464e-afd7-ad3c7e597dd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd8fcb98-01ca-4be2-a696-c61a4b5fa002"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8a39a5d-63bd-4941-bfaa-d05a8f537d3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c2e382cd-3065-441e-a2bf-cb7f627f0acb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "511d01b1-a5ad-4cf9-9bb0-dbd5ce774c7b",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5042878-e794-4754-b05a-9e85790f6d04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fefb152-174e-44eb-9665-3a865b326505"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89d661d6-2141-46e0-8f74-89393311cf81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f3ed9853-99e4-45a1-bd8a-f49f414d045f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f4ace2b-f5bf-4973-857a-c55fca86b54f",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "752985c0-2ee9-41fe-bd3b-c7f84240adc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88e5e73c-92c1-4e2b-a804-6ae53be90d7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21f9ad6a-2807-4dd8-b5c2-8f244a1e7701",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2e472814-caf3-42e5-8662-bcdc5efc3114"
                        }
                      }
                    ]
                  },
                  {
                    "id": "effe6abb-145e-4f9e-b556-2bcc42baa711",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08f0d306-c681-4246-a74b-be05b2650200",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02549202-488e-477a-839e-def9c9ab12d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "818fce09-c740-4033-abfa-c6227189bf53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "219ef938-aeb7-4c50-b730-b89e36fc04d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "718fa152-671c-4982-b20a-519e75db98bd",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6a55781-0fa2-44ec-a594-588f9cf5f717",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bf7922a-0f3c-46f7-af92-9a1328242f94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8295a68-35bf-436c-b931-fcb660f60cf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c316c137-d02b-45f2-9ced-167d3973c4a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac8b4cbd-02af-4758-87ba-545318a1006d",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65d10a5e-50be-412c-8851-ddb90867f957",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c6271ae-b6ed-44fa-a27e-b80c19bb08ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66eda052-eec3-47c8-98e2-5ab5615bc0b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "40508db7-f7b4-4b7a-a67a-278630842f23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c92bf1e3-0d5a-41a4-8efc-1fcf33b1969e",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5792eb9-cb42-4485-a8c7-b731ae2262ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c613797-9b6d-44ff-a781-2d679ee65ebf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "975b2cf5-d4b0-4f2d-b089-6ec8d17dbd9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "73ad626b-ec89-412e-8770-be405fe045d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5512f4f-74a9-42c3-9618-cc564ddf9e82",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7873c33-6434-42c6-bdcf-a16636354e5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "545ef871-3159-4581-b1c4-b1f77a2e0e0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b35632b6-11e7-4441-a72c-8b6847b9e664",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d970b377-aa75-4b40-a787-5858ddf51415"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6012b6e5-ae99-40b8-bec7-78ff6b6e4283",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf17fc09-042d-4981-8d03-0cc9a262212f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "684e40fa-9721-499e-8103-98fbb40898f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "213707e7-37df-442e-8686-b80405b53975",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a0ad0ebc-2a2b-4e4d-95d3-ee30ee2db19c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6434eee-68ca-404f-b823-69c4e6d70668",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "522818e9-e428-40de-86c8-e4252653aeea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0722e25f-0c60-44a7-ab35-1d5d1e29561b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "491fd365-4bff-47d6-9382-b60afe50489e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2cc50779-4d9d-4ea8-95fd-7ca5427f0087"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d148d20-bf77-42e3-a3d5-9543959188c0",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f950bd5f-0b94-4afe-9a31-27e121cda9b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f06dcc18-447c-4371-9b42-86b876366fde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5d708eb-712f-451b-9a78-d82380b9d726",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "54e352b0-8ffa-4ec6-a006-4a98347c4297"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1b8cc0c-878f-4962-9b89-ff05c2c4944f",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df786f5f-0d24-402a-be5b-a6e43f7002ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bfa8a2e-ea0f-41aa-9f3e-376142e66fa8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9245ce24-abe4-46f8-a143-a320c91f16d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4beb2e5f-ca9b-4608-93ea-48124c926c69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "130158be-d537-43f5-9947-0f810ba70671",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7172473f-8478-4bd6-bd4b-2a57d60bc65d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df2bbb32-ed99-4263-bcea-f721952157f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8ed5453-bc0a-4e07-a270-5fe1bfca16d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8b51c4e8-d047-4081-b1a9-2b5edfafd4d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b95545c2-c358-44ac-96f3-e9c8f29a2080",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7526b33-dad2-4348-aa12-70ae5fa3476f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ee8b1d2-a786-4465-9689-490fd6407ca1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e535abd7-606f-4089-8eb4-d6d4ca2769ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a03bd638-6216-4d42-908d-924b5726148a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6a951ab-4d5b-4725-83d8-964b21c81be2",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa0e08d4-4a50-4f26-b773-0b06cb1cbe1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cdf8527-ec7f-49b4-95ad-569cac8d51fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e50cb9f-8126-4cad-b6fe-6c0ccda3a538",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "462db372-b21b-4fe3-817f-3942c6f71e16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c304505d-d75c-4255-a90b-cbd195535d79",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebcb1b0d-32c0-4ebc-b032-fde5bc1b5b38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6902c273-4147-4c85-a7a0-86cf6c666448"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "682caf3c-911f-4032-8749-1b81a2358220",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7bd67df2-3050-4b44-83eb-6d718f8b2743"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f9c24f4-6374-4bf9-93e8-ed3898b78080",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc8e2f20-241f-4a16-b67f-6e406a10896d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a298df12-a6c8-4d91-b0c1-2085c8d334aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "356d5d49-7862-4b14-8efe-0966a765605d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "2bf29cae-a852-4e7e-a2d3-c36d43bc00f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "317d63b7-618f-4999-acbc-482a4b2eb3c9",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ee3b4e1-8d74-4dc0-aa5d-ffc00cda6a59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea40e272-396f-45d0-a05c-673d52685657"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d17ed2f3-76d0-4be7-9a63-8d78c398610c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7727839e-179a-401d-9937-d00f3cfd5635"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe091f66-536f-4737-a0e0-834e572fa8f1",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0864831b-bade-4f6f-9f16-f6c0598ed079",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e67f65f-4f1a-4fac-b50d-e6bd3d9cf0e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08eeb3cf-f770-432e-ae85-3c94f2a97e29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd588f40-ec2f-4da0-996f-9d3e4abd2e48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef62eb3d-de22-42ac-a848-5cc87c50255a",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "085d0aae-8f2f-40a3-9874-b19f5f6cb2f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bb7e509-b0ee-4a5f-9d5f-9b83118fefb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad5ff52a-b49c-4b2d-80cf-574f8507e026",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ebd43ec9-8f76-4734-a9b2-a8a641f2d491"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f06aea24-565e-47a6-92e2-8f4c5547328c",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d98c3667-6309-4354-b104-07996ebef146",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b34dec2-be7a-4a40-bc77-dfef9fdf9bb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29180a5b-afcf-4c58-b562-0b313d8538fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1e0e428a-ee77-4666-86f8-7178a755fbb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "806eee10-fb95-4a66-8b97-00867431afd4",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7f20e1a-84a9-4367-b8f5-90b146e05d65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4657c22f-0e36-4345-93cd-20a12a17cae5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00c2e282-e973-414d-94be-35f47342ef15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a4911259-bde1-4b04-a065-68fe5541d3eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed36e967-cc99-4f09-b3bb-bc557cdb8b91",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae4247a0-f2c1-471b-82d1-c2ae68bd3f03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1ce0cdf-2b84-412e-89b0-8bd4fbae1096"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0a37ec1-7c94-415d-8718-ef3baebb2984",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "e82b0675-f8f2-4e6a-a4be-9f328947a77f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e861e0da-061f-42a3-b998-f1a974eeabfd",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9e4e14d-8e3e-4bac-b92e-d5f8f6b3dd10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a957dc7f-f760-4d20-8a67-80e7c2402fa6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f281c10c-ecbd-4522-8c33-dd1c799459a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e62aa7a-36d8-4ffa-b868-47be0ce29d48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c169fe24-f659-4b66-8774-d174dacb2680",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86d6c6ce-957b-46d9-80a1-b9272031ee14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f24110fb-61e6-4da9-bf84-3d3cc6bd7ae8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cb5b0b1-18e1-4fa2-9910-637a4b81757d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "88a920c1-28a1-44bb-88f4-2ca0e3418a52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02d4284b-ca87-43e6-aa30-8b31e3c341b5",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb2e8052-ee1e-49a6-b92d-69cf43b343f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88b4532a-c9fb-4458-b326-e11abc04af12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40e31f5c-aa7e-4cca-9636-17975ebc8f12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3372146-5c0f-4200-83af-4c4bc4b2a0c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65987609-b21e-467f-8441-7090eb82635d",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7242ed76-eb97-4b01-9ebc-f9792aa31085",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3420392a-9e65-41fc-85ce-487b45e4e97d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2b6e58e-233c-456e-a612-b54634af86a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c65e405d-55e1-4dd0-916c-fb46d751a405"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a74efcf-c943-4923-a56a-a1f987ff387c",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80141e96-7d8b-493f-98e9-3dcb6d4c86ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bf217b9-8547-4c19-8748-cfc090cc763f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "180ab675-b8f8-40d9-bb5b-f9159a15a0fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "29394762-80a4-40fb-af21-a80796e16f34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6964957e-c130-4cee-ba11-c7dd589cc462",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa348995-1f26-4154-b90f-8e1b163ad36f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74d13159-a6bb-4e55-bf6a-3e6114c0ba74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4edbf8e6-d8e4-4c09-be4f-0caaee5a7a5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "e30271b4-2886-4942-978d-8ac6d0dace31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "237a7bc7-6475-4f74-9c01-09aaa90ed3e3",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e32bf14-5410-49c9-81a6-c2c118e8baf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0860d96-2dc7-4484-9353-980511993d74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4571aaa2-ff81-4818-9470-6f95d366d13b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "017fcd3c-fbab-4782-82b9-e6c391536b05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2afa5ddd-b754-47aa-a3cc-e927e94a55e5",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cc0b7ce-72c7-45d5-ad5d-665dfd04f754",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "796adac9-7b9f-4c30-b1f4-7e621a534d5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "623af98a-5213-4cad-92e3-35bf8f2a38da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "191a479d-4893-401c-9c98-1a03adb5f650"
                        }
                      }
                    ]
                  },
                  {
                    "id": "267aa0a4-cd91-42db-8516-11501fb3743c",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ea0911e-23a4-4d55-8a97-7536a54c1763",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a5f459f-9196-4eac-a81e-37f9aad27146"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "201fbda1-c954-469e-8e52-efaf36bc2a6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fea01469-eab7-4b13-aef0-393815714bca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62931ff7-9452-447a-b184-4ec8fe6a733d",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a2ad2ac-66c6-4d59-a208-72bd356058b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c5d4d15-518d-4631-b9d8-ce72cb334f75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e197d94-075b-43f1-ab63-8a425dd64240",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d8afd6e-28c0-4699-a3d4-0e9a66cae625"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b54e1f50-7e0d-4d8c-994d-7026c14a9708",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82db8bb2-46b8-4001-9320-9294251ba9d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb923040-f2ff-4ae8-90ce-30f702384204"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0a3da58-f674-48bb-b64a-1c7d3240e129",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "99cf41cf-7dc6-4a6f-a3f2-e7c3dd393c9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7aee33d3-ca7f-4927-bf03-31245452c7a2",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf9ef321-e53a-4352-8c6a-962560ac3ab4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8078afd0-9a1a-4d6f-b2a5-ac919243330e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6454bcde-f0b7-46bf-bcbb-e48f0211d978",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1b99ac44-be37-481f-969f-17825431ad03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4be633f4-7218-4d59-824c-a06e6489b800",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "882bd485-63f8-4daf-a99f-e04fed82d066",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07f491da-2520-4a54-a265-5a95a995b8ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fa17dfd-52d5-4802-9f09-8ac9e1e0c8e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "91656dfc-f2a5-4121-8071-13e4754e922e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53629832-b072-4ffb-8b32-031b258ecc96",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f41d6e6-3ce0-4832-8b40-4c586200c4ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95fcb761-a526-4a67-95ac-0284b4a297a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffe6e742-1500-49b1-84b1-f186abae44f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d7b27e43-13a6-49e2-8c0f-3a54a24230d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cef0bf9c-6bec-4780-9371-14f1c4ef2ab0",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "662f9efc-5249-46d7-b961-1867fa128623",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "477c943a-be64-4334-ab48-ffe3f0ec35f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "608065e2-b961-442b-ae22-13a6a46607d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3fa73c58-6c10-4cbb-9eb0-cb887f7feb94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93092545-095b-4d78-8fa2-cd35b254cd54",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e912d994-6822-4d76-b6a9-93a40a017f25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f048a4f9-81f6-4fae-a62d-a62ab70e1053"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7259996-20d9-4e70-9486-fe6db90005f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d9278927-c9f3-40c9-aa16-14e8569fb586"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d3897c2-fa3f-4d01-b83b-f3d2173f1346",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc6d1ef7-abc7-48ff-a8f2-5bab2e3d5dd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e1ba2d2-1ba4-43d9-a624-cb4c3dca900c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f42d972b-398e-4202-9c9e-b6686f02fa6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "fedcf6bc-1013-41f2-abfb-191ed6d2d410"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5df00edb-22e4-4c74-b2ca-9752eb30155f",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0789a42d-6750-44dc-9625-b5f98b5740fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b3e9dcb-60a5-4951-8ad5-c3e461258224"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a6215d7-743f-4bef-973d-c2d462cd3f17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "4e137353-17e7-4859-a081-f1f915d19291"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db5abf39-862a-4d12-9de7-d0127debdeae",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3406d492-b594-4f84-804c-e83021343b50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d464d3a-8507-45b8-89f5-ab3b9b7cfa6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8198812-2772-44bb-b08d-46aac08c4241",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "cf6c04e0-e9ae-4c2e-95a8-52d3bb63c2a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3344141-0f4c-414d-bfa3-b215a838b532",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd21de83-786a-4bd7-a420-d7971c55de11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c476f82-4df7-46cb-9a0c-aea9b634b54b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "318eb0fe-c0b3-47eb-997b-1977c00b1687",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "6cc1b628-8661-48f0-a782-ad7231dd86b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "909a0d1a-ff67-48bb-b9c0-25a734dab19f",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9585a9a0-cd7a-44d2-83f4-f35ac2f38fb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ee9065f-69ee-4ae4-9209-af245351cd1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf8fe159-fbcb-4e6e-8bc4-325b94c51884",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "310ceea1-1eb7-4dec-a834-a8e83f2921ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fb12379-d194-4da8-b92f-e3d7de6f74a2",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35b6e41b-260f-4841-840f-a0e9a3917db2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9f58205-bc5f-4f01-ac76-a34d932dd20c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75fbb301-77b9-4a67-894f-e6b19b3b87e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "85abab09-ea57-4a8a-8885-6088b512bb0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4c36499-9bd7-44e9-ae12-b84a6c19e539",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "234fde41-be5e-45e3-be49-e3fcd1063466",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcbb37c5-a262-4c62-9e26-00a9b57cb022"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40fb5bca-d6d3-4962-9790-b6f8ff612c87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "eb46cdb3-48ff-411c-928b-d01da13a1ee7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48eed3d4-e6ad-4fe8-931e-69120cf989c5",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "023a29ff-7769-46b6-bbf9-2dc9cf954812",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "523e4c1d-7c27-4232-9dbb-56cae957442d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c02d5ee-765a-43c8-9df3-86946eb12196",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf6ace50-027d-4176-92bc-bf1d7a209795"
                        }
                      }
                    ]
                  },
                  {
                    "id": "658f72d5-f7d3-41b9-a71c-6e5ac235f527",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1abac5a6-8a03-4995-8893-a30d18a279c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca5ac5e3-f519-45c4-b3aa-f64d6636dc4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc9788c4-e5b6-4c31-aa6b-aefd467c198e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "284255d7-de12-4c1b-b67c-47795693cbcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "905a6d0c-b9bd-4494-a09f-130e375515aa",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "571f814b-91ef-4b84-aa37-617d0af11f7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d71e4814-0fad-4e41-b22d-9e792537d9d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbd15c6f-b126-4fda-b878-1b98f8b5bf75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b4954a92-b1f9-44b2-9841-9d2180fdcf0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab3dfea1-e7be-41cd-9c77-19f1b32071b6",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b36ccb5f-2b98-4003-88b7-5b5d4fb8ad67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca23c2b7-e440-4395-ab0b-5a5f429f5d0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab40aaab-2088-41f8-b8a3-61ca2bbfff38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "f54ceda0-63e5-43e3-bb8e-48ff93c5b10c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "659504b1-5605-4508-a206-b8ba1ad4cf78",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36f8eb76-41d5-4626-9caf-2f88f8cf73e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec948edf-7b2b-4899-b38b-b8532789828a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbc8a433-75ad-4fb3-a79e-4a2a33f064e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf56990e-955d-48f8-8a9b-de27828def58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c095d87a-6538-418a-b038-387b1ac98dc5",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e772c63-be7b-4c4e-8c41-c73a57ddfa43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f3542a4-c1ce-4304-acfa-39c5fead5a7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68473ec8-5c06-44be-a9b6-209ffcd22b7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f0f2899d-f61d-4f25-a1dc-73f87131e711"
                        }
                      }
                    ]
                  },
                  {
                    "id": "762dc22e-ecd2-4527-86e1-511d86c7593b",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad40a0fa-1edd-4b5e-b9f7-6ff443c52d57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48792d15-bf16-4e7b-9cf9-8dc8f35912b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65e620ad-e7ab-4b91-83ff-6b25085a860c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f61850cb-bd72-4aa4-9b39-4e1bca720af6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "472d1eba-9b31-401b-8039-47228dd960c2",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae60f2cf-0130-412d-86df-1fb64090de97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6facf6d-95eb-4cb0-8632-8d7e5f91dae8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fa5aa26-003f-48fb-9ba2-eb8f26979859",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d510a22b-60d3-4dc4-9d90-485a71374ec2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4576c149-65d0-447e-962c-099a1b7825f9",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f709ca0-c5ba-470c-a650-72c4c94b5d70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6717541-1ed2-42c2-ac3a-4b6407eb9eed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a90dd39-6ccd-4d4c-b439-88dd857cbf87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "a2d883ce-9ee3-41f8-9dcc-b55cfbc6b3a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "931d3307-dd18-4db1-80cb-b61eda91874a",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6836bb5-5e10-4cba-84ef-6fb9557349bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "443225e0-995a-46e7-b74d-42199a2af778"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b27b4e96-b243-4ba1-87fc-6fcce587fcf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2e84d799-bcd8-4ec9-88bf-02c8f31df342"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c055cbc-d938-471a-b3e5-00fb2a7cbbce",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbdf3aad-3b2d-4659-ba9a-b91b8867a585",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00f9dc43-8628-48ba-9959-f92d163f9e0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56648ae1-602f-48a6-8f3a-e57cb727b21a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d67b101f-9368-4202-8996-1d7e060ccb37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cd5f352-67bc-4af2-b767-f8c559227288",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a52c7d4a-72a9-48c9-ba6c-d5fe2be9a6c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7579a3a-ff89-4f15-b671-6131fdf6775c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0f4e1ef-cfdc-41cb-96ed-a2db249bcaaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e4d1867c-2f91-45db-b097-d0c015e58796"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dabaf56b-96c6-419a-9e28-4ef49ad4d917",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d3368a8-7ec2-4dd8-af5d-a9f4e349ac25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7339fe02-52a6-4588-81f8-12164ef854e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "335180ad-a3da-41f4-b67b-784c3409b052",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8712adc7-8f41-402c-9b88-cd57215cb8bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b4483b6-9992-4a22-987c-428043a3fb44",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "500e3baa-f44d-41c7-a1dd-4f5bb71c8b97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47517510-0c82-4205-9ec9-2eed3bef0b7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94220272-ffcc-44c9-82a8-7b098b092d67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "1d7820e6-2f42-4fd1-8de4-3695315bf17f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ed57bf0-7002-45ae-a639-238fa80061f2",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1f2b50c-02c4-4800-99ad-c7888ae6d9c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "706f6e7f-c1f0-4d3c-90e7-c0a01693f940"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "893bea84-4bd0-45d8-aa55-7a1158484b0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d5935cf-3b4e-4eb3-a2ee-b40498c23314"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f674d11-22c3-47e7-802a-baa46cbb1dc7",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f0a000c-7ebf-46f9-a012-ea39a62f19f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02791180-bca3-4a74-a22f-d22b55d220dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "354beb35-5831-472d-ab38-bb07977243d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "02461e00-abcd-47fa-b7b0-877535ef0589"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8c5e906-a214-4326-bddc-d781daae2eac",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6161ae8d-0835-4785-a49f-895e583e55ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55a3977a-6a67-4780-9ec7-92749c622c47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eef58ee-2f11-4897-8c61-911b0aeea6ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf474a62-de98-439b-a731-867835bf1698"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7a2dffe-3537-4383-af33-7a36b5030f5f",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d00155a2-31ba-4af4-ac87-11a0244208b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cb86d59-0cb7-494e-9823-70f00baabeb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c7f5e4e-f3ed-4a51-97d0-7edf0f3e5926",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "22456343-3a99-402f-9e14-61a0a10d171c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d5254cf-bc56-4962-b81e-2dbd626c1bcc",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4b1c7a1-7cd3-4969-a4b6-96d471d9e94f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0187201a-d334-4139-9138-2ce4fa6ffd6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c09fcad3-ab52-4e41-b45c-05cf1f228a20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c881b05-ed66-4d7d-b0c9-0edc71d91c43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d017d0f-db24-40c5-a6a9-3df62c9e48d5",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fffb26a-42a0-4b3e-a8b1-5d2920b56422",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2a0ddb6-1cd0-402b-82a0-26f60985ab5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b317322-b5b9-44a4-ac8b-dbbdb92e8e05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5041e5a7-4206-41a3-9fc2-fef91d744706"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0156768d-97c0-456d-9de8-148b6529f7da",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f99ff34-9e5b-47a8-a6e6-7d3f64f7a429",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3893aec8-0c8f-482c-b003-f9591e51757b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7018444-f6b1-470f-a6f5-d5bda2af2779",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "80911d5a-494e-4a0d-9d84-52615f57cf36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "055e6887-8ac9-4416-b87e-23c780108705",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ffdeccb-89e3-4a3b-9a27-4375181099cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "477b7a42-9a37-4bf8-81b6-f54156a05717"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3de1d0e-63a0-406f-80ce-fb09930ec75f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "38b8340b-e517-4977-9965-f4052dfce293"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c643f52-0dd5-496d-9a8e-ea596d11ef94",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eba8bd77-69e6-4dd2-94ef-f01c570e3303",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14605e10-b734-45d9-866e-59a18f4541c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64f5afe4-1348-44b6-bcc2-0bd8ef63b6f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea9cdec5-b2a5-41f4-b921-74f1a9aa5b03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cbe2372-469e-4a37-95fb-51608bacc0ed",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c695c1c-6911-46d0-8f8a-a143017451ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8383d0e0-cd62-406f-bb3c-9e130273b09c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "180126d7-4db3-4b8d-aaec-b7d0552d2456",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "25c30eba-43d0-4588-bf73-771846979351"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4363ed51-a225-4960-b742-8fd9d43a3fd7",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d462fbcd-0754-466a-8adc-f39adee10e58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffd990c3-919c-4d08-94ba-4635bcbfe890"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10e43597-abb3-418e-b064-efbcd319cb27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "44e1eb8d-d2f7-4a08-8314-89c9f87ee276"
                        }
                      }
                    ]
                  },
                  {
                    "id": "546e28c1-34f3-4c04-864c-4783ad37d38f",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1070bd0d-9535-471d-be00-2fa558a0df4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae0fe176-5de4-460d-a734-24f1c8d73d22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbafb7cf-7652-4fdd-9b2b-a8bab34abeb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6722267c-4019-4812-9f5d-db074cbfccca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25d4e07e-184b-4615-9dbc-dc93effbb66f",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec009aa3-44ec-42da-b4c6-a870f95dc0b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8159660b-ffc9-4403-9a65-ee72055fa113"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b52867eb-d543-4d27-b87a-2e006bc034e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9aad34f2-3167-4c22-ae93-b2d199496a04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20c61d84-f5ca-486e-bcd3-8372e4ebe880",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f62af9b-cfa7-4ded-910c-9e3630b3b996",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f964e8e-f78c-42c5-ab0d-5d6aeb5ad945"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e0e5e84-383c-4590-a3ec-ab50244971b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0431175-dc83-4a85-93cb-630f13659d44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad075ab9-fead-45bf-9b95-3b4a7d135067",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbab711f-1c95-4e31-ac99-5e570ebdee19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dcafaf9-eca2-46ce-a533-402bc780766c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ca11f38-d07c-41f1-a285-cde8dc5ecd2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "94beb931-c31f-4731-b651-79ce9db9c5a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "046959d1-eaf2-41ac-ae29-2c69ba5eba08",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33638a4d-7634-4516-af41-4759adc895a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02bc4dab-6508-4112-9d80-b93c9aa8123f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b32fe981-8de9-4a19-95e7-0bdc56572a3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ce1d253d-6cdb-429a-808e-d5afe9a00cfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afb9a529-de09-433c-9f29-60280e3e66e1",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb454501-da50-41c0-80c0-0caed6a4b217",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b9cba41-1890-4573-89d7-11abe499f810"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa20e91d-9e1f-40d3-8135-965b8e454189",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "71876a18-1954-4bd4-b2ee-d6a20deb8a57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec2f8368-3310-480d-a634-2f274f43fb8b",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39b6ec88-32df-4906-ad4a-a93a792e458a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f090a80-b0e7-4122-83b8-12fe1101fe70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86fbcbe4-1a92-43aa-bf76-43ce0ff53fdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fa461435-4ab4-4cad-bddb-5ba60ab8a3ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b2951cd-7a7d-4887-bf50-088a0c53022e",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "994c5b7b-6035-4f62-b8b4-b0819d82ff0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7f85b32-185d-428f-8380-c1c1c79bc35e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac9ae5dc-92dc-4ca9-a2d1-5e8063b883f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ad0fa086-09d7-4603-adfb-6f7331cb03b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abaca528-d65e-4f2d-af83-db96cd0373b4",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0e6616e-c6d4-4ecd-a520-ffb81b677a93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfa65997-8b83-4063-b871-3cbb95c2e1c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76a1eeba-de89-4058-b821-c84d0106f565",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "07610d20-91a0-4c11-987d-24954fc718e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aee3a08a-42bd-4b3e-84f2-59958e047a0a",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67da0843-c11f-434f-a495-4bc1fc3f335c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ab63a76-0009-4a7b-a7b5-e6323d3f90f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "279a8412-20a0-4b14-92fd-9ba91d8133c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a1830af-f567-41a6-a687-3dbb2f4c58c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3029ef6-b40b-488d-a214-354183625bc8",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92087fa8-cb3a-45b3-9b0a-9c1d6cf6c732",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03f73876-5fc8-48fb-8a88-35fcf001370c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f37e94b-c6bb-451b-8063-804a5c378112",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "37b3e36a-40f5-4e57-8264-483b1a84b954"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45e78635-bf95-43a1-96b8-b95b73f3018a",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c942106-d169-4e2d-9e3f-86ad0d67a85e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdb1b9c0-5968-4f6b-8583-299f555b471a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9672252-46f3-477a-8e72-50787eb30274",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "92089eac-2908-42e6-b18d-8df0bd3a84ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e419af7e-32cd-4247-a461-ada034db4143",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e533d307-1bd8-4a68-a8dc-ce414de6cffe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bbfab3e-271c-419a-bd1c-ab11fb6db00c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8388ade3-9618-4f4a-a091-1adb59e67fd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "41be24cb-27e6-48dd-89b6-5e415c10fd1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f624a75-772b-40c2-9b25-e14a44eb8d6b",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "128af826-c18e-41e0-8f87-d74d7a499357",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79aaed1c-4de5-4fd0-b7cc-7fad4b078af0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb874785-5d5a-46f0-b996-552a82d167cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6f88d371-07b2-43b9-b33d-799de319ad3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4764e74f-ad59-4a32-bc70-21d241b14770",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d48b48e4-81f5-418a-83be-8097a45bc45a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3f02192-c2ea-4482-97d4-8682ba3c212b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b4c9f7a-6c50-477a-bbb3-fd93fd206e5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "30069bb6-f7d9-4c48-9119-937f6a737acd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c727eb5e-1943-47cf-aa33-109862106c16",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06f39b7a-217a-4a94-a363-0be0e7523e21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "489e99d4-683c-431d-9f01-50dcf32f2fdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b08932d1-7bd3-4ef3-ace8-ae32ed36ca62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "009b0969-de41-4bce-99d1-539574e6ebb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5ea42da-0d8a-4bf7-a037-d52348c928fa",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c98273e-8be2-45a7-91e8-77d215ab4801",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d5e0c3a-1fb0-4046-a548-67491472e9bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37995f6b-b99e-4ff5-a829-8106c202ca5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "36b84e7c-972c-45f3-b341-acb0bcf8e24e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63a04717-3051-453e-b29d-e7b8a5e6a9a0",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ded0cd05-6b67-4f46-b7e7-5c90f2c5e1c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d53c77cc-15db-458a-be32-168ca629ecbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "128f3420-3817-4cff-9509-e26892db79bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "78e4e02c-4b46-4ccf-ae4e-6a2d63af6cfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe710c19-53f5-47f3-a12e-f92b2f3fe51d",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8d9d3d1-b946-4196-8d6e-5cb96bde4036",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "770f9293-9f3a-4293-88ff-1fa19a9437a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "979828d0-0716-44d0-bf5b-060d4d639681",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "9b229104-77f0-4dce-ab82-b3d5123950fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b9625b6-e06f-469d-8328-e23ec98e6160",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a06cfcf9-e4f4-46bd-8d2b-73722ed63f49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "d79a9521-7c30-4bde-acba-f62fcd8d721b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0341c4a-b577-4f3a-9b60-5f3bdf9fff95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "0219b15c-a3a5-44ed-a491-dfe3a681e1b7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f911abb7-5ebf-4bea-9b1e-1c91a15db8d8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2f0e3f56-8db4-465b-85b0-cd01c0fac99b",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb473092-874b-4b58-9b4f-38484a66525c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b089f029-63ea-488e-87ec-5df2ca1209bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f18fb128-baf2-48e3-8070-f6a7a8e62305",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5365b089-05f7-4b8e-9cec-8284730d0b4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a7e62ec-d038-4dce-b263-1bbd1fee74a4",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0d2ee8d-761e-4827-bbf0-78ec1e4111ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "24f45373-d342-4a4b-8813-99cb87e58456"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c041a181-d485-4345-82c5-13b2b791deea",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d241cb23-005e-4a45-a33b-879d1e4face8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fe646658-9323-4059-b769-c80a373058bd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9ef36fb1-ec41-48ab-bef1-1ed0ca3739a3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "26dd6047-07f1-4731-9664-08a2b4ef0c9e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ecf54960-1b6c-41c4-9f11-277a06ab7111"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6e9d29bc-22cc-4c1c-95bd-ebce1e4ab04b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3c06c3cc-0fba-44dc-be2d-e56088b2825b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7f8b8946-4a6e-4e30-88f4-0bc7c2826c5e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fbc11d34-cb19-4a79-a6ad-56fa11383cda"
                }
              }
            ]
          },
          {
            "id": "806acb45-ee3c-4cf7-9c4f-3dcd3fd5c878",
            "name": "Positive Testing",
            "item": [
              {
                "id": "97b81107-4bc5-4b1e-a095-61aad2f05e2f",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5aaffbcc-6fc8-46ff-a4f2-0c5655e7efad",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "db4fd428-83e9-4211-98ab-ded79fd5a490"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5ff52aff-49e0-4dff-8acb-29323006cfc5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d66d8846-b9d0-4be6-b8f3-9cbadda64adb"
                    }
                  }
                ]
              },
              {
                "id": "d3f55aaf-1bee-4697-a293-4eaf42f0a3ed",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1f1b5db3-b347-410f-825a-e20eb60e08e7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "10b6e66e-b674-4fe1-aed4-e4d1b90c75d8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9d7226a5-cb29-4d46-84bd-b9815bdd702d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "48dc0479-e5b1-41f4-9a87-e104ba8dbb2d"
                    }
                  }
                ]
              },
              {
                "id": "e2f8de5e-27e0-412f-a746-1d193fdeed39",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f6bae2ff-1bc2-4b89-9478-088727d11c41",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "04b66869-42f6-4c55-bc3b-96a761d91e93"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cbfdc148-5577-41f1-935f-0d0df3ed96a9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "10b589b5-fb48-4cba-8f24-d08dfc1409c4"
                    }
                  }
                ]
              },
              {
                "id": "c1cb7013-d924-401e-8e1b-68b9dec6d118",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "be44fe85-7154-43f2-962e-101e89d3e215",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6e79566f-290f-4b6d-ab01-db7150afcecb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b318879a-7702-45d3-ae1d-b2ac1f11f481",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "2f191229-3280-469b-b191-49bd15d2367a"
                    }
                  }
                ]
              },
              {
                "id": "d3b53439-b6ac-464d-8e04-dbed67f5a2b7",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "de55d5f6-9a1f-47db-8091-e3a21cab99bc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c4a9780e-bdc2-428a-8b8b-d399ecb345c9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3ccb90f6-d293-464e-b86c-6fc251de5c82",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "9dd1d217-72ae-4349-a54f-c4f34930555f"
                    }
                  }
                ]
              },
              {
                "id": "d386f3b4-6a1a-4148-9286-6c7caeba1632",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0136a4fa-8093-437d-b0c9-cb422232d931",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d85ae52f-127c-4195-920e-9fa8cde51a51"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0f18c417-1bcc-4209-8160-95b49121b912",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "cd61c924-1dc5-4f57-9c7c-13ed208a6127"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e7cbea00-e1b6-4c6c-b509-342ce4673db1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9da814cd-3b87-48e7-b2ab-41691075c57d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "010c2af4-7410-4eab-8e5f-f6ed72833f7f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "15dc0623-6637-40a5-b835-1b483590bb2c"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f11727cd-6ea7-4238-806e-1e420deba1a2",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "a16c88e8-c0dd-49b4-9e06-c042e93b0d22"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b7961309-1d41-47dd-9d53-c2b8d75cb768",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "775fb4e0-90e1-4ff2-9007-9dc744f93657"
            }
          }
        ]
      },
      {
        "id": "d5b435e9-b60a-4746-aafa-bedfbfb0b7a6",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "890c87c6-4af1-40d1-9073-cf767bdd7521",
            "name": "Negative Testing",
            "item": [
              {
                "id": "296539d7-b4b4-4b51-a799-61f2e9209c15",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "04cc98a5-918f-47fc-962f-74912ce31e0d",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e61ad5ae-ade6-4ff7-985f-5b5842ef00e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27bb2a35-fbf8-475f-864d-5386321d3701"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80f71f98-ed72-4612-8106-8839af7c620b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "e58c3461-f018-4bae-a552-774e4e001eda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "775c82e3-65b0-4626-a497-e80561a2ad2e",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d58edc42-4073-46b4-a30c-318da5c38a55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01c254dc-72b7-4c4d-bcbd-c51395bf598e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef41fb6b-88bc-46ed-be35-779d66aa0d9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "955cf5c2-005f-4573-9635-30714634deef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cdbdabc-7dfa-4a3c-947e-281a85283f23",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f9d30b6-1525-429d-936a-1f89743aab7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "951c0cb4-5c9c-4c77-bd08-eaad16e2d928"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f79f200-66aa-42e0-b34c-0786eb96820e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4699283a-f8e8-4b09-a55a-7bea122971a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9d7a6b4-830d-4b9c-ba14-de1ba506aeec",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef889370-4cd8-4d68-babd-11309b3417a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dcffe4f-dde0-4b00-b6f0-0ad9e3731788"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb1e1106-c3a8-442e-aa9c-908da15b90a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d4528b98-4d3a-4d8c-b593-dcd246a34266"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad9852a9-0156-498a-8e19-279790dc8e14",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9871c476-12bf-4c67-9278-23012f72feaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a47ccddb-36b1-432b-8ce5-dfcbd1e819ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bb58ed6-acc1-44e3-9ebe-4148ab00fe43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bff56ac6-19d9-4b44-8020-09435dd96901"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03f20c20-c9ff-4179-9344-54054ef61e97",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb06a77b-1c1d-48ae-a885-fbf4bc72d107",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e07adc8-6d9f-41f1-8770-16a13bb3ebd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40a1a841-b0aa-435e-9cc2-3b47ef252a99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c09a5ba3-bd91-4f43-8ae9-a9253b47f0f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35cf1a0c-8dae-4c8f-97c3-18661a8db2bd",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a73e0196-e47f-483e-bb5c-8e7231dfa364",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c6a6e0d-6cf5-43db-a88f-88d731df8e37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6172a80e-7843-4cfe-b488-72317c623625",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "ddb0f2f9-3f2e-4b1f-a98a-d21d5c85645b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b75fe1f3-8e03-4312-96b7-63d4663bc3b0",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38113e9c-bf88-49b3-b730-ec043c151f6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a428a975-e2d8-4cfd-ad5d-0c8899577648"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02f90b09-53f5-46fa-9a94-b1b16ee2ff9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "17ba8d72-7b49-4672-82a2-1464106c280a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b25b6b2b-7b19-4afc-951a-b9d6cb3b8100",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84843b58-4ce0-44a3-8161-b925f162816a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52c5db3f-9565-4d6b-a807-b573ae5f2e4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cf5dc7f-e0d2-4acb-bb3b-6d9930e07912",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "77e239a7-0b79-4de3-8ad2-1e0b17a47520"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e1445e8-1fcf-4e68-ac89-497520d43736",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cfee24e-b3f7-42f8-a9a3-5741a0154fe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2257b72f-0d21-411d-9a25-ca1a992871d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5c5833c-c99b-4551-b36c-2f7f1aa2de7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe268177-d23a-4f22-8933-12b69e2d675b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc48636d-2ae5-4fd1-bb04-2a610b49fef6",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0726f746-c5d5-4830-84bd-a468b96cad0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53d0f5cd-f6ea-4630-ab1a-539715d8761c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f3ac23e-5ba0-44ba-89da-2554cd47b17b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "9b62f0c5-f09e-40af-ae82-4ad75a8cb7d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a90b88c-cc4d-4f2b-9d57-45d200cea42d",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0730076a-a30e-4c1a-bb41-2368231b0bd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d273bd7-9c99-4387-82bf-f8767b49133f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52731382-7478-4fac-b28c-eb548f1eb069",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "78061126-5ed1-4b84-b738-afd3503375b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa365a4a-7b63-4b38-b958-71604675b44c",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7132412-bd7b-42ff-97cd-beb5bbfdded4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56b8fb81-811a-4260-9c01-d627fc9c6058"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8eadf629-277b-4f75-89b2-f8c13082d5b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a04b59df-26d3-4d17-9d2c-ff443ee8bacd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74dff9fe-2fe7-4a08-93d3-16787d06d68a",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "221f48e3-a1f2-4a7a-bb29-18b7a0756977",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c148e5d3-041a-4b29-b0fc-671cbb92d002"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4d5d8ca-e5da-4619-8e59-80fe5ab4ea04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "56fc4213-4761-4e2c-ad4b-e4e9075e83fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcab96c0-9713-4d9f-9bab-27b3b84cb05c",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1128b56b-cbed-4bd6-96ee-c92b54d458e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9c568f5-3e91-4589-9ce4-767ac2dd957f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d0f5beb-0054-4d42-94b6-2c062964476c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd2b62ff-f952-47a6-a13c-098d237561c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8af57071-038c-426f-9091-a1c2fdfc7416",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "793c3734-0a27-44da-bb71-6f407f53a26a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4f288a0-9010-49a0-a033-2ed4cd1b22c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2be45ef9-5455-47b8-b9be-a47e75beae8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "25a4ad5e-5e4c-46ba-a124-2be5a68c668d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19d16fec-1a95-4f45-8387-6b53dc21daf5",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1bf8c20-567a-488a-a5cd-9d5bfb849a82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8405678-099c-4627-9191-298f821f0509"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "912b4f5d-5a47-453c-baa5-7e0e917649d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a16a7c1-4559-496e-bf57-ca9f5d366702"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a94979f-5eb9-4e41-b3bc-a6203f0121e9",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e39ba9d7-20f6-472b-9589-697be8dc45b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "732ca082-3846-4eab-b39a-828064c039ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f79b0f4e-5ac1-42ce-a12f-fd6659cfbe41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "37266465-210a-4d53-8783-f58b423fc048"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c2d6537-082a-48cd-b41d-d5b90508731c",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cac2252a-8532-4c87-a503-a0c4eeed7ce8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8179ce6e-1d03-4dd5-bddf-6ec12b25e7b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f8fbde3-5d1b-4ed7-b2b5-9260a43bcb58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b12409c-4257-49e5-9110-4e50f0628027"
                        }
                      }
                    ]
                  },
                  {
                    "id": "391d59c1-4260-449f-860b-5273ae0b3dcb",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3faa3b5c-e7a7-4457-ab6e-88392d0f314d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "738953d5-9de1-4861-8466-833e41bdae30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6311952-53b1-4e30-a515-29a6005ec847",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a2c32f9-7359-4347-9ca7-810a4f1068eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56a41c37-1c61-4643-a198-e592d8430baa",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63211a3a-e40d-49f6-b8c9-bcdcf51bc7e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cccf8f77-6d93-4011-83b2-1bcad9f1cbb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "180388c4-0634-4626-a45a-79e19441f30f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4df61ba9-c120-4712-9d5d-395900b00a5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f93749f-de71-4b48-80fa-42b7278d7eb7",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3937ceed-915f-41ae-8ccb-09604de6a205",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c272c4c8-c238-413b-b887-3f0118140826"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d435e6a4-032e-4be1-90c4-25afe503b5bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "60942b1f-d1b1-4711-93a7-053a2088df85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2db3f503-ef6a-4202-9369-4b5a95651368",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edaea28a-163f-4706-a76a-e666b271117d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85c0cf48-e7ff-4e3e-b3f4-4290710e2541"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6283d49-66c3-4621-8fb4-7353bd0f3546",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3d4b3b4-a90d-43bf-8d48-a63cf7fd4783"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a293682-3b0c-46c8-9b44-df5f64335813",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dc0cae6-e3bf-4ad4-aafa-74b42a6dd62b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "316b390a-f0d0-4bea-89c1-9a14da34af9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7adce15-75c3-44f4-a8f6-beacea3ca4cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c872ca7b-24e2-4157-a7e9-be260db5a458"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b110f67-d499-4a09-8e88-98f1dc7d1d32",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "198a6c8b-1990-4f33-84a7-7183522c74dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "335d2310-edc5-4035-bb4d-e9f453b2a455"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad7bb875-ff4a-44e6-a9fc-332a049dd0b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "312bb9d5-13a6-438a-b736-6f6737652486"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d48dbd21-ced3-44a7-affc-4d7c3ccb2253",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04ffc957-1e68-4d5d-b3f8-a1acd0a2f3b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bdc8237-0821-45e2-8b0d-3d7e030d4050"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22d44308-318f-4b25-9577-51449078c7a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d43e70e-c17e-4a19-9a17-d7061fa3d387"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac11a92c-bbe4-45ff-a798-3baeaddd3dd2",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f36c9c5-e591-4dfb-93fa-da43ac3fc6c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c825dd42-af2f-4d43-8196-b65bfe01d3fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09866ada-d254-45df-9cd5-09b74523f512",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc342ef2-7699-4296-8502-27b8fe883f61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25a0fd63-459c-4057-9e41-a3643fe6524a",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dddabf6-b31e-48dc-aa11-7dba8f5f6359",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "006d31de-fd26-4576-9041-c7cf8e00af2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "969887dd-9947-405b-a367-d8f7f455bb26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed2e3422-42b7-4117-bb47-6a66aa12998e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b2ef0c4-bd07-4045-8fdd-6e65b21f7d77",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6543da10-a3e5-468a-a3ab-071d5d3aecbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "853f8ba1-2685-43dd-83f6-d90d358ded5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47632a13-b9bd-4746-902f-e28c563f66a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "30ef3700-c8f0-4f58-93b5-5a7a44d7ecbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5af7c0f1-5c99-4cfa-ad39-92acaa0209de",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b5732d9-bf3f-49f8-a521-b81f460937dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0604bd7-eb3d-4fca-911d-80d40d78eb5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a64cce52-c56e-42a2-9479-180975cabb62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7139c800-9155-4580-b1f0-6cc73529db6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c637316-2a8d-4771-b000-d7eb4658ac9c",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc79f68f-4a49-4949-a7cd-d13a4f01198e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50338e70-b0c2-44ff-b024-713d762ed074"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "676b6595-3d81-445e-919f-9410b69fc50e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "23878f15-bf7d-4b86-8c6a-5fdbe444d617"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b173a2d-9803-4fa5-ab0e-ba317511f547",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cffbc23c-1771-48f1-9ac1-56cbafdaa23e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9313e39a-7995-4136-b34d-2f51a4d2d14d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ad58592-ecc5-473e-8bfe-47e0bde677bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c53e86a-69bb-4897-a3b6-d552242376ff"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e8901648-1f90-4f40-b719-cd3cddfb568d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d8ac277e-d4b2-4f95-ab59-5259c9978ccd",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "192d5ef6-a344-43c2-8ee0-2342b893aad2",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "fdcf395f-99d9-4584-85fa-20b062b7a481"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34691c1f-a04e-428e-98fd-f1e5c75b8ca1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "59a39074-8dad-4ca6-b881-da6111525d2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07c7aff7-1ba1-46e6-a36f-f8bdc8e9b139",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "934d67ee-b828-4657-835f-6522c7242494",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "e34f0d05-f14f-4b63-851a-0d3801fcbe55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fdf7747-5430-4eb0-848a-c66ae06494d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7eecaf01-3f72-4178-a608-c551f4512147"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "938b9f84-4eaf-4082-9a58-7356acf7344c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e41955e4-d150-4812-9211-c4f9c5542753"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a30e97ba-dc0d-4828-8a04-bbeee71c3692",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ebebcfdd-7887-4f63-8808-a3f3d9b93403"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4c44e66d-e067-4279-b09c-f4299a903c09",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3a77267d-1606-4a6c-bb23-f6da12066207"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "23645fdc-5eaa-4940-ba6b-830ccd12021d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c5ae8d65-e396-44e5-bfd2-5046a75ce893"
            }
          }
        ]
      },
      {
        "id": "8c9538dc-c8ab-4056-95ec-e990b3e90f93",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "3e45d318-c8b2-4fcd-8143-5b136d75073c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9a601bbb-222e-4b31-b68a-93361a9fb684",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "294ad7ec-de70-45ee-944d-57b69c146cc5",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c3592ac-532a-4522-bb2f-e2b88f2305b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1328feed-6a6f-40cd-a065-8a0217fb64da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a35e125a-c8ad-4ecc-bcf8-451450bb234f",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "665fb9c0-cb82-4c38-80eb-eeb4289b0097",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "273a726f-5ca1-46dc-bf69-cb882b8a7709"
                        }
                      }
                    ]
                  },
                  {
                    "id": "078e8b09-4163-4e3e-97b2-2533e4d8f35f",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8267b241-3a3f-47d3-8b74-a052a6d35755",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6c88512-db23-442b-8d5b-38c77c9e70dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60e0f5ab-caf0-4e76-a76b-36aaf30f569a",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26f40d83-44ad-4d5c-8a0e-98ffddc872aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf24f89a-d213-4a23-bcad-b0dfab8741df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "691ce8e6-22cc-4581-8f4d-900f0b13681a",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95b5e852-002d-4898-a735-c91527cb92cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34b72c88-0bba-4146-8a2c-92b6589ec950"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42b307a5-d6b2-4b98-8942-ce25bf56997e",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e86d5fb6-2c9a-422c-903b-82718441f49f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88553473-31c4-4e34-8fe6-d861c77461be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70383b52-885a-4a6c-9dc3-e9f5e2549054",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "001cd5fc-8bff-47b2-b5d6-2666d60740f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4eb3522-4eb0-4b9b-b58e-593c4e328445"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40ebc8f0-0686-4c1a-a5c6-7a4de6a4a6ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3b071a1-ec66-4aca-a5d8-bacabddd2175"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c38d21ff-0da9-49b9-ab55-8e8bfccdeb48",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "443bc5fb-4f5c-4def-a4d3-c6da0a18d0c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9577b67-546b-4f52-b6c9-6209499ad222"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54db4b9d-aac4-46f3-b36a-bc78af7c5332",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1655b8dd-b810-4857-8ed8-e3505bcfcf9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "066531a8-1a60-4d5f-9812-01aa9d83f53c",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06fc7a81-90f4-4254-916d-ae2b2bd9d97a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd8c32b4-1eb1-4394-b756-9135628d157e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d99af0ec-73dd-4f92-ace0-da0ebc99cb40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc27e6b8-54d8-4b0e-9930-9f9aea2ccfb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bd115d5-1941-4f9d-8d31-7eb0ac3fef19",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c18bcb48-4f0f-49e9-bf0c-518391b5114b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d742e5c-cf35-4be7-90da-e6c198b589af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95a9421a-3f31-4c43-8b16-3cda3e2fb500",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "105db660-df34-4f21-9f0e-875ba2db2cc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51ca9fb7-a589-4688-883e-ce60562a9070",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8018d197-a854-46c2-ab07-7320bda9fe52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9a8a4ee-f113-40ac-976c-3787d85dd8af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37c4e450-20f1-428b-9437-714086f8fdbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7a874bd-33bb-472e-a588-99bc8c5bd617"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bd9fa46-2e91-4ff2-9e9e-4fcfe155c0b9",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a646761-5077-46cf-b821-1510b7b77272",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81158975-d521-43dc-ba2b-c81f6aa099b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "872d929d-a6fc-402e-a670-38e5a8d0b6e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc855a8e-eea5-47ec-8c2c-174d65f74dd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05ad5093-d9b6-4c59-a294-0f1497785a25",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12b27b70-e490-4ac8-809b-1f80ebac5d49",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9af776fc-1712-48ac-9363-ed2a475bf5f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab97e24b-f2af-4d91-abbd-7e8af7ffdfed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8af29b4-57fe-4f85-a0f4-a3ae04d744a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "246da3ae-5e26-459d-addd-1a25b632226e",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec6d440b-0d3a-455b-a0a7-74468272d3bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa85ec97-94d8-4884-b9ad-6eaa9fffd90e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3bad9b0-78c7-4d53-b304-ea642a97f2b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bef93ed5-8fce-47c5-a285-549ffc0c05bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "502735ca-037e-4c5c-93c1-c10fe6a2042b",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04e42126-7943-4380-a32a-f1f2f8ebc405",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ae88f7f-43d2-41a0-87e2-a3465f97ed7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2eaae4e-a7a1-49dd-950c-e9dc0d1f2cb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e67173d0-cda3-4f08-afb8-8cfa32aa01f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0a32464-8327-4e45-8627-a6255ecf1708",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a21f481d-8ca6-490b-bd4d-cb868e3a0394",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "284223ba-b913-452a-82d7-9b7fde650e09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5bb2abe-fa23-4d1f-9eb2-a7003a75af8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a23a2e32-7f09-4384-beb8-ee785e60ebdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "568cd040-0f78-4476-9947-c6c71a65ef78",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70ee63eb-384e-4b38-825f-09199c994478",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae84b3e7-abfc-4628-9a91-98561db64f74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb9c3bb7-5f03-4b01-a715-b5b5c71e28d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb7e5c62-c6a2-4781-97df-56ca3fd6cd93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb6ad169-c40a-4d8f-9578-58f0eaecf605",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c452f0c-f266-46a8-b23f-ea47439f3024",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f5a6df8-3304-400f-8c62-cb4e283bb6a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bd92cbb-8b87-4e98-841a-ac6adfae8e76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70a12d7e-b8e9-4b05-977a-b08d1d33ef32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f09b5fc-02a0-4145-816b-f1347a8e5cb3",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fea7dc8-2989-4a42-a63b-4759a5ff7bfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "209132ce-bf7d-408c-83be-768507a9ee2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3609178-157b-4379-a00b-1d4d45695a2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29172826-13b8-449e-a409-2848b1b8d159"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a01892a-d78c-4bb6-ab0d-1226883748a8",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b24c9dcc-90b6-4342-9b93-ce7b322f16f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1221a435-f6fd-40da-a586-4abc62f1f0e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "952ce701-c371-4c4c-8f18-515a3bc2aac1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a473e6b6-81a6-4302-8656-476909b35deb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3df221ea-96a1-495c-90b9-39b15d213f31",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bbf85f6-a2a8-40c3-8262-6543cbaac7cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bda659b-2f87-4eed-b3a6-d99efb4849fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "870e9abd-79e8-4477-905e-589c11334539",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4634e336-fb49-4ed7-b032-4cf66fa1c76f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae0a08ac-5b49-4636-9c0f-834d18c74dc9",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56863260-3875-4347-8df8-8f204956484b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86dbc63e-35f9-4212-acdc-a8d5caba238e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58d72b25-60e2-4d6d-b941-fa0009da5d08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e761c3c3-91c3-4d08-8274-f4b8ba3b695a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "497b4523-a28d-41cf-b860-b7c82b52bddb",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f41aca06-2bd1-4e6a-a18c-5bb39d780d62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9eed584d-d98d-45be-a0ab-5b45b9031b43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed6984aa-9c2a-46d7-a908-125d73ac1e80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "877c9d6d-c04a-48da-824a-24c66b947b66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34eb4e3b-f801-4513-9daa-be22fa2732e9",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bb3b0f2-559e-4970-b3f0-f070a56d5666",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7930c2e-56e7-4705-8487-6e9ded6e4789"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5bedb27-8117-43cc-806b-745324506b59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd511720-d830-48c3-952d-511be691c526"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5f48244-c653-4b57-95c5-d65f7bf12af4",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54a65440-ffc3-4c40-a786-2b560f7c2b5e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2fa87d07-f3aa-410f-bf35-8b0cc5060b38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69727414-119d-4123-895f-84312b41ab6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6f6288d-1e92-4005-aac1-267bb3e28a55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee73ed9a-8265-45c0-9a31-668507d7c716",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aadde8b7-08fd-43b5-8f64-ab515ffe73b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f83c1d55-a652-460c-87c1-27fccfb8562d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b29c617f-f89b-4313-964d-09c206d900f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8377337e-8d85-49c1-b9c0-5ddbf5a13fff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1b53971-af5f-48d1-b978-8b974bfbabf1",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0395af35-c649-46fb-aa0c-b3247174687c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1c77419-76a6-4b25-a073-43f8352dbb84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a70561d-b669-4dd4-a275-b37384a01bfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "578e351b-709b-4daf-a792-fcf87fe55d44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1608764e-1f6b-4409-86ab-e9aa0f2afc8f",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5be4f46-7fc4-4e25-a4ce-57950cd3cb7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b2b17a4-ee37-455e-90b6-144a7f8feb60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eac18de3-dcd4-48d1-81ea-2774bb656838",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6b0e053-596b-45db-b6ec-a6cbfa5bbf4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98183662-f153-4dfa-bf88-6523cb5d1c54",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a119b22c-4662-4b61-bab2-507652b7faa5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "452a9e96-2431-492c-a61f-485f4c44f04b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a00c21a-2033-4d34-bbea-11e9a81bff74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5124f6a-10c8-4d18-bddf-61f13d794f2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7546c98a-e642-43d6-a4ea-887e0320d923",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32839dc2-81c9-432c-8de6-723a2c165051",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e641552-38ca-4110-873a-13330b64783a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79870c6d-850c-4cce-8df6-a1a2a2804a63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88080abb-505e-429f-91be-c8f401ddac97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69aa6889-0173-4aca-b2e0-94e91df2ff3b",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f21f098-5070-449e-836d-818dd90b81a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87e4145d-e98e-41a3-ad80-7c7580cecb92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4a39293-c2b5-4a00-8879-b3472ac7fc84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec84edc2-d7b1-4083-8996-070da7a34d89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16efd624-777a-4dca-9547-f5a60a1a6b02",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf58faa3-8d91-497d-856a-e153d12ab102",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d953aa8-9e46-412d-a055-47bce12a846f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9984d0c3-1c83-43b4-95fe-96a9ef6053a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be8aa3fc-80d6-4bac-83e2-7dd4eeb40529"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9dee55c-a4f1-4a7d-93c3-e083aa82f2f3",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10f415c4-4b74-4990-8cfb-02b201069e93",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "adb95c30-20f1-4e41-952f-703412e35223"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb7c16a8-dd2d-4e99-922d-8a06b8294774",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67ab9de3-80cf-41f0-9f52-818e0d5b3edb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00d38fdd-71f1-4aec-bd5d-6be185ae0c06",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32fefdf1-17f2-4b97-8a44-8c1ae1b44f02",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18c1bb00-2436-44e5-af4b-89709592a512"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "647f4992-a7e2-489d-b367-a1a30519f3f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff216b86-6576-4d02-a68c-99c75f0be0b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6772471-6a31-495b-9561-46f16cc5aec5",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1528a26d-22eb-4b67-8046-68a813b3731c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f769c14-aa9d-49b0-a020-939393d1d67d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0246d9c-14ea-47c5-a629-578e4c80f764",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2286fc55-85cf-4fe7-929c-a24fd5de8988"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b6a3a2d-5fd2-4540-92e8-37af0ffd6945",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7615b01e-98a0-45d5-9af2-84edaed3645d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42d2e2bc-d785-4156-8197-c0ab66679da1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7de968fd-bb02-4b4c-b51c-added958c793",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efe840fa-5a36-45fd-ba58-5b874d082573"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53e49a17-64f4-4269-bfdc-440cdd9c9e3c",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04c26c51-dbcd-4a0d-b57d-83a38e1c2771",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc5a8309-a814-4c9c-99bc-769eeb7d13aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce9a5904-34ee-4750-96d4-fad0db33553c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c65420d8-c07c-4dff-8bd3-652582950b14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d16f0752-8d90-411f-8f02-7a30358089a7",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5731e424-97a2-476a-bd3e-4e0fa0306ccc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bd3a310-96c5-4f47-8468-47e95928f862"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "085dbc71-6642-4779-87d6-f616b381a6ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e774c811-2614-44cb-b3a1-414baae1e251"
                        }
                      }
                    ]
                  },
                  {
                    "id": "322cb5e3-c605-4b09-b247-d4de1a1619fd",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88a2c7eb-d031-42d6-9cc9-04d65b320494",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36971616-3735-4b51-84cf-c2db1f298875"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93467e4b-8503-483b-abd9-78857505f97a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff1a7e49-7d37-4fe6-b490-d25a0ddf4ad6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34551f3d-1d77-4081-9722-971d033c4ea0",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9776f6fc-240c-49c1-bcd4-006caa09ec0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8901ca31-cf3e-4398-954c-b6f12c2ba78b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6aab938-c0ee-426e-8abc-07d99b79a25a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60dfe43e-bbcf-4c90-868f-a48060bb5985"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25ec2e46-25c8-462b-9319-0c9f91de90ee",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba237245-24d7-4ace-b5c5-fc324f3ea7e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a215714-90d2-4b1d-b484-66fa556840f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7beb1d3e-64aa-406e-89de-c061b1adb47f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f91d81f0-388b-4c90-b108-4a80f92ecf43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f277363f-28cb-45da-9c15-4e5289dc93b1",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a93e0f63-460d-45e6-92ca-9013b4d9236a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4383a6e7-2dd6-497c-b642-55f8c4383379"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c377d6c1-d87c-4a08-97e9-2e774fe5c0f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88efe701-b9cf-4942-8f90-596e1bcdc37d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4237c446-285a-429d-813b-16739f5a470e",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e77282f-f4f1-4339-872d-991adf420bd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42072f3a-69b1-4037-acc9-c9ff93c9d125"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6615f5b5-481b-4b5c-a6f0-3d4a6fb08d3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23bde800-0f61-414f-a394-52a4c0c3d767"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cc99d5b-1da2-4209-9f55-2bf2a078a616",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c51106a-1e37-4d19-bd7e-32ab8ed824cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f590502d-69c7-4c07-b42d-422d3aea375a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "857185df-f56e-4dc9-9600-b3751c9ea79b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0628e41-dccd-4e14-a013-3f1eb719850a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcc39bd0-70e8-43f7-b206-7778f3724c87",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc131f54-1b5a-4047-bf18-74a9c143b8a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dea9a2e6-ef36-43c4-8879-3a4330bd2930"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7ff40b2-c4a5-408d-aa57-6a850abd66d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0719261-539b-489b-a350-00d0857fce6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fc67821-2f3a-4feb-ad27-cc5f7743e804",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e2b8077-6146-4027-b293-5c75aacf7681",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f5609b5-8ecd-4b53-b60d-884312337a10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b4d1669-b045-48ff-8bdb-4e71bff6bd42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd12b460-b8fc-4b50-9c92-aaca55e92e3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "414b89c7-dcc4-46eb-a7f5-0b04b7494aa4",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c70fe3cf-f226-425a-bb86-1f0af61c28a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78378b3e-e45d-45ab-8ea0-cd203100d969"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84107207-cd80-4b91-a138-927e8eb31916",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8ba3a5b-50cd-4839-b528-4c9645982425"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e94af74-dd97-4743-925b-d013cb2d77f1",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39308c56-004d-4af2-ad0c-844f9f3a4344",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29a47329-99e2-43de-967c-e2dc4cd6337b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e74942d9-aca2-4622-bbd8-0f874b9168e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38a32e21-e80e-406d-b406-329d632fdbda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fab56d2c-c981-4652-a14c-0a21e810ebdf",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62b7f40c-d8ca-4abe-8523-f68bf6833000",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f24c31f7-3b61-444f-9962-4e8e4bac7a58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f60cbb73-9282-47d9-abba-158e459201f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31aa915e-905e-400d-84b9-f383c910a3e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38394d80-5fc2-4451-ae66-f0920583e345",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4d7c43a-4533-4490-9f84-09f1759bae3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c960745e-4139-4a32-a30a-f9aa1b66191e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "445d21e8-65f2-4e8f-ad74-32e6fa60fbc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54aca08d-fd87-44c8-9260-f1fe80139e58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f67fadc-352a-4f54-96e1-7af1a1177b95",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "349035a6-45d7-4a88-aece-cf2391621d6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4691ee34-e87a-49e9-ae02-90ce4c86da83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "500560dc-3205-479c-8d7a-b5e69f90eefe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbe967ae-0f16-4afb-832c-4c206a7aeb95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02be7f56-87a2-4348-bc9a-418a668e6747",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b110a40-3f5b-498c-8434-2c88f6d383eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5276aec2-4c5b-4427-9d57-8bc3ddb8cd4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37f96b78-83c8-48d7-b639-2facdf29f451",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17d68b80-1879-4aee-b0a5-deca0271ae7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac6506c8-5557-4519-a9c9-d76fce1f3ea9",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa9b1d99-9faf-4685-ab1b-0c364c2bdee3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a6b3e25-7241-49a9-87ad-cbe2ef39ae7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5798272c-54e1-4995-af7f-7a7392ec5e69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22d7b158-0e30-4e4d-891a-e5114a8946bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "054ccc8e-6712-4b18-85e1-efe68e615a5b",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1970a05-0f83-4f77-92fe-87dc99076ab8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc09fd7c-8f9f-4235-bdb8-aa9be34757e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ca5cd3f-e997-4c10-9558-93705a621220",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1deb28bb-d394-4d49-b7d4-71b48c55004d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f873fc89-f1d8-4c4b-a671-7ea46f234ab3",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8055f532-accf-4d11-a859-2d96e0db6324",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee5a9409-0e4d-42cf-9e6f-badeea028cd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1882682e-1869-4d72-b2de-73570e22218f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "744edfce-3187-47d0-b6e8-f7c59bb01d68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fe8f897-33f0-4d41-88bf-d4a9fcf11b31",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "663d8f11-b8f1-4022-acf9-3af2cda841d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17bc52ba-6746-4bf0-bad2-4c135c6b365f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a01c1c1f-e127-478e-af9f-17bb659dca23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f22843ab-c483-468b-89b0-afbfe21ad153"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aae6567c-6fc5-4bcb-a281-39493b882e48",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e1c5b0f-55c5-44e5-ad7c-13b937967cf0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38710374-a57d-487d-8bee-f1e133dcc7e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bd426fb-b399-429f-9329-7e493e02688a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d399304f-81c7-4239-a69d-6c77ab46f38c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d803eee-a0e3-4382-93d5-0e77a7f25503",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34b476e6-234b-4663-af68-a07f52cc3a53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6101deb-9ae1-42dc-a240-cbf686a7cbbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16043de8-677c-4e24-a087-848178570684",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5b63b8c-7e11-479f-bd77-ac176965b85d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cf83e33-4c99-48e5-86ca-3f09b83de4ea",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "774ea9cd-0100-4677-9330-f4990c07ff0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33901dff-c5ed-4348-a6cb-26d2d0a14839"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84386308-647d-44a6-9ebc-40882e25ff46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21cb23f6-4aee-46df-a582-9ca2bf1a017d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e4ea229-8a77-4fb7-bf2d-669d459c5f84",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e94809aa-c5bd-4e74-83fe-6bf05b49b77f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f3f6d4b-7b7a-4555-8b37-a7f8f3548d56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2eb25728-c7d6-43c2-b1fe-1e5893915678",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "562c550a-a3de-4e0d-b62f-4e6083db08ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3a92e4c-3856-4334-a41e-b1dc5d9ac9d0",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47b87e80-9c2d-42ef-915b-00c4699bedac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15554ec1-0697-4d39-86d9-89fd3194827b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "991b0a6a-b380-4881-ad2c-3be94751451c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57267f01-9949-4dbd-a594-00f9f06d6398"
                        }
                      }
                    ]
                  },
                  {
                    "id": "337c33c3-c407-4b52-87f9-3df3ec2bc38f",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eca0e47-31d2-4645-8044-f0d8c372230f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ff0d395-9fd5-4dcd-8dc2-0db6608fe495"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "423d3310-94a8-479d-bbf1-1069971df276",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0380262-8e33-4f1d-b311-1c4cbd1f79ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d3ba2b7-7abf-44a5-b3d5-0dcde74fd60e",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b2f9c49-0dd8-4c12-98f9-28e8f3e638b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a5491e2-800d-45ec-b013-0900f093a882"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e4e09f8-de59-4cef-8c30-61ea4935d916",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15c7cb22-a9af-4eaf-907c-1398d8f25aa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85d03165-9936-4347-af95-d6acc14b5dac",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95db0e6b-fed0-4688-b02f-6536273f892c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01d48e5a-2f24-4da5-8d0a-35a888f1e8bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b80e7377-a2aa-4196-ab6b-1b944ab8929c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24b854fe-0d76-4356-a645-b4c3b0b63120"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdf13d08-fd2a-4d89-9fa3-f7ea7ce314f9",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42f78c90-a9e7-40e0-a199-e382fa6b49e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b9ed4b1-9d9d-42a2-ab9f-5dd3ff698313"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "819a6f1e-b4fd-430a-a5e3-b5aedd25c034",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1b2565e-82d0-4557-b79e-9eda2dde927d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ad412c9-f16f-4cf7-a7fd-3a16b0ad548b",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5feb2aa0-4b07-4f56-92df-7d2f22d94ca2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f2b8310-9153-4581-9a12-a03af6ba305f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b7752b4-ac47-4617-adc2-a615f965c0be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92b1ba92-b4ad-4d9f-ab04-5abe498673bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0094c89c-f238-43f8-9f11-2836f78ab42f",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de573a0b-60bd-40f4-9dfc-2ef4ea0dd242",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1622596-74f2-4ea3-8cc7-e48857c15ff0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a868454b-0f3d-4979-89ea-7a5fddc48b55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83d099e2-520c-431f-8a06-d3e33255f5b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff61b555-97a1-42dd-8b89-69b5de82d0b1",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9954480-2148-4fbc-bc94-9f4b3d7af17b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e5c0471-2cfd-49e8-8493-1d98134e5d0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bba987e1-cedc-4695-976f-3bc327bc2c95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e4ecf91-8800-4aab-a00b-7e10d8cc7e59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a60d5189-0b1c-4bcc-9e7e-8ede3c8c5395",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29280448-8dbd-4b05-ad2b-ae2301a22adb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "867fdaad-9f26-48e5-b39e-3ef37aa4ca54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ccbfc62-6cc7-4e61-aa3f-d31e156e7e28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02f6c36f-6a9a-42a9-b336-a035624f6de2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0708683-d95a-4f44-ade6-2a6232c0fdcf",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7cc23a4-3e1d-49cd-be96-9ef16cba1625",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32c3c8a5-ca66-43cc-ba8b-0182a3a58612"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fffab83-b460-4cd9-8afa-261d2994913b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a32b6c57-19ec-4825-8dee-b71662120ac2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1581ba40-74b1-44b9-9342-c90c9002a7b3",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9b0f2d0-dfe6-4dc9-91b7-47895b563da5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce4e1552-cd4d-471c-a339-4faf910f68b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33245410-0094-4c8f-86d1-c861e9628b2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3c2e452-cd67-4722-a2d4-6dd88be7784c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53490f39-dbfd-4ad0-b472-e72cb5ee7206",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d7957da-50c0-4386-b657-3b6ba7b02494",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f96cefaf-5427-40b0-9fb1-909a5ac8b880"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a04470c-aa67-4848-a9de-63940f987cd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8a08475-fbff-4325-80a1-96dd88b43963"
                        }
                      }
                    ]
                  },
                  {
                    "id": "884b915c-abf0-49b8-a801-f6085f0c2e7e",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9293718b-11a8-4d8e-8867-ea15a219bf4e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9afd4f78-f494-406e-b856-8396ebd6f4f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51fbbc68-51c5-4a8c-b408-5345cdd1d250",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bb8cd54-a2be-403f-a060-4b4ff50ace4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1c61a9c-56f6-42c1-a252-11358385918b",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2802da7-6e52-4869-8854-a89bb4abe800",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e6f2cf9-546c-4a1c-9906-f905d1b6f7c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "145cd85c-bdc6-4a50-bd9b-26ff0b0e3eae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f38a619-8a64-473b-9119-6295d5b00533"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5803701e-8ded-4e91-92e6-5e44ad172cc6",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68ef26b1-720a-4049-a855-e33026b372a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a52354e-cdb3-4cc6-b945-8a8c3e98b60e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f87a258a-3144-4038-9532-1102d2493f70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36b0f9a6-69a9-4207-bf11-ce0f2d7dfefd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "830021cd-d420-4991-afa5-ad1e49ba2c88",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08e1a9f2-8eea-4741-826c-123e7c75a41b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c718b28d-b062-418d-b876-bd086b054400"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a81302f1-b0fb-4be2-8509-95d31cd0a23f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a756a057-c488-4fd7-b309-b2a8ded23c64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8d3d5ef-11a8-42f2-832e-624391ee9694",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e68f9f91-ee57-4fd1-84a8-963754e34b5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c21d68a7-6908-483d-9d72-a015ef9f6e0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34b61b17-2b29-4e62-9143-ae43f661dd4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5abff021-c88c-496d-a9b4-3efe046c424c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a42c21dc-9a58-4454-a0e2-6d77c831543d",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7844ffe1-40bb-42a0-8098-b6059ea5a7f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4d5637b-580f-4eb6-8d00-57b44c79fd64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb5763aa-e727-4a45-ba42-02910433bc78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34dfcf31-af59-4d44-b6e8-f2e9887d4108"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b79546b8-6c74-4d4c-a304-ad3c2b9ab8af",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e122620f-7d5e-434a-9d09-729fc2bf8693",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4b52ad3-3df9-45cc-a1c3-c59b00e13b75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dde1c7f5-d4b5-406d-b470-1e9964f97a23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb808aba-6460-4ae0-85a2-cb1d2eccafb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "046c649e-1479-4ecf-9b32-5207cfd1da34",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d386545b-cbb8-4009-8388-5e7c6d67c722",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bab6b76e-6946-4452-b783-cfe8bc236f64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99b1cfff-63e5-4570-ad5d-11acf9ad1c45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab590398-9af3-4722-af08-8e8501438dd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7188b1c-4055-4bd5-8cab-38db636a68e3",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b942919-e983-4cab-93dc-5c2855bac290",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1472711e-e799-4593-a9e2-02e62cd207f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46e80931-10bf-4816-96c8-d58f8f849328",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ba4d3fc-62af-4492-b55a-d922cfab953e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e72cf8d3-8fa2-4777-80b9-8419ac7ef3a9",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfe0cfcd-23d8-4ad5-be8b-7fee9e357f43",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61ffdff8-9ed9-40f3-ab9d-c5d520c9143d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd572645-c764-4af4-9ddb-2afb6eb6df57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8edabbf-8537-49c3-8f3b-b8af845f5cf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae2dfe1f-bc16-48ad-84e9-b71d964a5d27",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2192a01-0de6-43b1-966c-caf4df407641",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae68de7b-09dd-4315-8fd0-d997db32f505"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0e5e22d-b3e9-41dc-b54c-bd0c35d623d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87ca6dc8-8357-4db3-a452-9aeed50b0aaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0ef1a8c-3086-4356-a3e8-58abb7d8000b",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f4d4272-1d76-4652-8c84-e9fb73e99ee7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ebdbd24c-04df-4d23-8e26-3c9080765181"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b6db750-a85f-4236-af36-6de1524b127e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1904b814-58a9-4a9c-842c-871e53173e11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0a97d0a-48bc-4ed8-9df2-3fc0e7137445",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd07e76b-16f9-47e9-a7f1-d14e117c3115",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d86ae3d-781e-40af-80ca-a64808f1cce7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8b3d207-9039-41f7-a505-63f05380f6cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b7fc270-02f6-4b93-8f80-33e7bb6d0b05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf690908-11eb-4372-afa6-0ff646f1f81f",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32447e3a-a866-4872-8214-472546231f16",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3cc08c93-27dc-45ee-a9ad-38b9a577fd0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ce34e13-3b72-4c9d-aa72-75cd8adb4021",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88eb95c1-8e71-445b-be0a-1eafb8e68893"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fddc60e3-a5b4-4bf0-a486-e8bd4afca880",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9055ca03-3ee9-46bd-8cbd-4ac7e8b57b56",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc681e26-9ab9-42c2-bc87-48783a96f8df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a39a1c5f-8b3c-4650-ad49-6611f43ba441",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37395c91-6249-4fe9-bbd7-2b89ecca8aa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "238b4f86-b083-4ad1-ae53-c98c510c408e",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06a46590-802e-44da-b524-db345056b4d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba6f3ad0-9d92-423a-9d70-33073abd2c05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5449f6e8-29b2-4556-817e-0bc41d708bb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9eb66d6-ad40-48e1-9f6f-8854191d20af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21e96ffe-091e-4eac-886b-8dc699b51883",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e91cb688-8c0e-4074-9935-f0561a31c1df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db8025d7-b0e1-41bf-b4ae-ab6931b2dc5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e19d197-3ce6-4cc2-9091-6933d7f6742e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3abac342-cb8d-47b8-8f94-357ff40037cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "189cddff-cdff-47d4-850b-a36eced352ca",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69bab332-aa82-44a4-8941-72357f41b4f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24a11080-d651-4ef1-8b5d-21d196361a0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe9c0cba-3737-41e2-acd0-406123ef4f0c",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14ab1490-6504-4919-b0fa-828cc946b756"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b7a0d65-bea0-4172-8f6b-73c49ca4ca86",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77f8bd81-55ee-4504-b360-5dddd0d6eefb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ccb1ef3-24e8-4448-8d5e-7ecfa1fbbd54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d10e01b-2343-4137-9dc6-27f6769b1160",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7caa5e51-fe11-4ded-b7c6-197cda17ddd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e46c2a61-de21-4b01-af2b-31f484ca3032",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebf2f1ff-a1c4-4149-a447-0d374df35d85",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "390d4566-d36b-4be7-b35f-56932189396f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "138c3f15-6617-4aa1-9ef1-a5573aeec41f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cf8a4bb-f501-4604-ac06-6ba7150bdbf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f878360f-f220-4f3f-9c57-e6a0068cf75e",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2eb1ce59-e1f4-482d-bb09-b34b6163969d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b642fbf0-6904-424a-a792-5780e34a300d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc2d5462-9514-4e09-b74f-f9a97be62f1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ca8943a-1aa8-4b97-8fc6-32d260ef974c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "702f3e94-f11b-46eb-b76d-66e08ad1294c",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3ef55c8-4608-458c-9006-8f372bda2083",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a016e50c-2c32-47d0-b7b2-824f61faa07f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1511b136-d1af-4e72-9c4d-f52128ef7d0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc416329-75e6-4693-aabf-394ade33c291"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc9d5db3-6903-47d7-921d-b2913f82c7e4",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14b8daea-c600-4318-8f48-2ebbae4679ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da59617e-480d-42f3-ae07-103f1def09d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "155ebbcc-c541-4c11-9a2e-b44a668b7484",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b0a79ad-eb73-4ea7-b213-2acd3b7a9040"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93b42a8e-e3a1-46a1-9846-dcf8ef2e3ce5",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3dd00e5-511c-4edf-bd58-338152cab5f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56eebf75-b2bf-41a0-9b95-43075347842c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d9d6e05-69ea-49d8-9c69-b0261897248e",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6827e59b-3cb0-4c75-aa2b-bb9fbd024115"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63c345cc-a90f-44df-8175-a31a251ecd71",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36ba441d-9fc9-4b11-929b-bd477f5b996d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "845748ab-0823-4178-b907-db4575b20104"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a665d431-2bbb-4a6e-ab33-dabc6f613135",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72aa1740-1bcd-448e-b0f0-28c73ee481f7"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "70954ec0-f610-4120-8f74-97e850c36517",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2e553274-a7d2-41b4-85ac-0c9448b5eefd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3d86799f-d69b-40c0-bfac-15571b13e619",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0b5c1c93-2d34-4c02-b68c-3e0cf15e2739"
                    }
                  }
                ]
              },
              {
                "id": "3e408913-2d55-439e-83a0-72a2d758dab6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "947d1597-73fa-42e4-b200-7e7714269bb4",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9090188b-93d9-450d-ade5-512e5cbe4fba",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "16dd4c3a-404c-42b3-9fbf-6c9f15a5e80c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79088fe5-269e-4dd8-aee5-afc59c1fa140",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5065a4a3-07af-4fd4-9c42-f37fa7ab2bf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3cb9ad2-1aa6-4dd7-bb99-2fd589ec1bd2",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5915105d-b059-440c-83ff-a5dba11b601d",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "d3062b08-699c-4034-aa0d-6fb748d2f50b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d5cf535-672d-4a39-8c38-cb02e1245388",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e7cbe72c-1248-4993-b790-0750a995a935"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3e2e4950-6bcf-4433-8cc0-d50340d0407b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "52075a54-8d71-4438-9d98-d3e9f39f183f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "da09db22-f03e-48e5-aeb2-8b37e8531a03",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "347804f9-c748-4312-b19e-f87cf1444d90"
                    }
                  }
                ]
              },
              {
                "id": "5c897882-97b9-4b32-9c2a-4810336d5962",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "7dec969a-d9bb-4fcc-aa35-dd28ede9294e",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff427db1-7668-4549-bf06-c9486b79540a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "0a115957-f907-4dfa-a2c4-59f3044c7186"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "242eb707-becb-4ac7-84c2-fc986a07cc03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8853b9d6-eb72-4e68-92e5-e293897201c9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "f145e8da-506f-4e64-8699-f726304c8b24",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a77b729b-8ef0-423c-8640-f8badd3a5ba4",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "939c6d67-f6f6-421b-a980-796023d84c3b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "0cd9da48-ab74-406f-a675-cc57fe1db24a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ee8857ed-9436-4faf-baa8-39a45d38009f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a2e9b3b1-d812-49e7-a568-e5750a6da4ca"
                    }
                  }
                ]
              },
              {
                "id": "0b7deab5-4d65-4163-ac68-d3fa4a71bc2f",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3933b566-d76b-451c-aad6-ad71311655ac",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "8782d130-2d50-4eae-ac1c-9288400c20cb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2327a1cf-a563-4b82-9cc8-df0709f88ad4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1a83d80e-f101-4ec0-954b-e7e65cf46aec"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "33f28968-5719-4788-ad76-38107961f36e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "5ba22431-e629-47a7-8b55-de95cd51cb1d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8679644c-724c-4e59-898a-f995bc741e96",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ed1dc2d4-92d7-4660-88e6-f5a04fae27e3"
            }
          }
        ]
      },
      {
        "id": "66006ec2-4857-4c9c-baf4-ea28ae5f6ebc",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "67420244-fe3a-440d-820d-484e21fc4115",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4ca210ab-6a06-43a1-b389-7e94e270741e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "91134de1-f62d-4725-a5c3-055af2696da1",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3602d62a-8a8b-4017-a04c-e487148debc3",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "a37aa7e1-da81-4c1e-b67d-43d7a2db05cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e74f6e10-297a-446d-8561-26e2dc7db10b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "45fd58ae-ec90-4a37-8886-8c07fff61bac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1a658d4-7cec-4af2-9e7c-2fe51aae79e6",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86e6c50a-d36a-4a3e-b60e-e520c3f935ad",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "c9b55bd8-c8b4-469a-89a3-461ce8a0e5af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5adc612-bfe2-4e78-8b3c-d4fa233a8797",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a7938ff0-d732-4c37-99a0-40a91e0248db"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0e61dcda-3991-4faf-9210-e8d8cce79f49",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "02973a4c-e3ec-4fe9-ae3d-026871f36b87"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "13accb23-2f9e-46be-a5bc-43dd8ce16416",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7157e8fe-aa33-41c8-8e86-827ffefaea75"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "11cf6521-f6aa-4914-9b32-a989d1100fab",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "bb036f97-6e2e-4fa2-8cf3-4a3e55fd60e3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6abe1a10-be59-41ec-873b-3a5a7c7f7d77",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f870ffdc-c9f5-46e7-9940-9996cec2eb79"
            }
          }
        ]
      },
      {
        "id": "0f24f2ae-eb24-4528-b426-7ea7c81c36bf",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "5e71592c-8ce9-49a3-9f61-52dcb97bb39f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e378fe3e-d2b0-4416-bd8f-86557da434aa",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "815bae1b-433f-4019-9c16-05a8a52319a5",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13566d1f-de06-4e8d-add3-0b75a62d2928",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3146b175-f9d7-42bc-96a0-b8aacfeab473"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca60007e-3455-4c99-a429-8e6a601bed8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3f65d625-6d2c-4148-8531-58c0119308a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96d6461a-b89b-4b6b-9fd9-e90f7a2e6c1d",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc2858ec-82d4-43aa-ac13-8f6a87439462",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "f956892a-6e4b-44e1-a29c-3e22fcd45aaa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5051b52-a2ae-4696-acd2-c046ebc35d2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5fc3e0cf-2637-4e2d-9fb0-ba096739d496"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "85c4ca93-e29f-4405-945b-555405e3deb1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9a77599d-d120-4df7-84d2-606a15b1987b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ed0eec10-703f-405e-8147-2f48c30f3cd4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c804fea5-ee10-42f8-84b6-188e7a1f4d8e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c22aeb7f-af44-4306-b096-c5b56f15fc29",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5a992dec-e460-481d-964f-acbeea4246d5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ef2ddb8c-45cf-4106-b488-63d53d470c27",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f195935e-9698-40d3-b44a-339e28cdf056"
            }
          }
        ]
      },
      {
        "id": "2fe06f22-cd0e-40c1-8d33-f6a4a5de55ff",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "207885b7-d122-4f97-88a0-b3520979b120",
            "name": "Negative Testing",
            "item": [
              {
                "id": "91359130-1ce7-4468-8de8-d932416c174e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4da37868-e869-4f03-97c9-6a128df9bba5",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74254bd3-872e-4e3b-9876-fb9ad00222bb",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6402337e-16f9-4756-aa6e-d64439145559"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c7a5947-4450-46a1-858f-185a3750ebd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "05a05e28-b584-4d77-adcc-be488fdc6a30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6489eb1-fbe4-4711-b902-42256c9dc808",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "524cb846-1225-469f-93d1-c5b6d25935b8",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "be9e0779-53f3-49a6-83e6-3b1a8f25d764"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3178c1a8-f077-483c-9d97-0669784e76e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ffd52982-c7e7-4e33-98a5-b7b568f68a1a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "50f7e993-d572-4f90-9614-13d6207f7a70",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b3a01568-50af-4230-bfde-529484c4023f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "533879f1-c0bf-4e7b-8511-c289b5fe4543",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4020b279-adc3-45fb-9a10-bc6d82b1175d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6e55c7df-fc54-43ed-bbb1-c5356523d0da",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d7bc7065-cfc9-49cb-bc3a-3f31a8bba1e4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bd2781f2-941b-416a-a5f3-4b8fe1f4442a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "77c59b0b-4f94-49cb-ba3d-7875950231bd"
            }
          }
        ]
      },
      {
        "id": "9665eb57-72fb-4851-aae8-482088056e72",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ba1dc120-a1c3-4d64-aeb5-cefb9c761726",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2a716036-e72a-4fc6-9a62-0459ee64ee01",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "77275649-ba1c-41ca-9f96-f5b4460ddb29",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fd32df69-c354-4099-b926-4a718be759eb",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2d6bf799-2cbc-40d3-bcd8-0349138046ff",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 833.9115384615383,
      "responseMin": 7,
      "responseMax": 9918,
      "responseSd": 1131.6573532882996,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1682296661699,
      "completed": 1682296888935
    },
    "executions": [
      {
        "id": "79c319ac-72a9-427c-bc11-322179b503e8",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "1e014f5a-c0ec-46f0-b35f-4a242e3d0b6d",
          "httpRequestId": "2b51883e-2cf1-41cf-8891-ad1863263a08"
        },
        "item": {
          "id": "79c319ac-72a9-427c-bc11-322179b503e8",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "aa79aed7-6bbb-452a-b72e-fcb9388b1173",
          "status": "OK",
          "code": 200,
          "responseTime": 50,
          "responseSize": 0
        }
      },
      {
        "id": "ff3ad86e-e779-497e-bdaa-6b881259742a",
        "cursor": {
          "ref": "c9d6f183-ddbd-4cd8-8a9c-f9232ab10693",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "2f6b7bb6-b3d5-466d-9df7-6b7b7d700957"
        },
        "item": {
          "id": "ff3ad86e-e779-497e-bdaa-6b881259742a",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "bfb71cce-8542-47a6-857e-b7d610f0033a",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "e7fad7cc-f90f-4f2d-8918-49f758c1e494",
        "cursor": {
          "ref": "1d4b5f65-6608-49d6-9972-b73753f191ee",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "2bf26827-2170-4da4-a102-9a5548a007e9"
        },
        "item": {
          "id": "e7fad7cc-f90f-4f2d-8918-49f758c1e494",
          "name": "did_json"
        },
        "response": {
          "id": "0f8b471c-0f13-4ba9-a455-2729ebbfb7ad",
          "status": "OK",
          "code": 200,
          "responseTime": 930,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9c54301-a3e9-45ca-9237-78f035757070",
        "cursor": {
          "ref": "230a351b-2949-452d-8479-612769295cef",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "2be7e723-786b-43fe-9e3c-f4d671adb745"
        },
        "item": {
          "id": "b9c54301-a3e9-45ca-9237-78f035757070",
          "name": "did:invalid"
        },
        "response": {
          "id": "a56388d1-ac6c-4123-8ac2-f40607c3edcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 744,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9c54301-a3e9-45ca-9237-78f035757070",
        "cursor": {
          "ref": "230a351b-2949-452d-8479-612769295cef",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "2be7e723-786b-43fe-9e3c-f4d671adb745"
        },
        "item": {
          "id": "b9c54301-a3e9-45ca-9237-78f035757070",
          "name": "did:invalid"
        },
        "response": {
          "id": "a56388d1-ac6c-4123-8ac2-f40607c3edcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 744,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32578242-f9ca-4a51-ae08-687013a905e3",
        "cursor": {
          "ref": "3e1d3fca-71b3-4e5f-876b-62214bde84d4",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "656a1c64-b152-486c-b8d5-b41c2decba00"
        },
        "item": {
          "id": "32578242-f9ca-4a51-ae08-687013a905e3",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "598848d3-bb4c-4d4b-b8a7-0a36ed2541b8",
          "status": "Not Found",
          "code": 404,
          "responseTime": 719,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54cde901-89ce-4d48-9475-aa25513cbeb5",
        "cursor": {
          "ref": "17ab19dd-806a-4975-bf38-8050df29bb87",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "26a369f7-7cde-4dae-9d0c-cc6e3df08a68"
        },
        "item": {
          "id": "54cde901-89ce-4d48-9475-aa25513cbeb5",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "a118a6ec-3dc3-4aea-97f5-291450016f47",
          "status": "Not Found",
          "code": 404,
          "responseTime": 765,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d1a3eb2-0283-4471-887e-8e304034873f",
        "cursor": {
          "ref": "7e2c9b0a-36ef-41a3-9908-f7ac1a4e85ce",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "77a197d1-ff9a-414f-a7a2-9d73c3820b5e"
        },
        "item": {
          "id": "7d1a3eb2-0283-4471-887e-8e304034873f",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "1adfd38d-3608-4d5b-bbdb-0816408b29ff",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61650758-394b-4ddb-a4f9-ede0d855bf3b",
        "cursor": {
          "ref": "9c593832-3bf3-4116-b0bb-1ae2f1157969",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "d9f0709b-b41e-4f14-af37-1f0242d0177d"
        },
        "item": {
          "id": "61650758-394b-4ddb-a4f9-ede0d855bf3b",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "70ce4e59-89e2-49eb-aec0-e7cce3b31375",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 650,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61650758-394b-4ddb-a4f9-ede0d855bf3b",
        "cursor": {
          "ref": "9c593832-3bf3-4116-b0bb-1ae2f1157969",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "d9f0709b-b41e-4f14-af37-1f0242d0177d"
        },
        "item": {
          "id": "61650758-394b-4ddb-a4f9-ede0d855bf3b",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "70ce4e59-89e2-49eb-aec0-e7cce3b31375",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 650,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3df0387a-f6d5-4a64-8295-c4191b71a5fb",
        "cursor": {
          "ref": "4f809bb2-6645-43fa-a11a-f6697194d818",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "0a956d27-a166-4532-84d7-58f567eae7b6"
        },
        "item": {
          "id": "3df0387a-f6d5-4a64-8295-c4191b71a5fb",
          "name": "identifiers"
        },
        "response": {
          "id": "8bc04ca4-5c73-4b1a-bbaf-c537cb1d90dd",
          "status": "OK",
          "code": 200,
          "responseTime": 1162,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37066b5c-e69f-4d92-aa42-24fa8ce4aa70",
        "cursor": {
          "ref": "f027b96f-69cf-4392-a5a2-28228e0ec057",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "b05be2c9-2136-4245-a056-075f81e5663e"
        },
        "item": {
          "id": "37066b5c-e69f-4d92-aa42-24fa8ce4aa70",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "cbe96a71-b9a6-4bf1-90c8-363f1b1509fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 648,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37066b5c-e69f-4d92-aa42-24fa8ce4aa70",
        "cursor": {
          "ref": "f027b96f-69cf-4392-a5a2-28228e0ec057",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "b05be2c9-2136-4245-a056-075f81e5663e"
        },
        "item": {
          "id": "37066b5c-e69f-4d92-aa42-24fa8ce4aa70",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "cbe96a71-b9a6-4bf1-90c8-363f1b1509fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 648,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c61707f0-95f6-43b3-8af8-df31ce16736c",
        "cursor": {
          "ref": "826fbe38-c1a8-4224-8c47-5e5ff613e844",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "d668f22e-8493-4584-adda-6893f386ba53"
        },
        "item": {
          "id": "c61707f0-95f6-43b3-8af8-df31ce16736c",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "a5e16d5e-6ac5-430a-8223-0ff26c6b2fbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 685,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "511d01b1-a5ad-4cf9-9bb0-dbd5ce774c7b",
        "cursor": {
          "ref": "f4c1587b-c062-40e0-811e-97568750f162",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "71cfa83b-8598-4037-b829-ff1d91f03f13"
        },
        "item": {
          "id": "511d01b1-a5ad-4cf9-9bb0-dbd5ce774c7b",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "d4fa6613-748a-4a10-852d-edd4253419e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 647,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f4ace2b-f5bf-4973-857a-c55fca86b54f",
        "cursor": {
          "ref": "36dc9d41-660f-404a-a254-1e9847162504",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "1ef8ed83-7c4c-486a-8884-a27b2b495a1a"
        },
        "item": {
          "id": "9f4ace2b-f5bf-4973-857a-c55fca86b54f",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "299e9ac9-7fc7-46da-a974-959a8a639839",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 741,
          "responseSize": 550
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "effe6abb-145e-4f9e-b556-2bcc42baa711",
        "cursor": {
          "ref": "d54eda41-2a04-401e-a19e-855bb12ffe6b",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "be584ea3-de3a-460d-b828-873bb797b743"
        },
        "item": {
          "id": "effe6abb-145e-4f9e-b556-2bcc42baa711",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "67c9ca7d-6279-41ef-9237-ed624b74f92d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 655,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "718fa152-671c-4982-b20a-519e75db98bd",
        "cursor": {
          "ref": "dfb932c9-8f80-4c25-a08b-461450aa70e6",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "232d361f-3f4c-4251-881c-bb5601df6481"
        },
        "item": {
          "id": "718fa152-671c-4982-b20a-519e75db98bd",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "d36fc080-3161-440a-b104-522703632677",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 671,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac8b4cbd-02af-4758-87ba-545318a1006d",
        "cursor": {
          "ref": "05c6b894-d8cd-431f-a7b4-659b17c4f1a2",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "5b49783c-ee23-425a-82d5-cc6efb1acbe6"
        },
        "item": {
          "id": "ac8b4cbd-02af-4758-87ba-545318a1006d",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "4454ff96-81a0-422b-a843-a5a8d0c697b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 662,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c92bf1e3-0d5a-41a4-8efc-1fcf33b1969e",
        "cursor": {
          "ref": "59687601-555a-46e5-b582-fd98d413d03d",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "3c7dc828-f2f5-4f7f-9f3b-07f6a13c3e2b"
        },
        "item": {
          "id": "c92bf1e3-0d5a-41a4-8efc-1fcf33b1969e",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "5ba2db46-ce6c-46b2-bc3c-8d3f6a3327c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 653,
          "responseSize": 637
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5512f4f-74a9-42c3-9618-cc564ddf9e82",
        "cursor": {
          "ref": "9857c028-61bc-4b1c-b7e9-b692b7725399",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "820a1a97-69e7-4934-9922-e492b812cb9b"
        },
        "item": {
          "id": "c5512f4f-74a9-42c3-9618-cc564ddf9e82",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "7dd9264b-74e4-4968-b677-56c4a9f94e58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1097,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6012b6e5-ae99-40b8-bec7-78ff6b6e4283",
        "cursor": {
          "ref": "d584101d-8030-48b4-b874-dc9d9c134471",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "b180ade4-e47e-48de-ad6f-70c469477fba"
        },
        "item": {
          "id": "6012b6e5-ae99-40b8-bec7-78ff6b6e4283",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "7e6c2c02-9bb1-4d67-86fd-aadf3e2a968d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1125,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6434eee-68ca-404f-b823-69c4e6d70668",
        "cursor": {
          "ref": "c5e7a20c-cb84-4390-8ad8-84adaef66c2e",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "186ccf98-4cb5-4be4-a8c7-eee453a776a6"
        },
        "item": {
          "id": "a6434eee-68ca-404f-b823-69c4e6d70668",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "b92876f0-ecf5-41c9-b4e2-74b71f4d195f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1191,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d148d20-bf77-42e3-a3d5-9543959188c0",
        "cursor": {
          "ref": "d987faef-49ba-4426-a3d0-fb42681f5564",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "b053c9cf-08b3-47cb-8787-dfcb3801a44f"
        },
        "item": {
          "id": "1d148d20-bf77-42e3-a3d5-9543959188c0",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "03506c8f-233a-4b8f-a60b-1d8cecd766a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 751,
          "responseSize": 646
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1b8cc0c-878f-4962-9b89-ff05c2c4944f",
        "cursor": {
          "ref": "17807698-ed14-4fe6-bc1b-f29482a61f4b",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "00603142-5fe5-4e10-aa5b-77860f60595d"
        },
        "item": {
          "id": "f1b8cc0c-878f-4962-9b89-ff05c2c4944f",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "5fa3b5ea-6a40-4b41-ba7a-2a53ae66291f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 638,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "130158be-d537-43f5-9947-0f810ba70671",
        "cursor": {
          "ref": "62bc37f5-9e24-40e9-8191-99f49e55520e",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "4120b332-e93e-441f-8449-2a9eb6c5ea9b"
        },
        "item": {
          "id": "130158be-d537-43f5-9947-0f810ba70671",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "c9b91fc8-97dc-443b-a517-c19f5e944fad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 666,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b95545c2-c358-44ac-96f3-e9c8f29a2080",
        "cursor": {
          "ref": "45a5fd20-b179-4463-bd92-703cd84f1261",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "9de4c8e0-5cb9-4e33-ba1e-57b6d3621c3b"
        },
        "item": {
          "id": "b95545c2-c358-44ac-96f3-e9c8f29a2080",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "6b9be7a4-5712-41d7-91b0-fa9feb55ab95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 665,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6a951ab-4d5b-4725-83d8-964b21c81be2",
        "cursor": {
          "ref": "88c17f33-e2c9-4e6f-a2b8-acd6173641ae",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "609dd248-dc0b-4e4d-bb4d-8dda2264ba17"
        },
        "item": {
          "id": "b6a951ab-4d5b-4725-83d8-964b21c81be2",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "98f44b84-ed93-4a53-92ba-10a362241159",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 695,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c304505d-d75c-4255-a90b-cbd195535d79",
        "cursor": {
          "ref": "c4144981-583c-4145-898e-d27dddfb9751",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "fe91ce2b-b24d-4c0b-8cf0-5d671b50b8e1"
        },
        "item": {
          "id": "c304505d-d75c-4255-a90b-cbd195535d79",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "32a9e336-ea93-4f38-8432-59ab139e5cd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 632,
          "responseSize": 666
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f9c24f4-6374-4bf9-93e8-ed3898b78080",
        "cursor": {
          "ref": "2b22b388-32be-4327-9133-7242c65c744c",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "208790a8-d5c1-47ca-96b3-04eaa55af115"
        },
        "item": {
          "id": "9f9c24f4-6374-4bf9-93e8-ed3898b78080",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "66f7ab60-04b7-43d8-91c9-b96fb3525ef7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 644,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "317d63b7-618f-4999-acbc-482a4b2eb3c9",
        "cursor": {
          "ref": "61f9afd7-4845-4b33-b17c-d3d66d34ce89",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "bf6cd2d5-fc41-4d28-9d4c-02786283f164"
        },
        "item": {
          "id": "317d63b7-618f-4999-acbc-482a4b2eb3c9",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "828b9831-f694-41d5-a427-f7045042febf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 664,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe091f66-536f-4737-a0e0-834e572fa8f1",
        "cursor": {
          "ref": "cb7a211a-c50e-4e8d-a46c-a23cdb2f96bf",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "47d374b7-d84e-425b-8bef-32fc42d29b94"
        },
        "item": {
          "id": "fe091f66-536f-4737-a0e0-834e572fa8f1",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "e7496331-440a-4c1d-aa24-ece13ad1a926",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 718,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef62eb3d-de22-42ac-a848-5cc87c50255a",
        "cursor": {
          "ref": "73b98ac7-4cb3-46d0-967c-1b2fbaa69bdc",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "c2b53f71-928c-41e1-ab50-7a11953df1ee"
        },
        "item": {
          "id": "ef62eb3d-de22-42ac-a848-5cc87c50255a",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "c32d4651-8fc2-4acf-a2a6-b430255d4a33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 705,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f06aea24-565e-47a6-92e2-8f4c5547328c",
        "cursor": {
          "ref": "ea793104-3534-4802-bc1f-863c1133893e",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "13eda0ed-1522-4748-8d8d-b5e05c3cf907"
        },
        "item": {
          "id": "f06aea24-565e-47a6-92e2-8f4c5547328c",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "c419fdf3-adde-4394-977a-ccad9c27e23d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 775,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "806eee10-fb95-4a66-8b97-00867431afd4",
        "cursor": {
          "ref": "505c035f-9bc3-4eba-9e6c-109fd1a519e5",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "83bf06bf-65c7-4e91-a786-abecd0fc7936"
        },
        "item": {
          "id": "806eee10-fb95-4a66-8b97-00867431afd4",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "7b1b2154-f894-4616-b8c6-75d262d5265c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1521,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed36e967-cc99-4f09-b3bb-bc557cdb8b91",
        "cursor": {
          "ref": "523f8d5c-876e-4535-86d8-ed2da281d3fe",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "cc7947ad-a095-449b-ab3c-9410b9c63d9b"
        },
        "item": {
          "id": "ed36e967-cc99-4f09-b3bb-bc557cdb8b91",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "ecf0787d-208d-446e-9731-e9fb23f66d4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1424,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e861e0da-061f-42a3-b998-f1a974eeabfd",
        "cursor": {
          "ref": "c468e8cf-1ae5-4577-af99-7615b0ad6d49",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "5b8b521d-798d-4746-8a20-24c1b2eb02bc"
        },
        "item": {
          "id": "e861e0da-061f-42a3-b998-f1a974eeabfd",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "50a9f17b-1a35-43d1-afb3-dfec850ef588",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1698,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c169fe24-f659-4b66-8774-d174dacb2680",
        "cursor": {
          "ref": "9805a142-ac09-4ad6-938b-cf386fd4b779",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "be2f9a9b-5f59-4c24-90f6-1e6bcaddb4d2"
        },
        "item": {
          "id": "c169fe24-f659-4b66-8774-d174dacb2680",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "20affb81-6dbd-4aea-a9a7-a12d9ab3756b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1181,
          "responseSize": 624
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02d4284b-ca87-43e6-aa30-8b31e3c341b5",
        "cursor": {
          "ref": "4732923a-1253-48aa-af7f-ac2bd708a038",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "2bf0c91d-1eff-4613-bad0-18f45d2603c8"
        },
        "item": {
          "id": "02d4284b-ca87-43e6-aa30-8b31e3c341b5",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "f6d69ed4-7cc9-4fe7-857c-75a0988e9c29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 946,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65987609-b21e-467f-8441-7090eb82635d",
        "cursor": {
          "ref": "a14b9e34-5b94-415f-b61d-bf3e8a6e696b",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "8441fdb6-03dc-42d9-aee5-0f68f0d51c24"
        },
        "item": {
          "id": "65987609-b21e-467f-8441-7090eb82635d",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "e0dc9403-372a-4ba5-a29b-753703774c62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 666,
          "responseSize": 623
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a74efcf-c943-4923-a56a-a1f987ff387c",
        "cursor": {
          "ref": "0a2087f2-8245-457b-a25c-9db6cb058190",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "fd5b9591-8098-4a4e-a4fa-683799934a81"
        },
        "item": {
          "id": "9a74efcf-c943-4923-a56a-a1f987ff387c",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "0cdfb12e-84c2-44b4-91e3-847e8fa86525",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 697,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6964957e-c130-4cee-ba11-c7dd589cc462",
        "cursor": {
          "ref": "d5c318f7-1be3-4a57-9ff8-1bd4dfae7b13",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "da4ec505-3bd9-41d6-b213-252ec3ff1cca"
        },
        "item": {
          "id": "6964957e-c130-4cee-ba11-c7dd589cc462",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "9f54eb62-1bb5-47c5-a615-321fb25adad2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 657,
          "responseSize": 546
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "237a7bc7-6475-4f74-9c01-09aaa90ed3e3",
        "cursor": {
          "ref": "e4a4704f-4d7d-4fdf-9e23-04d4c9f9379f",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "c9056d84-f26f-4274-8ee7-109472992db5"
        },
        "item": {
          "id": "237a7bc7-6475-4f74-9c01-09aaa90ed3e3",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "14ffb51d-0f90-4aa3-bd8c-486980ef2f00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 703,
          "responseSize": 1046
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2afa5ddd-b754-47aa-a3cc-e927e94a55e5",
        "cursor": {
          "ref": "8ec51b55-6fad-41eb-91e6-17227e6dc9d6",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "0fb548b3-af5c-4473-8d5e-648fb3553ee5"
        },
        "item": {
          "id": "2afa5ddd-b754-47aa-a3cc-e927e94a55e5",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "fc4257ca-e5ad-4f54-bc5f-2f21644ef73d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 671,
          "responseSize": 975
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "267aa0a4-cd91-42db-8516-11501fb3743c",
        "cursor": {
          "ref": "2cc55171-b203-47bd-8e31-968ecd871797",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "5d35ede5-777d-49b2-891d-341da55ef2c3"
        },
        "item": {
          "id": "267aa0a4-cd91-42db-8516-11501fb3743c",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "481a2958-7f40-4812-bd02-76fe9a26e9b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 694,
          "responseSize": 972
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62931ff7-9452-447a-b184-4ec8fe6a733d",
        "cursor": {
          "ref": "265dde6f-dcc6-4ae8-b5f0-0d096f9aa9a5",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "6d0dc537-c5d5-40f9-b4d9-3268d6d2df74"
        },
        "item": {
          "id": "62931ff7-9452-447a-b184-4ec8fe6a733d",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "1a18a317-4dc1-425b-8bba-a8e756e13df5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 713,
          "responseSize": 974
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b54e1f50-7e0d-4d8c-994d-7026c14a9708",
        "cursor": {
          "ref": "56581334-c58c-413b-8591-876cda090206",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "79447f46-37a7-4ea7-afed-173352fe372e"
        },
        "item": {
          "id": "b54e1f50-7e0d-4d8c-994d-7026c14a9708",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "c314ce05-9ee9-49ae-8785-486bde43ec08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 676,
          "responseSize": 1377
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aee33d3-ca7f-4927-bf03-31245452c7a2",
        "cursor": {
          "ref": "162a25ae-a975-47ed-9bad-e566277d9276",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "18b36b4b-67c4-4b89-ab32-79bde73d5727"
        },
        "item": {
          "id": "7aee33d3-ca7f-4927-bf03-31245452c7a2",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "9b33225f-dc94-4fcd-8a61-4fda1b16e8ce",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 852,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4be633f4-7218-4d59-824c-a06e6489b800",
        "cursor": {
          "ref": "a019aa3c-a107-45c5-9221-3c106628435b",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "13abe285-fcde-4c9f-89d1-22e4b1dad690"
        },
        "item": {
          "id": "4be633f4-7218-4d59-824c-a06e6489b800",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "25945833-c458-4689-a6dd-7709586e09d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1026,
          "responseSize": 1005
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53629832-b072-4ffb-8b32-031b258ecc96",
        "cursor": {
          "ref": "ab8c510b-f9fa-4cf0-91b6-f498d04fa567",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "72e823fb-cc57-47fb-bd0d-f2da1225dca6"
        },
        "item": {
          "id": "53629832-b072-4ffb-8b32-031b258ecc96",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "12bc6b31-14fe-4514-8ba0-3ca41b1b0a80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1231,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cef0bf9c-6bec-4780-9371-14f1c4ef2ab0",
        "cursor": {
          "ref": "0b9b2124-c3dc-4c3c-8a1d-ba107c4576e2",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "4d994f74-b9dd-4762-bf10-27abfe2f6e71"
        },
        "item": {
          "id": "cef0bf9c-6bec-4780-9371-14f1c4ef2ab0",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "dc62ccb5-5463-4e04-abfc-04f29c64241d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1103,
          "responseSize": 1314
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93092545-095b-4d78-8fa2-cd35b254cd54",
        "cursor": {
          "ref": "50ff7dee-5363-4661-9906-c8ffea04665e",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "6bda24b8-2bde-4010-8ef5-f1baa1435706"
        },
        "item": {
          "id": "93092545-095b-4d78-8fa2-cd35b254cd54",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "cf9239f3-e830-4896-9d65-cbdd17f2ab71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 872,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d3897c2-fa3f-4d01-b83b-f3d2173f1346",
        "cursor": {
          "ref": "0a418020-81a4-4dcd-9d06-4f1cfa16bc11",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "845df556-8c52-4feb-97ac-c0c9ada1b04d"
        },
        "item": {
          "id": "2d3897c2-fa3f-4d01-b83b-f3d2173f1346",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "8e9b7579-7239-426a-8684-72558f4875e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 726,
          "responseSize": 1313
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5df00edb-22e4-4c74-b2ca-9752eb30155f",
        "cursor": {
          "ref": "9fc67c96-e12e-467e-b977-4367dd8a6ac8",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "2e2dac3e-3ddd-4d54-94ac-e97d66ebd91b"
        },
        "item": {
          "id": "5df00edb-22e4-4c74-b2ca-9752eb30155f",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "b018dd21-7f98-4520-b0a3-c31a48908547",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 671,
          "responseSize": 1716
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db5abf39-862a-4d12-9de7-d0127debdeae",
        "cursor": {
          "ref": "677f83e3-182a-4076-bef9-42d535574404",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "e2004fe7-a481-4d45-ab36-a95a5de13042"
        },
        "item": {
          "id": "db5abf39-862a-4d12-9de7-d0127debdeae",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "de64a788-1d50-435b-9fb1-3370c3b080f1",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 823,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3344141-0f4c-414d-bfa3-b215a838b532",
        "cursor": {
          "ref": "8baada8b-b071-4ce0-86de-40c7cba90101",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "89416740-e1ef-47c4-841b-0614892d8932"
        },
        "item": {
          "id": "f3344141-0f4c-414d-bfa3-b215a838b532",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "4a744ef9-e767-4ce0-8470-fce46fbcb6d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 661,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "909a0d1a-ff67-48bb-b9c0-25a734dab19f",
        "cursor": {
          "ref": "ccb858f7-e4eb-4702-b77f-64f31e0a0fe8",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "de360e23-e6d1-4736-bd68-055f3c72ade4"
        },
        "item": {
          "id": "909a0d1a-ff67-48bb-b9c0-25a734dab19f",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "1aab3e35-a35a-4c55-b1dc-c23006536294",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 650,
          "responseSize": 628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fb12379-d194-4da8-b92f-e3d7de6f74a2",
        "cursor": {
          "ref": "1df962f9-8f54-4925-99a7-00c943806bd5",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "08c3e1d3-ec2e-47c5-8c37-d20eacadf7b4"
        },
        "item": {
          "id": "6fb12379-d194-4da8-b92f-e3d7de6f74a2",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "04c302ee-ebcd-4ef8-9f6a-9fb7e54966c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 671,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4c36499-9bd7-44e9-ae12-b84a6c19e539",
        "cursor": {
          "ref": "98ff7a77-ea46-4349-8c82-b2d84286efa6",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "a85607e9-882a-4b96-9959-a3f11bfcad8f"
        },
        "item": {
          "id": "f4c36499-9bd7-44e9-ae12-b84a6c19e539",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "f72ed3fa-8386-46e6-9da0-100b45ae870d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 692,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48eed3d4-e6ad-4fe8-931e-69120cf989c5",
        "cursor": {
          "ref": "71f536f1-74ce-41b9-a1ce-bf119e87ba8a",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "b31460b1-b99f-41a9-b7c8-4099db094215"
        },
        "item": {
          "id": "48eed3d4-e6ad-4fe8-931e-69120cf989c5",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "367661c8-02b1-41a7-8984-d483198a6bee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 676,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "658f72d5-f7d3-41b9-a71c-6e5ac235f527",
        "cursor": {
          "ref": "971a746e-046d-48c7-8400-b886dc48f1f6",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "f581110f-f46e-43eb-8c7a-9cdeb1647b73"
        },
        "item": {
          "id": "658f72d5-f7d3-41b9-a71c-6e5ac235f527",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "7f781ea8-723a-455e-904d-f7b38a84cc46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 637,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "905a6d0c-b9bd-4494-a09f-130e375515aa",
        "cursor": {
          "ref": "0ef16943-2f3a-4004-9e6f-0ac1d4b39bc0",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "40fdfdb6-416d-4775-903f-c4489b22fb1a"
        },
        "item": {
          "id": "905a6d0c-b9bd-4494-a09f-130e375515aa",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "b7b597c9-5d6a-45f6-80f5-61072f5ed354",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 681,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab3dfea1-e7be-41cd-9c77-19f1b32071b6",
        "cursor": {
          "ref": "fc89c95e-3b74-40c1-8c7d-8b6543b883ea",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "ba3ed47d-cc7f-4924-a21e-9f487f34a34c"
        },
        "item": {
          "id": "ab3dfea1-e7be-41cd-9c77-19f1b32071b6",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "497b84a6-2f3c-434d-9614-98fd5772dfe3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 677,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "659504b1-5605-4508-a206-b8ba1ad4cf78",
        "cursor": {
          "ref": "3bf3a95a-c6a1-4a3f-ac43-dc89b28d10b0",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "5f851d8f-de8a-49ca-b4c9-226d9ea4b637"
        },
        "item": {
          "id": "659504b1-5605-4508-a206-b8ba1ad4cf78",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "fdc640e5-9ddc-4267-b873-3c154373e39b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 640,
          "responseSize": 1100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c095d87a-6538-418a-b038-387b1ac98dc5",
        "cursor": {
          "ref": "3c50609f-fdf7-4fb5-bb73-b7121d1aca1a",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "9e51ef67-8aaa-4ae0-8783-2c5c7d78ecb1"
        },
        "item": {
          "id": "c095d87a-6538-418a-b038-387b1ac98dc5",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "ef585de8-6272-4295-8917-95f0c81852a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 634,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "762dc22e-ecd2-4527-86e1-511d86c7593b",
        "cursor": {
          "ref": "be40156c-1298-4af3-a691-230540ef67f1",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "9dded764-223d-4fc0-ae2c-beb92b71f0da"
        },
        "item": {
          "id": "762dc22e-ecd2-4527-86e1-511d86c7593b",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "6bde543d-5f6f-40ae-b060-78edb2fb7639",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 672,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "472d1eba-9b31-401b-8039-47228dd960c2",
        "cursor": {
          "ref": "55c965c1-74ea-4a8f-bc53-b162cdd71a8a",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "43e56f71-92e1-4233-b625-0906c3f20fa0"
        },
        "item": {
          "id": "472d1eba-9b31-401b-8039-47228dd960c2",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "56f4f536-8f1a-478d-bc93-3a8fc0f531dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 647,
          "responseSize": 908
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4576c149-65d0-447e-962c-099a1b7825f9",
        "cursor": {
          "ref": "9d750dec-60b0-4680-b9b9-7468d3e7639d",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "78d5a0d1-baa7-46b2-8759-2e5c80c6ad39"
        },
        "item": {
          "id": "4576c149-65d0-447e-962c-099a1b7825f9",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "30228437-6cc1-4daf-b683-8e262de46105",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 657,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "931d3307-dd18-4db1-80cb-b61eda91874a",
        "cursor": {
          "ref": "74b839aa-c1f0-4045-9f4a-20807bfdd527",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "9be08026-12d6-4527-aea2-092a338e0a7b"
        },
        "item": {
          "id": "931d3307-dd18-4db1-80cb-b61eda91874a",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "85aee2e2-4149-478d-bd34-c9a5ada3985b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 724,
          "responseSize": 1415
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c055cbc-d938-471a-b3e5-00fb2a7cbbce",
        "cursor": {
          "ref": "5842be9e-a57a-4578-9acc-db9888a496a7",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "04d021b9-0910-4b89-a874-0298adf163e0"
        },
        "item": {
          "id": "3c055cbc-d938-471a-b3e5-00fb2a7cbbce",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "2d1233e5-a578-420f-b419-3a3990e0d430",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 669,
          "responseSize": 1401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cd5f352-67bc-4af2-b767-f8c559227288",
        "cursor": {
          "ref": "70ab7f74-2f3c-4ebc-8292-f702ae330b48",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "56c4a518-d9f0-4792-8894-8dc5c7a523ac"
        },
        "item": {
          "id": "1cd5f352-67bc-4af2-b767-f8c559227288",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "9091e10f-975c-49f6-8d19-f4e929d45dce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 671,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dabaf56b-96c6-419a-9e28-4ef49ad4d917",
        "cursor": {
          "ref": "ad941a6a-8069-44d3-a0d9-b2a7eff04a56",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "4a97fdba-1bfe-4202-aab0-7409f14a740e"
        },
        "item": {
          "id": "dabaf56b-96c6-419a-9e28-4ef49ad4d917",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "b4be57fa-c5ad-4014-aff4-31a342c85978",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 649,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b4483b6-9992-4a22-987c-428043a3fb44",
        "cursor": {
          "ref": "3761c42e-2974-4112-a627-9b54970a0e07",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "fd01f504-d5d4-4172-844d-98b2deaaaf12"
        },
        "item": {
          "id": "8b4483b6-9992-4a22-987c-428043a3fb44",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "a789bc25-91aa-49de-aef6-452691251e30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 918,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ed57bf0-7002-45ae-a639-238fa80061f2",
        "cursor": {
          "ref": "bf8313df-26b1-4238-9517-4fb0f40c0412",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "4e8a6ecb-4404-4a6f-878f-4718c18d862c"
        },
        "item": {
          "id": "7ed57bf0-7002-45ae-a639-238fa80061f2",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "8601b27a-3f62-42a0-8991-a98e7d30bfbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1168,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f674d11-22c3-47e7-802a-baa46cbb1dc7",
        "cursor": {
          "ref": "ded74841-8a4d-4907-a1a1-f8b444e2a7c7",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "7d4ff706-a7c5-4882-a7e6-302047041173"
        },
        "item": {
          "id": "3f674d11-22c3-47e7-802a-baa46cbb1dc7",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "17cc3066-9718-4b00-99f1-e49867de2a88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1450,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8c5e906-a214-4326-bddc-d781daae2eac",
        "cursor": {
          "ref": "fe8d9c67-9905-4477-a8de-4d83856cf21c",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "0cee539b-f00a-40b4-ad55-b52ddc96b358"
        },
        "item": {
          "id": "d8c5e906-a214-4326-bddc-d781daae2eac",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "fb71a009-d4ec-4db7-8b88-b959bfb2fad2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 654,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7a2dffe-3537-4383-af33-7a36b5030f5f",
        "cursor": {
          "ref": "63cbbf2e-461d-4536-913c-75e3f721fd4e",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "aab062a0-c012-4ab9-8094-c03584b184ea"
        },
        "item": {
          "id": "b7a2dffe-3537-4383-af33-7a36b5030f5f",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "0bd21ef2-2a9b-4ac2-8ee7-d7eaa576d877",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 667,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d5254cf-bc56-4962-b81e-2dbd626c1bcc",
        "cursor": {
          "ref": "11a23b0c-71d8-428b-b367-28b2d0199763",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "e1d58dd1-6f88-4c7a-8ef2-26b725274a7b"
        },
        "item": {
          "id": "3d5254cf-bc56-4962-b81e-2dbd626c1bcc",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "fb137761-54ab-4de8-9d23-44d5116da331",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 643,
          "responseSize": 559
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d017d0f-db24-40c5-a6a9-3df62c9e48d5",
        "cursor": {
          "ref": "197c30fe-f537-402d-953d-f2597117a6b9",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "8119573b-ce47-49bf-93f5-66b0b8d9129e"
        },
        "item": {
          "id": "0d017d0f-db24-40c5-a6a9-3df62c9e48d5",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "6ea877bc-14fc-4d33-98fa-8253b67bd6a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 672,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0156768d-97c0-456d-9de8-148b6529f7da",
        "cursor": {
          "ref": "54eabff6-de67-41cb-bf3a-e0e572242d02",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "c4799555-8061-422c-97b6-1719acb38485"
        },
        "item": {
          "id": "0156768d-97c0-456d-9de8-148b6529f7da",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "b078c38e-6495-4a26-b7ae-4b4d6db0b8f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 654,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "055e6887-8ac9-4416-b87e-23c780108705",
        "cursor": {
          "ref": "f97afd43-d1a1-4907-89b5-c8a5e56c5b64",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "56b60a7b-0262-4738-8b0e-4cd4b607ff23"
        },
        "item": {
          "id": "055e6887-8ac9-4416-b87e-23c780108705",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "76720e64-fb5a-4ea2-9012-32c00d876d0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 651,
          "responseSize": 836
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c643f52-0dd5-496d-9a8e-ea596d11ef94",
        "cursor": {
          "ref": "4ca38421-042e-4711-9f51-9c958f90cd47",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "05b4370e-567c-4a6a-a26a-e6c27b4a51a1"
        },
        "item": {
          "id": "6c643f52-0dd5-496d-9a8e-ea596d11ef94",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "edf24bb6-4793-4289-8e36-4294d50955d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 699,
          "responseSize": 817
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cbe2372-469e-4a37-95fb-51608bacc0ed",
        "cursor": {
          "ref": "fd8bb619-aa59-423e-a102-e4e1115a1a47",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "3f56daf1-fda1-4298-a36e-81637baef38f"
        },
        "item": {
          "id": "3cbe2372-469e-4a37-95fb-51608bacc0ed",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "de056d9c-6661-4338-b075-f9508dddce4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 679,
          "responseSize": 814
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4363ed51-a225-4960-b742-8fd9d43a3fd7",
        "cursor": {
          "ref": "45e27b06-1a3c-444b-9f0b-dfda528c9f77",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "b879ef83-bc94-47f1-aa57-715ea3e2b3e3"
        },
        "item": {
          "id": "4363ed51-a225-4960-b742-8fd9d43a3fd7",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "ec16ecfa-d58c-4eb6-839b-8da88629dcdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 661,
          "responseSize": 816
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "546e28c1-34f3-4c04-864c-4783ad37d38f",
        "cursor": {
          "ref": "8e59abc6-0098-4c36-9b23-2b1d759a3722",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "ea1558a1-dcb4-4476-a03c-d6704a0524b8"
        },
        "item": {
          "id": "546e28c1-34f3-4c04-864c-4783ad37d38f",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "08cfa999-f00a-4fb2-8740-ec5ec40d8324",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 661,
          "responseSize": 814
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25d4e07e-184b-4615-9dbc-dc93effbb66f",
        "cursor": {
          "ref": "89132abd-271b-4b3a-a2db-0d4d1bfdaccf",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "6cfc66d9-f01d-4993-b4d3-cd1b785b06f6"
        },
        "item": {
          "id": "25d4e07e-184b-4615-9dbc-dc93effbb66f",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "a314ce9b-7dd9-45d4-9617-104a3825f306",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 664,
          "responseSize": 685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20c61d84-f5ca-486e-bcd3-8372e4ebe880",
        "cursor": {
          "ref": "efac11aa-9d07-4164-99cd-efbc49e43cae",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "068cd927-860e-4121-8f11-2550ed01c313"
        },
        "item": {
          "id": "20c61d84-f5ca-486e-bcd3-8372e4ebe880",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "46511566-7a96-4954-8880-659145e2e95a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 651,
          "responseSize": 653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad075ab9-fead-45bf-9b95-3b4a7d135067",
        "cursor": {
          "ref": "f04a1b31-c05d-4e89-903b-5e884bf8109a",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "6421fdb8-2651-4eb1-b87d-d993b961c3d4"
        },
        "item": {
          "id": "ad075ab9-fead-45bf-9b95-3b4a7d135067",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "a475ed11-2829-47a3-ac66-2a79bff491bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 666,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "046959d1-eaf2-41ac-ae29-2c69ba5eba08",
        "cursor": {
          "ref": "a653a60d-bc6f-4304-825c-f1a4f93153d5",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "2957f4d6-4137-4caa-a02c-c7fd92b28073"
        },
        "item": {
          "id": "046959d1-eaf2-41ac-ae29-2c69ba5eba08",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "e06a10c5-5a85-437a-ad42-c611a0102f5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 655,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afb9a529-de09-433c-9f29-60280e3e66e1",
        "cursor": {
          "ref": "bc7da7c0-11d5-45d9-94e3-76d96c00a3ff",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "17a5f503-d8be-4de3-af5d-5abf1c9f1c97"
        },
        "item": {
          "id": "afb9a529-de09-433c-9f29-60280e3e66e1",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "56c1799f-82b5-4a85-a189-78260f2a092d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 651,
          "responseSize": 633
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec2f8368-3310-480d-a634-2f274f43fb8b",
        "cursor": {
          "ref": "1157a7d9-1752-4fb7-825e-97f2f2f032f2",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "38b131b2-f08d-4901-8849-6695ce5f96b3"
        },
        "item": {
          "id": "ec2f8368-3310-480d-a634-2f274f43fb8b",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "d690a2d9-7eba-4e28-bc05-0bb58fea26f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 643,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b2951cd-7a7d-4887-bf50-088a0c53022e",
        "cursor": {
          "ref": "65041647-5c19-4c2c-90f4-7650fe8ba404",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "33abfc1a-d5a3-4946-9d48-edb8b2e7ca66"
        },
        "item": {
          "id": "7b2951cd-7a7d-4887-bf50-088a0c53022e",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "c146c7a6-8a00-498d-bbfe-c08b058a7dfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 638,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abaca528-d65e-4f2d-af83-db96cd0373b4",
        "cursor": {
          "ref": "8e642bfa-97cd-4e4d-9dde-fc9a358788a2",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "c707f302-df74-40a7-9519-f29632c13c4a"
        },
        "item": {
          "id": "abaca528-d65e-4f2d-af83-db96cd0373b4",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "993e0e6e-05ca-4d1c-a935-666f07d39b32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 681,
          "responseSize": 679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aee3a08a-42bd-4b3e-84f2-59958e047a0a",
        "cursor": {
          "ref": "0e19db2f-10f6-4635-b1fc-5e8827158104",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "49edfe20-d05e-4f18-8b1b-2ba9bcad5d0f"
        },
        "item": {
          "id": "aee3a08a-42bd-4b3e-84f2-59958e047a0a",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "7d42a782-5bf9-47f1-b695-a712dd5c670c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 653,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3029ef6-b40b-488d-a214-354183625bc8",
        "cursor": {
          "ref": "b6afb066-f7f5-42e2-8999-c776dc23f21b",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "73e82750-dc5c-49ad-99f0-7a1a89000a63"
        },
        "item": {
          "id": "f3029ef6-b40b-488d-a214-354183625bc8",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "f3189c76-d139-4dd4-8e7f-01c8a2cad854",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 675,
          "responseSize": 653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45e78635-bf95-43a1-96b8-b95b73f3018a",
        "cursor": {
          "ref": "bf1d8aa4-04a8-4774-9afa-d9f95537e3e5",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "6f0d359c-7692-47e7-b584-d6391f31bf34"
        },
        "item": {
          "id": "45e78635-bf95-43a1-96b8-b95b73f3018a",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "c62a07de-e03f-408c-8999-c2131c66c09d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 672,
          "responseSize": 655
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e419af7e-32cd-4247-a461-ada034db4143",
        "cursor": {
          "ref": "2a9e9bf6-a3e6-4702-8581-99188b222c14",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "a152957d-e46b-45ec-8ea9-3e3fca4fe9b1"
        },
        "item": {
          "id": "e419af7e-32cd-4247-a461-ada034db4143",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "5c91bc7b-f095-4f39-a09b-2a090f9855dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 648,
          "responseSize": 677
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f624a75-772b-40c2-9b25-e14a44eb8d6b",
        "cursor": {
          "ref": "487ce485-7b6d-45df-b339-fa4d86226b7d",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "ecb03e3b-ef3c-4c57-9f6d-449366b7d646"
        },
        "item": {
          "id": "5f624a75-772b-40c2-9b25-e14a44eb8d6b",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "598541f8-a084-4b70-9f55-51e70eaff229",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 635,
          "responseSize": 690
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4764e74f-ad59-4a32-bc70-21d241b14770",
        "cursor": {
          "ref": "b649cb3f-8886-43c1-acbc-13a784feca4d",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "33d3e032-a23e-40b6-99b0-ff5f3afc9fa6"
        },
        "item": {
          "id": "4764e74f-ad59-4a32-bc70-21d241b14770",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "bbff0399-487a-4b4c-8fcb-b190ffa908ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 653,
          "responseSize": 953
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c727eb5e-1943-47cf-aa33-109862106c16",
        "cursor": {
          "ref": "478e3fc9-e58f-4a7c-a43c-527e3320938e",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "60278578-7bf3-4669-a657-eda5cd87aacb"
        },
        "item": {
          "id": "c727eb5e-1943-47cf-aa33-109862106c16",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "26a01b5c-e56c-4d8c-ad63-d2aa3adc595f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 645,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5ea42da-0d8a-4bf7-a037-d52348c928fa",
        "cursor": {
          "ref": "98ae9e96-bea4-46c5-9c74-de9defa9f73a",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "287171f2-cd92-4143-8397-a1f9458e610b"
        },
        "item": {
          "id": "d5ea42da-0d8a-4bf7-a037-d52348c928fa",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "ebced546-fb97-4726-914e-c8b05e984241",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 659,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63a04717-3051-453e-b29d-e7b8a5e6a9a0",
        "cursor": {
          "ref": "277f9cda-79f4-47ea-9fd1-3b1d5ffee819",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "c6b1b633-0a2a-43f3-9982-343f7000a636"
        },
        "item": {
          "id": "63a04717-3051-453e-b29d-e7b8a5e6a9a0",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "7af03405-56a5-4b68-b5b2-55e3878eb39b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 647,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe710c19-53f5-47f3-a12e-f92b2f3fe51d",
        "cursor": {
          "ref": "dea5227a-375f-4149-9998-5c35e23d4f1d",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "d07d126f-c48d-484d-b4d1-e16a424043be"
        },
        "item": {
          "id": "fe710c19-53f5-47f3-a12e-f92b2f3fe51d",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "3a2fb0b5-4f74-4510-b98d-043852aa0de7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 718,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b9625b6-e06f-469d-8328-e23ec98e6160",
        "cursor": {
          "ref": "7865599f-7a82-4301-aff9-020a756163c4",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "51df44ea-232e-45e7-b351-7387e704a120"
        },
        "item": {
          "id": "0b9625b6-e06f-469d-8328-e23ec98e6160",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "3bc1575e-5d69-4bc7-8d2c-718b99b9c3d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 671,
          "responseSize": 753
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f0e3f56-8db4-465b-85b0-cd01c0fac99b",
        "cursor": {
          "ref": "c8332540-e613-4cc9-8d5c-b67b176caa15",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "822cea8f-eac3-41de-83c1-295e921b568a"
        },
        "item": {
          "id": "2f0e3f56-8db4-465b-85b0-cd01c0fac99b",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "86ad3695-3711-4814-9bcf-f5f3a9ebfbc8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a7e62ec-d038-4dce-b263-1bbd1fee74a4",
        "cursor": {
          "ref": "ca34ff7f-7f98-4936-9c2a-0885d45c6dfa",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "94d9c239-29f6-455f-bdba-e739d83204ea"
        },
        "item": {
          "id": "5a7e62ec-d038-4dce-b263-1bbd1fee74a4",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "90311927-59e2-4477-8987-1d0e3a21bd64",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 646,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97b81107-4bc5-4b1e-a095-61aad2f05e2f",
        "cursor": {
          "ref": "fc9529b5-0ad5-4486-958d-c40c9b074fde",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "df2ada16-96dc-4266-aa09-ba46fdbc48ef"
        },
        "item": {
          "id": "97b81107-4bc5-4b1e-a095-61aad2f05e2f",
          "name": "credentials_issue"
        },
        "response": {
          "id": "b0b8b161-d42e-4b69-8d88-dbf079f91a42",
          "status": "Created",
          "code": 201,
          "responseTime": 7468,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3f55aaf-1bee-4697-a293-4eaf42f0a3ed",
        "cursor": {
          "ref": "41f4259e-a8ac-4322-bf44-9e86debf79f2",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "94dfc0fa-f568-42a3-8c5d-fb4f67f601db"
        },
        "item": {
          "id": "d3f55aaf-1bee-4697-a293-4eaf42f0a3ed",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "4e52cb18-67da-4d63-8474-7cb4cdcd7f2e",
          "status": "Created",
          "code": 201,
          "responseTime": 6081,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2f8de5e-27e0-412f-a746-1d193fdeed39",
        "cursor": {
          "ref": "ca1640c6-e5e8-4db0-9145-3cf1986a60de",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "60c369ad-9bac-4a99-a589-c678c5e4ff85"
        },
        "item": {
          "id": "e2f8de5e-27e0-412f-a746-1d193fdeed39",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "c0aef0d3-f906-4f27-ac5e-5da9419d98db",
          "status": "Created",
          "code": 201,
          "responseTime": 6014,
          "responseSize": 703
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1cb7013-d924-401e-8e1b-68b9dec6d118",
        "cursor": {
          "ref": "39f4d501-6484-490b-9865-b6f6672a9c84",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "06158ce7-a953-4b0a-8705-f40e54c19e4c"
        },
        "item": {
          "id": "c1cb7013-d924-401e-8e1b-68b9dec6d118",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "c7b982d1-4b53-46b5-bfb7-7d50bd147c12",
          "status": "Created",
          "code": 201,
          "responseTime": 6914,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3b53439-b6ac-464d-8e04-dbed67f5a2b7",
        "cursor": {
          "ref": "3dd93a51-4581-4caf-8bba-be92020e89f9",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "2400982b-6ecc-4454-a075-a7c9d590b29e"
        },
        "item": {
          "id": "d3b53439-b6ac-464d-8e04-dbed67f5a2b7",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "ce04fda5-4f0b-4dfa-9f98-c5606406675b",
          "status": "Created",
          "code": 201,
          "responseTime": 9918,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "d386f3b4-6a1a-4148-9286-6c7caeba1632",
        "cursor": {
          "ref": "b3bc43e9-5e31-4788-a30e-ae857129bebf",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "831d2ca0-ba4f-4e49-be84-fd59aa9f62e8"
        },
        "item": {
          "id": "d386f3b4-6a1a-4148-9286-6c7caeba1632",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "24caadf5-19c6-4999-9bc0-087ba7672288",
          "status": "Created",
          "code": 201,
          "responseTime": 9564,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04cc98a5-918f-47fc-962f-74912ce31e0d",
        "cursor": {
          "ref": "74bea5bd-e584-4a3a-be37-537b3ec3d519",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "f2da0bf7-3914-431b-98c9-89e9dc7d21a8"
        },
        "item": {
          "id": "04cc98a5-918f-47fc-962f-74912ce31e0d",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "27db5e63-c456-4cc1-bb4d-e99ee257fc20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2724,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04cc98a5-918f-47fc-962f-74912ce31e0d",
        "cursor": {
          "ref": "74bea5bd-e584-4a3a-be37-537b3ec3d519",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "f2da0bf7-3914-431b-98c9-89e9dc7d21a8"
        },
        "item": {
          "id": "04cc98a5-918f-47fc-962f-74912ce31e0d",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "27db5e63-c456-4cc1-bb4d-e99ee257fc20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2724,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "775c82e3-65b0-4626-a497-e80561a2ad2e",
        "cursor": {
          "ref": "295ea496-8199-416e-a6c7-6d0359cf636c",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "1fce4e90-bf42-4f7b-a98b-501d56cc57a4"
        },
        "item": {
          "id": "775c82e3-65b0-4626-a497-e80561a2ad2e",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "113828d6-8649-4f65-aa95-3114e7c805cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2565,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cdbdabc-7dfa-4a3c-947e-281a85283f23",
        "cursor": {
          "ref": "79c73cdc-d03b-44e1-bf04-a33df0994cd6",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "c74da04f-99de-4a8a-9b06-431c1a1b58be"
        },
        "item": {
          "id": "1cdbdabc-7dfa-4a3c-947e-281a85283f23",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "952a45ba-08b7-4ee8-89a0-ee07f9a954b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1731,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9d7a6b4-830d-4b9c-ba14-de1ba506aeec",
        "cursor": {
          "ref": "8d5fa419-6c65-4261-8ee1-8190bd535794",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "410ba322-e463-4320-9ada-89e255854380"
        },
        "item": {
          "id": "c9d7a6b4-830d-4b9c-ba14-de1ba506aeec",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "c0b4c41e-9544-4785-bfb1-0d046e7b4762",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1045,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad9852a9-0156-498a-8e19-279790dc8e14",
        "cursor": {
          "ref": "041bdef8-4828-48e2-a21e-507b4a363dc5",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "9b9622bc-cc5f-4a76-b03b-f3054c8b7f1b"
        },
        "item": {
          "id": "ad9852a9-0156-498a-8e19-279790dc8e14",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "b7faa0f0-833d-487a-b0d0-67cb516d153a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 715,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03f20c20-c9ff-4179-9344-54054ef61e97",
        "cursor": {
          "ref": "eb9b9fc1-3468-4e17-8c06-d54ef3ef4031",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "9e256e51-c5c6-410b-ac69-7d1096c700f3"
        },
        "item": {
          "id": "03f20c20-c9ff-4179-9344-54054ef61e97",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "7a523cf4-bc20-44c0-9261-5126dec45d39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 688,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35cf1a0c-8dae-4c8f-97c3-18661a8db2bd",
        "cursor": {
          "ref": "364644af-b7f3-4ea1-9b84-d5fcbd8edfef",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "56eba9ad-2b70-4e84-adc3-84474557ad5d"
        },
        "item": {
          "id": "35cf1a0c-8dae-4c8f-97c3-18661a8db2bd",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "b9ed744d-430d-435a-8fa4-b99c48c6608b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 662,
          "responseSize": 431
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b75fe1f3-8e03-4312-96b7-63d4663bc3b0",
        "cursor": {
          "ref": "48f878b3-39a8-486a-ba1f-418d87617e0e",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "98b67593-bbce-47da-9316-3ee466ab89bd"
        },
        "item": {
          "id": "b75fe1f3-8e03-4312-96b7-63d4663bc3b0",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "40d02283-c254-4e4d-a896-b2bb197bf0f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 767,
          "responseSize": 482
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b25b6b2b-7b19-4afc-951a-b9d6cb3b8100",
        "cursor": {
          "ref": "968b4f11-94e6-40e4-a73c-449d1c357bf7",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "4f8b2c5e-328c-4943-8724-064c0570206a"
        },
        "item": {
          "id": "b25b6b2b-7b19-4afc-951a-b9d6cb3b8100",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "9f4f737a-4dac-4648-a3de-339f8f6c7385",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 717,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e1445e8-1fcf-4e68-ac89-497520d43736",
        "cursor": {
          "ref": "4685db37-8a37-4985-a174-f4228afd8096",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "b7eadddb-c26a-496b-8b5a-1dc68bb46927"
        },
        "item": {
          "id": "2e1445e8-1fcf-4e68-ac89-497520d43736",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "cba3053c-b2e0-4642-b7a8-0423f5dc70bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 665,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc48636d-2ae5-4fd1-bb04-2a610b49fef6",
        "cursor": {
          "ref": "a55e7329-9938-4c76-9248-eec31070cebc",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "e3bcb090-02ff-4085-a98d-0ab76a0aee1c"
        },
        "item": {
          "id": "fc48636d-2ae5-4fd1-bb04-2a610b49fef6",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "d86c6d50-7b2c-4d34-97cc-f5bfce3d12ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 646,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a90b88c-cc4d-4f2b-9d57-45d200cea42d",
        "cursor": {
          "ref": "7883b59a-0e08-4e6d-ad0e-4e218b5a9955",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "a92032f3-4efb-4300-b424-9737fb08e950"
        },
        "item": {
          "id": "8a90b88c-cc4d-4f2b-9d57-45d200cea42d",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "4084a140-5720-4c58-af27-d88fd41b385e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 655,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa365a4a-7b63-4b38-b958-71604675b44c",
        "cursor": {
          "ref": "ff156392-a566-4b96-a9b3-5aab72650810",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "1e08607f-eeec-4c50-9e53-37d6adcdee37"
        },
        "item": {
          "id": "fa365a4a-7b63-4b38-b958-71604675b44c",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "9338c9d4-dbce-438e-a60e-1597241bc29c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 703,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74dff9fe-2fe7-4a08-93d3-16787d06d68a",
        "cursor": {
          "ref": "016e6f13-a946-43f7-a82b-a49e325f7f88",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "aff00e55-07d2-4406-a0d3-69a737516df7"
        },
        "item": {
          "id": "74dff9fe-2fe7-4a08-93d3-16787d06d68a",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "3fe65c80-2a8f-48ff-bc2a-34a4dc6249a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 709,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcab96c0-9713-4d9f-9bab-27b3b84cb05c",
        "cursor": {
          "ref": "bd6a3744-ff45-4dd2-9579-14b1c74a231b",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "5526f62b-b747-463f-a2e6-43901623956b"
        },
        "item": {
          "id": "fcab96c0-9713-4d9f-9bab-27b3b84cb05c",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "1ab1d051-36d5-43e8-a5c2-91678629a69e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1838,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8af57071-038c-426f-9091-a1c2fdfc7416",
        "cursor": {
          "ref": "60588224-342b-4923-b884-1cb0ddc67f7e",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "a4b68498-7edd-4ccb-8797-8f9facd347fd"
        },
        "item": {
          "id": "8af57071-038c-426f-9091-a1c2fdfc7416",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "2db2b23f-f45c-4857-8b70-22f662df6ddf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2121,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19d16fec-1a95-4f45-8387-6b53dc21daf5",
        "cursor": {
          "ref": "136d2e61-3361-44b2-ae73-c77ae6580b25",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "c3f51098-ab88-4fe6-86da-b1dc05eb1dfe"
        },
        "item": {
          "id": "19d16fec-1a95-4f45-8387-6b53dc21daf5",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "1cd61290-3e5d-4a47-ab96-2aad85c52a47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1934,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a94979f-5eb9-4e41-b3bc-a6203f0121e9",
        "cursor": {
          "ref": "3f40d9af-0895-4b71-a141-7e2333ffba85",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "3d82fe24-3ab8-4873-90cb-abfd496e5bb8"
        },
        "item": {
          "id": "7a94979f-5eb9-4e41-b3bc-a6203f0121e9",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "85440c7f-f8ad-49b4-8ae2-3ed4f7401b88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 968,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c2d6537-082a-48cd-b41d-d5b90508731c",
        "cursor": {
          "ref": "0085715a-209e-4933-b671-6ab2173e4ee3",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "9e0324fc-22d9-4be8-b2cc-0b7d28086f02"
        },
        "item": {
          "id": "4c2d6537-082a-48cd-b41d-d5b90508731c",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "6fd0eab1-6f4f-434a-bc7c-3f4a7cfc4d96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 651,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "391d59c1-4260-449f-860b-5273ae0b3dcb",
        "cursor": {
          "ref": "9821d0e0-cc56-4ba8-b3b2-adb3716e7f02",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "419715db-6b14-441c-97e5-aff3d213f476"
        },
        "item": {
          "id": "391d59c1-4260-449f-860b-5273ae0b3dcb",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "77469e0a-8f23-4154-b07a-f47904286ea3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 695,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56a41c37-1c61-4643-a198-e592d8430baa",
        "cursor": {
          "ref": "22d8fb5e-684d-47b4-95ae-5b31d196f530",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "4d5bfe88-4743-4878-9605-6b8e352aef3c"
        },
        "item": {
          "id": "56a41c37-1c61-4643-a198-e592d8430baa",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "a5f37198-967b-4067-9246-f94a288bf459",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 682,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f93749f-de71-4b48-80fa-42b7278d7eb7",
        "cursor": {
          "ref": "d84a7610-95a8-4752-aabe-26b7edec7ed4",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "81d3c2a7-a3c1-4220-a0ac-1903d8981546"
        },
        "item": {
          "id": "6f93749f-de71-4b48-80fa-42b7278d7eb7",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "3ea24fc9-66c2-4901-bf8e-b384ea4a2089",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 708,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2db3f503-ef6a-4202-9369-4b5a95651368",
        "cursor": {
          "ref": "0b0ec115-8335-4b6e-b78e-2a0fc6335ac4",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "e97f801e-a153-42ee-9948-e9f5732e270f"
        },
        "item": {
          "id": "2db3f503-ef6a-4202-9369-4b5a95651368",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "99326e1f-d5e5-4512-90c0-0a5650c9a15a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 706,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a293682-3b0c-46c8-9b44-df5f64335813",
        "cursor": {
          "ref": "fa5663e7-9cff-4a1a-965d-22b5407ab396",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "f723871c-8779-4d2d-967a-deab78603273"
        },
        "item": {
          "id": "7a293682-3b0c-46c8-9b44-df5f64335813",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "871829b5-41f4-4b28-b8fc-96c5a866cc9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 735,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b110f67-d499-4a09-8e88-98f1dc7d1d32",
        "cursor": {
          "ref": "fc016846-9967-4dbb-ab3e-7ee0727287b3",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "67f0b508-8e95-40d0-baf6-0e79b07d7ab5"
        },
        "item": {
          "id": "1b110f67-d499-4a09-8e88-98f1dc7d1d32",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "449c985e-9720-4b90-be50-ca98b6618e3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 679,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d48dbd21-ced3-44a7-affc-4d7c3ccb2253",
        "cursor": {
          "ref": "1e7aa1e0-885b-4b71-b5be-856a57b906da",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "8fc4a954-299a-4292-8814-6ada1bd94295"
        },
        "item": {
          "id": "d48dbd21-ced3-44a7-affc-4d7c3ccb2253",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "3bcb643c-d0b1-4771-88c7-b650a9e0b8c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 709,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac11a92c-bbe4-45ff-a798-3baeaddd3dd2",
        "cursor": {
          "ref": "122eeb6c-b6d8-437a-ac37-0d319df22f95",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "1fd6db37-ea0c-4ddc-a375-0a84fb98188f"
        },
        "item": {
          "id": "ac11a92c-bbe4-45ff-a798-3baeaddd3dd2",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "4ba8918e-3199-458d-a77c-8a730f4980c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 696,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25a0fd63-459c-4057-9e41-a3643fe6524a",
        "cursor": {
          "ref": "fb4120fc-a175-4df7-b6d3-301384237081",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "9c33a0aa-bc4a-468f-a7ab-b2df381719fd"
        },
        "item": {
          "id": "25a0fd63-459c-4057-9e41-a3643fe6524a",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "afb818d6-e216-4d68-b7f0-15b56fa0afeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 688,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b2ef0c4-bd07-4045-8fdd-6e65b21f7d77",
        "cursor": {
          "ref": "4abcabbb-b7d7-4893-8d2b-6a267e9fb6ad",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "5e7a5e75-8b1e-48f9-9f8e-f751500e9a04"
        },
        "item": {
          "id": "1b2ef0c4-bd07-4045-8fdd-6e65b21f7d77",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "2a594a99-3b7f-4d26-984b-21f8deca3519",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 669,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5af7c0f1-5c99-4cfa-ad39-92acaa0209de",
        "cursor": {
          "ref": "c370d238-dd07-46b1-a9a8-e03aea5fc21f",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "4b9bc4d0-61de-4730-859e-d2e8a822768b"
        },
        "item": {
          "id": "5af7c0f1-5c99-4cfa-ad39-92acaa0209de",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "66581b9d-ced5-4574-88c6-0cdedd53518f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 683,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c637316-2a8d-4771-b000-d7eb4658ac9c",
        "cursor": {
          "ref": "50835aee-33e2-4886-b260-25a1dd5541f9",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "f57f5e24-5cae-411a-bcf1-fbfc7816b729"
        },
        "item": {
          "id": "8c637316-2a8d-4771-b000-d7eb4658ac9c",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "e93391db-a88d-4d50-8686-4285b567c8fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 707,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b173a2d-9803-4fa5-ab0e-ba317511f547",
        "cursor": {
          "ref": "7fd717c2-f9ef-4701-a23f-6d143cbdca28",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "65860467-e6dd-4357-b630-ff1e4578d1ab"
        },
        "item": {
          "id": "0b173a2d-9803-4fa5-ab0e-ba317511f547",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "65f2f53c-e676-4a74-b1b5-d873fb4d6e80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 727,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8ac277e-d4b2-4f95-ab59-5259c9978ccd",
        "cursor": {
          "ref": "d74b5c37-7506-4511-8bd4-e6b29e2d0349",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "99426dc4-da71-4c08-aff7-6bf039bb7de5"
        },
        "item": {
          "id": "d8ac277e-d4b2-4f95-ab59-5259c9978ccd",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "87f7340c-f498-4973-9825-3aa3777bc4d3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07c7aff7-1ba1-46e6-a36f-f8bdc8e9b139",
        "cursor": {
          "ref": "76fb60be-7862-47f5-94af-327fcdacfd1a",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "3f0559b9-be77-4271-a425-4b0344ef1b20"
        },
        "item": {
          "id": "07c7aff7-1ba1-46e6-a36f-f8bdc8e9b139",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "e8ee8d1f-1d9a-4ad8-9733-754b01b88bee",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 691,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "294ad7ec-de70-45ee-944d-57b69c146cc5",
        "cursor": {
          "ref": "65af7310-6671-4f2f-8e85-e3fef9c7b7da",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "65b94b29-1b22-47fb-9f09-2037d94b9879"
        },
        "item": {
          "id": "294ad7ec-de70-45ee-944d-57b69c146cc5",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "2fdc2fd6-a576-4ebe-9b5f-2b8dbf5face4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 456,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "294ad7ec-de70-45ee-944d-57b69c146cc5",
        "cursor": {
          "ref": "65af7310-6671-4f2f-8e85-e3fef9c7b7da",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "65b94b29-1b22-47fb-9f09-2037d94b9879"
        },
        "item": {
          "id": "294ad7ec-de70-45ee-944d-57b69c146cc5",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "2fdc2fd6-a576-4ebe-9b5f-2b8dbf5face4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 456,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a35e125a-c8ad-4ecc-bcf8-451450bb234f",
        "cursor": {
          "ref": "e006e63a-ec25-49f2-b7be-0569a893ebf0",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "87164729-4a92-417b-96fe-c7e7a753b3c4"
        },
        "item": {
          "id": "a35e125a-c8ad-4ecc-bcf8-451450bb234f",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "cfd70f22-1a7d-48ee-be21-4616f7335f79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 471,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "078e8b09-4163-4e3e-97b2-2533e4d8f35f",
        "cursor": {
          "ref": "cdeaa193-1667-4ee9-8239-658690884475",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "f6d4f1e5-56b7-4cad-8d74-aa9c8bee4e52"
        },
        "item": {
          "id": "078e8b09-4163-4e3e-97b2-2533e4d8f35f",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "c4e95a3a-f403-4c47-8444-087b9a2a1ee2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 456,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60e0f5ab-caf0-4e76-a76b-36aaf30f569a",
        "cursor": {
          "ref": "cd8ad356-52df-4a7a-af3b-d0bcd41bb99c",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "3daed073-9be7-4df3-9dda-6040f6a5f151"
        },
        "item": {
          "id": "60e0f5ab-caf0-4e76-a76b-36aaf30f569a",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "c6a33abd-8b0e-4210-8a9d-9e79ba0cd4a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 461,
          "responseSize": 644
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "691ce8e6-22cc-4581-8f4d-900f0b13681a",
        "cursor": {
          "ref": "8e51a48d-bc36-4a48-bcdb-f6c436983906",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "0c8137bb-a177-4e55-acd7-50e0d15163c0"
        },
        "item": {
          "id": "691ce8e6-22cc-4581-8f4d-900f0b13681a",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "4c9e2d44-2a93-450a-916f-aea8d309b1b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 486,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42b307a5-d6b2-4b98-8942-ce25bf56997e",
        "cursor": {
          "ref": "992b2e4d-31a7-4792-b16c-393ec4ef2ed9",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "4a629ac6-894a-400a-9ba3-0f270c42b4b2"
        },
        "item": {
          "id": "42b307a5-d6b2-4b98-8942-ce25bf56997e",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "44a368dd-e903-47b2-afd5-55a573904d8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 457,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70383b52-885a-4a6c-9dc3-e9f5e2549054",
        "cursor": {
          "ref": "ffbd5891-c0d6-4cee-bd4c-e3b38b3bb3e4",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "90c138c0-d874-4fc6-98af-f24b698a2d2a"
        },
        "item": {
          "id": "70383b52-885a-4a6c-9dc3-e9f5e2549054",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "5a8cf20c-d5f1-4554-ba22-23bd34d2e1e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 463,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c38d21ff-0da9-49b9-ab55-8e8bfccdeb48",
        "cursor": {
          "ref": "b0b29950-c947-4f69-8330-ed94e901b00a",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "b6fb8d78-0a21-47c5-adbe-582465f371f9"
        },
        "item": {
          "id": "c38d21ff-0da9-49b9-ab55-8e8bfccdeb48",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "b179f842-d15c-4744-9c18-f56a00d545a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 463,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "066531a8-1a60-4d5f-9812-01aa9d83f53c",
        "cursor": {
          "ref": "f467c4dc-8c8d-476c-afde-7bd4b718e586",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "a1a6358d-be35-437c-826c-479f2796e1a3"
        },
        "item": {
          "id": "066531a8-1a60-4d5f-9812-01aa9d83f53c",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "6b8c3cc3-614c-48d7-8281-1521806e5504",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 474,
          "responseSize": 1468
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bd115d5-1941-4f9d-8d31-7eb0ac3fef19",
        "cursor": {
          "ref": "34029c53-2bce-42f9-ba4b-e8ddcb49f1e8",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "1ef09039-7784-4686-a595-04d87acd978d"
        },
        "item": {
          "id": "7bd115d5-1941-4f9d-8d31-7eb0ac3fef19",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "de2f87aa-c781-4eac-8475-f52a6e8044fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 467,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51ca9fb7-a589-4688-883e-ce60562a9070",
        "cursor": {
          "ref": "5aea4058-bc49-4f4f-bd7f-d5f050778a12",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "1296721f-0a9f-48ff-9a5c-161a58b03ed1"
        },
        "item": {
          "id": "51ca9fb7-a589-4688-883e-ce60562a9070",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "f28a5bdd-00c6-4d8a-8a63-934a2da8dde8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 460,
          "responseSize": 1367
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bd9fa46-2e91-4ff2-9e9e-4fcfe155c0b9",
        "cursor": {
          "ref": "ea13ddf4-407a-4562-8321-7ce2afd031fe",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "1f7242a6-54f6-4e19-8e14-df32772b2072"
        },
        "item": {
          "id": "5bd9fa46-2e91-4ff2-9e9e-4fcfe155c0b9",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "381e8fa8-c977-407e-b758-88b9a9c8603b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 451,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05ad5093-d9b6-4c59-a294-0f1497785a25",
        "cursor": {
          "ref": "97d60418-b6dd-41dd-b297-781e2d4f7834",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "929dfc47-9fa3-4332-85a9-fb3c43331a75"
        },
        "item": {
          "id": "05ad5093-d9b6-4c59-a294-0f1497785a25",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "479de4d8-597c-4971-a328-16b7706eee0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 462,
          "responseSize": 1532
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "246da3ae-5e26-459d-addd-1a25b632226e",
        "cursor": {
          "ref": "05027d67-8e36-433e-b888-319d0b9d4d31",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "f1797a93-a3d9-404a-b863-114d12b5ea18"
        },
        "item": {
          "id": "246da3ae-5e26-459d-addd-1a25b632226e",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "ee54ed2c-0b2a-41ef-85b5-0a377ca38b25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 453,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "502735ca-037e-4c5c-93c1-c10fe6a2042b",
        "cursor": {
          "ref": "1931b833-ebae-4337-aab4-44b1f998fa46",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "2b8a5c07-feb3-42ea-a3b0-d71de21dac39"
        },
        "item": {
          "id": "502735ca-037e-4c5c-93c1-c10fe6a2042b",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "75a6f9bf-0023-424e-95db-44d6539c2ab7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 474,
          "responseSize": 1521
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0a32464-8327-4e45-8627-a6255ecf1708",
        "cursor": {
          "ref": "94ef0c03-c8d4-4860-a1aa-8a55384fbe59",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "38a29fef-6fde-4f3e-a095-582780f06a4f"
        },
        "item": {
          "id": "e0a32464-8327-4e45-8627-a6255ecf1708",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "914bf468-8d62-4de5-88e3-db2b89634c10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 457,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "568cd040-0f78-4476-9947-c6c71a65ef78",
        "cursor": {
          "ref": "c8a8e7cd-f80d-4859-b7b5-f793a7def003",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "48f4907b-b0bb-44f6-b29c-5761c7f5be49"
        },
        "item": {
          "id": "568cd040-0f78-4476-9947-c6c71a65ef78",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "58dd8cc2-09bc-4b30-ae22-f10d63295ef2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 467,
          "responseSize": 1420
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb6ad169-c40a-4d8f-9578-58f0eaecf605",
        "cursor": {
          "ref": "36a3c316-0029-4036-8a6e-a856be0625e2",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "81bd813e-9853-4c19-801c-889dc4c68fd4"
        },
        "item": {
          "id": "eb6ad169-c40a-4d8f-9578-58f0eaecf605",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "9aa40148-0479-4067-b482-0c76c3b10f30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 457,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f09b5fc-02a0-4145-816b-f1347a8e5cb3",
        "cursor": {
          "ref": "7dca5b54-382b-4a86-9dd9-96e0baa09128",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "dbe7bf70-06ab-49c9-85f1-6431a173bac9"
        },
        "item": {
          "id": "4f09b5fc-02a0-4145-816b-f1347a8e5cb3",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "910133fd-39e7-423e-a4d8-30a79ca7cdd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 456,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a01892a-d78c-4bb6-ab0d-1226883748a8",
        "cursor": {
          "ref": "82c1d733-ec78-4cce-be1f-0646599c8832",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "20e69bcf-f87b-47a3-aef8-84c3d7586a28"
        },
        "item": {
          "id": "8a01892a-d78c-4bb6-ab0d-1226883748a8",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "002ee997-9bc5-4c45-92a0-3ee83c318ec3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 458,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3df221ea-96a1-495c-90b9-39b15d213f31",
        "cursor": {
          "ref": "983f338e-10a8-4743-9341-a5931dc8dd1b",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "083a82d9-c65b-4e47-9cfe-ba0246ebdae4"
        },
        "item": {
          "id": "3df221ea-96a1-495c-90b9-39b15d213f31",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "e806399c-02a0-4c28-8c9d-14da81db8270",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 453,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae0a08ac-5b49-4636-9c0f-834d18c74dc9",
        "cursor": {
          "ref": "5ef13cd4-f876-4881-b780-58c84da364e7",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "5c8d7f6a-8fbf-4e05-8c8f-472948120ac5"
        },
        "item": {
          "id": "ae0a08ac-5b49-4636-9c0f-834d18c74dc9",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "ee3ab3cb-ec02-4321-b7a9-407aed0f22f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 451,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "497b4523-a28d-41cf-b860-b7c82b52bddb",
        "cursor": {
          "ref": "2ff01af2-47a0-4596-8f62-ba963e1f631e",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "f217d22d-4158-4f76-b785-a9d18281cf21"
        },
        "item": {
          "id": "497b4523-a28d-41cf-b860-b7c82b52bddb",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "09937085-c0ac-4d0c-b54c-ac21c8368352",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 448,
          "responseSize": 1360
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34eb4e3b-f801-4513-9daa-be22fa2732e9",
        "cursor": {
          "ref": "729fba91-f2c3-408e-9322-695ef528569b",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "2be5cbec-e4c4-44c2-8d83-aae1c01a49b3"
        },
        "item": {
          "id": "34eb4e3b-f801-4513-9daa-be22fa2732e9",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "f4587fd9-5af0-4be5-a8ea-9a6318ee0dcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 451,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5f48244-c653-4b57-95c5-d65f7bf12af4",
        "cursor": {
          "ref": "bbb4c14c-9e8b-4060-961c-a0c91549a88b",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "db90f725-33a2-4906-bcf9-e9a62ed3eb73"
        },
        "item": {
          "id": "e5f48244-c653-4b57-95c5-d65f7bf12af4",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "bc10d432-7042-4257-81b5-bb3ba6c68dfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 498,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee73ed9a-8265-45c0-9a31-668507d7c716",
        "cursor": {
          "ref": "94e18115-451d-4e83-8b89-7efc749fd13b",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "ddbf076b-79d2-4b85-b4f8-e66fb45499e7"
        },
        "item": {
          "id": "ee73ed9a-8265-45c0-9a31-668507d7c716",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "be74425e-a4fa-45a9-b0cc-90b4120137f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 453,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1b53971-af5f-48d1-b978-8b974bfbabf1",
        "cursor": {
          "ref": "a868caf7-2155-4125-a819-534507d4bf67",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "43bb7921-1381-4374-86e2-b097da01d814"
        },
        "item": {
          "id": "d1b53971-af5f-48d1-b978-8b974bfbabf1",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "08a347e6-6ca0-430c-9880-3ed3606875c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 469,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1608764e-1f6b-4409-86ab-e9aa0f2afc8f",
        "cursor": {
          "ref": "3a9274dc-2018-4e65-b565-2312cfe1ff1d",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "c305b4d0-000d-4e3c-beb8-e24c27b3d297"
        },
        "item": {
          "id": "1608764e-1f6b-4409-86ab-e9aa0f2afc8f",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "73a30034-cee2-40f2-8a11-f44d90e95a89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 469,
          "responseSize": 1372
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98183662-f153-4dfa-bf88-6523cb5d1c54",
        "cursor": {
          "ref": "b56a1e45-5abb-4035-ac14-deaf1a6a9f50",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "9a37e03e-e408-46d2-95bd-7f69d075136e"
        },
        "item": {
          "id": "98183662-f153-4dfa-bf88-6523cb5d1c54",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "33c5a83f-0143-442a-8140-3072b0151a0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 473,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7546c98a-e642-43d6-a4ea-887e0320d923",
        "cursor": {
          "ref": "7704edbd-7b7a-4208-b11c-91a3217d1285",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "dc7a33bc-158f-4d72-88d0-4a4ec096a5fa"
        },
        "item": {
          "id": "7546c98a-e642-43d6-a4ea-887e0320d923",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "595ebe7f-7869-4064-a890-28dbb5b2f35e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 456,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69aa6889-0173-4aca-b2e0-94e91df2ff3b",
        "cursor": {
          "ref": "7af70bd4-a8e5-4695-9037-9d8cbb1b365c",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "3f107d95-6864-43cd-95c6-2f0002a5cb9d"
        },
        "item": {
          "id": "69aa6889-0173-4aca-b2e0-94e91df2ff3b",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "56b0975c-ac98-4618-a7e2-44ae319884ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 463,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16efd624-777a-4dca-9547-f5a60a1a6b02",
        "cursor": {
          "ref": "df969df0-caed-4a47-a8bf-8d772b6c07d1",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "e9e02e53-7719-4840-ad27-868f81ca50ca"
        },
        "item": {
          "id": "16efd624-777a-4dca-9547-f5a60a1a6b02",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "c39cc637-b978-4d95-9be9-768578c2b511",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 451,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9dee55c-a4f1-4a7d-93c3-e083aa82f2f3",
        "cursor": {
          "ref": "b7fe2a37-a799-4253-a9bf-ea67f5d84594",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "f5fac5f8-152f-4f13-b466-163aaf350c0f"
        },
        "item": {
          "id": "d9dee55c-a4f1-4a7d-93c3-e083aa82f2f3",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "009944c1-7d9b-4412-90d3-1368b94f9ca5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 454,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00d38fdd-71f1-4aec-bd5d-6be185ae0c06",
        "cursor": {
          "ref": "dca35e18-d416-4837-9351-72e75fdccada",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "b8045fc3-f624-4d12-9914-77876ccc3a58"
        },
        "item": {
          "id": "00d38fdd-71f1-4aec-bd5d-6be185ae0c06",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "94ccc394-4d29-431a-8ebc-14faa3ac7fc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 771,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6772471-6a31-495b-9561-46f16cc5aec5",
        "cursor": {
          "ref": "34fc3194-4d2b-411c-bbcd-9c35f7a2ba5a",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "43cbd7f6-06c4-4cb6-94a4-0786d70ee1d1"
        },
        "item": {
          "id": "a6772471-6a31-495b-9561-46f16cc5aec5",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "2b16a52f-a0db-46f1-9cb9-f835bf1e29fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 904,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b6a3a2d-5fd2-4540-92e8-37af0ffd6945",
        "cursor": {
          "ref": "0f1a186c-b352-4f76-bf9a-640a8d73a0b6",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "38707742-578b-48e6-9bd5-39382becc7ee"
        },
        "item": {
          "id": "5b6a3a2d-5fd2-4540-92e8-37af0ffd6945",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "8f18e8e2-bec9-4ad7-8f40-3003f6a7f659",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1189,
          "responseSize": 1801
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53e49a17-64f4-4269-bfdc-440cdd9c9e3c",
        "cursor": {
          "ref": "e61f248e-35d5-4820-b23d-e2da7ddb4d9d",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "8d28f95b-a91a-46a5-87f8-9d70f2878783"
        },
        "item": {
          "id": "53e49a17-64f4-4269-bfdc-440cdd9c9e3c",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "1d73bdba-e1c8-4718-a63d-26174bee79b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 915,
          "responseSize": 1787
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d16f0752-8d90-411f-8f02-7a30358089a7",
        "cursor": {
          "ref": "fda6be64-ef67-4989-ae32-574ebdc23656",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "4f829e4e-7461-486c-af89-49b5795c7982"
        },
        "item": {
          "id": "d16f0752-8d90-411f-8f02-7a30358089a7",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "6225bd92-4c29-4ef9-a090-f4894a809bd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 631,
          "responseSize": 1785
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "322cb5e3-c605-4b09-b247-d4de1a1619fd",
        "cursor": {
          "ref": "c129808a-6418-4be5-bef1-040dfe41f674",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "f5452008-5a37-475b-a9b9-1b7342cd395f"
        },
        "item": {
          "id": "322cb5e3-c605-4b09-b247-d4de1a1619fd",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "34dfb1f7-2bdc-4f39-91ac-3d23d41a9de0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 475,
          "responseSize": 1786
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34551f3d-1d77-4081-9722-971d033c4ea0",
        "cursor": {
          "ref": "bd98228c-9d7e-4eef-b98d-3c49d0dc5796",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "a5d93ca8-884d-4fa0-89aa-8a7667395084"
        },
        "item": {
          "id": "34551f3d-1d77-4081-9722-971d033c4ea0",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "be813c1e-c47a-4ebf-817e-c0d5becc6f09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 496,
          "responseSize": 1817
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25ec2e46-25c8-462b-9319-0c9f91de90ee",
        "cursor": {
          "ref": "49adfeea-47ba-4775-a276-e39566d30996",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "ae2c674b-67d3-450b-8d71-bb48445dff81"
        },
        "item": {
          "id": "25ec2e46-25c8-462b-9319-0c9f91de90ee",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "b413116a-4fd8-47f2-850b-124edec35cd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 468,
          "responseSize": 2160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f277363f-28cb-45da-9c15-4e5289dc93b1",
        "cursor": {
          "ref": "36cf75be-3bcb-4d4b-9627-b5e71819e7bb",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "69c493fc-42d6-4341-89d3-88448c3261ae"
        },
        "item": {
          "id": "f277363f-28cb-45da-9c15-4e5289dc93b1",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "522590df-880c-4745-bc7a-f0e1b2bfbf74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 494,
          "responseSize": 2146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4237c446-285a-429d-813b-16739f5a470e",
        "cursor": {
          "ref": "e0dd9614-ad07-4a42-8141-cd45c50891ab",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "7a655ebe-a947-4b36-9b60-2f0df0ff26b1"
        },
        "item": {
          "id": "4237c446-285a-429d-813b-16739f5a470e",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "d2da1ad9-ea9c-4f52-9d33-9fbbccfc54f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 464,
          "responseSize": 2144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cc99d5b-1da2-4209-9f55-2bf2a078a616",
        "cursor": {
          "ref": "6b5c5438-00ba-4d32-96d7-df8bd21a1a2f",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "2b07cce0-919d-4274-b1b8-3480dc990aa9"
        },
        "item": {
          "id": "4cc99d5b-1da2-4209-9f55-2bf2a078a616",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "78d1dfc1-05aa-4dee-aa32-f1a120112af6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 2145
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcc39bd0-70e8-43f7-b206-7778f3724c87",
        "cursor": {
          "ref": "f09807ec-9650-4a06-89b6-75878b9606cc",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "6c0cd6c3-6233-48ee-a5bc-0de2b1ecdbbb"
        },
        "item": {
          "id": "fcc39bd0-70e8-43f7-b206-7778f3724c87",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "b03c074d-7f34-498a-bc83-3e5888119b8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 486,
          "responseSize": 2166
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fc67821-2f3a-4feb-ad27-cc5f7743e804",
        "cursor": {
          "ref": "1274ac9c-0ccf-4497-8a41-53a6d6cdc9cc",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "9d45d1cb-ce46-4d3a-a0d7-c166afb325c7"
        },
        "item": {
          "id": "2fc67821-2f3a-4feb-ad27-cc5f7743e804",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "4f685ba8-e706-41e5-8393-64e9afbe4bcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 455,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "414b89c7-dcc4-46eb-a7f5-0b04b7494aa4",
        "cursor": {
          "ref": "b1487a8c-c4c6-44b8-aaac-6e14af312753",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "3af3f5ac-fde1-468b-a34a-3576c46e29bc"
        },
        "item": {
          "id": "414b89c7-dcc4-46eb-a7f5-0b04b7494aa4",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "d6c38883-dac6-4945-94a5-782c04414853",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 469,
          "responseSize": 1394
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e94af74-dd97-4743-925b-d013cb2d77f1",
        "cursor": {
          "ref": "19c4f05a-afa1-4627-b661-0d2eb5f36d9c",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "e1e56457-0fbd-4cca-8f34-ae7c388db9c1"
        },
        "item": {
          "id": "1e94af74-dd97-4743-925b-d013cb2d77f1",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "fb7dc772-88a2-4b66-8262-a8c1db3822e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 478,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fab56d2c-c981-4652-a14c-0a21e810ebdf",
        "cursor": {
          "ref": "2fd14152-b1aa-4a9b-84de-debd68201a74",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "dccb74f9-680c-46e8-b8fc-fb28ea3f1e09"
        },
        "item": {
          "id": "fab56d2c-c981-4652-a14c-0a21e810ebdf",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "e328e7a0-2d6a-4ee1-aa66-9bab720123bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 453,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38394d80-5fc2-4451-ae66-f0920583e345",
        "cursor": {
          "ref": "439c7a2a-2959-43a9-9684-ca9526738ccb",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "0808a1c5-2185-4932-b418-75c654d570e9"
        },
        "item": {
          "id": "38394d80-5fc2-4451-ae66-f0920583e345",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "6e382f84-3dc7-483f-a18a-86937926c97c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 489,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f67fadc-352a-4f54-96e1-7af1a1177b95",
        "cursor": {
          "ref": "9ccf340a-f338-4f6a-b762-80489b32b1df",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "3300a789-0fcc-4ba9-9b85-db62d3e7a704"
        },
        "item": {
          "id": "5f67fadc-352a-4f54-96e1-7af1a1177b95",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "f210031f-2cf5-4745-865c-97e0e608dc46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02be7f56-87a2-4348-bc9a-418a668e6747",
        "cursor": {
          "ref": "af63a30f-8da7-4da6-b949-f14a0117a83d",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "c68ff211-e60f-4c0f-9c1b-86ce88448062"
        },
        "item": {
          "id": "02be7f56-87a2-4348-bc9a-418a668e6747",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "4014d75e-3e39-4f3f-8f86-31239bcf8360",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 463,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac6506c8-5557-4519-a9c9-d76fce1f3ea9",
        "cursor": {
          "ref": "b89f40ac-a306-4e65-a809-aca73d6b16c1",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "b06fbda4-b9fd-40d1-b986-867119f9039c"
        },
        "item": {
          "id": "ac6506c8-5557-4519-a9c9-d76fce1f3ea9",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "f0d401de-e29b-481c-9a9b-d753858a51fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 454,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "054ccc8e-6712-4b18-85e1-efe68e615a5b",
        "cursor": {
          "ref": "ff730d3a-d9de-49f4-97d4-486e8ad85dac",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "151837fa-5e90-4041-920a-49a3720ae233"
        },
        "item": {
          "id": "054ccc8e-6712-4b18-85e1-efe68e615a5b",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "8f3114cd-941b-4206-ac12-4d559e53e518",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 463,
          "responseSize": 1874
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f873fc89-f1d8-4c4b-a671-7ea46f234ab3",
        "cursor": {
          "ref": "a7f59989-7d06-4c49-86a8-f1ec63b796aa",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "4e9d625a-c479-4b47-af12-a77eac7ed089"
        },
        "item": {
          "id": "f873fc89-f1d8-4c4b-a671-7ea46f234ab3",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "d16e7f4e-ed5c-4afd-91c6-2504f35963ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 457,
          "responseSize": 1673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fe8f897-33f0-4d41-88bf-d4a9fcf11b31",
        "cursor": {
          "ref": "388200c0-0465-45cf-88e6-973a6e54f0db",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "990e15e5-3257-4706-8b63-a2fa621ae2f7"
        },
        "item": {
          "id": "8fe8f897-33f0-4d41-88bf-d4a9fcf11b31",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "7f886821-bd46-4e4b-b065-e84497745fe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 464,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aae6567c-6fc5-4bcb-a281-39493b882e48",
        "cursor": {
          "ref": "24336239-de66-46f5-8c08-afa704533690",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "606a4ffb-f5cd-4675-a0a9-445983497e36"
        },
        "item": {
          "id": "aae6567c-6fc5-4bcb-a281-39493b882e48",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "74e4dd81-c8d5-4542-92c2-c9fe4208a18c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 459,
          "responseSize": 1672
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d803eee-a0e3-4382-93d5-0e77a7f25503",
        "cursor": {
          "ref": "b988312d-4b0e-46d4-a539-e01c938f9c62",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "4c4caa06-4cf0-4c31-9452-399baf538fcd"
        },
        "item": {
          "id": "6d803eee-a0e3-4382-93d5-0e77a7f25503",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "e66301e1-ba5f-41cb-adc4-e65611b1e5d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 445,
          "responseSize": 1685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cf83e33-4c99-48e5-86ca-3f09b83de4ea",
        "cursor": {
          "ref": "20d98d9a-58e0-4652-adb8-2e1ad84e67e2",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "47cc8a74-f33e-4917-a573-664064a099f4"
        },
        "item": {
          "id": "5cf83e33-4c99-48e5-86ca-3f09b83de4ea",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "25e735af-735c-4622-b117-59cea1b1fe23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 467,
          "responseSize": 2209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e4ea229-8a77-4fb7-bf2d-669d459c5f84",
        "cursor": {
          "ref": "2d128ddb-dcb8-4502-94b2-4e63b2a5548c",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "bb81b8e0-c995-4e3a-9910-4c758dc48dd0"
        },
        "item": {
          "id": "0e4ea229-8a77-4fb7-bf2d-669d459c5f84",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "0ec31e22-9346-4039-850a-3b3f7b1eb3f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 448,
          "responseSize": 2195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3a92e4c-3856-4334-a41e-b1dc5d9ac9d0",
        "cursor": {
          "ref": "b80a7954-20c8-4744-8ec9-27f46572f191",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "7655724d-1a73-4607-97ea-bbade1fd7a46"
        },
        "item": {
          "id": "d3a92e4c-3856-4334-a41e-b1dc5d9ac9d0",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "0e4b3f3a-ddae-462f-8ce1-dfe79556cbe0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 472,
          "responseSize": 2193
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "337c33c3-c407-4b52-87f9-3df3ec2bc38f",
        "cursor": {
          "ref": "12037164-e3de-4322-b9a7-1dd7a8d83d5d",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "1f45cf61-4839-4e9e-9f23-2b113c723291"
        },
        "item": {
          "id": "337c33c3-c407-4b52-87f9-3df3ec2bc38f",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "e8b02a5b-c6f9-4bc6-bfdb-af8720a7be13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 462,
          "responseSize": 2194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d3ba2b7-7abf-44a5-b3d5-0dcde74fd60e",
        "cursor": {
          "ref": "9169d3ab-f131-4938-8455-99c1ad450bf2",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "ef4facb5-43cc-41d3-8d17-34a61b43d456"
        },
        "item": {
          "id": "4d3ba2b7-7abf-44a5-b3d5-0dcde74fd60e",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "32ef0e8c-e9d1-4ce9-928f-c973f572c35a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 459,
          "responseSize": 2215
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85d03165-9936-4347-af95-d6acc14b5dac",
        "cursor": {
          "ref": "74973146-9495-472c-952a-62ee93e2bfe7",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "10473968-2996-4fe7-b48a-3bd7b16840a5"
        },
        "item": {
          "id": "85d03165-9936-4347-af95-d6acc14b5dac",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "3acb4ee9-e262-4764-979d-839d2e2bdee2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 465,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdf13d08-fd2a-4d89-9fa3-f7ea7ce314f9",
        "cursor": {
          "ref": "f0594236-e652-4432-b4c5-8e744710f5d1",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "1b4a0e73-5c53-4ac5-9254-e6801f2d3b9b"
        },
        "item": {
          "id": "bdf13d08-fd2a-4d89-9fa3-f7ea7ce314f9",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "5fded3de-d5d1-4095-b8e9-e42746fc8c0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 457,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ad412c9-f16f-4cf7-a7fd-3a16b0ad548b",
        "cursor": {
          "ref": "7b195b3f-54c4-4494-a011-c861206cd2af",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "7f523db0-c164-4d6a-b26f-50dd3996626f"
        },
        "item": {
          "id": "3ad412c9-f16f-4cf7-a7fd-3a16b0ad548b",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "6ee57662-16ca-4641-9dc4-27d41841cbb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 477,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0094c89c-f238-43f8-9f11-2836f78ab42f",
        "cursor": {
          "ref": "d9f55ffe-5844-4d86-8e1b-3231d2896552",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "1bfd4891-6026-45b1-9997-73ad4e43bf43"
        },
        "item": {
          "id": "0094c89c-f238-43f8-9f11-2836f78ab42f",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "09458aa1-79c0-4bcb-9143-d7621149494a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 488,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff61b555-97a1-42dd-8b89-69b5de82d0b1",
        "cursor": {
          "ref": "6676dd61-5187-4682-b130-123ad3a42ec0",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "af9dc6ca-1145-4501-82ac-6e128450e294"
        },
        "item": {
          "id": "ff61b555-97a1-42dd-8b89-69b5de82d0b1",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "bc665968-ebaf-4499-8b6e-fa8bb81e98a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 459,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a60d5189-0b1c-4bcc-9e7e-8ede3c8c5395",
        "cursor": {
          "ref": "b0c2c498-05eb-445f-bc6b-79b04049a273",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "68cd7763-a50b-4c5a-9fa1-39e54f34ac11"
        },
        "item": {
          "id": "a60d5189-0b1c-4bcc-9e7e-8ede3c8c5395",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "7a2e0a85-1640-4a47-8026-8c84cf7f839d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 479,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0708683-d95a-4f44-ade6-2a6232c0fdcf",
        "cursor": {
          "ref": "ba5460d9-be22-4889-91d2-5889130aa384",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "92fe24dc-85f7-4339-bc1e-c2f9e3b9571f"
        },
        "item": {
          "id": "a0708683-d95a-4f44-ade6-2a6232c0fdcf",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "585d21cd-f0b2-4173-82f6-a99d88c427b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 491,
          "responseSize": 1307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1581ba40-74b1-44b9-9342-c90c9002a7b3",
        "cursor": {
          "ref": "7f1e3b65-d51b-443c-ab78-a95e2ed07e6f",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "42620421-865b-412a-b0a6-b053de0cf77d"
        },
        "item": {
          "id": "1581ba40-74b1-44b9-9342-c90c9002a7b3",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "245af493-56af-43db-8314-5335a89a2204",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 916,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53490f39-dbfd-4ad0-b472-e72cb5ee7206",
        "cursor": {
          "ref": "bf071dbb-acfa-4324-9c51-e47a2aabfe99",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "996d4f89-fd10-49ac-84b1-e9d79bd5f418"
        },
        "item": {
          "id": "53490f39-dbfd-4ad0-b472-e72cb5ee7206",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "9d3435be-2c5c-4ca0-8b74-42967239d00e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 808,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "884b915c-abf0-49b8-a801-f6085f0c2e7e",
        "cursor": {
          "ref": "7e7e4fda-ed0e-438d-a800-96cd9ccbde8f",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "a09fbbf1-22ad-4cdb-9acc-85bf128741e2"
        },
        "item": {
          "id": "884b915c-abf0-49b8-a801-f6085f0c2e7e",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "9331fbbb-2b1f-4bae-913e-0cfb4f410923",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1214,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1c61a9c-56f6-42c1-a252-11358385918b",
        "cursor": {
          "ref": "726ba632-f9f2-4fe4-bceb-34b16eea717d",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "cdfe6024-6b60-454e-bef6-594d7faf7a4b"
        },
        "item": {
          "id": "a1c61a9c-56f6-42c1-a252-11358385918b",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "ad626576-5884-406c-baab-c61de3b501d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1239,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5803701e-8ded-4e91-92e6-5e44ad172cc6",
        "cursor": {
          "ref": "0741fb79-ba20-405c-ad23-6f42b9209ed4",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "3ac0e053-3106-413a-a763-25ead1e051d7"
        },
        "item": {
          "id": "5803701e-8ded-4e91-92e6-5e44ad172cc6",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "76427c15-4dd3-47b5-b649-537401efec3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1151,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "830021cd-d420-4991-afa5-ad1e49ba2c88",
        "cursor": {
          "ref": "428c3d7a-2445-4f69-91ce-5cdadcaf1bd0",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "21a8aadb-c286-4312-b171-6d841947aab6"
        },
        "item": {
          "id": "830021cd-d420-4991-afa5-ad1e49ba2c88",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "527bbd6e-1b53-408e-9287-7360a43e0dc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 909,
          "responseSize": 1344
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8d3d5ef-11a8-42f2-832e-624391ee9694",
        "cursor": {
          "ref": "c51912ba-8af0-4e78-acde-c86336cb5251",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "3ce0b6a0-1843-4851-8e82-57d026b9b194"
        },
        "item": {
          "id": "c8d3d5ef-11a8-42f2-832e-624391ee9694",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "5703690b-5bb0-4233-9bf1-8b357ec898e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 833,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a42c21dc-9a58-4454-a0e2-6d77c831543d",
        "cursor": {
          "ref": "f5ba5e53-5e8a-473d-b0c0-1622e2457ae6",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "eef3a8d4-1dc0-4890-9d1c-1001172f2e9f"
        },
        "item": {
          "id": "a42c21dc-9a58-4454-a0e2-6d77c831543d",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "b8e6d01f-49e8-4fd1-9a6e-068595e40b52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 849,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b79546b8-6c74-4d4c-a304-ad3c2b9ab8af",
        "cursor": {
          "ref": "1e8122a2-1db5-41b6-a564-6c295a81a5ce",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "b2370f48-872f-4691-b3bd-4e926b9931d8"
        },
        "item": {
          "id": "b79546b8-6c74-4d4c-a304-ad3c2b9ab8af",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "073c3155-8168-49dc-9824-72856c577032",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "046c649e-1479-4ecf-9b32-5207cfd1da34",
        "cursor": {
          "ref": "86e61716-ad9d-448f-a6cb-b9a3252b8b33",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "12017197-1517-4b8f-af42-a6a893001c08"
        },
        "item": {
          "id": "046c649e-1479-4ecf-9b32-5207cfd1da34",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "bde833df-7c78-4daa-8334-80e0966b74f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 442,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7188b1c-4055-4bd5-8cab-38db636a68e3",
        "cursor": {
          "ref": "065cdccc-cd01-480a-aa88-3e134f8e4fe8",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "70c1d360-a5bf-4128-8e81-59ac3dd60cc5"
        },
        "item": {
          "id": "f7188b1c-4055-4bd5-8cab-38db636a68e3",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "099d8d4c-c079-4d60-98f4-30a7ae9aac1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 468,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e72cf8d3-8fa2-4777-80b9-8419ac7ef3a9",
        "cursor": {
          "ref": "a81e279c-72f5-4fd3-a44c-3b03cf2b8f16",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "498f9930-76b6-4f72-bbb1-9b0661eabb9e"
        },
        "item": {
          "id": "e72cf8d3-8fa2-4777-80b9-8419ac7ef3a9",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "57e37acc-58a8-4f9f-a374-ea707596c004",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 446,
          "responseSize": 1298
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae2dfe1f-bc16-48ad-84e9-b71d964a5d27",
        "cursor": {
          "ref": "da39be29-25b7-4faa-a9dc-552136d7d109",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "4bbcb700-845b-4da2-81dc-155a4ae63476"
        },
        "item": {
          "id": "ae2dfe1f-bc16-48ad-84e9-b71d964a5d27",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "5f37e89c-13a5-4e2c-912b-4fd767f3ccaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 493,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0ef1a8c-3086-4356-a3e8-58abb7d8000b",
        "cursor": {
          "ref": "6579b044-0f1b-41f2-b498-264a15f4844a",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "23ef5c64-c323-47a8-9733-22f2d81701be"
        },
        "item": {
          "id": "a0ef1a8c-3086-4356-a3e8-58abb7d8000b",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "0cb119c2-54db-45f4-9466-187dcaf0116b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 468,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0a97d0a-48bc-4ed8-9df2-3fc0e7137445",
        "cursor": {
          "ref": "65861f32-a1a7-448d-9cf8-14d869ac2f0b",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "7b693deb-0bbd-4b11-867a-1e245917cc1d"
        },
        "item": {
          "id": "e0a97d0a-48bc-4ed8-9df2-3fc0e7137445",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "ca74e59c-dd53-4422-ae08-2d0669f9b568",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 472,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf690908-11eb-4372-afa6-0ff646f1f81f",
        "cursor": {
          "ref": "0f3a0fef-5e60-4c7c-9e81-d0ee910dbf85",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "446c6789-1ebe-480c-8bb5-ad838b2cc6b8"
        },
        "item": {
          "id": "cf690908-11eb-4372-afa6-0ff646f1f81f",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "15feb8c8-ec2f-47ce-a134-24875dd31720",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 458,
          "responseSize": 1304
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fddc60e3-a5b4-4bf0-a486-e8bd4afca880",
        "cursor": {
          "ref": "409b6240-3f70-4af0-bd49-3f28467816fc",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "b9a28de5-9b85-4d90-a6d6-f3ee1348d9ce"
        },
        "item": {
          "id": "fddc60e3-a5b4-4bf0-a486-e8bd4afca880",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "688c47a1-3b4f-44a3-8290-68b7c80be981",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 471,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "238b4f86-b083-4ad1-ae53-c98c510c408e",
        "cursor": {
          "ref": "205cee35-36fa-4434-82b5-243a1d0a46bb",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "3f5e89a8-fd1e-4a7a-a4b7-a4c69dd3ba3f"
        },
        "item": {
          "id": "238b4f86-b083-4ad1-ae53-c98c510c408e",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "3d3157c4-b1c6-49f8-a88e-14b5abda6d15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 455,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21e96ffe-091e-4eac-886b-8dc699b51883",
        "cursor": {
          "ref": "02f1e40e-8cfa-4565-aa34-4db572188a0d",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "8c3f30e8-0878-4d61-acf4-d062d57f4529"
        },
        "item": {
          "id": "21e96ffe-091e-4eac-886b-8dc699b51883",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "5b03030b-81d6-4ae6-855d-98cc1e9a3d17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 461,
          "responseSize": 1194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "189cddff-cdff-47d4-850b-a36eced352ca",
        "cursor": {
          "ref": "fa57e9fc-6a65-4aa8-9dca-af153c17a35e",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "661ef37e-e520-45a1-8e77-4d585b677b47"
        },
        "item": {
          "id": "189cddff-cdff-47d4-850b-a36eced352ca",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "eb13a2fa-25f7-4d4a-8278-ff58747d9bec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 465,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b7a0d65-bea0-4172-8f6b-73c49ca4ca86",
        "cursor": {
          "ref": "4f9ef93f-1f15-41ec-8884-7fcc5f289b05",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "a0de41ce-e2ed-4f3a-a3ea-f8dca0b34ff3"
        },
        "item": {
          "id": "6b7a0d65-bea0-4172-8f6b-73c49ca4ca86",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "c66e5c6f-8cb5-431e-9568-83b78c623b86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 493,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e46c2a61-de21-4b01-af2b-31f484ca3032",
        "cursor": {
          "ref": "5655b623-ede4-489f-b55e-2327e84ef719",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "67c43ee0-a7cd-4322-85fb-cc1afee08cdf"
        },
        "item": {
          "id": "e46c2a61-de21-4b01-af2b-31f484ca3032",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "f2f3cc3a-cc28-4334-a114-90ae9768e844",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f878360f-f220-4f3f-9c57-e6a0068cf75e",
        "cursor": {
          "ref": "aff4256a-a60e-4cf0-b970-3519644f0d45",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "33ee3a80-78dc-46ce-b758-91aea4497fff"
        },
        "item": {
          "id": "f878360f-f220-4f3f-9c57-e6a0068cf75e",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "2c2f88c2-d43b-4b04-a2f1-0955fff39193",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 464,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "702f3e94-f11b-46eb-b76d-66e08ad1294c",
        "cursor": {
          "ref": "3d689798-ca84-40ad-9f81-f6d15498161d",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "6b7b967b-b0df-4907-9c45-0551fe2d3557"
        },
        "item": {
          "id": "702f3e94-f11b-46eb-b76d-66e08ad1294c",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "e73b2db1-2379-41c6-9353-67682377dd66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 461,
          "responseSize": 1323
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc9d5db3-6903-47d7-921d-b2913f82c7e4",
        "cursor": {
          "ref": "749f5078-d2fc-4da6-b44b-d11a2c1e1ac1",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "7b308288-92df-4018-8f16-ba6ade71ba22"
        },
        "item": {
          "id": "fc9d5db3-6903-47d7-921d-b2913f82c7e4",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "0a10d934-f603-4ad0-9bbd-757353179e75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 485,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93b42a8e-e3a1-46a1-9846-dcf8ef2e3ce5",
        "cursor": {
          "ref": "d95fd2c2-25e7-420e-b520-d529787b3646",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "0fa071c9-5136-4612-a8e3-d8869a6ed09a"
        },
        "item": {
          "id": "93b42a8e-e3a1-46a1-9846-dcf8ef2e3ce5",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "79e17774-471e-4e99-9810-dfc9caf00012",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 449,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63c345cc-a90f-44df-8175-a31a251ecd71",
        "cursor": {
          "ref": "db5da528-e675-47d0-8011-b3c33a4d0b4f",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "167cd3af-ecc3-4036-bfa2-63357c4bd048"
        },
        "item": {
          "id": "63c345cc-a90f-44df-8175-a31a251ecd71",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "96690792-c9b7-4b97-996c-8dd045615d48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 459,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "947d1597-73fa-42e4-b200-7e7714269bb4",
        "cursor": {
          "ref": "5f737382-2056-44ea-8075-0a7e4d36cd0d",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "a52605a9-89aa-48ef-bc5d-e91cb95229b3"
        },
        "item": {
          "id": "947d1597-73fa-42e4-b200-7e7714269bb4",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "ef6a3841-2b5f-43db-b665-16eee3006470",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3cb9ad2-1aa6-4dd7-bb99-2fd589ec1bd2",
        "cursor": {
          "ref": "dc1d785b-a8d1-4b5e-9376-277106e871ee",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "94ce08e0-37c4-4c36-9e6a-677833676652"
        },
        "item": {
          "id": "b3cb9ad2-1aa6-4dd7-bb99-2fd589ec1bd2",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "3a72da72-e697-4948-b01c-812ccc0d6375",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 470,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dec969a-d9bb-4fcc-aa35-dd28ede9294e",
        "cursor": {
          "ref": "7ee05bad-ed6c-4337-9161-842065bade9d",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "eba239c6-8821-4880-84bb-354ae6beca4c"
        },
        "item": {
          "id": "7dec969a-d9bb-4fcc-aa35-dd28ede9294e",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "4fc6a840-10d6-4d0c-83df-6d3c75cc0c05",
          "status": "OK",
          "code": 200,
          "responseTime": 511,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "a77b729b-8ef0-423c-8640-f8badd3a5ba4",
        "cursor": {
          "ref": "a2d89d73-027a-4c14-80f1-d2b8c0720087",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "215e12c5-fb8a-4454-8bf9-0e0989dc6e38"
        },
        "item": {
          "id": "a77b729b-8ef0-423c-8640-f8badd3a5ba4",
          "name": "credentials_verify"
        },
        "response": {
          "id": "a18f3978-aeff-4e7f-b440-0eb99c939763",
          "status": "OK",
          "code": 200,
          "responseTime": 2115,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b7deab5-4d65-4163-ac68-d3fa4a71bc2f",
        "cursor": {
          "ref": "a9a019ea-901d-4c42-bcdc-43b3113368cf",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "16c27758-abe1-43cc-afa3-8a2598ee510a"
        },
        "item": {
          "id": "0b7deab5-4d65-4163-ac68-d3fa4a71bc2f",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "028b73ad-a7c4-4b5f-82ff-eefd188b7774",
          "status": "OK",
          "code": 200,
          "responseTime": 1887,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "91134de1-f62d-4725-a5c3-055af2696da1",
        "cursor": {
          "ref": "1a753761-e32f-4ee6-9ce3-b33abef7d628",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "1fa0d94e-84f3-47ab-a84d-df1ff6e1130f"
        },
        "item": {
          "id": "91134de1-f62d-4725-a5c3-055af2696da1",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "00d71290-3e6f-40c4-b4ca-ed4d66222fc5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91134de1-f62d-4725-a5c3-055af2696da1",
        "cursor": {
          "ref": "1a753761-e32f-4ee6-9ce3-b33abef7d628",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "1fa0d94e-84f3-47ab-a84d-df1ff6e1130f"
        },
        "item": {
          "id": "91134de1-f62d-4725-a5c3-055af2696da1",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "00d71290-3e6f-40c4-b4ca-ed4d66222fc5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91134de1-f62d-4725-a5c3-055af2696da1",
        "cursor": {
          "ref": "1a753761-e32f-4ee6-9ce3-b33abef7d628",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "1fa0d94e-84f3-47ab-a84d-df1ff6e1130f"
        },
        "item": {
          "id": "91134de1-f62d-4725-a5c3-055af2696da1",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "00d71290-3e6f-40c4-b4ca-ed4d66222fc5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1a658d4-7cec-4af2-9e7c-2fe51aae79e6",
        "cursor": {
          "ref": "8cd57a1f-55cb-4b37-a897-ce42bd75b430",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "e1b8a8fc-aa28-416d-800f-fa3fab137010"
        },
        "item": {
          "id": "f1a658d4-7cec-4af2-9e7c-2fe51aae79e6",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "d3fd75cf-2334-498e-8a18-0a96ff2f56a8",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 445,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "815bae1b-433f-4019-9c16-05a8a52319a5",
        "cursor": {
          "ref": "db83a820-745b-411e-b2ef-1262de3cd331",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "1237a685-908f-4254-9f49-4de9ecee142d"
        },
        "item": {
          "id": "815bae1b-433f-4019-9c16-05a8a52319a5",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "536098bc-f7c3-4983-922d-f059b54823e2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "815bae1b-433f-4019-9c16-05a8a52319a5",
        "cursor": {
          "ref": "db83a820-745b-411e-b2ef-1262de3cd331",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "1237a685-908f-4254-9f49-4de9ecee142d"
        },
        "item": {
          "id": "815bae1b-433f-4019-9c16-05a8a52319a5",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "536098bc-f7c3-4983-922d-f059b54823e2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96d6461a-b89b-4b6b-9fd9-e90f7a2e6c1d",
        "cursor": {
          "ref": "03d23927-9943-4b2a-a0b6-3c4751b7e8d7",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "3d172daf-f3e0-4583-b1d9-0a8a75b2f663"
        },
        "item": {
          "id": "96d6461a-b89b-4b6b-9fd9-e90f7a2e6c1d",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "91c91782-0f23-4b0f-a508-10c96a11c448",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 672,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4da37868-e869-4f03-97c9-6a128df9bba5",
        "cursor": {
          "ref": "5768c565-9ac3-44f3-ab50-a4528a44901c",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "eaaf5d8d-9a4d-43ce-8783-7cd722e63515"
        },
        "item": {
          "id": "4da37868-e869-4f03-97c9-6a128df9bba5",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "90c2f4b9-5c3e-4e32-a834-0098c856ac48",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4da37868-e869-4f03-97c9-6a128df9bba5",
        "cursor": {
          "ref": "5768c565-9ac3-44f3-ab50-a4528a44901c",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "eaaf5d8d-9a4d-43ce-8783-7cd722e63515"
        },
        "item": {
          "id": "4da37868-e869-4f03-97c9-6a128df9bba5",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "90c2f4b9-5c3e-4e32-a834-0098c856ac48",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6489eb1-fbe4-4711-b902-42256c9dc808",
        "cursor": {
          "ref": "d491ca5a-54f9-4e2c-8951-134898b06022",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "2f6b37a5-3b76-429c-be9b-52f9fee6870f"
        },
        "item": {
          "id": "b6489eb1-fbe4-4711-b902-42256c9dc808",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "fd655755-3df8-478c-9cad-f5aa58dc4d70",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 670,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}